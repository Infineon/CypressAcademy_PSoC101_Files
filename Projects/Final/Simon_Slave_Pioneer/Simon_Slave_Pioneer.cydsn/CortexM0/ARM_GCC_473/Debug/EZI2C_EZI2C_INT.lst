ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"EZI2C_EZI2C_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.EZI2C_EZI2C_STRETCH_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	EZI2C_EZI2C_STRETCH_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	EZI2C_EZI2C_STRETCH_ISR, %function
  23              	EZI2C_EZI2C_STRETCH_ISR:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_INT.c"
   1:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * File Name: EZI2C_EZI2C_INT.c
   3:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Version 1.20
   4:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
   5:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
   9:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Note:
  10:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
  11:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  18:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "EZI2C_PVT.h"
  19:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "EZI2C_EZI2C_PVT.h"
  20:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  21:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #if(EZI2C_EZI2C_SCL_STRETCH_ENABLE_CONST)
  22:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     /*******************************************************************************
  23:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Function Name: EZI2C_EZI2C_STRETCH_ISR
  24:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     ********************************************************************************
  25:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  26:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Summary:
  27:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode. The clock stretching is
  28:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  used during operation.
  29:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  30:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Parameters:
  31:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  None
  32:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 2


  33:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Return:
  34:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  None
  35:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  36:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *******************************************************************************/
  37:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     CY_ISR_PROTO(EZI2C_EZI2C_STRETCH_ISR)
  38:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     {
  26              		.loc 1 38 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 88B0     		sub	sp, sp, #32
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 40
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  39:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 locBufSize;
  40:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIndex;
  41:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locStatus;
  42:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  43:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 endTransfer;
  44:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 fifoIndex;
  45:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locByte;
  46:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  47:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIntrCause;
  48:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIntrSlave;
  49:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  50:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
  51:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  52:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static volatile uint8 * EZI2C_dataBuffer; /* Pointer to data buffer              */
  53:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 EZI2C_bufSizeBuf;           /* Size of buffer1 in bytes            */
  54:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 EZI2C_protectBuf;           /* Start index of write protected area */
  55:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  56:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint8 activeAddress;
  57:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 ackResponse;
  58:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  59:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         ackResponse = EZI2C_EZI2C_ACK_RECEIVED_ADDRESS;
  60:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
  61:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  62:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #if !defined (CY_REMOVE_EZI2C_CUSTOM_INTR_HANDLER)
  63:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         if(NULL != EZI2C_customIntrHandler)
  39              		.loc 1 63 0
  40 0006 CD4B     		ldr	r3, .L39
  41 0008 1B68     		ldr	r3, [r3]
  42 000a 002B     		cmp	r3, #0
  43 000c 02D0     		beq	.L2
  64:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
  65:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_customIntrHandler();
  44              		.loc 1 65 0
  45 000e CB4B     		ldr	r3, .L39
  46 0010 1B68     		ldr	r3, [r3]
  47 0012 9847     		blx	r3
  48              	.L2:
  66:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 3


  67:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #else
  68:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         CY_EZI2C_CUSTOM_INTR_HANDLER();
  69:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_EZI2C_CUSTOM_INTR_HANDLER) */
  70:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  71:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Make local copy of global variable */
  72:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIndex = EZI2C_EZI2C_GET_INDEX(activeAddress);
  49              		.loc 1 72 0
  50 0014 CA4B     		ldr	r3, .L39+4
  51 0016 1B88     		ldrh	r3, [r3]
  52 0018 FB61     		str	r3, [r7, #28]
  73:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  74:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Get interrupt sources */
  75:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIntrSlave = EZI2C_GetSlaveInterruptSource();
  53              		.loc 1 75 0
  54 001a CA4B     		ldr	r3, .L39+8
  55 001c 1B68     		ldr	r3, [r3]
  56 001e FB60     		str	r3, [r7, #12]
  76:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIntrCause = EZI2C_GetInterruptCause();
  57              		.loc 1 76 0
  58 0020 C94B     		ldr	r3, .L39+12
  59 0022 1B68     		ldr	r3, [r3]
  60 0024 BB60     		str	r3, [r7, #8]
  77:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  78:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  79:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  80:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  81:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         */
  82:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         if(0u != (locIntrSlave & (EZI2C_INTR_SLAVE_I2C_ARB_LOST |
  61              		.loc 1 82 0
  62 0026 FA68     		ldr	r2, [r7, #12]
  63 0028 C84B     		ldr	r3, .L39+16
  64 002a 1340     		and	r3, r2
  65 002c 57D0     		beq	.L3
  83:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                   EZI2C_INTR_SLAVE_I2C_BUS_ERROR)))
  84:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
  85:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_CTRL_REG &= (uint32) ~EZI2C_CTRL_ENABLED; /* Disable SCB block */
  66              		.loc 1 85 0
  67 002e C84B     		ldr	r3, .L39+20
  68 0030 C74A     		ldr	r2, .L39+20
  69 0032 1268     		ldr	r2, [r2]
  70 0034 5200     		lsl	r2, r2, #1
  71 0036 5208     		lsr	r2, r2, #1
  72 0038 1A60     		str	r2, [r3]
  86:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  87:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #if(EZI2C_CY_SCBIP_V0)
  88:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != ((uint8) EZI2C_EZI2C_STATUS_BUSY & EZI2C_curStatus))
  73              		.loc 1 88 0
  74 003a C64B     		ldr	r3, .L39+24
  75 003c 1B78     		ldrb	r3, [r3]
  76 003e DAB2     		uxtb	r2, r3
  77 0040 2023     		mov	r3, #32
  78 0042 1340     		and	r3, r2
  79 0044 DBB2     		uxtb	r3, r3
  80 0046 002B     		cmp	r3, #0
  81 0048 2CD0     		beq	.L4
  89:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #endif /* (EZI2C_CY_SCBIP_V0) */
  90:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 4


  91:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_curStatus &= (uint8) ~EZI2C_EZI2C_STATUS_BUSY;
  82              		.loc 1 91 0
  83 004a C24B     		ldr	r3, .L39+24
  84 004c 1B78     		ldrb	r3, [r3]
  85 004e DBB2     		uxtb	r3, r3
  86 0050 2022     		mov	r2, #32
  87 0052 9343     		bic	r3, r2
  88 0054 DAB2     		uxtb	r2, r3
  89 0056 BF4B     		ldr	r3, .L39+24
  90 0058 1A70     		strb	r2, [r3]
  92:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_curStatus |= (uint8)  EZI2C_EZI2C_STATUS_ERR;
  91              		.loc 1 92 0
  92 005a BE4B     		ldr	r3, .L39+24
  93 005c 1B78     		ldrb	r3, [r3]
  94 005e DBB2     		uxtb	r3, r3
  95 0060 1022     		mov	r2, #16
  96 0062 1343     		orr	r3, r2
  97 0064 DAB2     		uxtb	r2, r3
  98 0066 BB4B     		ldr	r3, .L39+24
  99 0068 1A70     		strb	r2, [r3]
  93:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  94:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled on address phase to receive data */
  95:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u == (EZI2C_GetTxInterruptMode() & EZI2C_INTR_TX_EMPTY))
 100              		.loc 1 95 0
 101 006a BB4B     		ldr	r3, .L39+28
 102 006c 1A68     		ldr	r2, [r3]
 103 006e 1023     		mov	r3, #16
 104 0070 1340     		and	r3, r2
 105 0072 0FD1     		bne	.L5
  96:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
  97:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Write complete */
  98:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_indexBuf1 != EZI2C_offsetBuf1)
 106              		.loc 1 98 0
 107 0074 B94B     		ldr	r3, .L39+32
 108 0076 1B78     		ldrb	r3, [r3]
 109 0078 1A1C     		mov	r2, r3
 110 007a B14B     		ldr	r3, .L39+4
 111 007c 1B88     		ldrh	r3, [r3]
 112 007e 9A42     		cmp	r2, r3
 113 0080 10D0     		beq	.L4
  99:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 100:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_curStatus |= (uint8) EZI2C_INTR_SLAVE_I2C_WRITE_STOP;
 114              		.loc 1 100 0
 115 0082 B44B     		ldr	r3, .L39+24
 116 0084 1B78     		ldrb	r3, [r3]
 117 0086 DBB2     		uxtb	r3, r3
 118 0088 0822     		mov	r2, #8
 119 008a 1343     		orr	r3, r2
 120 008c DAB2     		uxtb	r2, r3
 121 008e B14B     		ldr	r3, .L39+24
 122 0090 1A70     		strb	r2, [r3]
 123 0092 07E0     		b	.L4
 124              	.L5:
 101:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 102:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 103:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else
 104:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 5


 105:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Read complete */
 106:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_curStatus |= (uint8) EZI2C_INTR_SLAVE_I2C_NACK;
 125              		.loc 1 106 0
 126 0094 AF4B     		ldr	r3, .L39+24
 127 0096 1B78     		ldrb	r3, [r3]
 128 0098 DBB2     		uxtb	r3, r3
 129 009a 0222     		mov	r2, #2
 130 009c 1343     		orr	r3, r2
 131 009e DAB2     		uxtb	r2, r3
 132 00a0 AC4B     		ldr	r3, .L39+24
 133 00a2 1A70     		strb	r2, [r3]
 134              	.L4:
 107:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 108:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 109:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 110:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_DISABLE_SLAVE_AUTO_DATA;
 135              		.loc 1 110 0
 136 00a4 AE4B     		ldr	r3, .L39+36
 137 00a6 AE4A     		ldr	r2, .L39+36
 138 00a8 1168     		ldr	r1, [r2]
 139 00aa AE4A     		ldr	r2, .L39+40
 140 00ac 0A40     		and	r2, r1
 141 00ae 1A60     		str	r2, [r3]
 111:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             
 112:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 113:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 142              		.loc 1 113 0
 143 00b0 AD4B     		ldr	r3, .L39+44
 144 00b2 0022     		mov	r2, #0
 145 00b4 1A60     		str	r2, [r3]
 114:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_SetTxInterruptMode(EZI2C_NO_INTR_SOURCES);
 146              		.loc 1 114 0
 147 00b6 A84B     		ldr	r3, .L39+28
 148 00b8 0022     		mov	r2, #0
 149 00ba 1A60     		str	r2, [r3]
 115:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 116:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #if(EZI2C_CY_SCBIP_V0)
 117:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 118:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_ALL);
 150              		.loc 1 118 0
 151 00bc AB4B     		ldr	r3, .L39+48
 152 00be AC4A     		ldr	r2, .L39+52
 153 00c0 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 154              		.loc 1 119 0
 155 00c2 A04B     		ldr	r3, .L39+8
 156 00c4 AB4A     		ldr	r2, .L39+56
 157 00c6 1A60     		str	r2, [r3]
 120:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #endif /* (EZI2C_CY_SCBIP_V0) */
 121:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 122:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_fsmState = EZI2C_EZI2C_FSM_IDLE;
 158              		.loc 1 122 0
 159 00c8 AB4B     		ldr	r3, .L39+60
 160 00ca 0022     		mov	r2, #0
 161 00cc 1A70     		strb	r2, [r3]
 123:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 124:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_CTRL_REG |= (uint32) EZI2C_CTRL_ENABLED;  /* Enable SCB block */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 6


 162              		.loc 1 124 0
 163 00ce A04B     		ldr	r3, .L39+20
 164 00d0 9F4A     		ldr	r2, .L39+20
 165 00d2 1268     		ldr	r2, [r2]
 166 00d4 8021     		mov	r1, #128
 167 00d6 0906     		lsl	r1, r1, #24
 168 00d8 0A43     		orr	r2, r1
 169 00da 1A60     		str	r2, [r3]
 170 00dc 9CE1     		b	.L6
 171              	.L3:
 125:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
 126:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         else
 127:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
 128:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
 129:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 130:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_INTR_CAUSE_I2C_EC))
 172              		.loc 1 130 0
 173 00de BA68     		ldr	r2, [r7, #8]
 174 00e0 1023     		mov	r3, #16
 175 00e2 1340     		and	r3, r2
 176 00e4 02D0     		beq	.L7
 131:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 132:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but do not clear it. It is cleared in INTR_SLAV
 133:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_SetI2CExtClkInterruptMode(EZI2C_NO_INTR_SOURCES);
 177              		.loc 1 133 0
 178 00e6 A54B     		ldr	r3, .L39+64
 179 00e8 0022     		mov	r2, #0
 180 00ea 1A60     		str	r2, [r3]
 181              	.L7:
 134:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 135:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 136:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & (EZI2C_INTR_CAUSE_RX | EZI2C_INTR_CAUSE_SLAVE)))
 182              		.loc 1 136 0
 183 00ec BA68     		ldr	r2, [r7, #8]
 184 00ee 0A23     		mov	r3, #10
 185 00f0 1340     		and	r3, r2
 186 00f2 00D1     		bne	.LCB149
 187 00f4 C5E0     		b	.L8	@long jump
 188              	.LCB149:
 137:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 138:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
 139:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Do not use RX FIFO capabilities */
 140:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if (0u != (EZI2C_GetRxInterruptSourceMasked() & EZI2C_INTR_RX_NOT_EMPTY))
 189              		.loc 1 140 0
 190 00f6 A24B     		ldr	r3, .L39+68
 191 00f8 1A68     		ldr	r2, [r3]
 192 00fa 0423     		mov	r3, #4
 193 00fc 1340     		and	r3, r2
 194 00fe 00D1     		bne	.LCB155
 195 0100 71E0     		b	.L9	@long jump
 196              	.LCB155:
 141:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 142:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #if (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 143:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 144:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore 
 145:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 146:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 7


 147:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if (0u == (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 148:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
 149:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 150:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locByte = EZI2C_RX_FIFO_RD_REG;
 197              		.loc 1 150 0
 198 0102 A04B     		ldr	r3, .L39+72
 199 0104 1B68     		ldr	r3, [r3]
 200 0106 7B60     		str	r3, [r7, #4]
 151:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 152:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         switch(EZI2C_fsmState)
 201              		.loc 1 152 0
 202 0108 9B4B     		ldr	r3, .L39+60
 203 010a 1B78     		ldrb	r3, [r3]
 204 010c 002B     		cmp	r3, #0
 205 010e 1DD0     		beq	.L11
 206 0110 012B     		cmp	r3, #1
 207 0112 60D1     		bne	.L38
 208              	.L12:
 153:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 154:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_BYTE_WRITE:
 155:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(0u != locBufSize)
 209              		.loc 1 155 0
 210 0114 9C4B     		ldr	r3, .L39+76
 211 0116 1B88     		ldrh	r3, [r3]
 212 0118 002B     		cmp	r3, #0
 213 011a 13D0     		beq	.L13
 156:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 157:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 158:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_ACK;
 214              		.loc 1 158 0
 215 011c 9B4B     		ldr	r3, .L39+80
 216 011e 0122     		mov	r2, #1
 217 0120 1A60     		str	r2, [r3]
 159:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 160:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_dataBuffer1[locIndex] = (uint8) locByte;
 218              		.loc 1 160 0
 219 0122 9B4B     		ldr	r3, .L39+84
 220 0124 1A68     		ldr	r2, [r3]
 221 0126 FB69     		ldr	r3, [r7, #28]
 222 0128 D318     		add	r3, r2, r3
 223 012a 7A68     		ldr	r2, [r7, #4]
 224 012c D2B2     		uxtb	r2, r2
 225 012e 1A70     		strb	r2, [r3]
 161:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locIndex++;
 226              		.loc 1 161 0
 227 0130 FB69     		ldr	r3, [r7, #28]
 228 0132 0133     		add	r3, r3, #1
 229 0134 FB61     		str	r3, [r7, #28]
 162:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locBufSize--;
 230              		.loc 1 162 0
 231 0136 944B     		ldr	r3, .L39+76
 232 0138 1B88     		ldrh	r3, [r3]
 233 013a 013B     		sub	r3, r3, #1
 234 013c 9AB2     		uxth	r2, r3
 235 013e 924B     		ldr	r3, .L39+76
 236 0140 1A80     		strh	r2, [r3]
 163:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 8


 164:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             else
 165:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 166:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 167:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 168:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 169:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 237              		.loc 1 169 0
 238 0142 4CE0     		b	.L15
 239              	.L13:
 167:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 240              		.loc 1 167 0
 241 0144 914B     		ldr	r3, .L39+80
 242 0146 0222     		mov	r2, #2
 243 0148 1A60     		str	r2, [r3]
 244              		.loc 1 169 0
 245 014a 48E0     		b	.L15
 246              	.L11:
 170:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 171:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SUB_ADDRESS_SIZE16_CONST)
 172:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_OFFSET_HI8:
 173:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 174:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_I2C_SLAVE_GENERATE_ACK;
 175:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 176:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Store offset most significant byre */
 177:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 178:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 179:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_fsmState = EZI2C_EZI2C_FSM_OFFSET_LO8;
 180:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 181:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 182:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (EZI2C_SUB_ADDRESS_SIZE16_CONST) */
 183:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 184:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_OFFSET_LO8:
 185:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 186:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #if(EZI2C_SUB_ADDRESS_SIZE16)
 187:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 188:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 189:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
 190:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 191:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #endif
 192:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 193:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Check offset against buffer size */
 194:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(locByte < (uint32) EZI2C_bufSizeBuf1)
 247              		.loc 1 194 0
 248 014c 914B     		ldr	r3, .L39+88
 249 014e 1B88     		ldrh	r3, [r3]
 250 0150 1A1C     		mov	r2, r3
 251 0152 7B68     		ldr	r3, [r7, #4]
 252 0154 9A42     		cmp	r2, r3
 253 0156 3AD9     		bls	.L16
 195:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 196:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_ACK;
 254              		.loc 1 196 0
 255 0158 8C4B     		ldr	r3, .L39+80
 256 015a 0122     		mov	r2, #1
 257 015c 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 198:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 9


 199:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locIndex = locByte;
 258              		.loc 1 199 0
 259 015e 7B68     		ldr	r3, [r7, #4]
 260 0160 FB61     		str	r3, [r7, #28]
 200:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 201:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 202:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < EZI2C_protectBuf1) ?
 261              		.loc 1 202 0
 262 0162 8D4B     		ldr	r3, .L39+92
 263 0164 1B88     		ldrh	r3, [r3]
 264 0166 1A1C     		mov	r2, r3
 265 0168 7B68     		ldr	r3, [r7, #4]
 266 016a 9A42     		cmp	r2, r3
 267 016c 06D9     		bls	.L17
 268              		.loc 1 202 0 is_stmt 0 discriminator 1
 269 016e 8A4B     		ldr	r3, .L39+92
 270 0170 1A88     		ldrh	r2, [r3]
 271 0172 7B68     		ldr	r3, [r7, #4]
 272 0174 9BB2     		uxth	r3, r3
 273 0176 D31A     		sub	r3, r2, r3
 274 0178 9BB2     		uxth	r3, r3
 275 017a 00E0     		b	.L18
 276              	.L17:
 277              		.loc 1 202 0 discriminator 2
 278 017c 0023     		mov	r3, #0
 279              	.L18:
 280              		.loc 1 202 0 discriminator 3
 281 017e 824A     		ldr	r2, .L39+76
 282 0180 1380     		strh	r3, [r2]
 203:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                                        (EZI2C_protectBuf1 - locByte) : (0u));
 204:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 205:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #if (EZI2C_CY_SCBIP_V0)
 206:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 
 207:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 if(locBufSize < EZI2C_FIFO_SIZE)
 283              		.loc 1 207 0 is_stmt 1 discriminator 3
 284 0182 814B     		ldr	r3, .L39+76
 285 0184 1B88     		ldrh	r3, [r3]
 286 0186 072B     		cmp	r3, #7
 287 0188 03D8     		bhi	.L19
 208:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 209:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 210:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 288              		.loc 1 210 0
 289 018a 7B4B     		ldr	r3, .L39+60
 290 018c 0122     		mov	r2, #1
 291 018e 1A70     		strb	r2, [r3]
 292 0190 18E0     		b	.L20
 293              	.L19:
 211:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 212:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Receive use RX FIFO chunks */
 213:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 else if(locBufSize == EZI2C_FIFO_SIZE)
 294              		.loc 1 213 0
 295 0192 7D4B     		ldr	r3, .L39+76
 296 0194 1B88     		ldrh	r3, [r3]
 297 0196 082B     		cmp	r3, #8
 298 0198 0AD1     		bne	.L21
 214:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 10


 215:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full */
 299              		.loc 1 215 0
 300 019a 714B     		ldr	r3, .L39+36
 301 019c 704A     		ldr	r2, .L39+36
 302 019e 1268     		ldr	r2, [r2]
 303 01a0 A021     		mov	r1, #160
 304 01a2 0902     		lsl	r1, r1, #8
 305 01a4 0A43     		orr	r2, r1
 306 01a6 1A60     		str	r2, [r3]
 216:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 307              		.loc 1 216 0
 308 01a8 6F4B     		ldr	r3, .L39+44
 309 01aa 0022     		mov	r2, #0
 310 01ac 1A60     		str	r2, [r3]
 311 01ae 09E0     		b	.L20
 312              	.L21:
 217:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 218:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 else
 219:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 220:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is fu
 313              		.loc 1 220 0
 314 01b0 6B4B     		ldr	r3, .L39+36
 315 01b2 6B4A     		ldr	r2, .L39+36
 316 01b4 1268     		ldr	r2, [r2]
 317 01b6 8021     		mov	r1, #128
 318 01b8 8901     		lsl	r1, r1, #6
 319 01ba 0A43     		orr	r2, r1
 320 01bc 1A60     		str	r2, [r3]
 221:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_FULL);
 321              		.loc 1 221 0
 322 01be 6A4B     		ldr	r3, .L39+44
 323 01c0 0822     		mov	r2, #8
 324 01c2 1A60     		str	r2, [r3]
 325              	.L20:
 222:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 223:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 
 224:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #else
 225:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 
 226:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 227:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 228:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.  
 229:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addreses. T
 230:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     */
 231:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 232:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 233:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #else
 234:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 235:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     if(locBufSize < EZI2C_FIFO_SIZE)
 236:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 237:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 238:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 239:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 240:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Receive use RX FIFO chunks */
 241:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     else if(locBufSize == EZI2C_FIFO_SIZE)
 242:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 243:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full 
 244:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 11


 245:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 246:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     else
 247:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 248:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO i
 249:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_FULL);
 250:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 251:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 252:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #endif
 253:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 
 254:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #endif /* (EZI2C_CY_SCBIP_V0) */
 255:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 256:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 257:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_EZI2C_SET_OFFSET(activeAddress, locIndex);
 326              		.loc 1 257 0
 327 01c4 FB69     		ldr	r3, [r7, #28]
 328 01c6 DAB2     		uxtb	r2, r3
 329 01c8 644B     		ldr	r3, .L39+32
 330 01ca 1A70     		strb	r2, [r3]
 258:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 259:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             else
 260:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 261:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 262:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 263:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 264:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 331              		.loc 1 264 0
 332 01cc 07E0     		b	.L15
 333              	.L16:
 262:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 334              		.loc 1 262 0
 335 01ce 6F4B     		ldr	r3, .L39+80
 336 01d0 0222     		mov	r2, #2
 337 01d2 1A60     		str	r2, [r3]
 338              		.loc 1 264 0
 339 01d4 03E0     		b	.L15
 340              	.L38:
 265:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 266:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         default:
 267:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 341              		.loc 1 267 0 discriminator 1
 342 01d6 0020     		mov	r0, #0
 343 01d8 FFF7FEFF 		bl	CyHalt
 268:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 344              		.loc 1 268 0
 345 01dc C046     		mov	r8, r8
 346              	.L15:
 269:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 270:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 271:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_NOT_EMPTY);
 347              		.loc 1 271 0
 348 01de 634B     		ldr	r3, .L39+48
 349 01e0 0422     		mov	r2, #4
 350 01e2 1A60     		str	r2, [r3]
 351 01e4 4DE0     		b	.L8
 352              	.L9:
 272:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 273:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 12


 274:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 275:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Receive use FIFO chunks: auto data ACK is enabled */
 276:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else if (0u != (EZI2C_I2C_CTRL_REG & EZI2C_I2C_CTRL_S_READY_DATA_ACK))
 353              		.loc 1 276 0
 354 01e6 5E4B     		ldr	r3, .L39+36
 355 01e8 1A68     		ldr	r2, [r3]
 356 01ea 8023     		mov	r3, #128
 357 01ec 9B01     		lsl	r3, r3, #6
 358 01ee 1340     		and	r3, r2
 359 01f0 47D0     		beq	.L8
 277:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 278:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read. */
 279:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* The completion event has a high priority than the FIFO full. Read the remain
 280:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(0u != (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 360              		.loc 1 280 0
 361 01f2 BA68     		ldr	r2, [r7, #8]
 362 01f4 0223     		mov	r3, #2
 363 01f6 1340     		and	r3, r2
 364 01f8 0DD0     		beq	.L23
 281:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 282:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 283:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         fifoIndex = EZI2C_GET_RX_FIFO_ENTRIES;
 365              		.loc 1 283 0
 366 01fa 684B     		ldr	r3, .L39+96
 367 01fc 1A68     		ldr	r2, [r3]
 368 01fe 0F23     		mov	r3, #15
 369 0200 1340     		and	r3, r2
 370 0202 3B61     		str	r3, [r7, #16]
 284:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 285:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 286:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 287:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Update with current address match */
 288:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(EZI2C_CHECK_INTR_SLAVE_MASKED(EZI2C_INTR_SLAVE_I2C_ADDR_MATCH))
 289:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 290:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 291:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 fifoIndex = EZI2C_GET_RX_FIFO_ENTRIES;
 292:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 293:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* If the SR is valid, the RX FIFO is full and the address is in th
 294:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 * leave the address in the RX FIFO for further processing.
 295:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 * If the SR is invalid, the address is already in the RX FIFO: read
 296:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 */
 297:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 fifoIndex -= ((0u != EZI2C_GET_RX_FIFO_SR_VALID) ? (0u) : (1u));
 298:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 299:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 300:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         #endif
 301:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 302:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_DISABLE_SLAVE_AUTO_DATA;
 371              		.loc 1 302 0
 372 0204 564B     		ldr	r3, .L39+36
 373 0206 564A     		ldr	r2, .L39+36
 374 0208 1168     		ldr	r1, [r2]
 375 020a 564A     		ldr	r2, .L39+40
 376 020c 0A40     		and	r2, r1
 377 020e 1A60     		str	r2, [r3]
 303:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         endTransfer = EZI2C_EZI2C_CONTINUE_TRANSFER;
 378              		.loc 1 303 0
 379 0210 0123     		mov	r3, #1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 13


 380 0212 7B61     		str	r3, [r7, #20]
 304:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 305:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 306:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 307:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
 308:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 309:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
 310:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize -= (uint16) EZI2C_FIFO_SIZE;
 311:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 312:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(locBufSize <= EZI2C_FIFO_SIZE)
 313:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 314:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 315:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 316:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_COMPLETE_TRANSFER;
 317:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 318:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 319:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 320:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Continue  transaction */
 321:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = EZI2C_FIFO_SIZE;
 322:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_CONTINUE_TRANSFER;
 323:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 324:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 325:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 326:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 381              		.loc 1 326 0
 382 0214 22E0     		b	.L26
 383              	.L23:
 310:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize -= (uint16) EZI2C_FIFO_SIZE;
 384              		.loc 1 310 0
 385 0216 5C4B     		ldr	r3, .L39+76
 386 0218 1B88     		ldrh	r3, [r3]
 387 021a 083B     		sub	r3, r3, #8
 388 021c 9AB2     		uxth	r2, r3
 389 021e 5A4B     		ldr	r3, .L39+76
 390 0220 1A80     		strh	r2, [r3]
 312:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(locBufSize <= EZI2C_FIFO_SIZE)
 391              		.loc 1 312 0
 392 0222 594B     		ldr	r3, .L39+76
 393 0224 1B88     		ldrh	r3, [r3]
 394 0226 082B     		cmp	r3, #8
 395 0228 05D8     		bhi	.L25
 315:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 396              		.loc 1 315 0
 397 022a 574B     		ldr	r3, .L39+76
 398 022c 1B88     		ldrh	r3, [r3]
 399 022e 3B61     		str	r3, [r7, #16]
 316:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_COMPLETE_TRANSFER;
 400              		.loc 1 316 0
 401 0230 0023     		mov	r3, #0
 402 0232 7B61     		str	r3, [r7, #20]
 403              		.loc 1 326 0
 404 0234 12E0     		b	.L26
 405              	.L25:
 321:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = EZI2C_FIFO_SIZE;
 406              		.loc 1 321 0
 407 0236 0823     		mov	r3, #8
 408 0238 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 14


 322:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_CONTINUE_TRANSFER;
 409              		.loc 1 322 0
 410 023a 0123     		mov	r3, #1
 411 023c 7B61     		str	r3, [r7, #20]
 412              		.loc 1 326 0
 413 023e 0DE0     		b	.L26
 414              	.L27:
 327:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 328:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Store data in the buffer */
 329:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_dataBuffer1[locIndex] = (uint8) EZI2C_RX_FIFO_RD_REG;
 415              		.loc 1 329 0 discriminator 2
 416 0240 534B     		ldr	r3, .L39+84
 417 0242 1A68     		ldr	r2, [r3]
 418 0244 FB69     		ldr	r3, [r7, #28]
 419 0246 D218     		add	r2, r2, r3
 420 0248 4E4B     		ldr	r3, .L39+72
 421 024a 1B68     		ldr	r3, [r3]
 422 024c DBB2     		uxtb	r3, r3
 423 024e 1370     		strb	r3, [r2]
 330:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex++;
 424              		.loc 1 330 0 discriminator 2
 425 0250 FB69     		ldr	r3, [r7, #28]
 426 0252 0133     		add	r3, r3, #1
 427 0254 FB61     		str	r3, [r7, #28]
 326:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 428              		.loc 1 326 0 discriminator 2
 429 0256 3B69     		ldr	r3, [r7, #16]
 430 0258 013B     		sub	r3, r3, #1
 431 025a 3B61     		str	r3, [r7, #16]
 432              	.L26:
 326:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 433              		.loc 1 326 0 is_stmt 0 discriminator 1
 434 025c 3B69     		ldr	r3, [r7, #16]
 435 025e 002B     		cmp	r3, #0
 436 0260 EED1     		bne	.L27
 331:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 332:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 333:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 334:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_EZI2C_COMPLETE_TRANSFER == endTransfer)
 437              		.loc 1 334 0 is_stmt 1
 438 0262 7B69     		ldr	r3, [r7, #20]
 439 0264 002B     		cmp	r3, #0
 440 0266 09D1     		bne	.L28
 335:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 336:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ENABLE_SLAVE_AUTO_DATA_NACK;
 441              		.loc 1 336 0
 442 0268 3D4B     		ldr	r3, .L39+36
 443 026a 3D4A     		ldr	r2, .L39+36
 444 026c 1268     		ldr	r2, [r2]
 445 026e 8021     		mov	r1, #128
 446 0270 0902     		lsl	r1, r1, #8
 447 0272 0A43     		orr	r2, r1
 448 0274 1A60     		str	r2, [r3]
 337:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 338:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL while last RX FIFO chunk reception */
 339:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 449              		.loc 1 339 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 15


 450 0276 3C4B     		ldr	r3, .L39+44
 451 0278 0022     		mov	r2, #0
 452 027a 1A60     		str	r2, [r3]
 453              	.L28:
 340:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 341:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 342:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_FULL |
 454              		.loc 1 342 0
 455 027c 3B4B     		ldr	r3, .L39+48
 456 027e 0C22     		mov	r2, #12
 457 0280 1A60     		str	r2, [r3]
 458              	.L8:
 343:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                                             EZI2C_INTR_RX_NOT_EMPTY);
 344:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 345:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else
 346:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 347:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Exit for slave interrupts which do not active for RX direction:
 348:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
 349:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 350:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 351:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 352:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 353:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 459              		.loc 1 353 0
 460 0282 BA68     		ldr	r2, [r7, #8]
 461 0284 0223     		mov	r3, #2
 462 0286 1340     		and	r3, r2
 463 0288 00D1     		bne	.LCB400
 464 028a 9EE0     		b	.L29	@long jump
 465              	.LCB400:
 354:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 355:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
 356:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 357:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #if(!EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 358:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_STOP))
 466              		.loc 1 358 0
 467 028c FA68     		ldr	r2, [r7, #12]
 468 028e 1023     		mov	r3, #16
 469 0290 1340     		and	r3, r2
 470 0292 26D0     		beq	.L30
 359:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #else
 360:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 361:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if((0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_STOP)) &&
 362:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                    (0u != ((uint8) EZI2C_EZI2C_STATUS_BUSY & EZI2C_curStatus)))
 363:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #endif
 364:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 365:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 366:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 471              		.loc 1 366 0
 472 0294 344B     		ldr	r3, .L39+44
 473 0296 0022     		mov	r2, #0
 474 0298 1A60     		str	r2, [r3]
 367:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_SetTxInterruptMode(EZI2C_NO_INTR_SOURCES);
 475              		.loc 1 367 0
 476 029a 2F4B     		ldr	r3, .L39+28
 477 029c 0022     		mov	r2, #0
 478 029e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 16


 368:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 369:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Set read completion mask */
 370:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus = EZI2C_INTR_SLAVE_I2C_NACK;
 479              		.loc 1 370 0
 480 02a0 0223     		mov	r3, #2
 481 02a2 BB61     		str	r3, [r7, #24]
 371:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 372:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
 373:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(locIndex != EZI2C_EZI2C_GET_OFFSET(activeAddress))
 482              		.loc 1 373 0
 483 02a4 2D4B     		ldr	r3, .L39+32
 484 02a6 1B78     		ldrb	r3, [r3]
 485 02a8 1A1C     		mov	r2, r3
 486 02aa FB69     		ldr	r3, [r7, #28]
 487 02ac 9A42     		cmp	r2, r3
 488 02ae 03D0     		beq	.L31
 374:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 375:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locStatus |= EZI2C_INTR_SLAVE_I2C_WRITE_STOP;
 489              		.loc 1 375 0
 490 02b0 BB69     		ldr	r3, [r7, #24]
 491 02b2 0822     		mov	r2, #8
 492 02b4 1343     		orr	r3, r2
 493 02b6 BB61     		str	r3, [r7, #24]
 494              	.L31:
 376:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 377:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 378:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Complete read or write transaction */
 379:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 495              		.loc 1 379 0
 496 02b8 BB69     		ldr	r3, [r7, #24]
 497 02ba FA68     		ldr	r2, [r7, #12]
 498 02bc 1340     		and	r3, r2
 499 02be BB61     		str	r3, [r7, #24]
 380:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 381:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus |= (uint32)  EZI2C_curStatus;
 500              		.loc 1 381 0
 501 02c0 244B     		ldr	r3, .L39+24
 502 02c2 1B78     		ldrb	r3, [r3]
 503 02c4 DBB2     		uxtb	r3, r3
 504 02c6 BA69     		ldr	r2, [r7, #24]
 505 02c8 1343     		orr	r3, r2
 506 02ca BB61     		str	r3, [r7, #24]
 382:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus &= (uint32) ~EZI2C_EZI2C_STATUS_BUSY;
 507              		.loc 1 382 0
 508 02cc BB69     		ldr	r3, [r7, #24]
 509 02ce 2022     		mov	r2, #32
 510 02d0 9343     		bic	r3, r2
 511 02d2 BB61     		str	r3, [r7, #24]
 383:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_curStatus = (uint8) locStatus;
 512              		.loc 1 383 0
 513 02d4 BB69     		ldr	r3, [r7, #24]
 514 02d6 DAB2     		uxtb	r2, r3
 515 02d8 1E4B     		ldr	r3, .L39+24
 516 02da 1A70     		strb	r2, [r3]
 384:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 385:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_fsmState = EZI2C_EZI2C_FSM_IDLE;
 517              		.loc 1 385 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 17


 518 02dc 264B     		ldr	r3, .L39+60
 519 02de 0022     		mov	r2, #0
 520 02e0 1A70     		strb	r2, [r3]
 521              	.L30:
 386:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 387:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 388:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 389:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Store local index into global variable, before addrss phase */
 390:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 391:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 392:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif
 393:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 394:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 395:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 396:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 397:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 * The INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two
 398:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 399:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 */
 400:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_ADDR_MATCH))
 522              		.loc 1 400 0
 523 02e2 FA68     		ldr	r2, [r7, #12]
 524 02e4 4023     		mov	r3, #64
 525 02e6 1340     		and	r3, r2
 526 02e8 6CD0     		beq	.L32
 401:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 402:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 403:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 404:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 405:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locByte = EZI2C_GET_I2C_7BIT_ADDRESS(EZI2C_RX_FIFO_RD_REG);
 406:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 407:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_NOT_EMPTY);
 408:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 409:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Check received address against device addresses */
 410:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(EZI2C_addrBuf1 == locByte)
 411:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 412:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 413:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer1;
 414:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf1;
 415:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf1;
 416:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 417:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS1;
 418:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 419:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else if(EZI2C_addrBuf2 == locByte)
 420:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 421:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
 422:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer2;
 423:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf2;
 424:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf2;
 425:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 426:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS2;
 427:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 428:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 429:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 430:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Address does not match */
 431:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             ackResponse = EZI2C_EZI2C_NACK_RECEIVED_ADDRESS;
 432:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 433:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 18


 434:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif
 435:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 436:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 437:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 438:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 439:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 440:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearI2CExtClkInterruptSource(EZI2C_INTR_I2C_EC_WAKE_UP);
 441:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 442:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 443:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(!EZI2C_CY_SCBIP_V0)
 444:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 445:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_DISABLE_INTR_SLAVE(EZI2C_INTR_SLAVE_I2C_STOP);
 446:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (!EZI2C_CY_SCBIP_V0) */
 447:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 448:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 449:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_I2C_SLAVE_GENERATE_NACK;
 450:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 451:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 452:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
 453:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 454:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 455:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SCB_MODE_UNCONFIG_CONST_CFG)
 456:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(!EZI2C_SECONDARY_ADDRESS_ENABLE)
 457:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 458:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 459:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer1;
 460:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf1;
 461:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf1;
 462:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 463:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS1;
 464:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 465:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (EZI2C_SCB_MODE_UNCONFIG_CONST_CFG) */
 466:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 467:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 468:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_curStatus |= (uint8) EZI2C_EZI2C_STATUS_BUSY;
 527              		.loc 1 468 0
 528 02ea 1A4B     		ldr	r3, .L39+24
 529 02ec 1B78     		ldrb	r3, [r3]
 530 02ee DBB2     		uxtb	r3, r3
 531 02f0 2022     		mov	r2, #32
 532 02f2 1343     		orr	r3, r2
 533 02f4 DAB2     		uxtb	r2, r3
 534 02f6 174B     		ldr	r3, .L39+24
 535 02f8 1A70     		strb	r2, [r3]
 469:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 470:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 471:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex = EZI2C_EZI2C_GET_OFFSET(activeAddress);
 536              		.loc 1 471 0
 537 02fa 184B     		ldr	r3, .L39+32
 538 02fc 1B78     		ldrb	r3, [r3]
 539 02fe FB61     		str	r3, [r7, #28]
 472:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 473:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Check transaction direction */
 474:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(EZI2C_CHECK_I2C_STATUS(EZI2C_I2C_STATUS_S_READ))
 540              		.loc 1 474 0
 541 0300 274B     		ldr	r3, .L39+100
 542 0302 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 19


 543 0304 1023     		mov	r3, #16
 544 0306 1340     		and	r3, r2
 545 0308 50D0     		beq	.L33
 475:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 476:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 477:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             locBufSize = EZI2C_bufSizeBuf1 - (uint16) locIndex;
 546              		.loc 1 477 0
 547 030a 224B     		ldr	r3, .L39+88
 548 030c 1A88     		ldrh	r2, [r3]
 549 030e FB69     		ldr	r3, [r7, #28]
 550 0310 9BB2     		uxth	r3, r3
 551 0312 D31A     		sub	r3, r2, r3
 552 0314 9AB2     		uxth	r2, r3
 553 0316 1C4B     		ldr	r3, .L39+76
 554 0318 1A80     		strh	r2, [r3]
 478:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 479:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 480:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_CLEAR_TX_FIFO;
 555              		.loc 1 480 0
 556 031a 224B     		ldr	r3, .L39+104
 557 031c 214A     		ldr	r2, .L39+104
 558 031e 1268     		ldr	r2, [r2]
 559 0320 8021     		mov	r1, #128
 560 0322 4902     		lsl	r1, r1, #9
 561 0324 0A43     		orr	r2, r1
 562 0326 1A60     		str	r2, [r3]
 563 0328 1E4B     		ldr	r3, .L39+104
 564 032a 1E4A     		ldr	r2, .L39+104
 565 032c 1168     		ldr	r1, [r2]
 566 032e 1E4A     		ldr	r2, .L39+108
 567 0330 0A40     		and	r2, r1
 568 0332 1A60     		str	r2, [r3]
 481:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_SetTxInterruptMode(EZI2C_INTR_TX_EMPTY);
 569              		.loc 1 481 0
 570 0334 084B     		ldr	r3, .L39+28
 571 0336 1022     		mov	r2, #16
 572 0338 1A60     		str	r2, [r3]
 573 033a 3AE0     		b	.L34
 574              	.L40:
 575              		.align	2
 576              	.L39:
 577 033c 00000000 		.word	EZI2C_customIntrHandler
 578 0340 00000000 		.word	EZI2C_indexBuf1
 579 0344 400F0740 		.word	1074204480
 580 0348 000E0740 		.word	1074204160
 581 034c 01010000 		.word	257
 582 0350 00000740 		.word	1074200576
 583 0354 00000000 		.word	EZI2C_curStatus
 584 0358 880F0740 		.word	1074204552
 585 035c 00000000 		.word	EZI2C_offsetBuf1
 586 0360 60000740 		.word	1074200672
 587 0364 FF5FFFFF 		.word	-40961
 588 0368 C80F0740 		.word	1074204616
 589 036c C00F0740 		.word	1074204608
 590 0370 ED0F0000 		.word	4077
 591 0374 FF0F0000 		.word	4095
 592 0378 00000000 		.word	EZI2C_fsmState
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 20


 593 037c 880E0740 		.word	1074204296
 594 0380 CC0F0740 		.word	1074204620
 595 0384 40030740 		.word	1074201408
 596 0388 00000000 		.word	locBufSize.4661
 597 038c 6C000740 		.word	1074200684
 598 0390 00000000 		.word	EZI2C_dataBuffer1
 599 0394 00000000 		.word	EZI2C_bufSizeBuf1
 600 0398 00000000 		.word	EZI2C_protectBuf1
 601 039c 08030740 		.word	1074201352
 602 03a0 64000740 		.word	1074200676
 603 03a4 04020740 		.word	1074201092
 604 03a8 FFFFFEFF 		.word	-65537
 605              	.L33:
 482:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 483:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 484:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 485:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
 486:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_NOT_EMPTY);
 606              		.loc 1 486 0
 607 03ac 1E4B     		ldr	r3, .L41
 608 03ae 0422     		mov	r2, #4
 609 03b0 1A60     		str	r2, [r3]
 610              	.L34:
 487:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 488:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 489:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 490:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearI2CExtClkInterruptSource(EZI2C_INTR_I2C_EC_WAKE_UP);
 611              		.loc 1 490 0
 612 03b2 1E4B     		ldr	r3, .L41+4
 613 03b4 0122     		mov	r2, #1
 614 03b6 1A60     		str	r2, [r3]
 491:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 615              		.loc 1 491 0
 616 03b8 1D4B     		ldr	r3, .L41+8
 617 03ba 1E4A     		ldr	r2, .L41+12
 618 03bc 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 493:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(!EZI2C_CY_SCBIP_V0)
 494:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 495:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ENABLE_INTR_SLAVE(EZI2C_INTR_SLAVE_I2C_STOP);
 496:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (!EZI2C_CY_SCBIP_V0) */
 497:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 498:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* ACK the address byte */
 499:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_I2C_SLAVE_GENERATE_ACK;
 619              		.loc 1 499 0
 620 03be 1E4B     		ldr	r3, .L41+16
 621 03c0 0122     		mov	r2, #1
 622 03c2 1A60     		str	r2, [r3]
 623              	.L32:
 500:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 501:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 502:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 503:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 504:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_ClearSlaveInterruptSource(locIntrSlave);
 624              		.loc 1 504 0
 625 03c4 1A4B     		ldr	r3, .L41+8
 626 03c6 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 21


 627 03c8 1A60     		str	r2, [r3]
 628              	.L29:
 505:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 506:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 507:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 508:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 509:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             * The address reception with a read flag clears the TX FIFO to be loaded with data.
 510:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             */
 511:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (EZI2C_GetInterruptCause() & EZI2C_INTR_CAUSE_TX))
 629              		.loc 1 511 0
 630 03ca 1C4B     		ldr	r3, .L41+20
 631 03cc 1A68     		ldr	r2, [r3]
 632 03ce 0423     		mov	r3, #4
 633 03d0 1340     		and	r3, r2
 634 03d2 21D0     		beq	.L6
 635              	.L37:
 512:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 513:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
 514:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 do
 515:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 516:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 517:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(0u != locBufSize)
 636              		.loc 1 517 0
 637 03d4 1A4B     		ldr	r3, .L41+24
 638 03d6 1B88     		ldrh	r3, [r3]
 639 03d8 002B     		cmp	r3, #0
 640 03da 11D0     		beq	.L35
 518:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 519:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = (uint32) EZI2C_dataBuffer1[locIndex];
 641              		.loc 1 519 0
 642 03dc 194B     		ldr	r3, .L41+28
 643 03de 1A4A     		ldr	r2, .L41+32
 644 03e0 1168     		ldr	r1, [r2]
 645 03e2 FA69     		ldr	r2, [r7, #28]
 646 03e4 8A18     		add	r2, r1, r2
 647 03e6 1278     		ldrb	r2, [r2]
 648 03e8 D2B2     		uxtb	r2, r2
 649 03ea 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex++;
 650              		.loc 1 520 0
 651 03ec FB69     		ldr	r3, [r7, #28]
 652 03ee 0133     		add	r3, r3, #1
 653 03f0 FB61     		str	r3, [r7, #28]
 521:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize--;
 654              		.loc 1 521 0
 655 03f2 134B     		ldr	r3, .L41+24
 656 03f4 1B88     		ldrh	r3, [r3]
 657 03f6 013B     		sub	r3, r3, #1
 658 03f8 9AB2     		uxth	r2, r3
 659 03fa 114B     		ldr	r3, .L41+24
 660 03fc 1A80     		strh	r2, [r3]
 661 03fe 02E0     		b	.L36
 662              	.L35:
 522:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 523:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 524:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 525:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = EZI2C_EZI2C_OVFL_RETURN;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 22


 663              		.loc 1 525 0
 664 0400 104B     		ldr	r3, .L41+28
 665 0402 FF22     		mov	r2, #255
 666 0404 1A60     		str	r2, [r3]
 667              	.L36:
 526:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 527:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 528:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 while(EZI2C_FIFO_SIZE != EZI2C_GET_TX_FIFO_ENTRIES);
 668              		.loc 1 528 0
 669 0406 114B     		ldr	r3, .L41+36
 670 0408 1A68     		ldr	r2, [r3]
 671 040a 0F23     		mov	r3, #15
 672 040c 1340     		and	r3, r2
 673 040e 082B     		cmp	r3, #8
 674 0410 E0D1     		bne	.L37
 529:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 530:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_ClearTxInterruptSource(EZI2C_INTR_TX_EMPTY);
 675              		.loc 1 530 0
 676 0412 0F4B     		ldr	r3, .L41+40
 677 0414 1022     		mov	r2, #16
 678 0416 1A60     		str	r2, [r3]
 679              	.L6:
 531:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 532:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
 533:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 534:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Store local index copy into global variable */
 535:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         EZI2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 680              		.loc 1 535 0
 681 0418 FB69     		ldr	r3, [r7, #28]
 682 041a 9AB2     		uxth	r2, r3
 683 041c 0D4B     		ldr	r3, .L41+44
 684 041e 1A80     		strh	r2, [r3]
 536:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     }
 685              		.loc 1 536 0
 686 0420 BD46     		mov	sp, r7
 687 0422 08B0     		add	sp, sp, #32
 688              		@ sp needed for prologue
 689 0424 80BD     		pop	{r7, pc}
 690              	.L42:
 691 0426 C046     		.align	2
 692              	.L41:
 693 0428 C80F0740 		.word	1074204616
 694 042c 800E0740 		.word	1074204288
 695 0430 400F0740 		.word	1074204480
 696 0434 FF0F0000 		.word	4095
 697 0438 6C000740 		.word	1074200684
 698 043c 000E0740 		.word	1074204160
 699 0440 00000000 		.word	locBufSize.4661
 700 0444 40020740 		.word	1074201152
 701 0448 00000000 		.word	EZI2C_dataBuffer1
 702 044c 08020740 		.word	1074201096
 703 0450 800F0740 		.word	1074204544
 704 0454 00000000 		.word	EZI2C_indexBuf1
 705              		.cfi_endproc
 706              	.LFE0:
 707              		.size	EZI2C_EZI2C_STRETCH_ISR, .-EZI2C_EZI2C_STRETCH_ISR
 708              		.bss
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 23


 709              		.align	1
 710              	locBufSize.4661:
 711 0000 0000     		.space	2
 712              		.text
 713              	.Letext0:
 714              		.file 2 "./Generated_Source/PSoC4/cytypes.h"
 715              		.file 3 ".\\Generated_Source\\PSoC4\\EZI2C_PVT.h"
 716              		.file 4 ".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_PVT.h"
 717              		.section	.debug_info,"",%progbits
 718              	.Ldebug_info0:
 719 0000 CE010000 		.4byte	0x1ce
 720 0004 0200     		.2byte	0x2
 721 0006 00000000 		.4byte	.Ldebug_abbrev0
 722 000a 04       		.byte	0x4
 723 000b 01       		.uleb128 0x1
 724 000c 34020000 		.4byte	.LASF34
 725 0010 01       		.byte	0x1
 726 0011 56010000 		.4byte	.LASF35
 727 0015 98010000 		.4byte	.LASF36
 728 0019 00000000 		.4byte	.Ldebug_ranges0+0
 729 001d 00000000 		.4byte	0
 730 0021 00000000 		.4byte	0
 731 0025 00000000 		.4byte	.Ldebug_line0
 732 0029 02       		.uleb128 0x2
 733 002a 01       		.byte	0x1
 734 002b 06       		.byte	0x6
 735 002c 93020000 		.4byte	.LASF0
 736 0030 02       		.uleb128 0x2
 737 0031 01       		.byte	0x1
 738 0032 08       		.byte	0x8
 739 0033 7A000000 		.4byte	.LASF1
 740 0037 02       		.uleb128 0x2
 741 0038 02       		.byte	0x2
 742 0039 05       		.byte	0x5
 743 003a 19020000 		.4byte	.LASF2
 744 003e 02       		.uleb128 0x2
 745 003f 02       		.byte	0x2
 746 0040 07       		.byte	0x7
 747 0041 37000000 		.4byte	.LASF3
 748 0045 02       		.uleb128 0x2
 749 0046 04       		.byte	0x4
 750 0047 05       		.byte	0x5
 751 0048 8A020000 		.4byte	.LASF4
 752 004c 02       		.uleb128 0x2
 753 004d 04       		.byte	0x4
 754 004e 07       		.byte	0x7
 755 004f 92000000 		.4byte	.LASF5
 756 0053 02       		.uleb128 0x2
 757 0054 08       		.byte	0x8
 758 0055 05       		.byte	0x5
 759 0056 48010000 		.4byte	.LASF6
 760 005a 02       		.uleb128 0x2
 761 005b 08       		.byte	0x8
 762 005c 07       		.byte	0x7
 763 005d 1B010000 		.4byte	.LASF7
 764 0061 03       		.uleb128 0x3
 765 0062 04       		.byte	0x4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 24


 766 0063 05       		.byte	0x5
 767 0064 696E7400 		.ascii	"int\000"
 768 0068 02       		.uleb128 0x2
 769 0069 04       		.byte	0x4
 770 006a 07       		.byte	0x7
 771 006b F9000000 		.4byte	.LASF8
 772 006f 04       		.uleb128 0x4
 773 0070 A4000000 		.4byte	.LASF9
 774 0074 02       		.byte	0x2
 775 0075 5B       		.byte	0x5b
 776 0076 30000000 		.4byte	0x30
 777 007a 04       		.uleb128 0x4
 778 007b D9000000 		.4byte	.LASF10
 779 007f 02       		.byte	0x2
 780 0080 5C       		.byte	0x5c
 781 0081 3E000000 		.4byte	0x3e
 782 0085 04       		.uleb128 0x4
 783 0086 E0000000 		.4byte	.LASF11
 784 008a 02       		.byte	0x2
 785 008b 5D       		.byte	0x5d
 786 008c 4C000000 		.4byte	0x4c
 787 0090 02       		.uleb128 0x2
 788 0091 04       		.byte	0x4
 789 0092 04       		.byte	0x4
 790 0093 6B000000 		.4byte	.LASF12
 791 0097 02       		.uleb128 0x2
 792 0098 08       		.byte	0x8
 793 0099 04       		.byte	0x4
 794 009a D2000000 		.4byte	.LASF13
 795 009e 02       		.uleb128 0x2
 796 009f 01       		.byte	0x1
 797 00a0 08       		.byte	0x8
 798 00a1 81010000 		.4byte	.LASF14
 799 00a5 05       		.uleb128 0x5
 800 00a6 6F000000 		.4byte	0x6f
 801 00aa 04       		.uleb128 0x4
 802 00ab 00000000 		.4byte	.LASF15
 803 00af 02       		.byte	0x2
 804 00b0 F2       		.byte	0xf2
 805 00b1 B5000000 		.4byte	0xb5
 806 00b5 05       		.uleb128 0x5
 807 00b6 85000000 		.4byte	0x85
 808 00ba 06       		.uleb128 0x6
 809 00bb 32010000 		.4byte	.LASF16
 810 00bf 02       		.byte	0x2
 811 00c0 0201     		.2byte	0x102
 812 00c2 C6000000 		.4byte	0xc6
 813 00c6 07       		.uleb128 0x7
 814 00c7 04       		.byte	0x4
 815 00c8 CC000000 		.4byte	0xcc
 816 00cc 08       		.uleb128 0x8
 817 00cd 01       		.byte	0x1
 818 00ce 02       		.uleb128 0x2
 819 00cf 04       		.byte	0x4
 820 00d0 07       		.byte	0x7
 821 00d1 3F010000 		.4byte	.LASF17
 822 00d5 09       		.uleb128 0x9
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 25


 823 00d6 01       		.byte	0x1
 824 00d7 9F020000 		.4byte	.LASF37
 825 00db 01       		.byte	0x1
 826 00dc 25       		.byte	0x25
 827 00dd 01       		.byte	0x1
 828 00de 00000000 		.4byte	.LFB0
 829 00e2 58040000 		.4byte	.LFE0
 830 00e6 00000000 		.4byte	.LLST0
 831 00ea 01       		.byte	0x1
 832 00eb 63010000 		.4byte	0x163
 833 00ef 0A       		.uleb128 0xa
 834 00f0 06010000 		.4byte	.LASF18
 835 00f4 01       		.byte	0x1
 836 00f5 27       		.byte	0x27
 837 00f6 7A000000 		.4byte	0x7a
 838 00fa 05       		.byte	0x5
 839 00fb 03       		.byte	0x3
 840 00fc 00000000 		.4byte	locBufSize.4661
 841 0100 0A       		.uleb128 0xa
 842 0101 71000000 		.4byte	.LASF19
 843 0105 01       		.byte	0x1
 844 0106 28       		.byte	0x28
 845 0107 85000000 		.4byte	0x85
 846 010b 02       		.byte	0x2
 847 010c 91       		.byte	0x91
 848 010d 74       		.sleb128 -12
 849 010e 0A       		.uleb128 0xa
 850 010f 88000000 		.4byte	.LASF20
 851 0113 01       		.byte	0x1
 852 0114 29       		.byte	0x29
 853 0115 85000000 		.4byte	0x85
 854 0119 02       		.byte	0x2
 855 011a 91       		.byte	0x91
 856 011b 70       		.sleb128 -16
 857 011c 0A       		.uleb128 0xa
 858 011d 57000000 		.4byte	.LASF21
 859 0121 01       		.byte	0x1
 860 0122 2B       		.byte	0x2b
 861 0123 85000000 		.4byte	0x85
 862 0127 02       		.byte	0x2
 863 0128 91       		.byte	0x91
 864 0129 6C       		.sleb128 -20
 865 012a 0A       		.uleb128 0xa
 866 012b 11010000 		.4byte	.LASF22
 867 012f 01       		.byte	0x1
 868 0130 2C       		.byte	0x2c
 869 0131 85000000 		.4byte	0x85
 870 0135 02       		.byte	0x2
 871 0136 91       		.byte	0x91
 872 0137 68       		.sleb128 -24
 873 0138 0A       		.uleb128 0xa
 874 0139 63000000 		.4byte	.LASF23
 875 013d 01       		.byte	0x1
 876 013e 2D       		.byte	0x2d
 877 013f 85000000 		.4byte	0x85
 878 0143 02       		.byte	0x2
 879 0144 91       		.byte	0x91
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 26


 880 0145 5C       		.sleb128 -36
 881 0146 0A       		.uleb128 0xa
 882 0147 7D020000 		.4byte	.LASF24
 883 014b 01       		.byte	0x1
 884 014c 2F       		.byte	0x2f
 885 014d 85000000 		.4byte	0x85
 886 0151 02       		.byte	0x2
 887 0152 91       		.byte	0x91
 888 0153 60       		.sleb128 -32
 889 0154 0A       		.uleb128 0xa
 890 0155 4A000000 		.4byte	.LASF25
 891 0159 01       		.byte	0x1
 892 015a 30       		.byte	0x30
 893 015b 85000000 		.4byte	0x85
 894 015f 02       		.byte	0x2
 895 0160 91       		.byte	0x91
 896 0161 64       		.sleb128 -28
 897 0162 00       		.byte	0
 898 0163 0B       		.uleb128 0xb
 899 0164 AA000000 		.4byte	.LASF26
 900 0168 03       		.byte	0x3
 901 0169 37       		.byte	0x37
 902 016a BA000000 		.4byte	0xba
 903 016e 01       		.byte	0x1
 904 016f 01       		.byte	0x1
 905 0170 0B       		.uleb128 0xb
 906 0171 06000000 		.4byte	.LASF27
 907 0175 04       		.byte	0x4
 908 0176 1D       		.byte	0x1d
 909 0177 A5000000 		.4byte	0xa5
 910 017b 01       		.byte	0x1
 911 017c 01       		.byte	0x1
 912 017d 0B       		.uleb128 0xb
 913 017e 28000000 		.4byte	.LASF28
 914 0182 04       		.byte	0x4
 915 0183 1E       		.byte	0x1e
 916 0184 6F000000 		.4byte	0x6f
 917 0188 01       		.byte	0x1
 918 0189 01       		.byte	0x1
 919 018a 0B       		.uleb128 0xb
 920 018b 86010000 		.4byte	.LASF29
 921 018f 04       		.byte	0x4
 922 0190 21       		.byte	0x21
 923 0191 97010000 		.4byte	0x197
 924 0195 01       		.byte	0x1
 925 0196 01       		.byte	0x1
 926 0197 07       		.uleb128 0x7
 927 0198 04       		.byte	0x4
 928 0199 A5000000 		.4byte	0xa5
 929 019d 0B       		.uleb128 0xb
 930 019e 16000000 		.4byte	.LASF30
 931 01a2 04       		.byte	0x4
 932 01a3 22       		.byte	0x22
 933 01a4 7A000000 		.4byte	0x7a
 934 01a8 01       		.byte	0x1
 935 01a9 01       		.byte	0x1
 936 01aa 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 27


 937 01ab E7000000 		.4byte	.LASF31
 938 01af 04       		.byte	0x4
 939 01b0 23       		.byte	0x23
 940 01b1 7A000000 		.4byte	0x7a
 941 01b5 01       		.byte	0x1
 942 01b6 01       		.byte	0x1
 943 01b7 0B       		.uleb128 0xb
 944 01b8 23020000 		.4byte	.LASF32
 945 01bc 04       		.byte	0x4
 946 01bd 24       		.byte	0x24
 947 01be 6F000000 		.4byte	0x6f
 948 01c2 01       		.byte	0x1
 949 01c3 01       		.byte	0x1
 950 01c4 0B       		.uleb128 0xb
 951 01c5 C2000000 		.4byte	.LASF33
 952 01c9 04       		.byte	0x4
 953 01ca 25       		.byte	0x25
 954 01cb 7A000000 		.4byte	0x7a
 955 01cf 01       		.byte	0x1
 956 01d0 01       		.byte	0x1
 957 01d1 00       		.byte	0
 958              		.section	.debug_abbrev,"",%progbits
 959              	.Ldebug_abbrev0:
 960 0000 01       		.uleb128 0x1
 961 0001 11       		.uleb128 0x11
 962 0002 01       		.byte	0x1
 963 0003 25       		.uleb128 0x25
 964 0004 0E       		.uleb128 0xe
 965 0005 13       		.uleb128 0x13
 966 0006 0B       		.uleb128 0xb
 967 0007 03       		.uleb128 0x3
 968 0008 0E       		.uleb128 0xe
 969 0009 1B       		.uleb128 0x1b
 970 000a 0E       		.uleb128 0xe
 971 000b 55       		.uleb128 0x55
 972 000c 06       		.uleb128 0x6
 973 000d 11       		.uleb128 0x11
 974 000e 01       		.uleb128 0x1
 975 000f 52       		.uleb128 0x52
 976 0010 01       		.uleb128 0x1
 977 0011 10       		.uleb128 0x10
 978 0012 06       		.uleb128 0x6
 979 0013 00       		.byte	0
 980 0014 00       		.byte	0
 981 0015 02       		.uleb128 0x2
 982 0016 24       		.uleb128 0x24
 983 0017 00       		.byte	0
 984 0018 0B       		.uleb128 0xb
 985 0019 0B       		.uleb128 0xb
 986 001a 3E       		.uleb128 0x3e
 987 001b 0B       		.uleb128 0xb
 988 001c 03       		.uleb128 0x3
 989 001d 0E       		.uleb128 0xe
 990 001e 00       		.byte	0
 991 001f 00       		.byte	0
 992 0020 03       		.uleb128 0x3
 993 0021 24       		.uleb128 0x24
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 28


 994 0022 00       		.byte	0
 995 0023 0B       		.uleb128 0xb
 996 0024 0B       		.uleb128 0xb
 997 0025 3E       		.uleb128 0x3e
 998 0026 0B       		.uleb128 0xb
 999 0027 03       		.uleb128 0x3
 1000 0028 08       		.uleb128 0x8
 1001 0029 00       		.byte	0
 1002 002a 00       		.byte	0
 1003 002b 04       		.uleb128 0x4
 1004 002c 16       		.uleb128 0x16
 1005 002d 00       		.byte	0
 1006 002e 03       		.uleb128 0x3
 1007 002f 0E       		.uleb128 0xe
 1008 0030 3A       		.uleb128 0x3a
 1009 0031 0B       		.uleb128 0xb
 1010 0032 3B       		.uleb128 0x3b
 1011 0033 0B       		.uleb128 0xb
 1012 0034 49       		.uleb128 0x49
 1013 0035 13       		.uleb128 0x13
 1014 0036 00       		.byte	0
 1015 0037 00       		.byte	0
 1016 0038 05       		.uleb128 0x5
 1017 0039 35       		.uleb128 0x35
 1018 003a 00       		.byte	0
 1019 003b 49       		.uleb128 0x49
 1020 003c 13       		.uleb128 0x13
 1021 003d 00       		.byte	0
 1022 003e 00       		.byte	0
 1023 003f 06       		.uleb128 0x6
 1024 0040 16       		.uleb128 0x16
 1025 0041 00       		.byte	0
 1026 0042 03       		.uleb128 0x3
 1027 0043 0E       		.uleb128 0xe
 1028 0044 3A       		.uleb128 0x3a
 1029 0045 0B       		.uleb128 0xb
 1030 0046 3B       		.uleb128 0x3b
 1031 0047 05       		.uleb128 0x5
 1032 0048 49       		.uleb128 0x49
 1033 0049 13       		.uleb128 0x13
 1034 004a 00       		.byte	0
 1035 004b 00       		.byte	0
 1036 004c 07       		.uleb128 0x7
 1037 004d 0F       		.uleb128 0xf
 1038 004e 00       		.byte	0
 1039 004f 0B       		.uleb128 0xb
 1040 0050 0B       		.uleb128 0xb
 1041 0051 49       		.uleb128 0x49
 1042 0052 13       		.uleb128 0x13
 1043 0053 00       		.byte	0
 1044 0054 00       		.byte	0
 1045 0055 08       		.uleb128 0x8
 1046 0056 15       		.uleb128 0x15
 1047 0057 00       		.byte	0
 1048 0058 27       		.uleb128 0x27
 1049 0059 0C       		.uleb128 0xc
 1050 005a 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 29


 1051 005b 00       		.byte	0
 1052 005c 09       		.uleb128 0x9
 1053 005d 2E       		.uleb128 0x2e
 1054 005e 01       		.byte	0x1
 1055 005f 3F       		.uleb128 0x3f
 1056 0060 0C       		.uleb128 0xc
 1057 0061 03       		.uleb128 0x3
 1058 0062 0E       		.uleb128 0xe
 1059 0063 3A       		.uleb128 0x3a
 1060 0064 0B       		.uleb128 0xb
 1061 0065 3B       		.uleb128 0x3b
 1062 0066 0B       		.uleb128 0xb
 1063 0067 27       		.uleb128 0x27
 1064 0068 0C       		.uleb128 0xc
 1065 0069 11       		.uleb128 0x11
 1066 006a 01       		.uleb128 0x1
 1067 006b 12       		.uleb128 0x12
 1068 006c 01       		.uleb128 0x1
 1069 006d 40       		.uleb128 0x40
 1070 006e 06       		.uleb128 0x6
 1071 006f 9642     		.uleb128 0x2116
 1072 0071 0C       		.uleb128 0xc
 1073 0072 01       		.uleb128 0x1
 1074 0073 13       		.uleb128 0x13
 1075 0074 00       		.byte	0
 1076 0075 00       		.byte	0
 1077 0076 0A       		.uleb128 0xa
 1078 0077 34       		.uleb128 0x34
 1079 0078 00       		.byte	0
 1080 0079 03       		.uleb128 0x3
 1081 007a 0E       		.uleb128 0xe
 1082 007b 3A       		.uleb128 0x3a
 1083 007c 0B       		.uleb128 0xb
 1084 007d 3B       		.uleb128 0x3b
 1085 007e 0B       		.uleb128 0xb
 1086 007f 49       		.uleb128 0x49
 1087 0080 13       		.uleb128 0x13
 1088 0081 02       		.uleb128 0x2
 1089 0082 0A       		.uleb128 0xa
 1090 0083 00       		.byte	0
 1091 0084 00       		.byte	0
 1092 0085 0B       		.uleb128 0xb
 1093 0086 34       		.uleb128 0x34
 1094 0087 00       		.byte	0
 1095 0088 03       		.uleb128 0x3
 1096 0089 0E       		.uleb128 0xe
 1097 008a 3A       		.uleb128 0x3a
 1098 008b 0B       		.uleb128 0xb
 1099 008c 3B       		.uleb128 0x3b
 1100 008d 0B       		.uleb128 0xb
 1101 008e 49       		.uleb128 0x49
 1102 008f 13       		.uleb128 0x13
 1103 0090 3F       		.uleb128 0x3f
 1104 0091 0C       		.uleb128 0xc
 1105 0092 3C       		.uleb128 0x3c
 1106 0093 0C       		.uleb128 0xc
 1107 0094 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 30


 1108 0095 00       		.byte	0
 1109 0096 00       		.byte	0
 1110              		.section	.debug_loc,"",%progbits
 1111              	.Ldebug_loc0:
 1112              	.LLST0:
 1113 0000 00000000 		.4byte	.LFB0
 1114 0004 02000000 		.4byte	.LCFI0
 1115 0008 0200     		.2byte	0x2
 1116 000a 7D       		.byte	0x7d
 1117 000b 00       		.sleb128 0
 1118 000c 02000000 		.4byte	.LCFI0
 1119 0010 04000000 		.4byte	.LCFI1
 1120 0014 0200     		.2byte	0x2
 1121 0016 7D       		.byte	0x7d
 1122 0017 08       		.sleb128 8
 1123 0018 04000000 		.4byte	.LCFI1
 1124 001c 06000000 		.4byte	.LCFI2
 1125 0020 0200     		.2byte	0x2
 1126 0022 7D       		.byte	0x7d
 1127 0023 28       		.sleb128 40
 1128 0024 06000000 		.4byte	.LCFI2
 1129 0028 58040000 		.4byte	.LFE0
 1130 002c 0200     		.2byte	0x2
 1131 002e 77       		.byte	0x77
 1132 002f 28       		.sleb128 40
 1133 0030 00000000 		.4byte	0
 1134 0034 00000000 		.4byte	0
 1135              		.section	.debug_aranges,"",%progbits
 1136 0000 1C000000 		.4byte	0x1c
 1137 0004 0200     		.2byte	0x2
 1138 0006 00000000 		.4byte	.Ldebug_info0
 1139 000a 04       		.byte	0x4
 1140 000b 00       		.byte	0
 1141 000c 0000     		.2byte	0
 1142 000e 0000     		.2byte	0
 1143 0010 00000000 		.4byte	.LFB0
 1144 0014 58040000 		.4byte	.LFE0-.LFB0
 1145 0018 00000000 		.4byte	0
 1146 001c 00000000 		.4byte	0
 1147              		.section	.debug_ranges,"",%progbits
 1148              	.Ldebug_ranges0:
 1149 0000 00000000 		.4byte	.LFB0
 1150 0004 58040000 		.4byte	.LFE0
 1151 0008 00000000 		.4byte	0
 1152 000c 00000000 		.4byte	0
 1153              		.section	.debug_line,"",%progbits
 1154              	.Ldebug_line0:
 1155 0000 38010000 		.section	.debug_str,"MS",%progbits,1
 1155      02007200 
 1155      00000201 
 1155      FB0E0D00 
 1155      01010101 
 1156              	.LASF15:
 1157 0000 72656733 		.ascii	"reg32\000"
 1157      3200
 1158              	.LASF27:
 1159 0006 455A4932 		.ascii	"EZI2C_curStatus\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 31


 1159      435F6375 
 1159      72537461 
 1159      74757300 
 1160              	.LASF30:
 1161 0016 455A4932 		.ascii	"EZI2C_bufSizeBuf1\000"
 1161      435F6275 
 1161      6653697A 
 1161      65427566 
 1161      3100
 1162              	.LASF28:
 1163 0028 455A4932 		.ascii	"EZI2C_fsmState\000"
 1163      435F6673 
 1163      6D537461 
 1163      746500
 1164              	.LASF3:
 1165 0037 73686F72 		.ascii	"short unsigned int\000"
 1165      7420756E 
 1165      7369676E 
 1165      65642069 
 1165      6E7400
 1166              	.LASF25:
 1167 004a 6C6F6349 		.ascii	"locIntrSlave\000"
 1167      6E747253 
 1167      6C617665 
 1167      00
 1168              	.LASF21:
 1169 0057 656E6454 		.ascii	"endTransfer\000"
 1169      72616E73 
 1169      66657200 
 1170              	.LASF23:
 1171 0063 6C6F6342 		.ascii	"locByte\000"
 1171      79746500 
 1172              	.LASF12:
 1173 006b 666C6F61 		.ascii	"float\000"
 1173      7400
 1174              	.LASF19:
 1175 0071 6C6F6349 		.ascii	"locIndex\000"
 1175      6E646578 
 1175      00
 1176              	.LASF1:
 1177 007a 756E7369 		.ascii	"unsigned char\000"
 1177      676E6564 
 1177      20636861 
 1177      7200
 1178              	.LASF20:
 1179 0088 6C6F6353 		.ascii	"locStatus\000"
 1179      74617475 
 1179      7300
 1180              	.LASF5:
 1181 0092 6C6F6E67 		.ascii	"long unsigned int\000"
 1181      20756E73 
 1181      69676E65 
 1181      6420696E 
 1181      7400
 1182              	.LASF9:
 1183 00a4 75696E74 		.ascii	"uint8\000"
 1183      3800
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 32


 1184              	.LASF26:
 1185 00aa 455A4932 		.ascii	"EZI2C_customIntrHandler\000"
 1185      435F6375 
 1185      73746F6D 
 1185      496E7472 
 1185      48616E64 
 1186              	.LASF33:
 1187 00c2 455A4932 		.ascii	"EZI2C_indexBuf1\000"
 1187      435F696E 
 1187      64657842 
 1187      75663100 
 1188              	.LASF13:
 1189 00d2 646F7562 		.ascii	"double\000"
 1189      6C6500
 1190              	.LASF10:
 1191 00d9 75696E74 		.ascii	"uint16\000"
 1191      313600
 1192              	.LASF11:
 1193 00e0 75696E74 		.ascii	"uint32\000"
 1193      333200
 1194              	.LASF31:
 1195 00e7 455A4932 		.ascii	"EZI2C_protectBuf1\000"
 1195      435F7072 
 1195      6F746563 
 1195      74427566 
 1195      3100
 1196              	.LASF8:
 1197 00f9 756E7369 		.ascii	"unsigned int\000"
 1197      676E6564 
 1197      20696E74 
 1197      00
 1198              	.LASF18:
 1199 0106 6C6F6342 		.ascii	"locBufSize\000"
 1199      75665369 
 1199      7A6500
 1200              	.LASF22:
 1201 0111 6669666F 		.ascii	"fifoIndex\000"
 1201      496E6465 
 1201      7800
 1202              	.LASF7:
 1203 011b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1203      206C6F6E 
 1203      6720756E 
 1203      7369676E 
 1203      65642069 
 1204              	.LASF16:
 1205 0132 63796973 		.ascii	"cyisraddress\000"
 1205      72616464 
 1205      72657373 
 1205      00
 1206              	.LASF17:
 1207 013f 73697A65 		.ascii	"sizetype\000"
 1207      74797065 
 1207      00
 1208              	.LASF6:
 1209 0148 6C6F6E67 		.ascii	"long long int\000"
 1209      206C6F6E 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 33


 1209      6720696E 
 1209      7400
 1210              	.LASF35:
 1211 0156 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_INT.c\000"
 1211      6E657261 
 1211      7465645F 
 1211      536F7572 
 1211      63655C50 
 1212              	.LASF14:
 1213 0181 63686172 		.ascii	"char\000"
 1213      00
 1214              	.LASF29:
 1215 0186 455A4932 		.ascii	"EZI2C_dataBuffer1\000"
 1215      435F6461 
 1215      74614275 
 1215      66666572 
 1215      3100
 1216              	.LASF36:
 1217 0198 433A5C70 		.ascii	"C:\\perforce\\gjl_work\\apps\\CYSC\\Cypress_PSoC_Ac"
 1217      6572666F 
 1217      7263655C 
 1217      676A6C5F 
 1217      776F726B 
 1218 01c6 6164656D 		.ascii	"ademy\\101_basic\\Projects\\Simon_Rev03\\Simon_Slav"
 1218      795C3130 
 1218      315F6261 
 1218      7369635C 
 1218      50726F6A 
 1219 01f5 655F5069 		.ascii	"e_Pioneer\\Simon_Slave_Pioneer.cydsn\000"
 1219      6F6E6565 
 1219      725C5369 
 1219      6D6F6E5F 
 1219      536C6176 
 1220              	.LASF2:
 1221 0219 73686F72 		.ascii	"short int\000"
 1221      7420696E 
 1221      7400
 1222              	.LASF32:
 1223 0223 455A4932 		.ascii	"EZI2C_offsetBuf1\000"
 1223      435F6F66 
 1223      66736574 
 1223      42756631 
 1223      00
 1224              	.LASF34:
 1225 0234 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1225      4320342E 
 1225      372E3320 
 1225      32303133 
 1225      30333132 
 1226 0267 616E6368 		.ascii	"anch revision 196615]\000"
 1226      20726576 
 1226      6973696F 
 1226      6E203139 
 1226      36363135 
 1227              	.LASF24:
 1228 027d 6C6F6349 		.ascii	"locIntrCause\000"
 1228      6E747243 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccr6Fej7.s 			page 34


 1228      61757365 
 1228      00
 1229              	.LASF4:
 1230 028a 6C6F6E67 		.ascii	"long int\000"
 1230      20696E74 
 1230      00
 1231              	.LASF0:
 1232 0293 7369676E 		.ascii	"signed char\000"
 1232      65642063 
 1232      68617200 
 1233              	.LASF37:
 1234 029f 455A4932 		.ascii	"EZI2C_EZI2C_STRETCH_ISR\000"
 1234      435F455A 
 1234      4932435F 
 1234      53545245 
 1234      5443485F 
 1235              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
