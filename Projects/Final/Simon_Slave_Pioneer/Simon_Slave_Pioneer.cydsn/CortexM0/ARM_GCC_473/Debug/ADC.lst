ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_initVar
  18              		.bss
  19              		.type	ADC_initVar, %object
  20              		.size	ADC_initVar, 1
  21              	ADC_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_offset,2,4
  24              		.comm	ADC_countsPer10Volt,4,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_channelsConfig, %object
  28              		.size	ADC_channelsConfig, 4
  29              	ADC_channelsConfig:
  30 0000 00020000 		.word	512
  31              		.section	.text.ADC_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_Start, %function
  37              	ADC_Start:
  38              	.LFB0:
  39              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "CyLib.h"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 2


  19:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** 
  22:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  23:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  24:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  25:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  27:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** 
  30:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  31:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  32:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  33:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  34:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000200u };
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** 
  37:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  38:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  39:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  40:.\Generated_Source\PSoC4/ADC.c **** *
  41:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  42:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  43:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  44:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  45:.\Generated_Source\PSoC4/ADC.c **** *
  46:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  47:.\Generated_Source\PSoC4/ADC.c **** *  None.
  48:.\Generated_Source\PSoC4/ADC.c **** *
  49:.\Generated_Source\PSoC4/ADC.c **** * Return:
  50:.\Generated_Source\PSoC4/ADC.c **** *  None.
  51:.\Generated_Source\PSoC4/ADC.c **** *
  52:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  53:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  54:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  55:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  56:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  57:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  58:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  59:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  61:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  62:.\Generated_Source\PSoC4/ADC.c **** *
  63:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  64:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  65:.\Generated_Source\PSoC4/ADC.c **** {
  40              		.loc 1 65 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 00AF     		add	r7, sp, #0
  48              	.LCFI1:
  49              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 3


  66:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  67:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  50              		.loc 1 67 0
  51 0004 064B     		ldr	r3, .L3
  52 0006 1B78     		ldrb	r3, [r3]
  53 0008 002B     		cmp	r3, #0
  54 000a 04D1     		bne	.L2
  68:.\Generated_Source\PSoC4/ADC.c ****     {
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  55              		.loc 1 69 0
  56 000c FFF7FEFF 		bl	ADC_Init
  70:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  57              		.loc 1 70 0
  58 0010 034B     		ldr	r3, .L3
  59 0012 0122     		mov	r2, #1
  60 0014 1A70     		strb	r2, [r3]
  61              	.L2:
  71:.\Generated_Source\PSoC4/ADC.c ****     }
  72:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  62              		.loc 1 72 0
  63 0016 FFF7FEFF 		bl	ADC_Enable
  73:.\Generated_Source\PSoC4/ADC.c **** }
  64              		.loc 1 73 0
  65 001a BD46     		mov	sp, r7
  66              		@ sp needed for prologue
  67 001c 80BD     		pop	{r7, pc}
  68              	.L4:
  69 001e C046     		.align	2
  70              	.L3:
  71 0020 00000000 		.word	ADC_initVar
  72              		.cfi_endproc
  73              	.LFE0:
  74              		.size	ADC_Start, .-ADC_Start
  75              		.global	__aeabi_idiv
  76              		.section	.text.ADC_Init,"ax",%progbits
  77              		.align	2
  78              		.global	ADC_Init
  79              		.code	16
  80              		.thumb_func
  81              		.type	ADC_Init, %function
  82              	ADC_Init:
  83              	.LFB1:
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** 
  76:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  77:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  78:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  79:.\Generated_Source\PSoC4/ADC.c **** *
  80:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  81:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  82:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  83:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  84:.\Generated_Source\PSoC4/ADC.c **** *
  85:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  86:.\Generated_Source\PSoC4/ADC.c **** *  None.
  87:.\Generated_Source\PSoC4/ADC.c **** *
  88:.\Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 4


  89:.\Generated_Source\PSoC4/ADC.c **** *  None.
  90:.\Generated_Source\PSoC4/ADC.c **** *
  91:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  92:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  93:.\Generated_Source\PSoC4/ADC.c **** *
  94:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  96:.\Generated_Source\PSoC4/ADC.c **** {
  84              		.loc 1 96 0
  85              		.cfi_startproc
  86 0000 90B5     		push	{r4, r7, lr}
  87              	.LCFI2:
  88              		.cfi_def_cfa_offset 12
  89              		.cfi_offset 4, -12
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 85B0     		sub	sp, sp, #20
  93              	.LCFI3:
  94              		.cfi_def_cfa_offset 32
  95 0004 00AF     		add	r7, sp, #0
  96              	.LCFI4:
  97              		.cfi_def_cfa_register 7
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  98:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  99:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
 100:.\Generated_Source\PSoC4/ADC.c **** 
 101:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 102:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 103:.\Generated_Source\PSoC4/ADC.c ****         {
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 105:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 106:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 107:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 108:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 109:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 110:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 111:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 112:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 113:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 114:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 115:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 116:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 117:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 118:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 119:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 120:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 121:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 122:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 123:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 124:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 125:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 126:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 127:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 128:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 129:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 130:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 131:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 5


 132:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 133:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 134:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 135:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 136:.\Generated_Source\PSoC4/ADC.c ****         };
 137:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 138:.\Generated_Source\PSoC4/ADC.c **** 
 139:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 140:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 141:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  98              		.loc 1 141 0
  99 0006 0E20     		mov	r0, #14
 100 0008 0221     		mov	r1, #2
 101 000a FFF7FEFF 		bl	CyIntSetPriority
 142:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 102              		.loc 1 142 0
 103 000e 514B     		ldr	r3, .L14
 104 0010 0E20     		mov	r0, #14
 105 0012 191C     		mov	r1, r3
 106 0014 FFF7FEFF 		bl	CyIntSetVector
 143:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 144:.\Generated_Source\PSoC4/ADC.c **** 
 145:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 107              		.loc 1 146 0
 108 0018 4F4B     		ldr	r3, .L14+4
 109 001a 0122     		mov	r2, #1
 110 001c 1A60     		str	r2, [r3]
 147:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG = ADC_DEFAULT_CTRL_REG_CFG;
 111              		.loc 1 147 0
 112 001e 4F4B     		ldr	r3, .L14+8
 113 0020 4F4A     		ldr	r2, .L14+12
 114 0022 1A60     		str	r2, [r3]
 148:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 115              		.loc 1 148 0
 116 0024 4F4B     		ldr	r3, .L14+16
 117 0026 504A     		ldr	r2, .L14+20
 118 0028 1A60     		str	r2, [r3]
 149:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 119              		.loc 1 149 0
 120 002a 504B     		ldr	r3, .L14+24
 121 002c 504A     		ldr	r2, .L14+28
 122 002e 1A60     		str	r2, [r3]
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 123              		.loc 1 150 0
 124 0030 504B     		ldr	r3, .L14+32
 125 0032 0022     		mov	r2, #0
 126 0034 1A60     		str	r2, [r3]
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 127              		.loc 1 151 0
 128 0036 504B     		ldr	r3, .L14+36
 129 0038 504A     		ldr	r2, .L14+40
 130 003a 1A60     		str	r2, [r3]
 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 131              		.loc 1 152 0
 132 003c 504B     		ldr	r3, .L14+44
 133 003e 4F4A     		ldr	r2, .L14+40
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 6


 134 0040 1A60     		str	r2, [r3]
 153:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 154:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 155:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0; 
 156:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 157:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 158:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0; 
 159:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 160:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */    
 161:.\Generated_Source\PSoC4/ADC.c **** 
 162:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 135              		.loc 1 162 0
 136 0042 504B     		ldr	r3, .L14+48
 137 0044 0022     		mov	r2, #0
 138 0046 1A60     		str	r2, [r3]
 163:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 139              		.loc 1 163 0
 140 0048 4F4B     		ldr	r3, .L14+52
 141 004a 0022     		mov	r2, #0
 142 004c 1A60     		str	r2, [r3]
 164:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 143              		.loc 1 164 0
 144 004e 4F4B     		ldr	r3, .L14+56
 145 0050 0122     		mov	r2, #1
 146 0052 1A60     		str	r2, [r3]
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 147              		.loc 1 165 0
 148 0054 4E4B     		ldr	r3, .L14+60
 149 0056 0222     		mov	r2, #2
 150 0058 1A60     		str	r2, [r3]
 166:.\Generated_Source\PSoC4/ADC.c ****     
 167:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 168:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 151              		.loc 1 168 0
 152 005a 4E4B     		ldr	r3, .L14+64
 153 005c 1B68     		ldr	r3, [r3]
 154 005e 7B60     		str	r3, [r7, #4]
 169:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 170:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= (uint32)~ADC_DCEN;
 171:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 172:.\Generated_Source\PSoC4/ADC.c ****     #else  /* clock speed < 9 Mhz */  
 173:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal |= ADC_DLY_INC;
 155              		.loc 1 173 0
 156 0060 7B68     		ldr	r3, [r7, #4]
 157 0062 0122     		mov	r2, #1
 158 0064 1343     		orr	r3, r2
 159 0066 7B60     		str	r3, [r7, #4]
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif /* clock speed > 9 Mhz */
 175:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 160              		.loc 1 175 0
 161 0068 4A4B     		ldr	r3, .L14+64
 162 006a 7A68     		ldr	r2, [r7, #4]
 163 006c 1A60     		str	r2, [r3]
 176:.\Generated_Source\PSoC4/ADC.c ****     
 177:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 178:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 164              		.loc 1 178 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 7


 165 006e 4A4B     		ldr	r3, .L14+68
 166 0070 0222     		mov	r2, #2
 167 0072 1A60     		str	r2, [r3]
 179:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 180:.\Generated_Source\PSoC4/ADC.c **** 
 181:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 168              		.loc 1 181 0
 169 0074 0023     		mov	r3, #0
 170 0076 FB60     		str	r3, [r7, #12]
 171 0078 66E0     		b	.L6
 172              	.L13:
 182:.\Generated_Source\PSoC4/ADC.c ****     {
 183:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 173              		.loc 1 183 0
 174 007a 484B     		ldr	r3, .L14+72
 175 007c FA68     		ldr	r2, [r7, #12]
 176 007e 9200     		lsl	r2, r2, #2
 177 0080 D258     		ldr	r2, [r2, r3]
 178 0082 DC23     		mov	r3, #220
 179 0084 9B01     		lsl	r3, r3, #6
 180 0086 1340     		and	r3, r2
 181 0088 7B60     		str	r3, [r7, #4]
 184:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 185:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 186:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 187:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is wounded to 10-bit then the SUB_RESOLUTION bit 
 188:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit 
 189:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 190:.\Generated_Source\PSoC4/ADC.c ****         */
 191:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 192:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 193:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 195:.\Generated_Source\PSoC4/ADC.c **** 
 196:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 197:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 198:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 199:.\Generated_Source\PSoC4/ADC.c ****         {
 200:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 182              		.loc 1 200 0
 183 008a FB68     		ldr	r3, [r7, #12]
 184 008c 9B00     		lsl	r3, r3, #2
 185 008e 444A     		ldr	r2, .L14+76
 186 0090 9B18     		add	r3, r3, r2
 187 0092 7A68     		ldr	r2, [r7, #4]
 188 0094 1A60     		str	r2, [r3]
 201:.\Generated_Source\PSoC4/ADC.c **** 
 202:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 189              		.loc 1 202 0
 190 0096 414B     		ldr	r3, .L14+72
 191 0098 FA68     		ldr	r2, [r7, #12]
 192 009a 9200     		lsl	r2, r2, #2
 193 009c D258     		ldr	r2, [r2, r3]
 194 009e 0123     		mov	r3, #1
 195 00a0 1340     		and	r3, r2
 196 00a2 0AD0     		beq	.L7
 203:.\Generated_Source\PSoC4/ADC.c ****             {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 8


 204:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 197              		.loc 1 204 0
 198 00a4 374B     		ldr	r3, .L14+48
 199 00a6 374A     		ldr	r2, .L14+48
 200 00a8 1168     		ldr	r1, [r2]
 201 00aa FA68     		ldr	r2, [r7, #12]
 202 00ac 0120     		mov	r0, #1
 203 00ae 041C     		mov	r4, r0
 204 00b0 9440     		lsl	r4, r4, r2
 205 00b2 221C     		mov	r2, r4
 206 00b4 92B2     		uxth	r2, r2
 207 00b6 0A43     		orr	r2, r1
 208 00b8 1A60     		str	r2, [r3]
 209              	.L7:
 205:.\Generated_Source\PSoC4/ADC.c ****             }
 206:.\Generated_Source\PSoC4/ADC.c **** 
 207:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 210              		.loc 1 207 0
 211 00ba 384B     		ldr	r3, .L14+72
 212 00bc FA68     		ldr	r2, [r7, #12]
 213 00be 9200     		lsl	r2, r2, #2
 214 00c0 D258     		ldr	r2, [r2, r3]
 215 00c2 0223     		mov	r3, #2
 216 00c4 1340     		and	r3, r2
 217 00c6 0AD0     		beq	.L8
 208:.\Generated_Source\PSoC4/ADC.c ****             {
 209:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 218              		.loc 1 209 0
 219 00c8 2F4B     		ldr	r3, .L14+52
 220 00ca 2F4A     		ldr	r2, .L14+52
 221 00cc 1168     		ldr	r1, [r2]
 222 00ce FA68     		ldr	r2, [r7, #12]
 223 00d0 0120     		mov	r0, #1
 224 00d2 041C     		mov	r4, r0
 225 00d4 9440     		lsl	r4, r4, r2
 226 00d6 221C     		mov	r2, r4
 227 00d8 92B2     		uxth	r2, r2
 228 00da 0A43     		orr	r2, r1
 229 00dc 1A60     		str	r2, [r3]
 230              	.L8:
 210:.\Generated_Source\PSoC4/ADC.c ****             }
 211:.\Generated_Source\PSoC4/ADC.c ****         }
 212:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 213:.\Generated_Source\PSoC4/ADC.c ****             else
 214:.\Generated_Source\PSoC4/ADC.c ****             {
 215:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 216:.\Generated_Source\PSoC4/ADC.c **** 
 217:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 218:.\Generated_Source\PSoC4/ADC.c ****                 {
 219:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 220:.\Generated_Source\PSoC4/ADC.c ****                 }
 221:.\Generated_Source\PSoC4/ADC.c **** 
 222:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 223:.\Generated_Source\PSoC4/ADC.c ****                 {
 224:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 225:.\Generated_Source\PSoC4/ADC.c ****                 }
 226:.\Generated_Source\PSoC4/ADC.c ****             }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 9


 227:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 228:.\Generated_Source\PSoC4/ADC.c **** 
 229:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 231              		.loc 1 229 0
 232 00de 2F4B     		ldr	r3, .L14+72
 233 00e0 FA68     		ldr	r2, [r7, #12]
 234 00e2 9200     		lsl	r2, r2, #2
 235 00e4 D258     		ldr	r2, [r2, r3]
 236 00e6 8023     		mov	r3, #128
 237 00e8 9B00     		lsl	r3, r3, #2
 238 00ea 1340     		and	r3, r2
 239 00ec 03D0     		beq	.L9
 230:.\Generated_Source\PSoC4/ADC.c ****         {
 231:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 240              		.loc 1 231 0
 241 00ee 8023     		mov	r3, #128
 242 00f0 5B00     		lsl	r3, r3, #1
 243 00f2 BB60     		str	r3, [r7, #8]
 244 00f4 02E0     		b	.L10
 245              	.L9:
 232:.\Generated_Source\PSoC4/ADC.c ****         }
 233:.\Generated_Source\PSoC4/ADC.c ****         else
 234:.\Generated_Source\PSoC4/ADC.c ****         {
 235:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 246              		.loc 1 235 0
 247 00f6 8023     		mov	r3, #128
 248 00f8 5B01     		lsl	r3, r3, #5
 249 00fa BB60     		str	r3, [r7, #8]
 250              	.L10:
 236:.\Generated_Source\PSoC4/ADC.c ****         }
 237:.\Generated_Source\PSoC4/ADC.c **** 
 238:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 251              		.loc 1 238 0
 252 00fc 274B     		ldr	r3, .L14+72
 253 00fe FA68     		ldr	r2, [r7, #12]
 254 0100 9200     		lsl	r2, r2, #2
 255 0102 D258     		ldr	r2, [r2, r3]
 256 0104 8023     		mov	r3, #128
 257 0106 5B00     		lsl	r3, r3, #1
 258 0108 1340     		and	r3, r2
 259 010a 05D1     		bne	.L11
 239:.\Generated_Source\PSoC4/ADC.c ****         {  
 240:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 241:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 242:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 243:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 244:.\Generated_Source\PSoC4/ADC.c ****             #else    
 245:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 260              		.loc 1 245 0
 261 010c 254B     		ldr	r3, .L14+80
 262 010e FA68     		ldr	r2, [r7, #12]
 263 0110 5200     		lsl	r2, r2, #1
 264 0112 0021     		mov	r1, #0
 265 0114 D152     		strh	r1, [r2, r3]
 266 0116 04E0     		b	.L12
 267              	.L11:
 246:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */    
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 10


 247:.\Generated_Source\PSoC4/ADC.c ****         }
 248:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 249:.\Generated_Source\PSoC4/ADC.c ****         {
 250:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 251:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 252:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 253:.\Generated_Source\PSoC4/ADC.c ****             #else    
 254:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 268              		.loc 1 254 0
 269 0118 224B     		ldr	r3, .L14+80
 270 011a FA68     		ldr	r2, [r7, #12]
 271 011c 5200     		lsl	r2, r2, #1
 272 011e 0021     		mov	r1, #0
 273 0120 D152     		strh	r1, [r2, r3]
 274              	.L12:
 255:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */    
 256:.\Generated_Source\PSoC4/ADC.c ****         }
 257:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 258:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) + 
 275              		.loc 1 258 0
 276 0122 BB68     		ldr	r3, [r7, #8]
 277 0124 204A     		ldr	r2, .L14+84
 278 0126 5343     		mul	r3, r2
 279 0128 204A     		ldr	r2, .L14+88
 280 012a 9B18     		add	r3, r3, r2
 259:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 281              		.loc 1 259 0
 282 012c 181C     		mov	r0, r3
 283 012e 2049     		ldr	r1, .L14+92
 284 0130 FFF7FEFF 		bl	__aeabi_idiv
 285 0134 031C     		mov	r3, r0
 258:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) + 
 286              		.loc 1 258 0
 287 0136 9BB2     		uxth	r3, r3
 288 0138 19B2     		sxth	r1, r3
 289 013a 1E4B     		ldr	r3, .L14+96
 290 013c FA68     		ldr	r2, [r7, #12]
 291 013e 9200     		lsl	r2, r2, #2
 292 0140 D150     		str	r1, [r2, r3]
 181:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 293              		.loc 1 181 0
 294 0142 FB68     		ldr	r3, [r7, #12]
 295 0144 0133     		add	r3, r3, #1
 296 0146 FB60     		str	r3, [r7, #12]
 297              	.L6:
 181:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 298              		.loc 1 181 0 is_stmt 0 discriminator 1
 299 0148 FB68     		ldr	r3, [r7, #12]
 300 014a 002B     		cmp	r3, #0
 301 014c 95D0     		beq	.L13
 260:.\Generated_Source\PSoC4/ADC.c ****     }
 261:.\Generated_Source\PSoC4/ADC.c **** }
 302              		.loc 1 261 0 is_stmt 1
 303 014e BD46     		mov	sp, r7
 304 0150 05B0     		add	sp, sp, #20
 305              		@ sp needed for prologue
 306 0152 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 11


 307              	.L15:
 308              		.align	2
 309              	.L14:
 310 0154 00000000 		.word	ADC_ISR
 311 0158 20001A40 		.word	1075445792
 312 015c 00001A40 		.word	1075445760
 313 0160 600E0051 		.word	1358958176
 314 0164 04001A40 		.word	1075445764
 315 0168 88000080 		.word	-2147483512
 316 016c 18001A40 		.word	1075445784
 317 0170 0000FF07 		.word	134152192
 318 0174 1C001A40 		.word	1075445788
 319 0178 10001A40 		.word	1075445776
 320 017c 04000400 		.word	262148
 321 0180 14001A40 		.word	1075445780
 322 0184 28021A40 		.word	1075446312
 323 0188 38021A40 		.word	1075446328
 324 018c 18021A40 		.word	1075446296
 325 0190 000F1A40 		.word	1075449600
 326 0194 30001A40 		.word	1075445808
 327 0198 040F1A40 		.word	1075449604
 328 019c 00000000 		.word	ADC_channelsConfig
 329 01a0 80001A40 		.word	1075445888
 330 01a4 00000000 		.word	ADC_offset
 331 01a8 10270000 		.word	10000
 332 01ac 72060000 		.word	1650
 333 01b0 E40C0000 		.word	3300
 334 01b4 00000000 		.word	ADC_countsPer10Volt
 335              		.cfi_endproc
 336              	.LFE1:
 337              		.size	ADC_Init, .-ADC_Init
 338              		.section	.text.ADC_Enable,"ax",%progbits
 339              		.align	2
 340              		.global	ADC_Enable
 341              		.code	16
 342              		.thumb_func
 343              		.type	ADC_Enable, %function
 344              	ADC_Enable:
 345              	.LFB2:
 262:.\Generated_Source\PSoC4/ADC.c **** 
 263:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 264:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 265:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 266:.\Generated_Source\PSoC4/ADC.c **** *
 267:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 268:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 269:.\Generated_Source\PSoC4/ADC.c **** *
 270:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 271:.\Generated_Source\PSoC4/ADC.c **** *  None.
 272:.\Generated_Source\PSoC4/ADC.c **** *
 273:.\Generated_Source\PSoC4/ADC.c **** * Return:
 274:.\Generated_Source\PSoC4/ADC.c **** *  None.
 275:.\Generated_Source\PSoC4/ADC.c **** *
 276:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 277:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 278:.\Generated_Source\PSoC4/ADC.c **** {
 346              		.loc 1 278 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 12


 347              		.cfi_startproc
 348 0000 80B5     		push	{r7, lr}
 349              	.LCFI5:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 00AF     		add	r7, sp, #0
 354              	.LCFI6:
 355              		.cfi_def_cfa_register 7
 279:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_ENABLE;
 356              		.loc 1 279 0
 357 0004 054B     		ldr	r3, .L17
 358 0006 054A     		ldr	r2, .L17
 359 0008 1268     		ldr	r2, [r2]
 360 000a 8021     		mov	r1, #128
 361 000c 0906     		lsl	r1, r1, #24
 362 000e 0A43     		orr	r2, r1
 363 0010 1A60     		str	r2, [r3]
 280:.\Generated_Source\PSoC4/ADC.c ****     /* The block is ready to use 10 us after the enable signal is set high. */
 281:.\Generated_Source\PSoC4/ADC.c ****     CyDelayUs(ADC_10US_DELAY);
 364              		.loc 1 281 0
 365 0012 0A20     		mov	r0, #10
 366 0014 FFF7FEFF 		bl	CyDelayUs
 282:.\Generated_Source\PSoC4/ADC.c **** }
 367              		.loc 1 282 0
 368 0018 BD46     		mov	sp, r7
 369              		@ sp needed for prologue
 370 001a 80BD     		pop	{r7, pc}
 371              	.L18:
 372              		.align	2
 373              	.L17:
 374 001c 00001A40 		.word	1075445760
 375              		.cfi_endproc
 376              	.LFE2:
 377              		.size	ADC_Enable, .-ADC_Enable
 378              		.section	.text.ADC_Stop,"ax",%progbits
 379              		.align	2
 380              		.global	ADC_Stop
 381              		.code	16
 382              		.thumb_func
 383              		.type	ADC_Stop, %function
 384              	ADC_Stop:
 385              	.LFB3:
 283:.\Generated_Source\PSoC4/ADC.c **** 
 284:.\Generated_Source\PSoC4/ADC.c **** 
 285:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 287:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/ADC.c **** *
 289:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 290:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 291:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 292:.\Generated_Source\PSoC4/ADC.c **** *
 293:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 294:.\Generated_Source\PSoC4/ADC.c **** *  None.
 295:.\Generated_Source\PSoC4/ADC.c **** *
 296:.\Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 13


 297:.\Generated_Source\PSoC4/ADC.c **** *  None.
 298:.\Generated_Source\PSoC4/ADC.c **** *
 299:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 300:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 301:.\Generated_Source\PSoC4/ADC.c **** {
 386              		.loc 1 301 0
 387              		.cfi_startproc
 388 0000 80B5     		push	{r7, lr}
 389              	.LCFI7:
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 00AF     		add	r7, sp, #0
 394              	.LCFI8:
 395              		.cfi_def_cfa_register 7
 302:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 396              		.loc 1 302 0
 397 0004 034B     		ldr	r3, .L20
 398 0006 034A     		ldr	r2, .L20
 399 0008 1268     		ldr	r2, [r2]
 400 000a 5200     		lsl	r2, r2, #1
 401 000c 5208     		lsr	r2, r2, #1
 402 000e 1A60     		str	r2, [r3]
 303:.\Generated_Source\PSoC4/ADC.c **** }
 403              		.loc 1 303 0
 404 0010 BD46     		mov	sp, r7
 405              		@ sp needed for prologue
 406 0012 80BD     		pop	{r7, pc}
 407              	.L21:
 408              		.align	2
 409              	.L20:
 410 0014 00001A40 		.word	1075445760
 411              		.cfi_endproc
 412              	.LFE3:
 413              		.size	ADC_Stop, .-ADC_Stop
 414              		.section	.text.ADC_StartConvert,"ax",%progbits
 415              		.align	2
 416              		.global	ADC_StartConvert
 417              		.code	16
 418              		.thumb_func
 419              		.type	ADC_StartConvert, %function
 420              	ADC_StartConvert:
 421              	.LFB4:
 304:.\Generated_Source\PSoC4/ADC.c **** 
 305:.\Generated_Source\PSoC4/ADC.c **** 
 306:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 308:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/ADC.c **** *
 310:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 311:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 312:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 313:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 314:.\Generated_Source\PSoC4/ADC.c **** *
 315:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 316:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 317:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 14


 318:.\Generated_Source\PSoC4/ADC.c **** *
 319:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 320:.\Generated_Source\PSoC4/ADC.c **** *  None.
 321:.\Generated_Source\PSoC4/ADC.c **** *
 322:.\Generated_Source\PSoC4/ADC.c **** * Return:
 323:.\Generated_Source\PSoC4/ADC.c **** *  None.
 324:.\Generated_Source\PSoC4/ADC.c **** *
 325:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 327:.\Generated_Source\PSoC4/ADC.c **** {
 422              		.loc 1 327 0
 423              		.cfi_startproc
 424 0000 80B5     		push	{r7, lr}
 425              	.LCFI9:
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 00AF     		add	r7, sp, #0
 430              	.LCFI10:
 431              		.cfi_def_cfa_register 7
 328:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 329:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 432              		.loc 1 329 0
 433 0004 044B     		ldr	r3, .L23
 434 0006 044A     		ldr	r2, .L23
 435 0008 1268     		ldr	r2, [r2]
 436 000a 8021     		mov	r1, #128
 437 000c 4902     		lsl	r1, r1, #9
 438 000e 0A43     		orr	r2, r1
 439 0010 1A60     		str	r2, [r3]
 330:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 331:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 332:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 333:.\Generated_Source\PSoC4/ADC.c **** 
 334:.\Generated_Source\PSoC4/ADC.c **** }
 440              		.loc 1 334 0
 441 0012 BD46     		mov	sp, r7
 442              		@ sp needed for prologue
 443 0014 80BD     		pop	{r7, pc}
 444              	.L24:
 445 0016 C046     		.align	2
 446              	.L23:
 447 0018 04001A40 		.word	1075445764
 448              		.cfi_endproc
 449              	.LFE4:
 450              		.size	ADC_StartConvert, .-ADC_StartConvert
 451              		.section	.text.ADC_StopConvert,"ax",%progbits
 452              		.align	2
 453              		.global	ADC_StopConvert
 454              		.code	16
 455              		.thumb_func
 456              		.type	ADC_StopConvert, %function
 457              	ADC_StopConvert:
 458              	.LFB5:
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c **** 
 337:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 15


 338:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 339:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 340:.\Generated_Source\PSoC4/ADC.c **** *
 341:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 342:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 343:.\Generated_Source\PSoC4/ADC.c **** *
 344:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 345:.\Generated_Source\PSoC4/ADC.c **** *  None.
 346:.\Generated_Source\PSoC4/ADC.c **** *
 347:.\Generated_Source\PSoC4/ADC.c **** * Return:
 348:.\Generated_Source\PSoC4/ADC.c **** *  None.
 349:.\Generated_Source\PSoC4/ADC.c **** *
 350:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 351:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 352:.\Generated_Source\PSoC4/ADC.c **** {
 459              		.loc 1 352 0
 460              		.cfi_startproc
 461 0000 80B5     		push	{r7, lr}
 462              	.LCFI11:
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 00AF     		add	r7, sp, #0
 467              	.LCFI12:
 468              		.cfi_def_cfa_register 7
 353:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 354:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 469              		.loc 1 354 0
 470 0004 034B     		ldr	r3, .L26
 471 0006 034A     		ldr	r2, .L26
 472 0008 1168     		ldr	r1, [r2]
 473 000a 034A     		ldr	r2, .L26+4
 474 000c 0A40     		and	r2, r1
 475 000e 1A60     		str	r2, [r3]
 355:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 356:.\Generated_Source\PSoC4/ADC.c **** }
 476              		.loc 1 356 0
 477 0010 BD46     		mov	sp, r7
 478              		@ sp needed for prologue
 479 0012 80BD     		pop	{r7, pc}
 480              	.L27:
 481              		.align	2
 482              	.L26:
 483 0014 04001A40 		.word	1075445764
 484 0018 FFFFFEFF 		.word	-65537
 485              		.cfi_endproc
 486              	.LFE5:
 487              		.size	ADC_StopConvert, .-ADC_StopConvert
 488              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 489              		.align	2
 490              		.global	ADC_IsEndConversion
 491              		.code	16
 492              		.thumb_func
 493              		.type	ADC_IsEndConversion, %function
 494              	ADC_IsEndConversion:
 495              	.LFB6:
 357:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 16


 358:.\Generated_Source\PSoC4/ADC.c **** 
 359:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 360:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 361:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 362:.\Generated_Source\PSoC4/ADC.c **** *
 363:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 364:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 365:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 366:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 367:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 368:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 369:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 370:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 371:.\Generated_Source\PSoC4/ADC.c **** *
 372:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 373:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 374:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 375:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 376:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 377:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 378:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 382:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 385:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 386:.\Generated_Source\PSoC4/ADC.c **** {
 496              		.loc 1 386 0
 497              		.cfi_startproc
 498 0000 80B5     		push	{r7, lr}
 499              	.LCFI13:
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 7, -8
 502              		.cfi_offset 14, -4
 503 0002 84B0     		sub	sp, sp, #16
 504              	.LCFI14:
 505              		.cfi_def_cfa_offset 24
 506 0004 00AF     		add	r7, sp, #0
 507              	.LCFI15:
 508              		.cfi_def_cfa_register 7
 509 0006 7860     		str	r0, [r7, #4]
 387:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 510              		.loc 1 387 0
 511 0008 0023     		mov	r3, #0
 512 000a FB60     		str	r3, [r7, #12]
 388:.\Generated_Source\PSoC4/ADC.c **** 
 389:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 513              		.loc 1 389 0
 514 000c 7A68     		ldr	r2, [r7, #4]
 515 000e 0323     		mov	r3, #3
 516 0010 1340     		and	r3, r2
 517 0012 11D0     		beq	.L29
 518              	.L31:
 390:.\Generated_Source\PSoC4/ADC.c ****     {
 391:.\Generated_Source\PSoC4/ADC.c ****         do
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 17


 392:.\Generated_Source\PSoC4/ADC.c ****         {
 393:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 519              		.loc 1 393 0 discriminator 1
 520 0014 0B4B     		ldr	r3, .L33
 521 0016 1A68     		ldr	r2, [r3]
 522 0018 0123     		mov	r3, #1
 523 001a 1340     		and	r3, r2
 524 001c FB60     		str	r3, [r7, #12]
 394:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 525              		.loc 1 394 0 discriminator 1
 526 001e FB68     		ldr	r3, [r7, #12]
 527 0020 002B     		cmp	r3, #0
 528 0022 03D1     		bne	.L30
 529 0024 7A68     		ldr	r2, [r7, #4]
 530 0026 0223     		mov	r3, #2
 531 0028 1340     		and	r3, r2
 532 002a F3D1     		bne	.L31
 533              	.L30:
 395:.\Generated_Source\PSoC4/ADC.c **** 
 396:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 534              		.loc 1 396 0
 535 002c FB68     		ldr	r3, [r7, #12]
 536 002e 002B     		cmp	r3, #0
 537 0030 02D0     		beq	.L29
 397:.\Generated_Source\PSoC4/ADC.c ****         {
 398:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 399:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 538              		.loc 1 399 0
 539 0032 044B     		ldr	r3, .L33
 540 0034 0122     		mov	r2, #1
 541 0036 1A60     		str	r2, [r3]
 542              	.L29:
 400:.\Generated_Source\PSoC4/ADC.c ****         }
 401:.\Generated_Source\PSoC4/ADC.c ****     }
 402:.\Generated_Source\PSoC4/ADC.c **** 
 403:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 404:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 405:.\Generated_Source\PSoC4/ADC.c ****         {
 406:.\Generated_Source\PSoC4/ADC.c ****             do
 407:.\Generated_Source\PSoC4/ADC.c ****             {
 408:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 409:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) != 0u) &&
 410:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 411:.\Generated_Source\PSoC4/ADC.c **** 
 412:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 413:.\Generated_Source\PSoC4/ADC.c ****             {
 414:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 415:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 416:.\Generated_Source\PSoC4/ADC.c ****             }
 417:.\Generated_Source\PSoC4/ADC.c ****         }
 418:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 419:.\Generated_Source\PSoC4/ADC.c **** 
 420:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 543              		.loc 1 420 0
 544 0038 FB68     		ldr	r3, [r7, #12]
 421:.\Generated_Source\PSoC4/ADC.c **** }
 545              		.loc 1 421 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 18


 546 003a 181C     		mov	r0, r3
 547 003c BD46     		mov	sp, r7
 548 003e 04B0     		add	sp, sp, #16
 549              		@ sp needed for prologue
 550 0040 80BD     		pop	{r7, pc}
 551              	.L34:
 552 0042 C046     		.align	2
 553              	.L33:
 554 0044 10021A40 		.word	1075446288
 555              		.cfi_endproc
 556              	.LFE6:
 557              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 558              		.section	.text.ADC_GetResult16,"ax",%progbits
 559              		.align	2
 560              		.global	ADC_GetResult16
 561              		.code	16
 562              		.thumb_func
 563              		.type	ADC_GetResult16, %function
 564              	ADC_GetResult16:
 565              	.LFB7:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 430:.\Generated_Source\PSoC4/ADC.c **** *
 431:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 432:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 433:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 434:.\Generated_Source\PSoC4/ADC.c **** *
 435:.\Generated_Source\PSoC4/ADC.c **** * Return:
 436:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 437:.\Generated_Source\PSoC4/ADC.c **** *
 438:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 439:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 440:.\Generated_Source\PSoC4/ADC.c **** {
 566              		.loc 1 440 0
 567              		.cfi_startproc
 568 0000 80B5     		push	{r7, lr}
 569              	.LCFI16:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 84B0     		sub	sp, sp, #16
 574              	.LCFI17:
 575              		.cfi_def_cfa_offset 24
 576 0004 00AF     		add	r7, sp, #0
 577              	.LCFI18:
 578              		.cfi_def_cfa_register 7
 579 0006 7860     		str	r0, [r7, #4]
 441:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 442:.\Generated_Source\PSoC4/ADC.c **** 
 443:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 444:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 19


 580              		.loc 1 444 0
 581 0008 7B68     		ldr	r3, [r7, #4]
 582 000a 002B     		cmp	r3, #0
 583 000c 02D0     		beq	.L36
 584              		.loc 1 444 0 is_stmt 0 discriminator 1
 585 000e 0020     		mov	r0, #0
 586 0010 FFF7FEFF 		bl	CyHalt
 587              	.L36:
 445:.\Generated_Source\PSoC4/ADC.c **** 
 446:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 588              		.loc 1 446 0 is_stmt 1
 589 0014 7B68     		ldr	r3, [r7, #4]
 590 0016 002B     		cmp	r3, #0
 591 0018 08D1     		bne	.L37
 447:.\Generated_Source\PSoC4/ADC.c ****     {
 448:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 592              		.loc 1 448 0
 593 001a 7B68     		ldr	r3, [r7, #4]
 594 001c 9B00     		lsl	r3, r3, #2
 595 001e 084A     		ldr	r2, .L40
 596 0020 9B18     		add	r3, r3, r2
 597 0022 1B68     		ldr	r3, [r3]
 598 0024 1B04     		lsl	r3, r3, #16
 599 0026 1B0C     		lsr	r3, r3, #16
 600 0028 FB60     		str	r3, [r7, #12]
 601 002a 01E0     		b	.L38
 602              	.L37:
 449:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 450:.\Generated_Source\PSoC4/ADC.c ****     }
 451:.\Generated_Source\PSoC4/ADC.c ****     else
 452:.\Generated_Source\PSoC4/ADC.c ****     {
 453:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 454:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 455:.\Generated_Source\PSoC4/ADC.c ****         #else
 456:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 603              		.loc 1 456 0
 604 002c 0023     		mov	r3, #0
 605 002e FB60     		str	r3, [r7, #12]
 606              	.L38:
 457:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 458:.\Generated_Source\PSoC4/ADC.c ****     }
 459:.\Generated_Source\PSoC4/ADC.c **** 
 460:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 607              		.loc 1 460 0
 608 0030 FB68     		ldr	r3, [r7, #12]
 609 0032 9BB2     		uxth	r3, r3
 610 0034 1BB2     		sxth	r3, r3
 461:.\Generated_Source\PSoC4/ADC.c **** }
 611              		.loc 1 461 0
 612 0036 181C     		mov	r0, r3
 613 0038 BD46     		mov	sp, r7
 614 003a 04B0     		add	sp, sp, #16
 615              		@ sp needed for prologue
 616 003c 80BD     		pop	{r7, pc}
 617              	.L41:
 618 003e C046     		.align	2
 619              	.L40:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 20


 620 0040 80011A40 		.word	1075446144
 621              		.cfi_endproc
 622              	.LFE7:
 623              		.size	ADC_GetResult16, .-ADC_GetResult16
 624              		.section	.text.ADC_SetChanMask,"ax",%progbits
 625              		.align	2
 626              		.global	ADC_SetChanMask
 627              		.code	16
 628              		.thumb_func
 629              		.type	ADC_SetChanMask, %function
 630              	ADC_SetChanMask:
 631              	.LFB8:
 462:.\Generated_Source\PSoC4/ADC.c **** 
 463:.\Generated_Source\PSoC4/ADC.c **** 
 464:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 465:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 466:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 467:.\Generated_Source\PSoC4/ADC.c **** *
 468:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 469:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 470:.\Generated_Source\PSoC4/ADC.c **** *
 471:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 472:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 473:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 474:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 475:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 476:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 477:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 478:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 479:.\Generated_Source\PSoC4/ADC.c **** *
 480:.\Generated_Source\PSoC4/ADC.c **** * Return:
 481:.\Generated_Source\PSoC4/ADC.c **** *  None.
 482:.\Generated_Source\PSoC4/ADC.c **** *
 483:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 484:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 485:.\Generated_Source\PSoC4/ADC.c **** {
 632              		.loc 1 485 0
 633              		.cfi_startproc
 634 0000 80B5     		push	{r7, lr}
 635              	.LCFI19:
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 7, -8
 638              		.cfi_offset 14, -4
 639 0002 82B0     		sub	sp, sp, #8
 640              	.LCFI20:
 641              		.cfi_def_cfa_offset 16
 642 0004 00AF     		add	r7, sp, #0
 643              	.LCFI21:
 644              		.cfi_def_cfa_register 7
 645 0006 7860     		str	r0, [r7, #4]
 486:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 646              		.loc 1 486 0
 647 0008 034B     		ldr	r3, .L43
 648 000a 7968     		ldr	r1, [r7, #4]
 649 000c 0122     		mov	r2, #1
 650 000e 0A40     		and	r2, r1
 651 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 21


 487:.\Generated_Source\PSoC4/ADC.c **** }
 652              		.loc 1 487 0
 653 0012 BD46     		mov	sp, r7
 654 0014 02B0     		add	sp, sp, #8
 655              		@ sp needed for prologue
 656 0016 80BD     		pop	{r7, pc}
 657              	.L44:
 658              		.align	2
 659              	.L43:
 660 0018 20001A40 		.word	1075445792
 661              		.cfi_endproc
 662              	.LFE8:
 663              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 664              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 665              		.align	2
 666              		.global	ADC_SetLowLimit
 667              		.code	16
 668              		.thumb_func
 669              		.type	ADC_SetLowLimit, %function
 670              	ADC_SetLowLimit:
 671              	.LFB9:
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 490:.\Generated_Source\PSoC4/ADC.c **** 
 491:.\Generated_Source\PSoC4/ADC.c **** 
 492:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 493:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 494:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 495:.\Generated_Source\PSoC4/ADC.c ****     *
 496:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 497:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 498:.\Generated_Source\PSoC4/ADC.c ****     *
 499:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 500:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 501:.\Generated_Source\PSoC4/ADC.c ****     *
 502:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 503:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 504:.\Generated_Source\PSoC4/ADC.c ****     *
 505:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 506:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 507:.\Generated_Source\PSoC4/ADC.c ****     {
 508:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 509:.\Generated_Source\PSoC4/ADC.c ****     }
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 512:.\Generated_Source\PSoC4/ADC.c **** 
 513:.\Generated_Source\PSoC4/ADC.c **** 
 514:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 515:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 516:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 517:.\Generated_Source\PSoC4/ADC.c **** *
 518:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 519:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 520:.\Generated_Source\PSoC4/ADC.c **** *
 521:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 522:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 523:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 22


 524:.\Generated_Source\PSoC4/ADC.c **** * Return:
 525:.\Generated_Source\PSoC4/ADC.c **** *  None.
 526:.\Generated_Source\PSoC4/ADC.c **** *
 527:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 528:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 529:.\Generated_Source\PSoC4/ADC.c **** {
 672              		.loc 1 529 0
 673              		.cfi_startproc
 674 0000 80B5     		push	{r7, lr}
 675              	.LCFI22:
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 7, -8
 678              		.cfi_offset 14, -4
 679 0002 82B0     		sub	sp, sp, #8
 680              	.LCFI23:
 681              		.cfi_def_cfa_offset 16
 682 0004 00AF     		add	r7, sp, #0
 683              	.LCFI24:
 684              		.cfi_def_cfa_register 7
 685 0006 7860     		str	r0, [r7, #4]
 530:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 686              		.loc 1 530 0
 687 0008 084B     		ldr	r3, .L46
 688 000a 084A     		ldr	r2, .L46
 689 000c 1268     		ldr	r2, [r2]
 690 000e 120C     		lsr	r2, r2, #16
 691 0010 1204     		lsl	r2, r2, #16
 692 0012 1A60     		str	r2, [r3]
 531:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 693              		.loc 1 531 0
 694 0014 054B     		ldr	r3, .L46
 695 0016 054A     		ldr	r2, .L46
 696 0018 1168     		ldr	r1, [r2]
 697 001a 7A68     		ldr	r2, [r7, #4]
 698 001c 1204     		lsl	r2, r2, #16
 699 001e 120C     		lsr	r2, r2, #16
 700 0020 0A43     		orr	r2, r1
 701 0022 1A60     		str	r2, [r3]
 532:.\Generated_Source\PSoC4/ADC.c **** }
 702              		.loc 1 532 0
 703 0024 BD46     		mov	sp, r7
 704 0026 02B0     		add	sp, sp, #8
 705              		@ sp needed for prologue
 706 0028 80BD     		pop	{r7, pc}
 707              	.L47:
 708 002a C046     		.align	2
 709              	.L46:
 710 002c 18001A40 		.word	1075445784
 711              		.cfi_endproc
 712              	.LFE9:
 713              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 714              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 715              		.align	2
 716              		.global	ADC_SetHighLimit
 717              		.code	16
 718              		.thumb_func
 719              		.type	ADC_SetHighLimit, %function
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 23


 720              	ADC_SetHighLimit:
 721              	.LFB10:
 533:.\Generated_Source\PSoC4/ADC.c **** 
 534:.\Generated_Source\PSoC4/ADC.c **** 
 535:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 536:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 537:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 538:.\Generated_Source\PSoC4/ADC.c **** *
 539:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 540:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 541:.\Generated_Source\PSoC4/ADC.c **** *
 542:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 543:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 722              		.loc 1 550 0
 723              		.cfi_startproc
 724 0000 80B5     		push	{r7, lr}
 725              	.LCFI25:
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 7, -8
 728              		.cfi_offset 14, -4
 729 0002 82B0     		sub	sp, sp, #8
 730              	.LCFI26:
 731              		.cfi_def_cfa_offset 16
 732 0004 00AF     		add	r7, sp, #0
 733              	.LCFI27:
 734              		.cfi_def_cfa_register 7
 735 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 736              		.loc 1 551 0
 737 0008 074B     		ldr	r3, .L49
 738 000a 074A     		ldr	r2, .L49
 739 000c 1268     		ldr	r2, [r2]
 740 000e 1204     		lsl	r2, r2, #16
 741 0010 120C     		lsr	r2, r2, #16
 742 0012 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 743              		.loc 1 552 0
 744 0014 044B     		ldr	r3, .L49
 745 0016 044A     		ldr	r2, .L49
 746 0018 1168     		ldr	r1, [r2]
 747 001a 7A68     		ldr	r2, [r7, #4]
 748 001c 1204     		lsl	r2, r2, #16
 749 001e 0A43     		orr	r2, r1
 750 0020 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/ADC.c **** }
 751              		.loc 1 553 0
 752 0022 BD46     		mov	sp, r7
 753 0024 02B0     		add	sp, sp, #8
 754              		@ sp needed for prologue
 755 0026 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 24


 756              	.L50:
 757              		.align	2
 758              	.L49:
 759 0028 18001A40 		.word	1075445784
 760              		.cfi_endproc
 761              	.LFE10:
 762              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 763              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 764              		.align	2
 765              		.global	ADC_SetLimitMask
 766              		.code	16
 767              		.thumb_func
 768              		.type	ADC_SetLimitMask, %function
 769              	ADC_SetLimitMask:
 770              	.LFB11:
 554:.\Generated_Source\PSoC4/ADC.c **** 
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 557:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 558:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 559:.\Generated_Source\PSoC4/ADC.c **** *
 560:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 561:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 562:.\Generated_Source\PSoC4/ADC.c **** *
 563:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 564:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 565:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 566:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 567:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 568:.\Generated_Source\PSoC4/ADC.c **** *
 569:.\Generated_Source\PSoC4/ADC.c **** * Return:
 570:.\Generated_Source\PSoC4/ADC.c **** *  None.
 571:.\Generated_Source\PSoC4/ADC.c **** *
 572:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 573:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 574:.\Generated_Source\PSoC4/ADC.c **** {
 771              		.loc 1 574 0
 772              		.cfi_startproc
 773 0000 80B5     		push	{r7, lr}
 774              	.LCFI28:
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 7, -8
 777              		.cfi_offset 14, -4
 778 0002 82B0     		sub	sp, sp, #8
 779              	.LCFI29:
 780              		.cfi_def_cfa_offset 16
 781 0004 00AF     		add	r7, sp, #0
 782              	.LCFI30:
 783              		.cfi_def_cfa_register 7
 784 0006 7860     		str	r0, [r7, #4]
 575:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 785              		.loc 1 575 0
 786 0008 034B     		ldr	r3, .L52
 787 000a 7968     		ldr	r1, [r7, #4]
 788 000c 0122     		mov	r2, #1
 789 000e 0A40     		and	r2, r1
 790 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 25


 576:.\Generated_Source\PSoC4/ADC.c **** }
 791              		.loc 1 576 0
 792 0012 BD46     		mov	sp, r7
 793 0014 02B0     		add	sp, sp, #8
 794              		@ sp needed for prologue
 795 0016 80BD     		pop	{r7, pc}
 796              	.L53:
 797              		.align	2
 798              	.L52:
 799 0018 38021A40 		.word	1075446328
 800              		.cfi_endproc
 801              	.LFE11:
 802              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 803              		.section	.text.ADC_SetSatMask,"ax",%progbits
 804              		.align	2
 805              		.global	ADC_SetSatMask
 806              		.code	16
 807              		.thumb_func
 808              		.type	ADC_SetSatMask, %function
 809              	ADC_SetSatMask:
 810              	.LFB12:
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 588:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 589:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 590:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** * Return:
 593:.\Generated_Source\PSoC4/ADC.c **** *  None.
 594:.\Generated_Source\PSoC4/ADC.c **** *
 595:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 597:.\Generated_Source\PSoC4/ADC.c **** {
 811              		.loc 1 597 0
 812              		.cfi_startproc
 813 0000 80B5     		push	{r7, lr}
 814              	.LCFI31:
 815              		.cfi_def_cfa_offset 8
 816              		.cfi_offset 7, -8
 817              		.cfi_offset 14, -4
 818 0002 82B0     		sub	sp, sp, #8
 819              	.LCFI32:
 820              		.cfi_def_cfa_offset 16
 821 0004 00AF     		add	r7, sp, #0
 822              	.LCFI33:
 823              		.cfi_def_cfa_register 7
 824 0006 7860     		str	r0, [r7, #4]
 598:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 26


 825              		.loc 1 598 0
 826 0008 034B     		ldr	r3, .L55
 827 000a 7968     		ldr	r1, [r7, #4]
 828 000c 0122     		mov	r2, #1
 829 000e 0A40     		and	r2, r1
 830 0010 1A60     		str	r2, [r3]
 599:.\Generated_Source\PSoC4/ADC.c **** }
 831              		.loc 1 599 0
 832 0012 BD46     		mov	sp, r7
 833 0014 02B0     		add	sp, sp, #8
 834              		@ sp needed for prologue
 835 0016 80BD     		pop	{r7, pc}
 836              	.L56:
 837              		.align	2
 838              	.L55:
 839 0018 28021A40 		.word	1075446312
 840              		.cfi_endproc
 841              	.LFE12:
 842              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 843              		.section	.text.ADC_SetOffset,"ax",%progbits
 844              		.align	2
 845              		.global	ADC_SetOffset
 846              		.code	16
 847              		.thumb_func
 848              		.type	ADC_SetOffset, %function
 849              	ADC_SetOffset:
 850              	.LFB13:
 600:.\Generated_Source\PSoC4/ADC.c **** 
 601:.\Generated_Source\PSoC4/ADC.c **** 
 602:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 604:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 605:.\Generated_Source\PSoC4/ADC.c **** *
 606:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 607:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 608:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 609:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 610:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 611:.\Generated_Source\PSoC4/ADC.c **** *
 612:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 613:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 614:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 615:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 616:.\Generated_Source\PSoC4/ADC.c **** *
 617:.\Generated_Source\PSoC4/ADC.c **** * Return:
 618:.\Generated_Source\PSoC4/ADC.c **** *  None.
 619:.\Generated_Source\PSoC4/ADC.c **** *
 620:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 621:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 622:.\Generated_Source\PSoC4/ADC.c **** *
 623:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 624:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 625:.\Generated_Source\PSoC4/ADC.c **** {
 851              		.loc 1 625 0
 852              		.cfi_startproc
 853 0000 80B5     		push	{r7, lr}
 854              	.LCFI34:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 27


 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 82B0     		sub	sp, sp, #8
 859              	.LCFI35:
 860              		.cfi_def_cfa_offset 16
 861 0004 00AF     		add	r7, sp, #0
 862              	.LCFI36:
 863              		.cfi_def_cfa_register 7
 864 0006 7860     		str	r0, [r7, #4]
 865 0008 0A1C     		mov	r2, r1
 866 000a BB1C     		add	r3, r7, #2
 867 000c 1A80     		strh	r2, [r3]
 626:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 627:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 868              		.loc 1 627 0
 869 000e 7B68     		ldr	r3, [r7, #4]
 870 0010 002B     		cmp	r3, #0
 871 0012 02D0     		beq	.L58
 872              		.loc 1 627 0 is_stmt 0 discriminator 1
 873 0014 0020     		mov	r0, #0
 874 0016 FFF7FEFF 		bl	CyHalt
 875              	.L58:
 628:.\Generated_Source\PSoC4/ADC.c **** 
 629:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 876              		.loc 1 629 0 is_stmt 1
 877 001a 044B     		ldr	r3, .L59
 878 001c 7A68     		ldr	r2, [r7, #4]
 879 001e 5200     		lsl	r2, r2, #1
 880 0020 B91C     		add	r1, r7, #2
 881 0022 0988     		ldrh	r1, [r1]
 882 0024 D152     		strh	r1, [r2, r3]
 630:.\Generated_Source\PSoC4/ADC.c **** }
 883              		.loc 1 630 0
 884 0026 BD46     		mov	sp, r7
 885 0028 02B0     		add	sp, sp, #8
 886              		@ sp needed for prologue
 887 002a 80BD     		pop	{r7, pc}
 888              	.L60:
 889              		.align	2
 890              	.L59:
 891 002c 00000000 		.word	ADC_offset
 892              		.cfi_endproc
 893              	.LFE13:
 894              		.size	ADC_SetOffset, .-ADC_SetOffset
 895              		.section	.text.ADC_SetGain,"ax",%progbits
 896              		.align	2
 897              		.global	ADC_SetGain
 898              		.code	16
 899              		.thumb_func
 900              		.type	ADC_SetGain, %function
 901              	ADC_SetGain:
 902              	.LFB14:
 631:.\Generated_Source\PSoC4/ADC.c **** 
 632:.\Generated_Source\PSoC4/ADC.c **** 
 633:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 634:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 28


 635:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 638:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 639:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 640:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 641:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 642:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 643:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 644:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 645:.\Generated_Source\PSoC4/ADC.c **** *
 646:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 647:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 648:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 649:.\Generated_Source\PSoC4/ADC.c **** *
 650:.\Generated_Source\PSoC4/ADC.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC.c **** *  None.
 652:.\Generated_Source\PSoC4/ADC.c **** *
 653:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts 
 655:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 659:.\Generated_Source\PSoC4/ADC.c **** {
 903              		.loc 1 659 0
 904              		.cfi_startproc
 905 0000 80B5     		push	{r7, lr}
 906              	.LCFI37:
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 910 0002 82B0     		sub	sp, sp, #8
 911              	.LCFI38:
 912              		.cfi_def_cfa_offset 16
 913 0004 00AF     		add	r7, sp, #0
 914              	.LCFI39:
 915              		.cfi_def_cfa_register 7
 916 0006 7860     		str	r0, [r7, #4]
 917 0008 3960     		str	r1, [r7]
 660:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 661:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 918              		.loc 1 661 0
 919 000a 7B68     		ldr	r3, [r7, #4]
 920 000c 002B     		cmp	r3, #0
 921 000e 02D0     		beq	.L62
 922              		.loc 1 661 0 is_stmt 0 discriminator 1
 923 0010 0020     		mov	r0, #0
 924 0012 FFF7FEFF 		bl	CyHalt
 925              	.L62:
 662:.\Generated_Source\PSoC4/ADC.c **** 
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 926              		.loc 1 663 0 is_stmt 1
 927 0016 044B     		ldr	r3, .L63
 928 0018 7A68     		ldr	r2, [r7, #4]
 929 001a 9200     		lsl	r2, r2, #2
 930 001c 3968     		ldr	r1, [r7]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 29


 931 001e D150     		str	r1, [r2, r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 932              		.loc 1 664 0
 933 0020 BD46     		mov	sp, r7
 934 0022 02B0     		add	sp, sp, #8
 935              		@ sp needed for prologue
 936 0024 80BD     		pop	{r7, pc}
 937              	.L64:
 938 0026 C046     		.align	2
 939              	.L63:
 940 0028 00000000 		.word	ADC_countsPer10Volt
 941              		.cfi_endproc
 942              	.LFE14:
 943              		.size	ADC_SetGain, .-ADC_SetGain
 944              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 945              		.align	2
 946              		.global	ADC_CountsTo_mVolts
 947              		.code	16
 948              		.thumb_func
 949              		.type	ADC_CountsTo_mVolts, %function
 950              	ADC_CountsTo_mVolts:
 951              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 668:.\Generated_Source\PSoC4/ADC.c **** 
 669:.\Generated_Source\PSoC4/ADC.c **** 
 670:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 671:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 672:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 673:.\Generated_Source\PSoC4/ADC.c ****     *
 674:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 675:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 676:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 677:.\Generated_Source\PSoC4/ADC.c ****     *
 678:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 679:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 680:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 681:.\Generated_Source\PSoC4/ADC.c ****     *
 682:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 683:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 684:.\Generated_Source\PSoC4/ADC.c ****     *
 685:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 687:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 688:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 689:.\Generated_Source\PSoC4/ADC.c ****     *
 690:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 692:.\Generated_Source\PSoC4/ADC.c ****     {
 952              		.loc 1 692 0
 953              		.cfi_startproc
 954 0000 80B5     		push	{r7, lr}
 955              	.LCFI40:
 956              		.cfi_def_cfa_offset 8
 957              		.cfi_offset 7, -8
 958              		.cfi_offset 14, -4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 30


 959 0002 84B0     		sub	sp, sp, #16
 960              	.LCFI41:
 961              		.cfi_def_cfa_offset 24
 962 0004 00AF     		add	r7, sp, #0
 963              	.LCFI42:
 964              		.cfi_def_cfa_register 7
 965 0006 7860     		str	r0, [r7, #4]
 966 0008 0A1C     		mov	r2, r1
 967 000a BB1C     		add	r3, r7, #2
 968 000c 1A80     		strh	r2, [r3]
 693:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 694:.\Generated_Source\PSoC4/ADC.c **** 
 695:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 696:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 969              		.loc 1 696 0
 970 000e 7B68     		ldr	r3, [r7, #4]
 971 0010 002B     		cmp	r3, #0
 972 0012 02D0     		beq	.L66
 973              		.loc 1 696 0 is_stmt 0 discriminator 1
 974 0014 0020     		mov	r0, #0
 975 0016 FFF7FEFF 		bl	CyHalt
 976              	.L66:
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 699:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 700:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 701:.\Generated_Source\PSoC4/ADC.c ****             {
 702:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 703:.\Generated_Source\PSoC4/ADC.c ****             }    
 704:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 705:.\Generated_Source\PSoC4/ADC.c **** 
 706:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 707:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 977              		.loc 1 707 0 is_stmt 1
 978 001a BB1C     		add	r3, r7, #2
 979 001c 1A88     		ldrh	r2, [r3]
 980 001e 1E4B     		ldr	r3, .L72
 981 0020 7968     		ldr	r1, [r7, #4]
 982 0022 4900     		lsl	r1, r1, #1
 983 0024 CB5A     		ldrh	r3, [r1, r3]
 984 0026 9BB2     		uxth	r3, r3
 985 0028 9BB2     		uxth	r3, r3
 986 002a D31A     		sub	r3, r2, r3
 987 002c 9AB2     		uxth	r2, r3
 988 002e BB1C     		add	r3, r7, #2
 989 0030 1A80     		strh	r2, [r3]
 708:.\Generated_Source\PSoC4/ADC.c **** 
 709:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 990              		.loc 1 709 0
 991 0032 BB1C     		add	r3, r7, #2
 992 0034 0021     		mov	r1, #0
 993 0036 5B5E     		ldrsh	r3, [r3, r1]
 994 0038 184A     		ldr	r2, .L72+4
 995 003a 5A43     		mul	r2, r3
 710:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) )) 
 996              		.loc 1 710 0
 997 003c BB1C     		add	r3, r7, #2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 31


 998 003e 0021     		mov	r1, #0
 999 0040 5B5E     		ldrsh	r3, [r3, r1]
 1000 0042 002B     		cmp	r3, #0
 1001 0044 08DD     		ble	.L67
 1002              		.loc 1 710 0 is_stmt 0 discriminator 1
 1003 0046 164B     		ldr	r3, .L72+8
 1004 0048 7968     		ldr	r1, [r7, #4]
 1005 004a 8900     		lsl	r1, r1, #2
 1006 004c CB58     		ldr	r3, [r1, r3]
 1007 004e 002B     		cmp	r3, #0
 1008 0050 00DA     		bge	.L68
 1009 0052 0133     		add	r3, r3, #1
 1010              	.L68:
 1011 0054 5B10     		asr	r3, r3, #1
 1012 0056 08E0     		b	.L69
 1013              	.L67:
 1014              		.loc 1 710 0 discriminator 2
 1015 0058 114B     		ldr	r3, .L72+8
 1016 005a 7968     		ldr	r1, [r7, #4]
 1017 005c 8900     		lsl	r1, r1, #2
 1018 005e CB58     		ldr	r3, [r1, r3]
 1019 0060 002B     		cmp	r3, #0
 1020 0062 00DA     		bge	.L70
 1021 0064 0133     		add	r3, r3, #1
 1022              	.L70:
 1023 0066 5B10     		asr	r3, r3, #1
 1024 0068 5B42     		neg	r3, r3
 1025              	.L69:
 709:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1026              		.loc 1 709 0 is_stmt 1
 1027 006a D218     		add	r2, r2, r3
 711:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1028              		.loc 1 711 0
 1029 006c 0C4B     		ldr	r3, .L72+8
 1030 006e 7968     		ldr	r1, [r7, #4]
 1031 0070 8900     		lsl	r1, r1, #2
 1032 0072 CB58     		ldr	r3, [r1, r3]
 1033 0074 101C     		mov	r0, r2
 1034 0076 191C     		mov	r1, r3
 1035 0078 FFF7FEFF 		bl	__aeabi_idiv
 1036 007c 031C     		mov	r3, r0
 1037 007e 1A1C     		mov	r2, r3
 709:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1038              		.loc 1 709 0
 1039 0080 3B1C     		mov	r3, r7
 1040 0082 0E33     		add	r3, r3, #14
 1041 0084 1A80     		strh	r2, [r3]
 712:.\Generated_Source\PSoC4/ADC.c **** 
 713:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1042              		.loc 1 713 0
 1043 0086 3B1C     		mov	r3, r7
 1044 0088 0E33     		add	r3, r3, #14
 1045 008a 1B88     		ldrh	r3, [r3]
 1046 008c 1BB2     		sxth	r3, r3
 714:.\Generated_Source\PSoC4/ADC.c ****     }
 1047              		.loc 1 714 0
 1048 008e 181C     		mov	r0, r3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 32


 1049 0090 BD46     		mov	sp, r7
 1050 0092 04B0     		add	sp, sp, #16
 1051              		@ sp needed for prologue
 1052 0094 80BD     		pop	{r7, pc}
 1053              	.L73:
 1054 0096 C046     		.align	2
 1055              	.L72:
 1056 0098 00000000 		.word	ADC_offset
 1057 009c 10270000 		.word	10000
 1058 00a0 00000000 		.word	ADC_countsPer10Volt
 1059              		.cfi_endproc
 1060              	.LFE15:
 1061              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1062              		.global	__aeabi_lmul
 1063              		.global	__aeabi_ldivmod
 1064              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1065              		.align	2
 1066              		.global	ADC_CountsTo_uVolts
 1067              		.code	16
 1068              		.thumb_func
 1069              		.type	ADC_CountsTo_uVolts, %function
 1070              	ADC_CountsTo_uVolts:
 1071              	.LFB16:
 715:.\Generated_Source\PSoC4/ADC.c **** 
 716:.\Generated_Source\PSoC4/ADC.c **** 
 717:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 718:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 719:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 720:.\Generated_Source\PSoC4/ADC.c ****     *
 721:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 722:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 723:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 724:.\Generated_Source\PSoC4/ADC.c ****     *
 725:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 726:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 727:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 728:.\Generated_Source\PSoC4/ADC.c ****     *
 729:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 730:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 731:.\Generated_Source\PSoC4/ADC.c ****     *
 732:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 733:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 734:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 735:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 736:.\Generated_Source\PSoC4/ADC.c ****     *
 737:.\Generated_Source\PSoC4/ADC.c ****     * Theory: 
 738:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 739:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose 
 740:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 741:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 742:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V. 
 743:.\Generated_Source\PSoC4/ADC.c ****     *
 744:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 745:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 746:.\Generated_Source\PSoC4/ADC.c ****     {
 1072              		.loc 1 746 0
 1073              		.cfi_startproc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 33


 1074 0000 B0B5     		push	{r4, r5, r7, lr}
 1075              	.LCFI43:
 1076              		.cfi_def_cfa_offset 16
 1077              		.cfi_offset 4, -16
 1078              		.cfi_offset 5, -12
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 86B0     		sub	sp, sp, #24
 1082              	.LCFI44:
 1083              		.cfi_def_cfa_offset 40
 1084 0004 00AF     		add	r7, sp, #0
 1085              	.LCFI45:
 1086              		.cfi_def_cfa_register 7
 1087 0006 F860     		str	r0, [r7, #12]
 1088 0008 0A1C     		mov	r2, r1
 1089 000a 3B1C     		mov	r3, r7
 1090 000c 0A33     		add	r3, r3, #10
 1091 000e 1A80     		strh	r2, [r3]
 747:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 748:.\Generated_Source\PSoC4/ADC.c **** 
 749:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 750:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1092              		.loc 1 750 0
 1093 0010 FB68     		ldr	r3, [r7, #12]
 1094 0012 002B     		cmp	r3, #0
 1095 0014 02D0     		beq	.L75
 1096              		.loc 1 750 0 is_stmt 0 discriminator 1
 1097 0016 0020     		mov	r0, #0
 1098 0018 FFF7FEFF 		bl	CyHalt
 1099              	.L75:
 751:.\Generated_Source\PSoC4/ADC.c **** 
 752:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 753:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 754:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 755:.\Generated_Source\PSoC4/ADC.c ****             {
 756:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 757:.\Generated_Source\PSoC4/ADC.c ****             }    
 758:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 761:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1100              		.loc 1 761 0 is_stmt 1
 1101 001c 3B1C     		mov	r3, r7
 1102 001e 0A33     		add	r3, r3, #10
 1103 0020 1A88     		ldrh	r2, [r3]
 1104 0022 1B4B     		ldr	r3, .L77+8
 1105 0024 F968     		ldr	r1, [r7, #12]
 1106 0026 4900     		lsl	r1, r1, #1
 1107 0028 CB5A     		ldrh	r3, [r1, r3]
 1108 002a 9BB2     		uxth	r3, r3
 1109 002c 9BB2     		uxth	r3, r3
 1110 002e D31A     		sub	r3, r2, r3
 1111 0030 9AB2     		uxth	r2, r3
 1112 0032 3B1C     		mov	r3, r7
 1113 0034 0A33     		add	r3, r3, #10
 1114 0036 1A80     		strh	r2, [r3]
 762:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 34


 763:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1115              		.loc 1 763 0
 1116 0038 3B1C     		mov	r3, r7
 1117 003a 0A33     		add	r3, r3, #10
 1118 003c 0022     		mov	r2, #0
 1119 003e 9B5E     		ldrsh	r3, [r3, r2]
 1120 0040 1A1C     		mov	r2, r3
 1121 0042 3A60     		str	r2, [r7]
 1122 0044 DB17     		asr	r3, r3, #31
 1123 0046 7B60     		str	r3, [r7, #4]
 1124 0048 3868     		ldr	r0, [r7]
 1125 004a 7968     		ldr	r1, [r7, #4]
 1126 004c 0F4B     		ldr	r3, .L77+4
 1127 004e 0E4A     		ldr	r2, .L77
 1128 0050 FFF7FEFF 		bl	__aeabi_lmul
 1129 0054 021C     		mov	r2, r0
 1130 0056 0B1C     		mov	r3, r1
 1131 0058 0E49     		ldr	r1, .L77+12
 1132 005a F868     		ldr	r0, [r7, #12]
 1133 005c 8000     		lsl	r0, r0, #2
 1134 005e 4158     		ldr	r1, [r0, r1]
 1135 0060 0C1C     		mov	r4, r1
 1136 0062 C917     		asr	r1, r1, #31
 1137 0064 0D1C     		mov	r5, r1
 1138 0066 101C     		mov	r0, r2
 1139 0068 191C     		mov	r1, r3
 1140 006a 221C     		mov	r2, r4
 1141 006c 2B1C     		mov	r3, r5
 1142 006e FFF7FEFF 		bl	__aeabi_ldivmod
 1143 0072 031C     		mov	r3, r0
 1144 0074 0C1C     		mov	r4, r1
 1145 0076 3B61     		str	r3, [r7, #16]
 1146 0078 7C61     		str	r4, [r7, #20]
 764:.\Generated_Source\PSoC4/ADC.c **** 
 765:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1147              		.loc 1 765 0
 1148 007a 3B69     		ldr	r3, [r7, #16]
 766:.\Generated_Source\PSoC4/ADC.c ****     }
 1149              		.loc 1 766 0
 1150 007c 181C     		mov	r0, r3
 1151 007e BD46     		mov	sp, r7
 1152 0080 06B0     		add	sp, sp, #24
 1153              		@ sp needed for prologue
 1154 0082 B0BD     		pop	{r4, r5, r7, pc}
 1155              	.L78:
 1156 0084 C046C046 		.align	3
 1157              	.L77:
 1158 0088 80969800 		.word	10000000
 1159 008c 00000000 		.word	0
 1160 0090 00000000 		.word	ADC_offset
 1161 0094 00000000 		.word	ADC_countsPer10Volt
 1162              		.cfi_endproc
 1163              	.LFE16:
 1164              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1165              		.global	__aeabi_i2f
 1166              		.global	__aeabi_fmul
 1167              		.global	__aeabi_fdiv
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 35


 1168              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1169              		.align	2
 1170              		.global	ADC_CountsTo_Volts
 1171              		.code	16
 1172              		.thumb_func
 1173              		.type	ADC_CountsTo_Volts, %function
 1174              	ADC_CountsTo_Volts:
 1175              	.LFB17:
 767:.\Generated_Source\PSoC4/ADC.c **** 
 768:.\Generated_Source\PSoC4/ADC.c **** 
 769:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 770:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 771:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 772:.\Generated_Source\PSoC4/ADC.c ****     *
 773:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 774:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 775:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 776:.\Generated_Source\PSoC4/ADC.c ****     *
 777:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 778:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 779:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 780:.\Generated_Source\PSoC4/ADC.c ****     *
 781:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 782:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 783:.\Generated_Source\PSoC4/ADC.c ****     *
 784:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 785:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 786:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 787:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 788:.\Generated_Source\PSoC4/ADC.c ****     *
 789:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 791:.\Generated_Source\PSoC4/ADC.c ****     {
 1176              		.loc 1 791 0
 1177              		.cfi_startproc
 1178 0000 90B5     		push	{r4, r7, lr}
 1179              	.LCFI46:
 1180              		.cfi_def_cfa_offset 12
 1181              		.cfi_offset 4, -12
 1182              		.cfi_offset 7, -8
 1183              		.cfi_offset 14, -4
 1184 0002 85B0     		sub	sp, sp, #20
 1185              	.LCFI47:
 1186              		.cfi_def_cfa_offset 32
 1187 0004 00AF     		add	r7, sp, #0
 1188              	.LCFI48:
 1189              		.cfi_def_cfa_register 7
 1190 0006 7860     		str	r0, [r7, #4]
 1191 0008 0A1C     		mov	r2, r1
 1192 000a BB1C     		add	r3, r7, #2
 1193 000c 1A80     		strh	r2, [r3]
 792:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 793:.\Generated_Source\PSoC4/ADC.c **** 
 794:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 795:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1194              		.loc 1 795 0
 1195 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 36


 1196 0010 002B     		cmp	r3, #0
 1197 0012 02D0     		beq	.L80
 1198              		.loc 1 795 0 is_stmt 0 discriminator 1
 1199 0014 0020     		mov	r0, #0
 1200 0016 FFF7FEFF 		bl	CyHalt
 1201              	.L80:
 796:.\Generated_Source\PSoC4/ADC.c **** 
 797:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 798:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 799:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 800:.\Generated_Source\PSoC4/ADC.c ****             {
 801:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 802:.\Generated_Source\PSoC4/ADC.c ****             }    
 803:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 804:.\Generated_Source\PSoC4/ADC.c **** 
 805:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 806:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1202              		.loc 1 806 0 is_stmt 1
 1203 001a BB1C     		add	r3, r7, #2
 1204 001c 1A88     		ldrh	r2, [r3]
 1205 001e 154B     		ldr	r3, .L82
 1206 0020 7968     		ldr	r1, [r7, #4]
 1207 0022 4900     		lsl	r1, r1, #1
 1208 0024 CB5A     		ldrh	r3, [r1, r3]
 1209 0026 9BB2     		uxth	r3, r3
 1210 0028 9BB2     		uxth	r3, r3
 1211 002a D31A     		sub	r3, r2, r3
 1212 002c 9AB2     		uxth	r2, r3
 1213 002e BB1C     		add	r3, r7, #2
 1214 0030 1A80     		strh	r2, [r3]
 807:.\Generated_Source\PSoC4/ADC.c **** 
 808:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1215              		.loc 1 808 0
 1216 0032 BB1C     		add	r3, r7, #2
 1217 0034 0022     		mov	r2, #0
 1218 0036 9B5E     		ldrsh	r3, [r3, r2]
 1219 0038 181C     		mov	r0, r3
 1220 003a FFF7FEFF 		bl	__aeabi_i2f
 1221 003e 031C     		add	r3, r0, #0
 1222 0040 181C     		add	r0, r3, #0
 1223 0042 0D49     		ldr	r1, .L82+4
 1224 0044 FFF7FEFF 		bl	__aeabi_fmul
 1225 0048 031C     		add	r3, r0, #0
 1226 004a 1C1C     		add	r4, r3, #0
 1227 004c 0B4B     		ldr	r3, .L82+8
 1228 004e 7A68     		ldr	r2, [r7, #4]
 1229 0050 9200     		lsl	r2, r2, #2
 1230 0052 D358     		ldr	r3, [r2, r3]
 1231 0054 181C     		mov	r0, r3
 1232 0056 FFF7FEFF 		bl	__aeabi_i2f
 1233 005a 031C     		add	r3, r0, #0
 1234 005c 201C     		add	r0, r4, #0
 1235 005e 191C     		add	r1, r3, #0
 1236 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1237 0064 031C     		add	r3, r0, #0
 1238 0066 FB60     		str	r3, [r7, #12]
 809:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 37


 810:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 1239              		.loc 1 810 0
 1240 0068 FB68     		ldr	r3, [r7, #12]
 811:.\Generated_Source\PSoC4/ADC.c ****     }
 1241              		.loc 1 811 0
 1242 006a 181C     		add	r0, r3, #0
 1243 006c BD46     		mov	sp, r7
 1244 006e 05B0     		add	sp, sp, #20
 1245              		@ sp needed for prologue
 1246 0070 90BD     		pop	{r4, r7, pc}
 1247              	.L83:
 1248 0072 C046     		.align	2
 1249              	.L82:
 1250 0074 00000000 		.word	ADC_offset
 1251 0078 00002041 		.word	1092616192
 1252 007c 00000000 		.word	ADC_countsPer10Volt
 1253              		.cfi_endproc
 1254              	.LFE17:
 1255              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1256              		.text
 1257              	.Letext0:
 1258              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1259              		.section	.debug_info,"",%progbits
 1260              	.Ldebug_info0:
 1261 0000 D0040000 		.4byte	0x4d0
 1262 0004 0200     		.2byte	0x2
 1263 0006 00000000 		.4byte	.Ldebug_abbrev0
 1264 000a 04       		.byte	0x4
 1265 000b 01       		.uleb128 0x1
 1266 000c 2B030000 		.4byte	.LASF59
 1267 0010 01       		.byte	0x1
 1268 0011 27000000 		.4byte	.LASF60
 1269 0015 52020000 		.4byte	.LASF61
 1270 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1271 001d 00000000 		.4byte	0
 1272 0021 00000000 		.4byte	0
 1273 0025 00000000 		.4byte	.Ldebug_line0
 1274 0029 02       		.uleb128 0x2
 1275 002a 01       		.byte	0x1
 1276 002b 06       		.byte	0x6
 1277 002c 13030000 		.4byte	.LASF0
 1278 0030 02       		.uleb128 0x2
 1279 0031 01       		.byte	0x1
 1280 0032 08       		.byte	0x8
 1281 0033 E3000000 		.4byte	.LASF1
 1282 0037 02       		.uleb128 0x2
 1283 0038 02       		.byte	0x2
 1284 0039 05       		.byte	0x5
 1285 003a 8B000000 		.4byte	.LASF2
 1286 003e 02       		.uleb128 0x2
 1287 003f 02       		.byte	0x2
 1288 0040 07       		.byte	0x7
 1289 0041 78000000 		.4byte	.LASF3
 1290 0045 02       		.uleb128 0x2
 1291 0046 04       		.byte	0x4
 1292 0047 05       		.byte	0x5
 1293 0048 05030000 		.4byte	.LASF4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 38


 1294 004c 02       		.uleb128 0x2
 1295 004d 04       		.byte	0x4
 1296 004e 07       		.byte	0x7
 1297 004f 08010000 		.4byte	.LASF5
 1298 0053 02       		.uleb128 0x2
 1299 0054 08       		.byte	0x8
 1300 0055 05       		.byte	0x5
 1301 0056 00000000 		.4byte	.LASF6
 1302 005a 02       		.uleb128 0x2
 1303 005b 08       		.byte	0x8
 1304 005c 07       		.byte	0x7
 1305 005d C3010000 		.4byte	.LASF7
 1306 0061 03       		.uleb128 0x3
 1307 0062 04       		.byte	0x4
 1308 0063 05       		.byte	0x5
 1309 0064 696E7400 		.ascii	"int\000"
 1310 0068 02       		.uleb128 0x2
 1311 0069 04       		.byte	0x4
 1312 006a 07       		.byte	0x7
 1313 006b A4010000 		.4byte	.LASF8
 1314 006f 04       		.uleb128 0x4
 1315 0070 EB020000 		.4byte	.LASF9
 1316 0074 02       		.byte	0x2
 1317 0075 5B       		.byte	0x5b
 1318 0076 30000000 		.4byte	0x30
 1319 007a 04       		.uleb128 0x4
 1320 007b 7B010000 		.4byte	.LASF10
 1321 007f 02       		.byte	0x2
 1322 0080 5C       		.byte	0x5c
 1323 0081 3E000000 		.4byte	0x3e
 1324 0085 04       		.uleb128 0x4
 1325 0086 8C010000 		.4byte	.LASF11
 1326 008a 02       		.byte	0x2
 1327 008b 5D       		.byte	0x5d
 1328 008c 4C000000 		.4byte	0x4c
 1329 0090 04       		.uleb128 0x4
 1330 0091 02010000 		.4byte	.LASF12
 1331 0095 02       		.byte	0x2
 1332 0096 5F       		.byte	0x5f
 1333 0097 37000000 		.4byte	0x37
 1334 009b 04       		.uleb128 0x4
 1335 009c 1A010000 		.4byte	.LASF13
 1336 00a0 02       		.byte	0x2
 1337 00a1 60       		.byte	0x60
 1338 00a2 45000000 		.4byte	0x45
 1339 00a6 04       		.uleb128 0x4
 1340 00a7 BA000000 		.4byte	.LASF14
 1341 00ab 02       		.byte	0x2
 1342 00ac 61       		.byte	0x61
 1343 00ad B1000000 		.4byte	0xb1
 1344 00b1 02       		.uleb128 0x2
 1345 00b2 04       		.byte	0x4
 1346 00b3 04       		.byte	0x4
 1347 00b4 4D000000 		.4byte	.LASF15
 1348 00b8 02       		.uleb128 0x2
 1349 00b9 08       		.byte	0x8
 1350 00ba 04       		.byte	0x4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 39


 1351 00bb 63010000 		.4byte	.LASF16
 1352 00bf 04       		.uleb128 0x4
 1353 00c0 74030000 		.4byte	.LASF17
 1354 00c4 02       		.byte	0x2
 1355 00c5 66       		.byte	0x66
 1356 00c6 53000000 		.4byte	0x53
 1357 00ca 02       		.uleb128 0x2
 1358 00cb 01       		.byte	0x1
 1359 00cc 08       		.byte	0x8
 1360 00cd 0E030000 		.4byte	.LASF18
 1361 00d1 04       		.uleb128 0x4
 1362 00d2 21000000 		.4byte	.LASF19
 1363 00d6 02       		.byte	0x2
 1364 00d7 F2       		.byte	0xf2
 1365 00d8 DC000000 		.4byte	0xdc
 1366 00dc 05       		.uleb128 0x5
 1367 00dd 85000000 		.4byte	0x85
 1368 00e1 02       		.uleb128 0x2
 1369 00e2 04       		.byte	0x4
 1370 00e3 07       		.byte	0x7
 1371 00e4 06020000 		.4byte	.LASF20
 1372 00e8 06       		.uleb128 0x6
 1373 00e9 01       		.byte	0x1
 1374 00ea E1010000 		.4byte	.LASF24
 1375 00ee 01       		.byte	0x1
 1376 00ef 40       		.byte	0x40
 1377 00f0 01       		.byte	0x1
 1378 00f1 00000000 		.4byte	.LFB0
 1379 00f5 24000000 		.4byte	.LFE0
 1380 00f9 00000000 		.4byte	.LLST0
 1381 00fd 01       		.byte	0x1
 1382 00fe 07       		.uleb128 0x7
 1383 00ff 01       		.byte	0x1
 1384 0100 EB010000 		.4byte	.LASF35
 1385 0104 01       		.byte	0x1
 1386 0105 5F       		.byte	0x5f
 1387 0106 01       		.byte	0x1
 1388 0107 00000000 		.4byte	.LFB1
 1389 010b B8010000 		.4byte	.LFE1
 1390 010f 2C000000 		.4byte	.LLST1
 1391 0113 01       		.byte	0x1
 1392 0114 43010000 		.4byte	0x143
 1393 0118 08       		.uleb128 0x8
 1394 0119 4C020000 		.4byte	.LASF21
 1395 011d 01       		.byte	0x1
 1396 011e 61       		.byte	0x61
 1397 011f 85000000 		.4byte	0x85
 1398 0123 02       		.byte	0x2
 1399 0124 91       		.byte	0x91
 1400 0125 6C       		.sleb128 -20
 1401 0126 08       		.uleb128 0x8
 1402 0127 CD000000 		.4byte	.LASF22
 1403 012b 01       		.byte	0x1
 1404 012c 62       		.byte	0x62
 1405 012d 85000000 		.4byte	0x85
 1406 0131 02       		.byte	0x2
 1407 0132 91       		.byte	0x91
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 40


 1408 0133 64       		.sleb128 -28
 1409 0134 08       		.uleb128 0x8
 1410 0135 BC010000 		.4byte	.LASF23
 1411 0139 01       		.byte	0x1
 1412 013a 63       		.byte	0x63
 1413 013b 9B000000 		.4byte	0x9b
 1414 013f 02       		.byte	0x2
 1415 0140 91       		.byte	0x91
 1416 0141 68       		.sleb128 -24
 1417 0142 00       		.byte	0
 1418 0143 09       		.uleb128 0x9
 1419 0144 01       		.byte	0x1
 1420 0145 B1010000 		.4byte	.LASF25
 1421 0149 01       		.byte	0x1
 1422 014a 1501     		.2byte	0x115
 1423 014c 01       		.byte	0x1
 1424 014d 00000000 		.4byte	.LFB2
 1425 0151 20000000 		.4byte	.LFE2
 1426 0155 64000000 		.4byte	.LLST2
 1427 0159 01       		.byte	0x1
 1428 015a 0A       		.uleb128 0xa
 1429 015b 01       		.byte	0x1
 1430 015c 7A030000 		.4byte	.LASF26
 1431 0160 01       		.byte	0x1
 1432 0161 2C01     		.2byte	0x12c
 1433 0163 01       		.byte	0x1
 1434 0164 00000000 		.4byte	.LFB3
 1435 0168 18000000 		.4byte	.LFE3
 1436 016c 90000000 		.4byte	.LLST3
 1437 0170 01       		.byte	0x1
 1438 0171 0A       		.uleb128 0xa
 1439 0172 01       		.byte	0x1
 1440 0173 36020000 		.4byte	.LASF27
 1441 0177 01       		.byte	0x1
 1442 0178 4601     		.2byte	0x146
 1443 017a 01       		.byte	0x1
 1444 017b 00000000 		.4byte	.LFB4
 1445 017f 1C000000 		.4byte	.LFE4
 1446 0183 BC000000 		.4byte	.LLST4
 1447 0187 01       		.byte	0x1
 1448 0188 0A       		.uleb128 0xa
 1449 0189 01       		.byte	0x1
 1450 018a DB020000 		.4byte	.LASF28
 1451 018e 01       		.byte	0x1
 1452 018f 5F01     		.2byte	0x15f
 1453 0191 01       		.byte	0x1
 1454 0192 00000000 		.4byte	.LFB5
 1455 0196 1C000000 		.4byte	.LFE5
 1456 019a E8000000 		.4byte	.LLST5
 1457 019e 01       		.byte	0x1
 1458 019f 0B       		.uleb128 0xb
 1459 01a0 01       		.byte	0x1
 1460 01a1 4F010000 		.4byte	.LASF30
 1461 01a5 01       		.byte	0x1
 1462 01a6 8101     		.2byte	0x181
 1463 01a8 01       		.byte	0x1
 1464 01a9 85000000 		.4byte	0x85
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 41


 1465 01ad 00000000 		.4byte	.LFB6
 1466 01b1 48000000 		.4byte	.LFE6
 1467 01b5 14010000 		.4byte	.LLST6
 1468 01b9 01       		.byte	0x1
 1469 01ba DD010000 		.4byte	0x1dd
 1470 01be 0C       		.uleb128 0xc
 1471 01bf D3020000 		.4byte	.LASF32
 1472 01c3 01       		.byte	0x1
 1473 01c4 8101     		.2byte	0x181
 1474 01c6 85000000 		.4byte	0x85
 1475 01ca 02       		.byte	0x2
 1476 01cb 91       		.byte	0x91
 1477 01cc 6C       		.sleb128 -20
 1478 01cd 0D       		.uleb128 0xd
 1479 01ce B3000000 		.4byte	.LASF29
 1480 01d2 01       		.byte	0x1
 1481 01d3 8301     		.2byte	0x183
 1482 01d5 85000000 		.4byte	0x85
 1483 01d9 02       		.byte	0x2
 1484 01da 91       		.byte	0x91
 1485 01db 74       		.sleb128 -12
 1486 01dc 00       		.byte	0
 1487 01dd 0E       		.uleb128 0xe
 1488 01de 01       		.byte	0x1
 1489 01df 20010000 		.4byte	.LASF31
 1490 01e3 01       		.byte	0x1
 1491 01e4 B701     		.2byte	0x1b7
 1492 01e6 01       		.byte	0x1
 1493 01e7 90000000 		.4byte	0x90
 1494 01eb 00000000 		.4byte	.LFB7
 1495 01ef 44000000 		.4byte	.LFE7
 1496 01f3 4C010000 		.4byte	.LLST7
 1497 01f7 01       		.byte	0x1
 1498 01f8 1B020000 		.4byte	0x21b
 1499 01fc 0C       		.uleb128 0xc
 1500 01fd FA010000 		.4byte	.LASF33
 1501 0201 01       		.byte	0x1
 1502 0202 B701     		.2byte	0x1b7
 1503 0204 85000000 		.4byte	0x85
 1504 0208 02       		.byte	0x2
 1505 0209 91       		.byte	0x91
 1506 020a 6C       		.sleb128 -20
 1507 020b 0D       		.uleb128 0xd
 1508 020c DA010000 		.4byte	.LASF34
 1509 0210 01       		.byte	0x1
 1510 0211 B901     		.2byte	0x1b9
 1511 0213 85000000 		.4byte	0x85
 1512 0217 02       		.byte	0x2
 1513 0218 91       		.byte	0x91
 1514 0219 74       		.sleb128 -12
 1515 021a 00       		.byte	0
 1516 021b 0F       		.uleb128 0xf
 1517 021c 01       		.byte	0x1
 1518 021d 30010000 		.4byte	.LASF36
 1519 0221 01       		.byte	0x1
 1520 0222 E401     		.2byte	0x1e4
 1521 0224 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 42


 1522 0225 00000000 		.4byte	.LFB8
 1523 0229 1C000000 		.4byte	.LFE8
 1524 022d 84010000 		.4byte	.LLST8
 1525 0231 01       		.byte	0x1
 1526 0232 46020000 		.4byte	0x246
 1527 0236 0C       		.uleb128 0xc
 1528 0237 47020000 		.4byte	.LASF37
 1529 023b 01       		.byte	0x1
 1530 023c E401     		.2byte	0x1e4
 1531 023e 85000000 		.4byte	0x85
 1532 0242 02       		.byte	0x2
 1533 0243 91       		.byte	0x91
 1534 0244 74       		.sleb128 -12
 1535 0245 00       		.byte	0
 1536 0246 0F       		.uleb128 0xf
 1537 0247 01       		.byte	0x1
 1538 0248 A3000000 		.4byte	.LASF38
 1539 024c 01       		.byte	0x1
 1540 024d 1002     		.2byte	0x210
 1541 024f 01       		.byte	0x1
 1542 0250 00000000 		.4byte	.LFB9
 1543 0254 30000000 		.4byte	.LFE9
 1544 0258 BC010000 		.4byte	.LLST9
 1545 025c 01       		.byte	0x1
 1546 025d 71020000 		.4byte	0x271
 1547 0261 0C       		.uleb128 0xc
 1548 0262 6A010000 		.4byte	.LASF39
 1549 0266 01       		.byte	0x1
 1550 0267 1002     		.2byte	0x210
 1551 0269 85000000 		.4byte	0x85
 1552 026d 02       		.byte	0x2
 1553 026e 91       		.byte	0x91
 1554 026f 74       		.sleb128 -12
 1555 0270 00       		.byte	0
 1556 0271 0F       		.uleb128 0xf
 1557 0272 01       		.byte	0x1
 1558 0273 F1000000 		.4byte	.LASF40
 1559 0277 01       		.byte	0x1
 1560 0278 2502     		.2byte	0x225
 1561 027a 01       		.byte	0x1
 1562 027b 00000000 		.4byte	.LFB10
 1563 027f 2C000000 		.4byte	.LFE10
 1564 0283 F4010000 		.4byte	.LLST10
 1565 0287 01       		.byte	0x1
 1566 0288 9C020000 		.4byte	0x29c
 1567 028c 0C       		.uleb128 0xc
 1568 028d 53000000 		.4byte	.LASF41
 1569 0291 01       		.byte	0x1
 1570 0292 2502     		.2byte	0x225
 1571 0294 85000000 		.4byte	0x85
 1572 0298 02       		.byte	0x2
 1573 0299 91       		.byte	0x91
 1574 029a 74       		.sleb128 -12
 1575 029b 00       		.byte	0
 1576 029c 0F       		.uleb128 0xf
 1577 029d 01       		.byte	0x1
 1578 029e 93010000 		.4byte	.LASF42
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 43


 1579 02a2 01       		.byte	0x1
 1580 02a3 3D02     		.2byte	0x23d
 1581 02a5 01       		.byte	0x1
 1582 02a6 00000000 		.4byte	.LFB11
 1583 02aa 1C000000 		.4byte	.LFE11
 1584 02ae 2C020000 		.4byte	.LLST11
 1585 02b2 01       		.byte	0x1
 1586 02b3 C7020000 		.4byte	0x2c7
 1587 02b7 0C       		.uleb128 0xc
 1588 02b8 47020000 		.4byte	.LASF37
 1589 02bc 01       		.byte	0x1
 1590 02bd 3D02     		.2byte	0x23d
 1591 02bf 85000000 		.4byte	0x85
 1592 02c3 02       		.byte	0x2
 1593 02c4 91       		.byte	0x91
 1594 02c5 74       		.sleb128 -12
 1595 02c6 00       		.byte	0
 1596 02c7 0F       		.uleb128 0xf
 1597 02c8 01       		.byte	0x1
 1598 02c9 40010000 		.4byte	.LASF43
 1599 02cd 01       		.byte	0x1
 1600 02ce 5402     		.2byte	0x254
 1601 02d0 01       		.byte	0x1
 1602 02d1 00000000 		.4byte	.LFB12
 1603 02d5 1C000000 		.4byte	.LFE12
 1604 02d9 64020000 		.4byte	.LLST12
 1605 02dd 01       		.byte	0x1
 1606 02de F2020000 		.4byte	0x2f2
 1607 02e2 0C       		.uleb128 0xc
 1608 02e3 47020000 		.4byte	.LASF37
 1609 02e7 01       		.byte	0x1
 1610 02e8 5402     		.2byte	0x254
 1611 02ea 85000000 		.4byte	0x85
 1612 02ee 02       		.byte	0x2
 1613 02ef 91       		.byte	0x91
 1614 02f0 74       		.sleb128 -12
 1615 02f1 00       		.byte	0
 1616 02f2 10       		.uleb128 0x10
 1617 02f3 01       		.byte	0x1
 1618 02f4 95000000 		.4byte	.LASF44
 1619 02f8 01       		.byte	0x1
 1620 02f9 7002     		.2byte	0x270
 1621 02fb 01       		.byte	0x1
 1622 02fc 00000000 		.4byte	.LFB13
 1623 0300 30000000 		.4byte	.LFE13
 1624 0304 9C020000 		.4byte	.LLST13
 1625 0308 01       		.byte	0x1
 1626 0309 2C030000 		.4byte	0x32c
 1627 030d 0C       		.uleb128 0xc
 1628 030e FA010000 		.4byte	.LASF33
 1629 0312 01       		.byte	0x1
 1630 0313 7002     		.2byte	0x270
 1631 0315 85000000 		.4byte	0x85
 1632 0319 02       		.byte	0x2
 1633 031a 91       		.byte	0x91
 1634 031b 74       		.sleb128 -12
 1635 031c 0C       		.uleb128 0xc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 44


 1636 031d 46000000 		.4byte	.LASF45
 1637 0321 01       		.byte	0x1
 1638 0322 7002     		.2byte	0x270
 1639 0324 90000000 		.4byte	0x90
 1640 0328 02       		.byte	0x2
 1641 0329 91       		.byte	0x91
 1642 032a 72       		.sleb128 -14
 1643 032b 00       		.byte	0
 1644 032c 10       		.uleb128 0x10
 1645 032d 01       		.byte	0x1
 1646 032e D7000000 		.4byte	.LASF46
 1647 0332 01       		.byte	0x1
 1648 0333 9202     		.2byte	0x292
 1649 0335 01       		.byte	0x1
 1650 0336 00000000 		.4byte	.LFB14
 1651 033a 2C000000 		.4byte	.LFE14
 1652 033e D4020000 		.4byte	.LLST14
 1653 0342 01       		.byte	0x1
 1654 0343 66030000 		.4byte	0x366
 1655 0347 0C       		.uleb128 0xc
 1656 0348 FA010000 		.4byte	.LASF33
 1657 034c 01       		.byte	0x1
 1658 034d 9202     		.2byte	0x292
 1659 034f 85000000 		.4byte	0x85
 1660 0353 02       		.byte	0x2
 1661 0354 91       		.byte	0x91
 1662 0355 74       		.sleb128 -12
 1663 0356 0C       		.uleb128 0xc
 1664 0357 73010000 		.4byte	.LASF47
 1665 035b 01       		.byte	0x1
 1666 035c 9202     		.2byte	0x292
 1667 035e 9B000000 		.4byte	0x9b
 1668 0362 02       		.byte	0x2
 1669 0363 91       		.byte	0x91
 1670 0364 70       		.sleb128 -16
 1671 0365 00       		.byte	0
 1672 0366 0E       		.uleb128 0xe
 1673 0367 01       		.byte	0x1
 1674 0368 5D000000 		.4byte	.LASF48
 1675 036c 01       		.byte	0x1
 1676 036d B302     		.2byte	0x2b3
 1677 036f 01       		.byte	0x1
 1678 0370 90000000 		.4byte	0x90
 1679 0374 00000000 		.4byte	.LFB15
 1680 0378 A4000000 		.4byte	.LFE15
 1681 037c 0C030000 		.4byte	.LLST15
 1682 0380 01       		.byte	0x1
 1683 0381 B3030000 		.4byte	0x3b3
 1684 0385 0C       		.uleb128 0xc
 1685 0386 FA010000 		.4byte	.LASF33
 1686 038a 01       		.byte	0x1
 1687 038b B302     		.2byte	0x2b3
 1688 038d 85000000 		.4byte	0x85
 1689 0391 02       		.byte	0x2
 1690 0392 91       		.byte	0x91
 1691 0393 6C       		.sleb128 -20
 1692 0394 0C       		.uleb128 0xc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 45


 1693 0395 82010000 		.4byte	.LASF49
 1694 0399 01       		.byte	0x1
 1695 039a B302     		.2byte	0x2b3
 1696 039c 90000000 		.4byte	0x90
 1697 03a0 02       		.byte	0x2
 1698 03a1 91       		.byte	0x91
 1699 03a2 6A       		.sleb128 -22
 1700 03a3 0D       		.uleb128 0xd
 1701 03a4 FF010000 		.4byte	.LASF50
 1702 03a8 01       		.byte	0x1
 1703 03a9 B502     		.2byte	0x2b5
 1704 03ab 90000000 		.4byte	0x90
 1705 03af 02       		.byte	0x2
 1706 03b0 91       		.byte	0x91
 1707 03b1 76       		.sleb128 -10
 1708 03b2 00       		.byte	0
 1709 03b3 0E       		.uleb128 0xe
 1710 03b4 01       		.byte	0x1
 1711 03b5 0F020000 		.4byte	.LASF51
 1712 03b9 01       		.byte	0x1
 1713 03ba E902     		.2byte	0x2e9
 1714 03bc 01       		.byte	0x1
 1715 03bd 9B000000 		.4byte	0x9b
 1716 03c1 00000000 		.4byte	.LFB16
 1717 03c5 98000000 		.4byte	.LFE16
 1718 03c9 44030000 		.4byte	.LLST16
 1719 03cd 01       		.byte	0x1
 1720 03ce 00040000 		.4byte	0x400
 1721 03d2 0C       		.uleb128 0xc
 1722 03d3 FA010000 		.4byte	.LASF33
 1723 03d7 01       		.byte	0x1
 1724 03d8 E902     		.2byte	0x2e9
 1725 03da 85000000 		.4byte	0x85
 1726 03de 02       		.byte	0x2
 1727 03df 91       		.byte	0x91
 1728 03e0 64       		.sleb128 -28
 1729 03e1 0C       		.uleb128 0xc
 1730 03e2 82010000 		.4byte	.LASF49
 1731 03e6 01       		.byte	0x1
 1732 03e7 E902     		.2byte	0x2e9
 1733 03e9 90000000 		.4byte	0x90
 1734 03ed 02       		.byte	0x2
 1735 03ee 91       		.byte	0x91
 1736 03ef 62       		.sleb128 -30
 1737 03f0 0D       		.uleb128 0xd
 1738 03f1 71000000 		.4byte	.LASF52
 1739 03f5 01       		.byte	0x1
 1740 03f6 EB02     		.2byte	0x2eb
 1741 03f8 BF000000 		.4byte	0xbf
 1742 03fc 02       		.byte	0x2
 1743 03fd 91       		.byte	0x91
 1744 03fe 68       		.sleb128 -24
 1745 03ff 00       		.byte	0
 1746 0400 0E       		.uleb128 0xe
 1747 0401 01       		.byte	0x1
 1748 0402 23020000 		.4byte	.LASF53
 1749 0406 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 46


 1750 0407 1603     		.2byte	0x316
 1751 0409 01       		.byte	0x1
 1752 040a A6000000 		.4byte	0xa6
 1753 040e 00000000 		.4byte	.LFB17
 1754 0412 80000000 		.4byte	.LFE17
 1755 0416 7C030000 		.4byte	.LLST17
 1756 041a 01       		.byte	0x1
 1757 041b 4D040000 		.4byte	0x44d
 1758 041f 0C       		.uleb128 0xc
 1759 0420 FA010000 		.4byte	.LASF33
 1760 0424 01       		.byte	0x1
 1761 0425 1603     		.2byte	0x316
 1762 0427 85000000 		.4byte	0x85
 1763 042b 02       		.byte	0x2
 1764 042c 91       		.byte	0x91
 1765 042d 64       		.sleb128 -28
 1766 042e 0C       		.uleb128 0xc
 1767 042f 82010000 		.4byte	.LASF49
 1768 0433 01       		.byte	0x1
 1769 0434 1603     		.2byte	0x316
 1770 0436 90000000 		.4byte	0x90
 1771 043a 02       		.byte	0x2
 1772 043b 91       		.byte	0x91
 1773 043c 62       		.sleb128 -30
 1774 043d 0D       		.uleb128 0xd
 1775 043e F4010000 		.4byte	.LASF54
 1776 0442 01       		.byte	0x1
 1777 0443 1803     		.2byte	0x318
 1778 0445 A6000000 		.4byte	0xa6
 1779 0449 02       		.byte	0x2
 1780 044a 91       		.byte	0x91
 1781 044b 6C       		.sleb128 -20
 1782 044c 00       		.byte	0
 1783 044d 11       		.uleb128 0x11
 1784 044e 85000000 		.4byte	0x85
 1785 0452 5D040000 		.4byte	0x45d
 1786 0456 12       		.uleb128 0x12
 1787 0457 E1000000 		.4byte	0xe1
 1788 045b 00       		.byte	0
 1789 045c 00       		.byte	0
 1790 045d 08       		.uleb128 0x8
 1791 045e 0E000000 		.4byte	.LASF55
 1792 0462 01       		.byte	0x1
 1793 0463 22       		.byte	0x22
 1794 0464 6E040000 		.4byte	0x46e
 1795 0468 05       		.byte	0x5
 1796 0469 03       		.byte	0x3
 1797 046a 00000000 		.4byte	ADC_channelsConfig
 1798 046e 13       		.uleb128 0x13
 1799 046f 4D040000 		.4byte	0x44d
 1800 0473 14       		.uleb128 0x14
 1801 0474 1F030000 		.4byte	.LASF56
 1802 0478 01       		.byte	0x1
 1803 0479 19       		.byte	0x19
 1804 047a 6F000000 		.4byte	0x6f
 1805 047e 01       		.byte	0x1
 1806 047f 05       		.byte	0x5
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 47


 1807 0480 03       		.byte	0x3
 1808 0481 00000000 		.4byte	ADC_initVar
 1809 0485 11       		.uleb128 0x11
 1810 0486 90000000 		.4byte	0x90
 1811 048a 95040000 		.4byte	0x495
 1812 048e 12       		.uleb128 0x12
 1813 048f E1000000 		.4byte	0xe1
 1814 0493 00       		.byte	0
 1815 0494 00       		.byte	0
 1816 0495 14       		.uleb128 0x14
 1817 0496 C2000000 		.4byte	.LASF57
 1818 049a 01       		.byte	0x1
 1819 049b 1A       		.byte	0x1a
 1820 049c A7040000 		.4byte	0x4a7
 1821 04a0 01       		.byte	0x1
 1822 04a1 05       		.byte	0x5
 1823 04a2 03       		.byte	0x3
 1824 04a3 00000000 		.4byte	ADC_offset
 1825 04a7 05       		.uleb128 0x5
 1826 04a8 85040000 		.4byte	0x485
 1827 04ac 11       		.uleb128 0x11
 1828 04ad 9B000000 		.4byte	0x9b
 1829 04b1 BC040000 		.4byte	0x4bc
 1830 04b5 12       		.uleb128 0x12
 1831 04b6 E1000000 		.4byte	0xe1
 1832 04ba 00       		.byte	0
 1833 04bb 00       		.byte	0
 1834 04bc 14       		.uleb128 0x14
 1835 04bd F1020000 		.4byte	.LASF58
 1836 04c1 01       		.byte	0x1
 1837 04c2 1B       		.byte	0x1b
 1838 04c3 CE040000 		.4byte	0x4ce
 1839 04c7 01       		.byte	0x1
 1840 04c8 05       		.byte	0x5
 1841 04c9 03       		.byte	0x3
 1842 04ca 00000000 		.4byte	ADC_countsPer10Volt
 1843 04ce 05       		.uleb128 0x5
 1844 04cf AC040000 		.4byte	0x4ac
 1845 04d3 00       		.byte	0
 1846              		.section	.debug_abbrev,"",%progbits
 1847              	.Ldebug_abbrev0:
 1848 0000 01       		.uleb128 0x1
 1849 0001 11       		.uleb128 0x11
 1850 0002 01       		.byte	0x1
 1851 0003 25       		.uleb128 0x25
 1852 0004 0E       		.uleb128 0xe
 1853 0005 13       		.uleb128 0x13
 1854 0006 0B       		.uleb128 0xb
 1855 0007 03       		.uleb128 0x3
 1856 0008 0E       		.uleb128 0xe
 1857 0009 1B       		.uleb128 0x1b
 1858 000a 0E       		.uleb128 0xe
 1859 000b 55       		.uleb128 0x55
 1860 000c 06       		.uleb128 0x6
 1861 000d 11       		.uleb128 0x11
 1862 000e 01       		.uleb128 0x1
 1863 000f 52       		.uleb128 0x52
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 48


 1864 0010 01       		.uleb128 0x1
 1865 0011 10       		.uleb128 0x10
 1866 0012 06       		.uleb128 0x6
 1867 0013 00       		.byte	0
 1868 0014 00       		.byte	0
 1869 0015 02       		.uleb128 0x2
 1870 0016 24       		.uleb128 0x24
 1871 0017 00       		.byte	0
 1872 0018 0B       		.uleb128 0xb
 1873 0019 0B       		.uleb128 0xb
 1874 001a 3E       		.uleb128 0x3e
 1875 001b 0B       		.uleb128 0xb
 1876 001c 03       		.uleb128 0x3
 1877 001d 0E       		.uleb128 0xe
 1878 001e 00       		.byte	0
 1879 001f 00       		.byte	0
 1880 0020 03       		.uleb128 0x3
 1881 0021 24       		.uleb128 0x24
 1882 0022 00       		.byte	0
 1883 0023 0B       		.uleb128 0xb
 1884 0024 0B       		.uleb128 0xb
 1885 0025 3E       		.uleb128 0x3e
 1886 0026 0B       		.uleb128 0xb
 1887 0027 03       		.uleb128 0x3
 1888 0028 08       		.uleb128 0x8
 1889 0029 00       		.byte	0
 1890 002a 00       		.byte	0
 1891 002b 04       		.uleb128 0x4
 1892 002c 16       		.uleb128 0x16
 1893 002d 00       		.byte	0
 1894 002e 03       		.uleb128 0x3
 1895 002f 0E       		.uleb128 0xe
 1896 0030 3A       		.uleb128 0x3a
 1897 0031 0B       		.uleb128 0xb
 1898 0032 3B       		.uleb128 0x3b
 1899 0033 0B       		.uleb128 0xb
 1900 0034 49       		.uleb128 0x49
 1901 0035 13       		.uleb128 0x13
 1902 0036 00       		.byte	0
 1903 0037 00       		.byte	0
 1904 0038 05       		.uleb128 0x5
 1905 0039 35       		.uleb128 0x35
 1906 003a 00       		.byte	0
 1907 003b 49       		.uleb128 0x49
 1908 003c 13       		.uleb128 0x13
 1909 003d 00       		.byte	0
 1910 003e 00       		.byte	0
 1911 003f 06       		.uleb128 0x6
 1912 0040 2E       		.uleb128 0x2e
 1913 0041 00       		.byte	0
 1914 0042 3F       		.uleb128 0x3f
 1915 0043 0C       		.uleb128 0xc
 1916 0044 03       		.uleb128 0x3
 1917 0045 0E       		.uleb128 0xe
 1918 0046 3A       		.uleb128 0x3a
 1919 0047 0B       		.uleb128 0xb
 1920 0048 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 49


 1921 0049 0B       		.uleb128 0xb
 1922 004a 27       		.uleb128 0x27
 1923 004b 0C       		.uleb128 0xc
 1924 004c 11       		.uleb128 0x11
 1925 004d 01       		.uleb128 0x1
 1926 004e 12       		.uleb128 0x12
 1927 004f 01       		.uleb128 0x1
 1928 0050 40       		.uleb128 0x40
 1929 0051 06       		.uleb128 0x6
 1930 0052 9642     		.uleb128 0x2116
 1931 0054 0C       		.uleb128 0xc
 1932 0055 00       		.byte	0
 1933 0056 00       		.byte	0
 1934 0057 07       		.uleb128 0x7
 1935 0058 2E       		.uleb128 0x2e
 1936 0059 01       		.byte	0x1
 1937 005a 3F       		.uleb128 0x3f
 1938 005b 0C       		.uleb128 0xc
 1939 005c 03       		.uleb128 0x3
 1940 005d 0E       		.uleb128 0xe
 1941 005e 3A       		.uleb128 0x3a
 1942 005f 0B       		.uleb128 0xb
 1943 0060 3B       		.uleb128 0x3b
 1944 0061 0B       		.uleb128 0xb
 1945 0062 27       		.uleb128 0x27
 1946 0063 0C       		.uleb128 0xc
 1947 0064 11       		.uleb128 0x11
 1948 0065 01       		.uleb128 0x1
 1949 0066 12       		.uleb128 0x12
 1950 0067 01       		.uleb128 0x1
 1951 0068 40       		.uleb128 0x40
 1952 0069 06       		.uleb128 0x6
 1953 006a 9642     		.uleb128 0x2116
 1954 006c 0C       		.uleb128 0xc
 1955 006d 01       		.uleb128 0x1
 1956 006e 13       		.uleb128 0x13
 1957 006f 00       		.byte	0
 1958 0070 00       		.byte	0
 1959 0071 08       		.uleb128 0x8
 1960 0072 34       		.uleb128 0x34
 1961 0073 00       		.byte	0
 1962 0074 03       		.uleb128 0x3
 1963 0075 0E       		.uleb128 0xe
 1964 0076 3A       		.uleb128 0x3a
 1965 0077 0B       		.uleb128 0xb
 1966 0078 3B       		.uleb128 0x3b
 1967 0079 0B       		.uleb128 0xb
 1968 007a 49       		.uleb128 0x49
 1969 007b 13       		.uleb128 0x13
 1970 007c 02       		.uleb128 0x2
 1971 007d 0A       		.uleb128 0xa
 1972 007e 00       		.byte	0
 1973 007f 00       		.byte	0
 1974 0080 09       		.uleb128 0x9
 1975 0081 2E       		.uleb128 0x2e
 1976 0082 00       		.byte	0
 1977 0083 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 50


 1978 0084 0C       		.uleb128 0xc
 1979 0085 03       		.uleb128 0x3
 1980 0086 0E       		.uleb128 0xe
 1981 0087 3A       		.uleb128 0x3a
 1982 0088 0B       		.uleb128 0xb
 1983 0089 3B       		.uleb128 0x3b
 1984 008a 05       		.uleb128 0x5
 1985 008b 27       		.uleb128 0x27
 1986 008c 0C       		.uleb128 0xc
 1987 008d 11       		.uleb128 0x11
 1988 008e 01       		.uleb128 0x1
 1989 008f 12       		.uleb128 0x12
 1990 0090 01       		.uleb128 0x1
 1991 0091 40       		.uleb128 0x40
 1992 0092 06       		.uleb128 0x6
 1993 0093 9642     		.uleb128 0x2116
 1994 0095 0C       		.uleb128 0xc
 1995 0096 00       		.byte	0
 1996 0097 00       		.byte	0
 1997 0098 0A       		.uleb128 0xa
 1998 0099 2E       		.uleb128 0x2e
 1999 009a 00       		.byte	0
 2000 009b 3F       		.uleb128 0x3f
 2001 009c 0C       		.uleb128 0xc
 2002 009d 03       		.uleb128 0x3
 2003 009e 0E       		.uleb128 0xe
 2004 009f 3A       		.uleb128 0x3a
 2005 00a0 0B       		.uleb128 0xb
 2006 00a1 3B       		.uleb128 0x3b
 2007 00a2 05       		.uleb128 0x5
 2008 00a3 27       		.uleb128 0x27
 2009 00a4 0C       		.uleb128 0xc
 2010 00a5 11       		.uleb128 0x11
 2011 00a6 01       		.uleb128 0x1
 2012 00a7 12       		.uleb128 0x12
 2013 00a8 01       		.uleb128 0x1
 2014 00a9 40       		.uleb128 0x40
 2015 00aa 06       		.uleb128 0x6
 2016 00ab 9742     		.uleb128 0x2117
 2017 00ad 0C       		.uleb128 0xc
 2018 00ae 00       		.byte	0
 2019 00af 00       		.byte	0
 2020 00b0 0B       		.uleb128 0xb
 2021 00b1 2E       		.uleb128 0x2e
 2022 00b2 01       		.byte	0x1
 2023 00b3 3F       		.uleb128 0x3f
 2024 00b4 0C       		.uleb128 0xc
 2025 00b5 03       		.uleb128 0x3
 2026 00b6 0E       		.uleb128 0xe
 2027 00b7 3A       		.uleb128 0x3a
 2028 00b8 0B       		.uleb128 0xb
 2029 00b9 3B       		.uleb128 0x3b
 2030 00ba 05       		.uleb128 0x5
 2031 00bb 27       		.uleb128 0x27
 2032 00bc 0C       		.uleb128 0xc
 2033 00bd 49       		.uleb128 0x49
 2034 00be 13       		.uleb128 0x13
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 51


 2035 00bf 11       		.uleb128 0x11
 2036 00c0 01       		.uleb128 0x1
 2037 00c1 12       		.uleb128 0x12
 2038 00c2 01       		.uleb128 0x1
 2039 00c3 40       		.uleb128 0x40
 2040 00c4 06       		.uleb128 0x6
 2041 00c5 9742     		.uleb128 0x2117
 2042 00c7 0C       		.uleb128 0xc
 2043 00c8 01       		.uleb128 0x1
 2044 00c9 13       		.uleb128 0x13
 2045 00ca 00       		.byte	0
 2046 00cb 00       		.byte	0
 2047 00cc 0C       		.uleb128 0xc
 2048 00cd 05       		.uleb128 0x5
 2049 00ce 00       		.byte	0
 2050 00cf 03       		.uleb128 0x3
 2051 00d0 0E       		.uleb128 0xe
 2052 00d1 3A       		.uleb128 0x3a
 2053 00d2 0B       		.uleb128 0xb
 2054 00d3 3B       		.uleb128 0x3b
 2055 00d4 05       		.uleb128 0x5
 2056 00d5 49       		.uleb128 0x49
 2057 00d6 13       		.uleb128 0x13
 2058 00d7 02       		.uleb128 0x2
 2059 00d8 0A       		.uleb128 0xa
 2060 00d9 00       		.byte	0
 2061 00da 00       		.byte	0
 2062 00db 0D       		.uleb128 0xd
 2063 00dc 34       		.uleb128 0x34
 2064 00dd 00       		.byte	0
 2065 00de 03       		.uleb128 0x3
 2066 00df 0E       		.uleb128 0xe
 2067 00e0 3A       		.uleb128 0x3a
 2068 00e1 0B       		.uleb128 0xb
 2069 00e2 3B       		.uleb128 0x3b
 2070 00e3 05       		.uleb128 0x5
 2071 00e4 49       		.uleb128 0x49
 2072 00e5 13       		.uleb128 0x13
 2073 00e6 02       		.uleb128 0x2
 2074 00e7 0A       		.uleb128 0xa
 2075 00e8 00       		.byte	0
 2076 00e9 00       		.byte	0
 2077 00ea 0E       		.uleb128 0xe
 2078 00eb 2E       		.uleb128 0x2e
 2079 00ec 01       		.byte	0x1
 2080 00ed 3F       		.uleb128 0x3f
 2081 00ee 0C       		.uleb128 0xc
 2082 00ef 03       		.uleb128 0x3
 2083 00f0 0E       		.uleb128 0xe
 2084 00f1 3A       		.uleb128 0x3a
 2085 00f2 0B       		.uleb128 0xb
 2086 00f3 3B       		.uleb128 0x3b
 2087 00f4 05       		.uleb128 0x5
 2088 00f5 27       		.uleb128 0x27
 2089 00f6 0C       		.uleb128 0xc
 2090 00f7 49       		.uleb128 0x49
 2091 00f8 13       		.uleb128 0x13
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 52


 2092 00f9 11       		.uleb128 0x11
 2093 00fa 01       		.uleb128 0x1
 2094 00fb 12       		.uleb128 0x12
 2095 00fc 01       		.uleb128 0x1
 2096 00fd 40       		.uleb128 0x40
 2097 00fe 06       		.uleb128 0x6
 2098 00ff 9642     		.uleb128 0x2116
 2099 0101 0C       		.uleb128 0xc
 2100 0102 01       		.uleb128 0x1
 2101 0103 13       		.uleb128 0x13
 2102 0104 00       		.byte	0
 2103 0105 00       		.byte	0
 2104 0106 0F       		.uleb128 0xf
 2105 0107 2E       		.uleb128 0x2e
 2106 0108 01       		.byte	0x1
 2107 0109 3F       		.uleb128 0x3f
 2108 010a 0C       		.uleb128 0xc
 2109 010b 03       		.uleb128 0x3
 2110 010c 0E       		.uleb128 0xe
 2111 010d 3A       		.uleb128 0x3a
 2112 010e 0B       		.uleb128 0xb
 2113 010f 3B       		.uleb128 0x3b
 2114 0110 05       		.uleb128 0x5
 2115 0111 27       		.uleb128 0x27
 2116 0112 0C       		.uleb128 0xc
 2117 0113 11       		.uleb128 0x11
 2118 0114 01       		.uleb128 0x1
 2119 0115 12       		.uleb128 0x12
 2120 0116 01       		.uleb128 0x1
 2121 0117 40       		.uleb128 0x40
 2122 0118 06       		.uleb128 0x6
 2123 0119 9742     		.uleb128 0x2117
 2124 011b 0C       		.uleb128 0xc
 2125 011c 01       		.uleb128 0x1
 2126 011d 13       		.uleb128 0x13
 2127 011e 00       		.byte	0
 2128 011f 00       		.byte	0
 2129 0120 10       		.uleb128 0x10
 2130 0121 2E       		.uleb128 0x2e
 2131 0122 01       		.byte	0x1
 2132 0123 3F       		.uleb128 0x3f
 2133 0124 0C       		.uleb128 0xc
 2134 0125 03       		.uleb128 0x3
 2135 0126 0E       		.uleb128 0xe
 2136 0127 3A       		.uleb128 0x3a
 2137 0128 0B       		.uleb128 0xb
 2138 0129 3B       		.uleb128 0x3b
 2139 012a 05       		.uleb128 0x5
 2140 012b 27       		.uleb128 0x27
 2141 012c 0C       		.uleb128 0xc
 2142 012d 11       		.uleb128 0x11
 2143 012e 01       		.uleb128 0x1
 2144 012f 12       		.uleb128 0x12
 2145 0130 01       		.uleb128 0x1
 2146 0131 40       		.uleb128 0x40
 2147 0132 06       		.uleb128 0x6
 2148 0133 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 53


 2149 0135 0C       		.uleb128 0xc
 2150 0136 01       		.uleb128 0x1
 2151 0137 13       		.uleb128 0x13
 2152 0138 00       		.byte	0
 2153 0139 00       		.byte	0
 2154 013a 11       		.uleb128 0x11
 2155 013b 01       		.uleb128 0x1
 2156 013c 01       		.byte	0x1
 2157 013d 49       		.uleb128 0x49
 2158 013e 13       		.uleb128 0x13
 2159 013f 01       		.uleb128 0x1
 2160 0140 13       		.uleb128 0x13
 2161 0141 00       		.byte	0
 2162 0142 00       		.byte	0
 2163 0143 12       		.uleb128 0x12
 2164 0144 21       		.uleb128 0x21
 2165 0145 00       		.byte	0
 2166 0146 49       		.uleb128 0x49
 2167 0147 13       		.uleb128 0x13
 2168 0148 2F       		.uleb128 0x2f
 2169 0149 0B       		.uleb128 0xb
 2170 014a 00       		.byte	0
 2171 014b 00       		.byte	0
 2172 014c 13       		.uleb128 0x13
 2173 014d 26       		.uleb128 0x26
 2174 014e 00       		.byte	0
 2175 014f 49       		.uleb128 0x49
 2176 0150 13       		.uleb128 0x13
 2177 0151 00       		.byte	0
 2178 0152 00       		.byte	0
 2179 0153 14       		.uleb128 0x14
 2180 0154 34       		.uleb128 0x34
 2181 0155 00       		.byte	0
 2182 0156 03       		.uleb128 0x3
 2183 0157 0E       		.uleb128 0xe
 2184 0158 3A       		.uleb128 0x3a
 2185 0159 0B       		.uleb128 0xb
 2186 015a 3B       		.uleb128 0x3b
 2187 015b 0B       		.uleb128 0xb
 2188 015c 49       		.uleb128 0x49
 2189 015d 13       		.uleb128 0x13
 2190 015e 3F       		.uleb128 0x3f
 2191 015f 0C       		.uleb128 0xc
 2192 0160 02       		.uleb128 0x2
 2193 0161 0A       		.uleb128 0xa
 2194 0162 00       		.byte	0
 2195 0163 00       		.byte	0
 2196 0164 00       		.byte	0
 2197              		.section	.debug_loc,"",%progbits
 2198              	.Ldebug_loc0:
 2199              	.LLST0:
 2200 0000 00000000 		.4byte	.LFB0
 2201 0004 02000000 		.4byte	.LCFI0
 2202 0008 0200     		.2byte	0x2
 2203 000a 7D       		.byte	0x7d
 2204 000b 00       		.sleb128 0
 2205 000c 02000000 		.4byte	.LCFI0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 54


 2206 0010 04000000 		.4byte	.LCFI1
 2207 0014 0200     		.2byte	0x2
 2208 0016 7D       		.byte	0x7d
 2209 0017 08       		.sleb128 8
 2210 0018 04000000 		.4byte	.LCFI1
 2211 001c 24000000 		.4byte	.LFE0
 2212 0020 0200     		.2byte	0x2
 2213 0022 77       		.byte	0x77
 2214 0023 08       		.sleb128 8
 2215 0024 00000000 		.4byte	0
 2216 0028 00000000 		.4byte	0
 2217              	.LLST1:
 2218 002c 00000000 		.4byte	.LFB1
 2219 0030 02000000 		.4byte	.LCFI2
 2220 0034 0200     		.2byte	0x2
 2221 0036 7D       		.byte	0x7d
 2222 0037 00       		.sleb128 0
 2223 0038 02000000 		.4byte	.LCFI2
 2224 003c 04000000 		.4byte	.LCFI3
 2225 0040 0200     		.2byte	0x2
 2226 0042 7D       		.byte	0x7d
 2227 0043 0C       		.sleb128 12
 2228 0044 04000000 		.4byte	.LCFI3
 2229 0048 06000000 		.4byte	.LCFI4
 2230 004c 0200     		.2byte	0x2
 2231 004e 7D       		.byte	0x7d
 2232 004f 20       		.sleb128 32
 2233 0050 06000000 		.4byte	.LCFI4
 2234 0054 B8010000 		.4byte	.LFE1
 2235 0058 0200     		.2byte	0x2
 2236 005a 77       		.byte	0x77
 2237 005b 20       		.sleb128 32
 2238 005c 00000000 		.4byte	0
 2239 0060 00000000 		.4byte	0
 2240              	.LLST2:
 2241 0064 00000000 		.4byte	.LFB2
 2242 0068 02000000 		.4byte	.LCFI5
 2243 006c 0200     		.2byte	0x2
 2244 006e 7D       		.byte	0x7d
 2245 006f 00       		.sleb128 0
 2246 0070 02000000 		.4byte	.LCFI5
 2247 0074 04000000 		.4byte	.LCFI6
 2248 0078 0200     		.2byte	0x2
 2249 007a 7D       		.byte	0x7d
 2250 007b 08       		.sleb128 8
 2251 007c 04000000 		.4byte	.LCFI6
 2252 0080 20000000 		.4byte	.LFE2
 2253 0084 0200     		.2byte	0x2
 2254 0086 77       		.byte	0x77
 2255 0087 08       		.sleb128 8
 2256 0088 00000000 		.4byte	0
 2257 008c 00000000 		.4byte	0
 2258              	.LLST3:
 2259 0090 00000000 		.4byte	.LFB3
 2260 0094 02000000 		.4byte	.LCFI7
 2261 0098 0200     		.2byte	0x2
 2262 009a 7D       		.byte	0x7d
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 55


 2263 009b 00       		.sleb128 0
 2264 009c 02000000 		.4byte	.LCFI7
 2265 00a0 04000000 		.4byte	.LCFI8
 2266 00a4 0200     		.2byte	0x2
 2267 00a6 7D       		.byte	0x7d
 2268 00a7 08       		.sleb128 8
 2269 00a8 04000000 		.4byte	.LCFI8
 2270 00ac 18000000 		.4byte	.LFE3
 2271 00b0 0200     		.2byte	0x2
 2272 00b2 77       		.byte	0x77
 2273 00b3 08       		.sleb128 8
 2274 00b4 00000000 		.4byte	0
 2275 00b8 00000000 		.4byte	0
 2276              	.LLST4:
 2277 00bc 00000000 		.4byte	.LFB4
 2278 00c0 02000000 		.4byte	.LCFI9
 2279 00c4 0200     		.2byte	0x2
 2280 00c6 7D       		.byte	0x7d
 2281 00c7 00       		.sleb128 0
 2282 00c8 02000000 		.4byte	.LCFI9
 2283 00cc 04000000 		.4byte	.LCFI10
 2284 00d0 0200     		.2byte	0x2
 2285 00d2 7D       		.byte	0x7d
 2286 00d3 08       		.sleb128 8
 2287 00d4 04000000 		.4byte	.LCFI10
 2288 00d8 1C000000 		.4byte	.LFE4
 2289 00dc 0200     		.2byte	0x2
 2290 00de 77       		.byte	0x77
 2291 00df 08       		.sleb128 8
 2292 00e0 00000000 		.4byte	0
 2293 00e4 00000000 		.4byte	0
 2294              	.LLST5:
 2295 00e8 00000000 		.4byte	.LFB5
 2296 00ec 02000000 		.4byte	.LCFI11
 2297 00f0 0200     		.2byte	0x2
 2298 00f2 7D       		.byte	0x7d
 2299 00f3 00       		.sleb128 0
 2300 00f4 02000000 		.4byte	.LCFI11
 2301 00f8 04000000 		.4byte	.LCFI12
 2302 00fc 0200     		.2byte	0x2
 2303 00fe 7D       		.byte	0x7d
 2304 00ff 08       		.sleb128 8
 2305 0100 04000000 		.4byte	.LCFI12
 2306 0104 1C000000 		.4byte	.LFE5
 2307 0108 0200     		.2byte	0x2
 2308 010a 77       		.byte	0x77
 2309 010b 08       		.sleb128 8
 2310 010c 00000000 		.4byte	0
 2311 0110 00000000 		.4byte	0
 2312              	.LLST6:
 2313 0114 00000000 		.4byte	.LFB6
 2314 0118 02000000 		.4byte	.LCFI13
 2315 011c 0200     		.2byte	0x2
 2316 011e 7D       		.byte	0x7d
 2317 011f 00       		.sleb128 0
 2318 0120 02000000 		.4byte	.LCFI13
 2319 0124 04000000 		.4byte	.LCFI14
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 56


 2320 0128 0200     		.2byte	0x2
 2321 012a 7D       		.byte	0x7d
 2322 012b 08       		.sleb128 8
 2323 012c 04000000 		.4byte	.LCFI14
 2324 0130 06000000 		.4byte	.LCFI15
 2325 0134 0200     		.2byte	0x2
 2326 0136 7D       		.byte	0x7d
 2327 0137 18       		.sleb128 24
 2328 0138 06000000 		.4byte	.LCFI15
 2329 013c 48000000 		.4byte	.LFE6
 2330 0140 0200     		.2byte	0x2
 2331 0142 77       		.byte	0x77
 2332 0143 18       		.sleb128 24
 2333 0144 00000000 		.4byte	0
 2334 0148 00000000 		.4byte	0
 2335              	.LLST7:
 2336 014c 00000000 		.4byte	.LFB7
 2337 0150 02000000 		.4byte	.LCFI16
 2338 0154 0200     		.2byte	0x2
 2339 0156 7D       		.byte	0x7d
 2340 0157 00       		.sleb128 0
 2341 0158 02000000 		.4byte	.LCFI16
 2342 015c 04000000 		.4byte	.LCFI17
 2343 0160 0200     		.2byte	0x2
 2344 0162 7D       		.byte	0x7d
 2345 0163 08       		.sleb128 8
 2346 0164 04000000 		.4byte	.LCFI17
 2347 0168 06000000 		.4byte	.LCFI18
 2348 016c 0200     		.2byte	0x2
 2349 016e 7D       		.byte	0x7d
 2350 016f 18       		.sleb128 24
 2351 0170 06000000 		.4byte	.LCFI18
 2352 0174 44000000 		.4byte	.LFE7
 2353 0178 0200     		.2byte	0x2
 2354 017a 77       		.byte	0x77
 2355 017b 18       		.sleb128 24
 2356 017c 00000000 		.4byte	0
 2357 0180 00000000 		.4byte	0
 2358              	.LLST8:
 2359 0184 00000000 		.4byte	.LFB8
 2360 0188 02000000 		.4byte	.LCFI19
 2361 018c 0200     		.2byte	0x2
 2362 018e 7D       		.byte	0x7d
 2363 018f 00       		.sleb128 0
 2364 0190 02000000 		.4byte	.LCFI19
 2365 0194 04000000 		.4byte	.LCFI20
 2366 0198 0200     		.2byte	0x2
 2367 019a 7D       		.byte	0x7d
 2368 019b 08       		.sleb128 8
 2369 019c 04000000 		.4byte	.LCFI20
 2370 01a0 06000000 		.4byte	.LCFI21
 2371 01a4 0200     		.2byte	0x2
 2372 01a6 7D       		.byte	0x7d
 2373 01a7 10       		.sleb128 16
 2374 01a8 06000000 		.4byte	.LCFI21
 2375 01ac 1C000000 		.4byte	.LFE8
 2376 01b0 0200     		.2byte	0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 57


 2377 01b2 77       		.byte	0x77
 2378 01b3 10       		.sleb128 16
 2379 01b4 00000000 		.4byte	0
 2380 01b8 00000000 		.4byte	0
 2381              	.LLST9:
 2382 01bc 00000000 		.4byte	.LFB9
 2383 01c0 02000000 		.4byte	.LCFI22
 2384 01c4 0200     		.2byte	0x2
 2385 01c6 7D       		.byte	0x7d
 2386 01c7 00       		.sleb128 0
 2387 01c8 02000000 		.4byte	.LCFI22
 2388 01cc 04000000 		.4byte	.LCFI23
 2389 01d0 0200     		.2byte	0x2
 2390 01d2 7D       		.byte	0x7d
 2391 01d3 08       		.sleb128 8
 2392 01d4 04000000 		.4byte	.LCFI23
 2393 01d8 06000000 		.4byte	.LCFI24
 2394 01dc 0200     		.2byte	0x2
 2395 01de 7D       		.byte	0x7d
 2396 01df 10       		.sleb128 16
 2397 01e0 06000000 		.4byte	.LCFI24
 2398 01e4 30000000 		.4byte	.LFE9
 2399 01e8 0200     		.2byte	0x2
 2400 01ea 77       		.byte	0x77
 2401 01eb 10       		.sleb128 16
 2402 01ec 00000000 		.4byte	0
 2403 01f0 00000000 		.4byte	0
 2404              	.LLST10:
 2405 01f4 00000000 		.4byte	.LFB10
 2406 01f8 02000000 		.4byte	.LCFI25
 2407 01fc 0200     		.2byte	0x2
 2408 01fe 7D       		.byte	0x7d
 2409 01ff 00       		.sleb128 0
 2410 0200 02000000 		.4byte	.LCFI25
 2411 0204 04000000 		.4byte	.LCFI26
 2412 0208 0200     		.2byte	0x2
 2413 020a 7D       		.byte	0x7d
 2414 020b 08       		.sleb128 8
 2415 020c 04000000 		.4byte	.LCFI26
 2416 0210 06000000 		.4byte	.LCFI27
 2417 0214 0200     		.2byte	0x2
 2418 0216 7D       		.byte	0x7d
 2419 0217 10       		.sleb128 16
 2420 0218 06000000 		.4byte	.LCFI27
 2421 021c 2C000000 		.4byte	.LFE10
 2422 0220 0200     		.2byte	0x2
 2423 0222 77       		.byte	0x77
 2424 0223 10       		.sleb128 16
 2425 0224 00000000 		.4byte	0
 2426 0228 00000000 		.4byte	0
 2427              	.LLST11:
 2428 022c 00000000 		.4byte	.LFB11
 2429 0230 02000000 		.4byte	.LCFI28
 2430 0234 0200     		.2byte	0x2
 2431 0236 7D       		.byte	0x7d
 2432 0237 00       		.sleb128 0
 2433 0238 02000000 		.4byte	.LCFI28
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 58


 2434 023c 04000000 		.4byte	.LCFI29
 2435 0240 0200     		.2byte	0x2
 2436 0242 7D       		.byte	0x7d
 2437 0243 08       		.sleb128 8
 2438 0244 04000000 		.4byte	.LCFI29
 2439 0248 06000000 		.4byte	.LCFI30
 2440 024c 0200     		.2byte	0x2
 2441 024e 7D       		.byte	0x7d
 2442 024f 10       		.sleb128 16
 2443 0250 06000000 		.4byte	.LCFI30
 2444 0254 1C000000 		.4byte	.LFE11
 2445 0258 0200     		.2byte	0x2
 2446 025a 77       		.byte	0x77
 2447 025b 10       		.sleb128 16
 2448 025c 00000000 		.4byte	0
 2449 0260 00000000 		.4byte	0
 2450              	.LLST12:
 2451 0264 00000000 		.4byte	.LFB12
 2452 0268 02000000 		.4byte	.LCFI31
 2453 026c 0200     		.2byte	0x2
 2454 026e 7D       		.byte	0x7d
 2455 026f 00       		.sleb128 0
 2456 0270 02000000 		.4byte	.LCFI31
 2457 0274 04000000 		.4byte	.LCFI32
 2458 0278 0200     		.2byte	0x2
 2459 027a 7D       		.byte	0x7d
 2460 027b 08       		.sleb128 8
 2461 027c 04000000 		.4byte	.LCFI32
 2462 0280 06000000 		.4byte	.LCFI33
 2463 0284 0200     		.2byte	0x2
 2464 0286 7D       		.byte	0x7d
 2465 0287 10       		.sleb128 16
 2466 0288 06000000 		.4byte	.LCFI33
 2467 028c 1C000000 		.4byte	.LFE12
 2468 0290 0200     		.2byte	0x2
 2469 0292 77       		.byte	0x77
 2470 0293 10       		.sleb128 16
 2471 0294 00000000 		.4byte	0
 2472 0298 00000000 		.4byte	0
 2473              	.LLST13:
 2474 029c 00000000 		.4byte	.LFB13
 2475 02a0 02000000 		.4byte	.LCFI34
 2476 02a4 0200     		.2byte	0x2
 2477 02a6 7D       		.byte	0x7d
 2478 02a7 00       		.sleb128 0
 2479 02a8 02000000 		.4byte	.LCFI34
 2480 02ac 04000000 		.4byte	.LCFI35
 2481 02b0 0200     		.2byte	0x2
 2482 02b2 7D       		.byte	0x7d
 2483 02b3 08       		.sleb128 8
 2484 02b4 04000000 		.4byte	.LCFI35
 2485 02b8 06000000 		.4byte	.LCFI36
 2486 02bc 0200     		.2byte	0x2
 2487 02be 7D       		.byte	0x7d
 2488 02bf 10       		.sleb128 16
 2489 02c0 06000000 		.4byte	.LCFI36
 2490 02c4 30000000 		.4byte	.LFE13
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 59


 2491 02c8 0200     		.2byte	0x2
 2492 02ca 77       		.byte	0x77
 2493 02cb 10       		.sleb128 16
 2494 02cc 00000000 		.4byte	0
 2495 02d0 00000000 		.4byte	0
 2496              	.LLST14:
 2497 02d4 00000000 		.4byte	.LFB14
 2498 02d8 02000000 		.4byte	.LCFI37
 2499 02dc 0200     		.2byte	0x2
 2500 02de 7D       		.byte	0x7d
 2501 02df 00       		.sleb128 0
 2502 02e0 02000000 		.4byte	.LCFI37
 2503 02e4 04000000 		.4byte	.LCFI38
 2504 02e8 0200     		.2byte	0x2
 2505 02ea 7D       		.byte	0x7d
 2506 02eb 08       		.sleb128 8
 2507 02ec 04000000 		.4byte	.LCFI38
 2508 02f0 06000000 		.4byte	.LCFI39
 2509 02f4 0200     		.2byte	0x2
 2510 02f6 7D       		.byte	0x7d
 2511 02f7 10       		.sleb128 16
 2512 02f8 06000000 		.4byte	.LCFI39
 2513 02fc 2C000000 		.4byte	.LFE14
 2514 0300 0200     		.2byte	0x2
 2515 0302 77       		.byte	0x77
 2516 0303 10       		.sleb128 16
 2517 0304 00000000 		.4byte	0
 2518 0308 00000000 		.4byte	0
 2519              	.LLST15:
 2520 030c 00000000 		.4byte	.LFB15
 2521 0310 02000000 		.4byte	.LCFI40
 2522 0314 0200     		.2byte	0x2
 2523 0316 7D       		.byte	0x7d
 2524 0317 00       		.sleb128 0
 2525 0318 02000000 		.4byte	.LCFI40
 2526 031c 04000000 		.4byte	.LCFI41
 2527 0320 0200     		.2byte	0x2
 2528 0322 7D       		.byte	0x7d
 2529 0323 08       		.sleb128 8
 2530 0324 04000000 		.4byte	.LCFI41
 2531 0328 06000000 		.4byte	.LCFI42
 2532 032c 0200     		.2byte	0x2
 2533 032e 7D       		.byte	0x7d
 2534 032f 18       		.sleb128 24
 2535 0330 06000000 		.4byte	.LCFI42
 2536 0334 A4000000 		.4byte	.LFE15
 2537 0338 0200     		.2byte	0x2
 2538 033a 77       		.byte	0x77
 2539 033b 18       		.sleb128 24
 2540 033c 00000000 		.4byte	0
 2541 0340 00000000 		.4byte	0
 2542              	.LLST16:
 2543 0344 00000000 		.4byte	.LFB16
 2544 0348 02000000 		.4byte	.LCFI43
 2545 034c 0200     		.2byte	0x2
 2546 034e 7D       		.byte	0x7d
 2547 034f 00       		.sleb128 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 60


 2548 0350 02000000 		.4byte	.LCFI43
 2549 0354 04000000 		.4byte	.LCFI44
 2550 0358 0200     		.2byte	0x2
 2551 035a 7D       		.byte	0x7d
 2552 035b 10       		.sleb128 16
 2553 035c 04000000 		.4byte	.LCFI44
 2554 0360 06000000 		.4byte	.LCFI45
 2555 0364 0200     		.2byte	0x2
 2556 0366 7D       		.byte	0x7d
 2557 0367 28       		.sleb128 40
 2558 0368 06000000 		.4byte	.LCFI45
 2559 036c 98000000 		.4byte	.LFE16
 2560 0370 0200     		.2byte	0x2
 2561 0372 77       		.byte	0x77
 2562 0373 28       		.sleb128 40
 2563 0374 00000000 		.4byte	0
 2564 0378 00000000 		.4byte	0
 2565              	.LLST17:
 2566 037c 00000000 		.4byte	.LFB17
 2567 0380 02000000 		.4byte	.LCFI46
 2568 0384 0200     		.2byte	0x2
 2569 0386 7D       		.byte	0x7d
 2570 0387 00       		.sleb128 0
 2571 0388 02000000 		.4byte	.LCFI46
 2572 038c 04000000 		.4byte	.LCFI47
 2573 0390 0200     		.2byte	0x2
 2574 0392 7D       		.byte	0x7d
 2575 0393 0C       		.sleb128 12
 2576 0394 04000000 		.4byte	.LCFI47
 2577 0398 06000000 		.4byte	.LCFI48
 2578 039c 0200     		.2byte	0x2
 2579 039e 7D       		.byte	0x7d
 2580 039f 20       		.sleb128 32
 2581 03a0 06000000 		.4byte	.LCFI48
 2582 03a4 80000000 		.4byte	.LFE17
 2583 03a8 0200     		.2byte	0x2
 2584 03aa 77       		.byte	0x77
 2585 03ab 20       		.sleb128 32
 2586 03ac 00000000 		.4byte	0
 2587 03b0 00000000 		.4byte	0
 2588              		.section	.debug_aranges,"",%progbits
 2589 0000 A4000000 		.4byte	0xa4
 2590 0004 0200     		.2byte	0x2
 2591 0006 00000000 		.4byte	.Ldebug_info0
 2592 000a 04       		.byte	0x4
 2593 000b 00       		.byte	0
 2594 000c 0000     		.2byte	0
 2595 000e 0000     		.2byte	0
 2596 0010 00000000 		.4byte	.LFB0
 2597 0014 24000000 		.4byte	.LFE0-.LFB0
 2598 0018 00000000 		.4byte	.LFB1
 2599 001c B8010000 		.4byte	.LFE1-.LFB1
 2600 0020 00000000 		.4byte	.LFB2
 2601 0024 20000000 		.4byte	.LFE2-.LFB2
 2602 0028 00000000 		.4byte	.LFB3
 2603 002c 18000000 		.4byte	.LFE3-.LFB3
 2604 0030 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 61


 2605 0034 1C000000 		.4byte	.LFE4-.LFB4
 2606 0038 00000000 		.4byte	.LFB5
 2607 003c 1C000000 		.4byte	.LFE5-.LFB5
 2608 0040 00000000 		.4byte	.LFB6
 2609 0044 48000000 		.4byte	.LFE6-.LFB6
 2610 0048 00000000 		.4byte	.LFB7
 2611 004c 44000000 		.4byte	.LFE7-.LFB7
 2612 0050 00000000 		.4byte	.LFB8
 2613 0054 1C000000 		.4byte	.LFE8-.LFB8
 2614 0058 00000000 		.4byte	.LFB9
 2615 005c 30000000 		.4byte	.LFE9-.LFB9
 2616 0060 00000000 		.4byte	.LFB10
 2617 0064 2C000000 		.4byte	.LFE10-.LFB10
 2618 0068 00000000 		.4byte	.LFB11
 2619 006c 1C000000 		.4byte	.LFE11-.LFB11
 2620 0070 00000000 		.4byte	.LFB12
 2621 0074 1C000000 		.4byte	.LFE12-.LFB12
 2622 0078 00000000 		.4byte	.LFB13
 2623 007c 30000000 		.4byte	.LFE13-.LFB13
 2624 0080 00000000 		.4byte	.LFB14
 2625 0084 2C000000 		.4byte	.LFE14-.LFB14
 2626 0088 00000000 		.4byte	.LFB15
 2627 008c A4000000 		.4byte	.LFE15-.LFB15
 2628 0090 00000000 		.4byte	.LFB16
 2629 0094 98000000 		.4byte	.LFE16-.LFB16
 2630 0098 00000000 		.4byte	.LFB17
 2631 009c 80000000 		.4byte	.LFE17-.LFB17
 2632 00a0 00000000 		.4byte	0
 2633 00a4 00000000 		.4byte	0
 2634              		.section	.debug_ranges,"",%progbits
 2635              	.Ldebug_ranges0:
 2636 0000 00000000 		.4byte	.LFB0
 2637 0004 24000000 		.4byte	.LFE0
 2638 0008 00000000 		.4byte	.LFB1
 2639 000c B8010000 		.4byte	.LFE1
 2640 0010 00000000 		.4byte	.LFB2
 2641 0014 20000000 		.4byte	.LFE2
 2642 0018 00000000 		.4byte	.LFB3
 2643 001c 18000000 		.4byte	.LFE3
 2644 0020 00000000 		.4byte	.LFB4
 2645 0024 1C000000 		.4byte	.LFE4
 2646 0028 00000000 		.4byte	.LFB5
 2647 002c 1C000000 		.4byte	.LFE5
 2648 0030 00000000 		.4byte	.LFB6
 2649 0034 48000000 		.4byte	.LFE6
 2650 0038 00000000 		.4byte	.LFB7
 2651 003c 44000000 		.4byte	.LFE7
 2652 0040 00000000 		.4byte	.LFB8
 2653 0044 1C000000 		.4byte	.LFE8
 2654 0048 00000000 		.4byte	.LFB9
 2655 004c 30000000 		.4byte	.LFE9
 2656 0050 00000000 		.4byte	.LFB10
 2657 0054 2C000000 		.4byte	.LFE10
 2658 0058 00000000 		.4byte	.LFB11
 2659 005c 1C000000 		.4byte	.LFE11
 2660 0060 00000000 		.4byte	.LFB12
 2661 0064 1C000000 		.4byte	.LFE12
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 62


 2662 0068 00000000 		.4byte	.LFB13
 2663 006c 30000000 		.4byte	.LFE13
 2664 0070 00000000 		.4byte	.LFB14
 2665 0074 2C000000 		.4byte	.LFE14
 2666 0078 00000000 		.4byte	.LFB15
 2667 007c A4000000 		.4byte	.LFE15
 2668 0080 00000000 		.4byte	.LFB16
 2669 0084 98000000 		.4byte	.LFE16
 2670 0088 00000000 		.4byte	.LFB17
 2671 008c 80000000 		.4byte	.LFE17
 2672 0090 00000000 		.4byte	0
 2673 0094 00000000 		.4byte	0
 2674              		.section	.debug_line,"",%progbits
 2675              	.Ldebug_line0:
 2676 0000 2B020000 		.section	.debug_str,"MS",%progbits,1
 2676      02004200 
 2676      00000201 
 2676      FB0E0D00 
 2676      01010101 
 2677              	.LASF6:
 2678 0000 6C6F6E67 		.ascii	"long long int\000"
 2678      206C6F6E 
 2678      6720696E 
 2678      7400
 2679              	.LASF55:
 2680 000e 4144435F 		.ascii	"ADC_channelsConfig\000"
 2680      6368616E 
 2680      6E656C73 
 2680      436F6E66 
 2680      696700
 2681              	.LASF19:
 2682 0021 72656733 		.ascii	"reg32\000"
 2682      3200
 2683              	.LASF60:
 2684 0027 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2684      6E657261 
 2684      7465645F 
 2684      536F7572 
 2684      63655C50 
 2685              	.LASF45:
 2686 0046 6F666673 		.ascii	"offset\000"
 2686      657400
 2687              	.LASF15:
 2688 004d 666C6F61 		.ascii	"float\000"
 2688      7400
 2689              	.LASF41:
 2690 0053 68696768 		.ascii	"highLimit\000"
 2690      4C696D69 
 2690      7400
 2691              	.LASF48:
 2692 005d 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2692      436F756E 
 2692      7473546F 
 2692      5F6D566F 
 2692      6C747300 
 2693              	.LASF52:
 2694 0071 75566F6C 		.ascii	"uVolts\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 63


 2694      747300
 2695              	.LASF3:
 2696 0078 73686F72 		.ascii	"short unsigned int\000"
 2696      7420756E 
 2696      7369676E 
 2696      65642069 
 2696      6E7400
 2697              	.LASF2:
 2698 008b 73686F72 		.ascii	"short int\000"
 2698      7420696E 
 2698      7400
 2699              	.LASF44:
 2700 0095 4144435F 		.ascii	"ADC_SetOffset\000"
 2700      5365744F 
 2700      66667365 
 2700      7400
 2701              	.LASF38:
 2702 00a3 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2702      5365744C 
 2702      6F774C69 
 2702      6D697400 
 2703              	.LASF29:
 2704 00b3 73746174 		.ascii	"status\000"
 2704      757300
 2705              	.LASF14:
 2706 00ba 666C6F61 		.ascii	"float32\000"
 2706      74333200 
 2707              	.LASF57:
 2708 00c2 4144435F 		.ascii	"ADC_offset\000"
 2708      6F666673 
 2708      657400
 2709              	.LASF22:
 2710 00cd 746D7052 		.ascii	"tmpRegVal\000"
 2710      65675661 
 2710      6C00
 2711              	.LASF46:
 2712 00d7 4144435F 		.ascii	"ADC_SetGain\000"
 2712      53657447 
 2712      61696E00 
 2713              	.LASF1:
 2714 00e3 756E7369 		.ascii	"unsigned char\000"
 2714      676E6564 
 2714      20636861 
 2714      7200
 2715              	.LASF40:
 2716 00f1 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2716      53657448 
 2716      6967684C 
 2716      696D6974 
 2716      00
 2717              	.LASF12:
 2718 0102 696E7431 		.ascii	"int16\000"
 2718      3600
 2719              	.LASF5:
 2720 0108 6C6F6E67 		.ascii	"long unsigned int\000"
 2720      20756E73 
 2720      69676E65 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 64


 2720      6420696E 
 2720      7400
 2721              	.LASF13:
 2722 011a 696E7433 		.ascii	"int32\000"
 2722      3200
 2723              	.LASF31:
 2724 0120 4144435F 		.ascii	"ADC_GetResult16\000"
 2724      47657452 
 2724      6573756C 
 2724      74313600 
 2725              	.LASF36:
 2726 0130 4144435F 		.ascii	"ADC_SetChanMask\000"
 2726      53657443 
 2726      68616E4D 
 2726      61736B00 
 2727              	.LASF43:
 2728 0140 4144435F 		.ascii	"ADC_SetSatMask\000"
 2728      53657453 
 2728      61744D61 
 2728      736B00
 2729              	.LASF30:
 2730 014f 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2730      4973456E 
 2730      64436F6E 
 2730      76657273 
 2730      696F6E00 
 2731              	.LASF16:
 2732 0163 646F7562 		.ascii	"double\000"
 2732      6C6500
 2733              	.LASF39:
 2734 016a 6C6F774C 		.ascii	"lowLimit\000"
 2734      696D6974 
 2734      00
 2735              	.LASF47:
 2736 0173 61646347 		.ascii	"adcGain\000"
 2736      61696E00 
 2737              	.LASF10:
 2738 017b 75696E74 		.ascii	"uint16\000"
 2738      313600
 2739              	.LASF49:
 2740 0182 61646343 		.ascii	"adcCounts\000"
 2740      6F756E74 
 2740      7300
 2741              	.LASF11:
 2742 018c 75696E74 		.ascii	"uint32\000"
 2742      333200
 2743              	.LASF42:
 2744 0193 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2744      5365744C 
 2744      696D6974 
 2744      4D61736B 
 2744      00
 2745              	.LASF8:
 2746 01a4 756E7369 		.ascii	"unsigned int\000"
 2746      676E6564 
 2746      20696E74 
 2746      00
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 65


 2747              	.LASF25:
 2748 01b1 4144435F 		.ascii	"ADC_Enable\000"
 2748      456E6162 
 2748      6C6500
 2749              	.LASF23:
 2750 01bc 636F756E 		.ascii	"counts\000"
 2750      747300
 2751              	.LASF7:
 2752 01c3 6C6F6E67 		.ascii	"long long unsigned int\000"
 2752      206C6F6E 
 2752      6720756E 
 2752      7369676E 
 2752      65642069 
 2753              	.LASF34:
 2754 01da 72657375 		.ascii	"result\000"
 2754      6C7400
 2755              	.LASF24:
 2756 01e1 4144435F 		.ascii	"ADC_Start\000"
 2756      53746172 
 2756      7400
 2757              	.LASF35:
 2758 01eb 4144435F 		.ascii	"ADC_Init\000"
 2758      496E6974 
 2758      00
 2759              	.LASF54:
 2760 01f4 766F6C74 		.ascii	"volts\000"
 2760      7300
 2761              	.LASF33:
 2762 01fa 6368616E 		.ascii	"chan\000"
 2762      00
 2763              	.LASF50:
 2764 01ff 6D566F6C 		.ascii	"mVolts\000"
 2764      747300
 2765              	.LASF20:
 2766 0206 73697A65 		.ascii	"sizetype\000"
 2766      74797065 
 2766      00
 2767              	.LASF51:
 2768 020f 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2768      436F756E 
 2768      7473546F 
 2768      5F75566F 
 2768      6C747300 
 2769              	.LASF53:
 2770 0223 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2770      436F756E 
 2770      7473546F 
 2770      5F566F6C 
 2770      747300
 2771              	.LASF27:
 2772 0236 4144435F 		.ascii	"ADC_StartConvert\000"
 2772      53746172 
 2772      74436F6E 
 2772      76657274 
 2772      00
 2773              	.LASF37:
 2774 0247 6D61736B 		.ascii	"mask\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 66


 2774      00
 2775              	.LASF21:
 2776 024c 63684E75 		.ascii	"chNum\000"
 2776      6D00
 2777              	.LASF61:
 2778 0252 433A5C70 		.ascii	"C:\\perforce\\gjl_work\\apps\\CYSC\\Cypress_PSoC_Ac"
 2778      6572666F 
 2778      7263655C 
 2778      676A6C5F 
 2778      776F726B 
 2779 0280 6164656D 		.ascii	"ademy\\101_basic\\Projects\\Simon_Rev03\\Simon_Slav"
 2779      795C3130 
 2779      315F6261 
 2779      7369635C 
 2779      50726F6A 
 2780 02af 655F5069 		.ascii	"e_Pioneer\\Simon_Slave_Pioneer.cydsn\000"
 2780      6F6E6565 
 2780      725C5369 
 2780      6D6F6E5F 
 2780      536C6176 
 2781              	.LASF32:
 2782 02d3 7265744D 		.ascii	"retMode\000"
 2782      6F646500 
 2783              	.LASF28:
 2784 02db 4144435F 		.ascii	"ADC_StopConvert\000"
 2784      53746F70 
 2784      436F6E76 
 2784      65727400 
 2785              	.LASF9:
 2786 02eb 75696E74 		.ascii	"uint8\000"
 2786      3800
 2787              	.LASF58:
 2788 02f1 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2788      636F756E 
 2788      74735065 
 2788      72313056 
 2788      6F6C7400 
 2789              	.LASF4:
 2790 0305 6C6F6E67 		.ascii	"long int\000"
 2790      20696E74 
 2790      00
 2791              	.LASF18:
 2792 030e 63686172 		.ascii	"char\000"
 2792      00
 2793              	.LASF0:
 2794 0313 7369676E 		.ascii	"signed char\000"
 2794      65642063 
 2794      68617200 
 2795              	.LASF56:
 2796 031f 4144435F 		.ascii	"ADC_initVar\000"
 2796      696E6974 
 2796      56617200 
 2797              	.LASF59:
 2798 032b 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2798      4320342E 
 2798      372E3320 
 2798      32303133 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccgxKkTI.s 			page 67


 2798      30333132 
 2799 035e 616E6368 		.ascii	"anch revision 196615]\000"
 2799      20726576 
 2799      6973696F 
 2799      6E203139 
 2799      36363135 
 2800              	.LASF17:
 2801 0374 696E7436 		.ascii	"int64\000"
 2801      3400
 2802              	.LASF26:
 2803 037a 4144435F 		.ascii	"ADC_Stop\000"
 2803      53746F70 
 2803      00
 2804              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
