ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_Fail.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_Fail_initVar
  18              		.bss
  19              		.type	PWM_Fail_initVar, %object
  20              		.size	PWM_Fail_initVar, 1
  21              	PWM_Fail_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_Fail_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_Fail_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_Fail_Init, %function
  29              	PWM_Fail_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_Fail.c"
   1:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_Fail.c **** * File Name: PWM_Fail.c
   3:.\Generated_Source\PSoC4/PWM_Fail.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/PWM_Fail.c **** *
   5:.\Generated_Source\PSoC4/PWM_Fail.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_Fail.c **** *  This file provides the source code to the API for the PWM_Fail
   7:.\Generated_Source\PSoC4/PWM_Fail.c **** *  component
   8:.\Generated_Source\PSoC4/PWM_Fail.c **** *
   9:.\Generated_Source\PSoC4/PWM_Fail.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
  11:.\Generated_Source\PSoC4/PWM_Fail.c **** *
  12:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_Fail.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_Fail.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_Fail.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_Fail.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  19:.\Generated_Source\PSoC4/PWM_Fail.c **** #include "PWM_Fail.h"
  20:.\Generated_Source\PSoC4/PWM_Fail.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  22:.\Generated_Source\PSoC4/PWM_Fail.c **** uint8 PWM_Fail_initVar = 0u;
  23:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  24:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  25:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_Init
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/PWM_Fail.c **** *
  29:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
  30:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Initialize/Restore default PWM_Fail configuration.
  31:.\Generated_Source\PSoC4/PWM_Fail.c **** *
  32:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
  33:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
  34:.\Generated_Source\PSoC4/PWM_Fail.c **** *
  35:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
  36:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
  37:.\Generated_Source\PSoC4/PWM_Fail.c **** *
  38:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_Init(void)
  40:.\Generated_Source\PSoC4/PWM_Fail.c **** {
  32              		.loc 1 40 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 00AF     		add	r7, sp, #0
  40              	.LCFI1:
  41              		.cfi_def_cfa_register 7
  41:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  42:.\Generated_Source\PSoC4/PWM_Fail.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__QUAD == PWM_Fail_CONFIG)
  44:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_CONTROL_REG =
  45:.\Generated_Source\PSoC4/PWM_Fail.c ****         (((uint32)(PWM_Fail_QUAD_ENCODING_MODES     << PWM_Fail_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_CONFIG                  << PWM_Fail_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__QUAD == PWM_Fail_CONFIG) */
  48:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  49:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG)
  50:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_CONTROL_REG =
  42              		.loc 1 50 0
  43 0004 0E4B     		ldr	r3, .L2
  44 0006 8022     		mov	r2, #128
  45 0008 D204     		lsl	r2, r2, #19
  46 000a 1A60     		str	r2, [r3]
  51:.\Generated_Source\PSoC4/PWM_Fail.c ****         (((uint32)(PWM_Fail_PWM_STOP_EVENT          << PWM_Fail_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_PWM_OUT_INVERT          << PWM_Fail_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_PWM_OUT_N_INVERT        << PWM_Fail_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_PWM_MODE                << PWM_Fail_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  56:.\Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail__PWM_PR == PWM_Fail_PWM_MODE)
  57:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/PWM_Fail.c ****             ((uint32)(PWM_Fail_PWM_RUN_MODE         << PWM_Fail_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  60:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WriteCounter(PWM_Fail_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/PWM_Fail.c ****         #else
  62:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_CONTROL_REG |=
  47              		.loc 1 62 0
  48 000c 0C4B     		ldr	r3, .L2
  49 000e 0C4A     		ldr	r2, .L2
  50 0010 1268     		ldr	r2, [r2]
  51 0012 1A60     		str	r2, [r3]
  63:.\Generated_Source\PSoC4/PWM_Fail.c ****             (((uint32)(PWM_Fail_PWM_ALIGN           << PWM_Fail_UPDOWN_SHIFT))          |
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 3


  64:.\Generated_Source\PSoC4/PWM_Fail.c ****              ((uint32)(PWM_Fail_PWM_KILL_EVENT      << PWM_Fail_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (PWM_Fail__PWM_PR == PWM_Fail_PWM_MODE) */
  66:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  67:.\Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail__PWM_DT == PWM_Fail_PWM_MODE)
  68:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/PWM_Fail.c ****             ((uint32)(PWM_Fail_PWM_DEAD_TIME_CYCLE  << PWM_Fail_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (PWM_Fail__PWM_DT == PWM_Fail_PWM_MODE) */
  71:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  72:.\Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail__PWM == PWM_Fail_PWM_MODE)
  73:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_CONTROL_REG |=
  52              		.loc 1 73 0
  53 0014 0A4B     		ldr	r3, .L2
  54 0016 0A4A     		ldr	r2, .L2
  55 0018 1268     		ldr	r2, [r2]
  56 001a 1A60     		str	r2, [r3]
  74:.\Generated_Source\PSoC4/PWM_Fail.c ****             ((uint32)PWM_Fail_PWM_PRESCALER         << PWM_Fail_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (PWM_Fail__PWM == PWM_Fail_PWM_MODE) */
  76:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG) */
  77:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  78:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__TIMER == PWM_Fail_CONFIG)
  79:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_CONTROL_REG =
  80:.\Generated_Source\PSoC4/PWM_Fail.c ****         (((uint32)(PWM_Fail_TC_PRESCALER            << PWM_Fail_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_TC_COUNTER_MODE         << PWM_Fail_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_TC_RUN_MODE             << PWM_Fail_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_TC_COMP_CAP_MODE        << PWM_Fail_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__TIMER == PWM_Fail_CONFIG) */
  85:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  86:.\Generated_Source\PSoC4/PWM_Fail.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__QUAD == PWM_Fail_CONFIG)
  88:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/PWM_Fail.c ****         (((uint32)(PWM_Fail_QUAD_PHIA_SIGNAL_MODE   << PWM_Fail_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_QUAD_INDEX_SIGNAL_MODE  << PWM_Fail_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_QUAD_STOP_SIGNAL_MODE   << PWM_Fail_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_QUAD_PHIB_SIGNAL_MODE   << PWM_Fail_START_SHIFT)));
  93:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__QUAD == PWM_Fail_CONFIG) */
  94:.\Generated_Source\PSoC4/PWM_Fail.c **** 
  95:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG)
  96:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_TRIG_CONTROL1_REG  =
  57              		.loc 1 96 0
  58 001c 094B     		ldr	r3, .L2+4
  59 001e 0C22     		mov	r2, #12
  60 0020 1A60     		str	r2, [r3]
  97:.\Generated_Source\PSoC4/PWM_Fail.c ****         (((uint32)(PWM_Fail_PWM_SWITCH_SIGNAL_MODE  << PWM_Fail_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_PWM_COUNT_SIGNAL_MODE   << PWM_Fail_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_PWM_RELOAD_SIGNAL_MODE  << PWM_Fail_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_PWM_STOP_SIGNAL_MODE    << PWM_Fail_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_PWM_START_SIGNAL_MODE   << PWM_Fail_START_SHIFT)));
 102:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG) */
 103:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 104:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__TIMER == PWM_Fail_CONFIG)
 105:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_TRIG_CONTROL1_REG  =
 106:.\Generated_Source\PSoC4/PWM_Fail.c ****         (((uint32)(PWM_Fail_TC_CAPTURE_SIGNAL_MODE  << PWM_Fail_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_TC_COUNT_SIGNAL_MODE    << PWM_Fail_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_TC_RELOAD_SIGNAL_MODE   << PWM_Fail_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_TC_STOP_SIGNAL_MODE     << PWM_Fail_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/PWM_Fail.c ****          ((uint32)(PWM_Fail_TC_START_SIGNAL_MODE    << PWM_Fail_START_SHIFT)));
 111:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__TIMER == PWM_Fail_CONFIG) */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 4


 112:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 113:.\Generated_Source\PSoC4/PWM_Fail.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__QUAD == PWM_Fail_CONFIG)
 115:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_SetInterruptMode(PWM_Fail_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__QUAD == PWM_Fail_CONFIG) */
 117:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 118:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG)
 119:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_SetInterruptMode(PWM_Fail_PWM_INTERRUPT_MASK);
  61              		.loc 1 119 0
  62 0022 0120     		mov	r0, #1
  63 0024 FFF7FEFF 		bl	PWM_Fail_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG) */
 121:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 122:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__TIMER == PWM_Fail_CONFIG)
 123:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_SetInterruptMode(PWM_Fail_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__TIMER == PWM_Fail_CONFIG) */
 125:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 126:.\Generated_Source\PSoC4/PWM_Fail.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__TIMER == PWM_Fail_CONFIG)
 128:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_WritePeriod(PWM_Fail_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 130:.\Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail__COUNT_DOWN == PWM_Fail_TC_COUNTER_MODE)
 131:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WriteCounter(PWM_Fail_TC_PERIOD_VALUE );
 132:.\Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (PWM_Fail__COUNT_DOWN == PWM_Fail_TC_COUNTER_MODE) */
 133:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 134:.\Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail__COMPARE == PWM_Fail_TC_COMP_CAP_MODE)
 135:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WriteCompare(PWM_Fail_TC_COMPARE_VALUE);
 136:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 137:.\Generated_Source\PSoC4/PWM_Fail.c ****             #if (1u == PWM_Fail_TC_COMPARE_SWAP)
 138:.\Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_SetCompareSwap(1u);
 139:.\Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_WriteCompareBuf(PWM_Fail_TC_COMPARE_BUF_VALUE);
 140:.\Generated_Source\PSoC4/PWM_Fail.c ****             #endif  /* (1u == PWM_Fail_TC_COMPARE_SWAP) */
 141:.\Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (PWM_Fail__COMPARE == PWM_Fail_TC_COMP_CAP_MODE) */
 142:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__TIMER == PWM_Fail_CONFIG) */
 143:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 144:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG)
 145:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_WritePeriod(PWM_Fail_PWM_PERIOD_VALUE );
  64              		.loc 1 145 0
  65 0028 1E20     		mov	r0, #30
  66 002a FFF7FEFF 		bl	PWM_Fail_WritePeriod
 146:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_WriteCompare(PWM_Fail_PWM_COMPARE_VALUE);
  67              		.loc 1 146 0
  68 002e 0F20     		mov	r0, #15
  69 0030 FFF7FEFF 		bl	PWM_Fail_WriteCompare
 147:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 148:.\Generated_Source\PSoC4/PWM_Fail.c ****         #if (1u == PWM_Fail_PWM_COMPARE_SWAP)
 149:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_SetCompareSwap(1u);
 150:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WriteCompareBuf(PWM_Fail_PWM_COMPARE_BUF_VALUE);
 151:.\Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (1u == PWM_Fail_PWM_COMPARE_SWAP) */
 152:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 153:.\Generated_Source\PSoC4/PWM_Fail.c ****         #if (1u == PWM_Fail_PWM_PERIOD_SWAP)
 154:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_SetPeriodSwap(1u);
 155:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WritePeriodBuf(PWM_Fail_PWM_PERIOD_BUF_VALUE);
 156:.\Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (1u == PWM_Fail_PWM_PERIOD_SWAP) */
 157:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 158:.\Generated_Source\PSoC4/PWM_Fail.c ****         /* Set values from customizer to CTRL2 */
 159:.\Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail__PWM_PR == PWM_Fail_PWM_MODE)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 5


 160:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_TRIG_CONTROL2_REG =
 161:.\Generated_Source\PSoC4/PWM_Fail.c ****                     (PWM_Fail_CC_MATCH_NO_CHANGE    |
 162:.\Generated_Source\PSoC4/PWM_Fail.c ****                     PWM_Fail_OVERLOW_NO_CHANGE      |
 163:.\Generated_Source\PSoC4/PWM_Fail.c ****                     PWM_Fail_UNDERFLOW_NO_CHANGE);
 164:.\Generated_Source\PSoC4/PWM_Fail.c ****         #else
 165:.\Generated_Source\PSoC4/PWM_Fail.c ****             #if (PWM_Fail__LEFT == PWM_Fail_PWM_ALIGN)
 166:.\Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_TRIG_CONTROL2_REG = PWM_Fail_PWM_MODE_LEFT;
  70              		.loc 1 166 0
  71 0034 044B     		ldr	r3, .L2+8
  72 0036 3122     		mov	r2, #49
  73 0038 1A60     		str	r2, [r3]
 167:.\Generated_Source\PSoC4/PWM_Fail.c ****             #endif  /* ( PWM_Fail_PWM_LEFT == PWM_Fail_PWM_ALIGN) */
 168:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 169:.\Generated_Source\PSoC4/PWM_Fail.c ****             #if (PWM_Fail__RIGHT == PWM_Fail_PWM_ALIGN)
 170:.\Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_WriteCounter(PWM_Fail_PWM_PERIOD_VALUE);
 171:.\Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_TRIG_CONTROL2_REG = PWM_Fail_PWM_MODE_RIGHT;
 172:.\Generated_Source\PSoC4/PWM_Fail.c ****             #endif  /* ( PWM_Fail_PWM_RIGHT == PWM_Fail_PWM_ALIGN) */
 173:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 174:.\Generated_Source\PSoC4/PWM_Fail.c ****             #if (PWM_Fail__CENTER == PWM_Fail_PWM_ALIGN)
 175:.\Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_TRIG_CONTROL2_REG = PWM_Fail_PWM_MODE_CENTER;
 176:.\Generated_Source\PSoC4/PWM_Fail.c ****             #endif  /* ( PWM_Fail_PWM_CENTER == PWM_Fail_PWM_ALIGN) */
 177:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 178:.\Generated_Source\PSoC4/PWM_Fail.c ****             #if (PWM_Fail__ASYMMETRIC == PWM_Fail_PWM_ALIGN)
 179:.\Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_TRIG_CONTROL2_REG = PWM_Fail_PWM_MODE_ASYM;
 180:.\Generated_Source\PSoC4/PWM_Fail.c ****             #endif  /* (PWM_Fail__ASYMMETRIC == PWM_Fail_PWM_ALIGN) */
 181:.\Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (PWM_Fail__PWM_PR == PWM_Fail_PWM_MODE) */
 182:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG) */
 183:.\Generated_Source\PSoC4/PWM_Fail.c **** }
  74              		.loc 1 183 0
  75 003a BD46     		mov	sp, r7
  76              		@ sp needed for prologue
  77 003c 80BD     		pop	{r7, pc}
  78              	.L3:
  79 003e C046     		.align	2
  80              	.L2:
  81 0040 00010540 		.word	1074069760
  82 0044 24010540 		.word	1074069796
  83 0048 28010540 		.word	1074069800
  84              		.cfi_endproc
  85              	.LFE0:
  86              		.size	PWM_Fail_Init, .-PWM_Fail_Init
  87              		.section	.text.PWM_Fail_Enable,"ax",%progbits
  88              		.align	2
  89              		.global	PWM_Fail_Enable
  90              		.code	16
  91              		.thumb_func
  92              		.type	PWM_Fail_Enable, %function
  93              	PWM_Fail_Enable:
  94              	.LFB1:
 184:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 185:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 186:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_Enable
 188:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 190:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 191:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Enables the PWM_Fail.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 6


 192:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 193:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 194:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 195:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 196:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 197:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 198:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 199:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_Enable(void)
 201:.\Generated_Source\PSoC4/PWM_Fail.c **** {
  95              		.loc 1 201 0
  96              		.cfi_startproc
  97 0000 90B5     		push	{r4, r7, lr}
  98              	.LCFI2:
  99              		.cfi_def_cfa_offset 12
 100              		.cfi_offset 4, -12
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 83B0     		sub	sp, sp, #12
 104              	.LCFI3:
 105              		.cfi_def_cfa_offset 24
 106 0004 00AF     		add	r7, sp, #0
 107              	.LCFI4:
 108              		.cfi_def_cfa_register 7
 202:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 203:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 204:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 109              		.loc 1 204 0
 110 0006 FC1D     		add	r4, r7, #7
 111 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 112 000c 031C     		mov	r3, r0
 113 000e 2370     		strb	r3, [r4]
 205:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_BLOCK_CONTROL_REG |= PWM_Fail_MASK;
 114              		.loc 1 205 0
 115 0010 084B     		ldr	r3, .L5
 116 0012 084A     		ldr	r2, .L5
 117 0014 1268     		ldr	r2, [r2]
 118 0016 0121     		mov	r1, #1
 119 0018 0A43     		orr	r2, r1
 120 001a 1A60     		str	r2, [r3]
 206:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 121              		.loc 1 206 0
 122 001c FB1D     		add	r3, r7, #7
 123 001e 1B78     		ldrb	r3, [r3]
 124 0020 181C     		mov	r0, r3
 125 0022 FFF7FEFF 		bl	CyExitCriticalSection
 207:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 208:.\Generated_Source\PSoC4/PWM_Fail.c ****     /* Start Timer or PWM if start input is absent */
 209:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG)
 210:.\Generated_Source\PSoC4/PWM_Fail.c ****         #if (0u == PWM_Fail_PWM_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_TriggerCommand(PWM_Fail_MASK, PWM_Fail_CMD_START);
 126              		.loc 1 211 0
 127 0026 0120     		mov	r0, #1
 128 0028 1821     		mov	r1, #24
 129 002a FFF7FEFF 		bl	PWM_Fail_TriggerCommand
 212:.\Generated_Source\PSoC4/PWM_Fail.c ****         #endif /* (0u == PWM_Fail_PWM_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG) */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 7


 214:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 215:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__TIMER == PWM_Fail_CONFIG)
 216:.\Generated_Source\PSoC4/PWM_Fail.c ****         #if (0u == PWM_Fail_TC_START_SIGNAL_PRESENT)
 217:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_TriggerCommand(PWM_Fail_MASK, PWM_Fail_CMD_START);
 218:.\Generated_Source\PSoC4/PWM_Fail.c ****         #endif /* (0u == PWM_Fail_TC_START_SIGNAL_PRESENT) */
 219:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail__TIMER == PWM_Fail_CONFIG) */
 220:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 130              		.loc 1 220 0
 131 002e BD46     		mov	sp, r7
 132 0030 03B0     		add	sp, sp, #12
 133              		@ sp needed for prologue
 134 0032 90BD     		pop	{r4, r7, pc}
 135              	.L6:
 136              		.align	2
 137              	.L5:
 138 0034 00000540 		.word	1074069504
 139              		.cfi_endproc
 140              	.LFE1:
 141              		.size	PWM_Fail_Enable, .-PWM_Fail_Enable
 142              		.section	.text.PWM_Fail_Start,"ax",%progbits
 143              		.align	2
 144              		.global	PWM_Fail_Start
 145              		.code	16
 146              		.thumb_func
 147              		.type	PWM_Fail_Start, %function
 148              	PWM_Fail_Start:
 149              	.LFB2:
 221:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 222:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 223:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_Start
 225:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 227:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 228:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Initializes the PWM_Fail with default customizer
 229:.\Generated_Source\PSoC4/PWM_Fail.c **** *  values when called the first time and enables the PWM_Fail.
 230:.\Generated_Source\PSoC4/PWM_Fail.c **** *  For subsequent calls the configuration is left unchanged and the component is
 231:.\Generated_Source\PSoC4/PWM_Fail.c **** *  just enabled.
 232:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 233:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 234:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 235:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 236:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 237:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 238:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 239:.\Generated_Source\PSoC4/PWM_Fail.c **** * Global variables:
 240:.\Generated_Source\PSoC4/PWM_Fail.c **** *  PWM_Fail_initVar: global variable is used to indicate initial
 241:.\Generated_Source\PSoC4/PWM_Fail.c **** *  configuration of this component.  The variable is initialized to zero and set
 242:.\Generated_Source\PSoC4/PWM_Fail.c **** *  to 1 the first time PWM_Fail_Start() is called. This allows
 243:.\Generated_Source\PSoC4/PWM_Fail.c **** *  enabling/disabling a component without re-initialization in all subsequent
 244:.\Generated_Source\PSoC4/PWM_Fail.c **** *  calls to the PWM_Fail_Start() routine.
 245:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 246:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_Start(void)
 248:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 150              		.loc 1 248 0
 151              		.cfi_startproc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 8


 152 0000 80B5     		push	{r7, lr}
 153              	.LCFI5:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 00AF     		add	r7, sp, #0
 158              	.LCFI6:
 159              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC4/PWM_Fail.c ****     if (0u == PWM_Fail_initVar)
 160              		.loc 1 249 0
 161 0004 064B     		ldr	r3, .L9
 162 0006 1B78     		ldrb	r3, [r3]
 163 0008 002B     		cmp	r3, #0
 164 000a 04D1     		bne	.L8
 250:.\Generated_Source\PSoC4/PWM_Fail.c ****     {
 251:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_Init();
 165              		.loc 1 251 0
 166 000c FFF7FEFF 		bl	PWM_Fail_Init
 252:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_initVar = 1u;
 167              		.loc 1 252 0
 168 0010 034B     		ldr	r3, .L9
 169 0012 0122     		mov	r2, #1
 170 0014 1A70     		strb	r2, [r3]
 171              	.L8:
 253:.\Generated_Source\PSoC4/PWM_Fail.c ****     }
 254:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 255:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_Enable();
 172              		.loc 1 255 0
 173 0016 FFF7FEFF 		bl	PWM_Fail_Enable
 256:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 174              		.loc 1 256 0
 175 001a BD46     		mov	sp, r7
 176              		@ sp needed for prologue
 177 001c 80BD     		pop	{r7, pc}
 178              	.L10:
 179 001e C046     		.align	2
 180              	.L9:
 181 0020 00000000 		.word	PWM_Fail_initVar
 182              		.cfi_endproc
 183              	.LFE2:
 184              		.size	PWM_Fail_Start, .-PWM_Fail_Start
 185              		.section	.text.PWM_Fail_Stop,"ax",%progbits
 186              		.align	2
 187              		.global	PWM_Fail_Stop
 188              		.code	16
 189              		.thumb_func
 190              		.type	PWM_Fail_Stop, %function
 191              	PWM_Fail_Stop:
 192              	.LFB3:
 257:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 258:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 259:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_Stop
 261:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 262:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 263:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 264:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Disables the PWM_Fail.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 9


 265:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 266:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 267:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 268:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 269:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 270:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 271:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 272:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 273:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_Stop(void)
 274:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 193              		.loc 1 274 0
 194              		.cfi_startproc
 195 0000 90B5     		push	{r4, r7, lr}
 196              	.LCFI7:
 197              		.cfi_def_cfa_offset 12
 198              		.cfi_offset 4, -12
 199              		.cfi_offset 7, -8
 200              		.cfi_offset 14, -4
 201 0002 83B0     		sub	sp, sp, #12
 202              	.LCFI8:
 203              		.cfi_def_cfa_offset 24
 204 0004 00AF     		add	r7, sp, #0
 205              	.LCFI9:
 206              		.cfi_def_cfa_register 7
 275:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 276:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 277:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 207              		.loc 1 277 0
 208 0006 FC1D     		add	r4, r7, #7
 209 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 210 000c 031C     		mov	r3, r0
 211 000e 2370     		strb	r3, [r4]
 278:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 279:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_BLOCK_CONTROL_REG &= (uint32)~PWM_Fail_MASK;
 212              		.loc 1 279 0
 213 0010 064B     		ldr	r3, .L12
 214 0012 064A     		ldr	r2, .L12
 215 0014 1268     		ldr	r2, [r2]
 216 0016 0121     		mov	r1, #1
 217 0018 8A43     		bic	r2, r1
 218 001a 1A60     		str	r2, [r3]
 280:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 281:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 281 0
 220 001c FB1D     		add	r3, r7, #7
 221 001e 1B78     		ldrb	r3, [r3]
 222 0020 181C     		mov	r0, r3
 223 0022 FFF7FEFF 		bl	CyExitCriticalSection
 282:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 224              		.loc 1 282 0
 225 0026 BD46     		mov	sp, r7
 226 0028 03B0     		add	sp, sp, #12
 227              		@ sp needed for prologue
 228 002a 90BD     		pop	{r4, r7, pc}
 229              	.L13:
 230              		.align	2
 231              	.L12:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 10


 232 002c 00000540 		.word	1074069504
 233              		.cfi_endproc
 234              	.LFE3:
 235              		.size	PWM_Fail_Stop, .-PWM_Fail_Stop
 236              		.section	.text.PWM_Fail_SetMode,"ax",%progbits
 237              		.align	2
 238              		.global	PWM_Fail_SetMode
 239              		.code	16
 240              		.thumb_func
 241              		.type	PWM_Fail_SetMode, %function
 242              	PWM_Fail_SetMode:
 243              	.LFB4:
 283:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 284:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 285:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetMode
 287:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 289:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 290:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the operation mode of the PWM_Fail. This function is used when
 291:.\Generated_Source\PSoC4/PWM_Fail.c **** *  configured as a generic PWM_Fail and the actual mode of operation is
 292:.\Generated_Source\PSoC4/PWM_Fail.c **** *  set at runtime. The mode must be set while the component is disabled.
 293:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 294:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 295:.\Generated_Source\PSoC4/PWM_Fail.c **** *  mode: Mode for the PWM_Fail to operate in
 296:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 297:.\Generated_Source\PSoC4/PWM_Fail.c **** *   - PWM_Fail_MODE_TIMER_COMPARE - Timer / Counter with
 298:.\Generated_Source\PSoC4/PWM_Fail.c **** *                                                 compare capability
 299:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_TIMER_CAPTURE - Timer / Counter with
 300:.\Generated_Source\PSoC4/PWM_Fail.c **** *                                                 capture capability
 301:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_QUAD - Quadrature decoder
 302:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_PWM - PWM
 303:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_PWM_DT - PWM with dead time
 304:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_PWM_PR - PWM with pseudo random capability
 305:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 306:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 307:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 308:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 309:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetMode(uint32 mode)
 311:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 244              		.loc 1 311 0
 245              		.cfi_startproc
 246 0000 90B5     		push	{r4, r7, lr}
 247              	.LCFI10:
 248              		.cfi_def_cfa_offset 12
 249              		.cfi_offset 4, -12
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 85B0     		sub	sp, sp, #20
 253              	.LCFI11:
 254              		.cfi_def_cfa_offset 32
 255 0004 00AF     		add	r7, sp, #0
 256              	.LCFI12:
 257              		.cfi_def_cfa_register 7
 258 0006 7860     		str	r0, [r7, #4]
 312:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 11


 313:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 314:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 259              		.loc 1 314 0
 260 0008 3C1C     		mov	r4, r7
 261 000a 0F34     		add	r4, r4, #15
 262 000c FFF7FEFF 		bl	CyEnterCriticalSection
 263 0010 031C     		mov	r3, r0
 264 0012 2370     		strb	r3, [r4]
 315:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 316:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_MODE_MASK;
 265              		.loc 1 316 0
 266 0014 0A4B     		ldr	r3, .L15
 267 0016 0A4A     		ldr	r2, .L15
 268 0018 1168     		ldr	r1, [r2]
 269 001a 0A4A     		ldr	r2, .L15+4
 270 001c 0A40     		and	r2, r1
 271 001e 1A60     		str	r2, [r3]
 317:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= mode;
 272              		.loc 1 317 0
 273 0020 074B     		ldr	r3, .L15
 274 0022 074A     		ldr	r2, .L15
 275 0024 1168     		ldr	r1, [r2]
 276 0026 7A68     		ldr	r2, [r7, #4]
 277 0028 0A43     		orr	r2, r1
 278 002a 1A60     		str	r2, [r3]
 318:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 319:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 279              		.loc 1 319 0
 280 002c 3B1C     		mov	r3, r7
 281 002e 0F33     		add	r3, r3, #15
 282 0030 1B78     		ldrb	r3, [r3]
 283 0032 181C     		mov	r0, r3
 284 0034 FFF7FEFF 		bl	CyExitCriticalSection
 320:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 285              		.loc 1 320 0
 286 0038 BD46     		mov	sp, r7
 287 003a 05B0     		add	sp, sp, #20
 288              		@ sp needed for prologue
 289 003c 90BD     		pop	{r4, r7, pc}
 290              	.L16:
 291 003e C046     		.align	2
 292              	.L15:
 293 0040 00010540 		.word	1074069760
 294 0044 FFFFFFF8 		.word	-117440513
 295              		.cfi_endproc
 296              	.LFE4:
 297              		.size	PWM_Fail_SetMode, .-PWM_Fail_SetMode
 298              		.section	.text.PWM_Fail_SetQDMode,"ax",%progbits
 299              		.align	2
 300              		.global	PWM_Fail_SetQDMode
 301              		.code	16
 302              		.thumb_func
 303              		.type	PWM_Fail_SetQDMode, %function
 304              	PWM_Fail_SetQDMode:
 305              	.LFB5:
 321:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 322:.\Generated_Source\PSoC4/PWM_Fail.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 12


 323:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetQDMode
 325:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 326:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 327:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 328:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 329:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 330:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 331:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 332:.\Generated_Source\PSoC4/PWM_Fail.c **** *  qdMode: Quadrature Decoder mode
 333:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 334:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_X1 - Counts on phi 1 rising
 335:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_X2 - Counts on both edges of phi1 (2x faster)
 336:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_X4 - Counts on both edges of phi1 and phi2
 337:.\Generated_Source\PSoC4/PWM_Fail.c **** *                                        (4x faster)
 338:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 339:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 340:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 341:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 342:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetQDMode(uint32 qdMode)
 344:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 306              		.loc 1 344 0
 307              		.cfi_startproc
 308 0000 90B5     		push	{r4, r7, lr}
 309              	.LCFI13:
 310              		.cfi_def_cfa_offset 12
 311              		.cfi_offset 4, -12
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 85B0     		sub	sp, sp, #20
 315              	.LCFI14:
 316              		.cfi_def_cfa_offset 32
 317 0004 00AF     		add	r7, sp, #0
 318              	.LCFI15:
 319              		.cfi_def_cfa_register 7
 320 0006 7860     		str	r0, [r7, #4]
 345:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 347:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 321              		.loc 1 347 0
 322 0008 3C1C     		mov	r4, r7
 323 000a 0F34     		add	r4, r4, #15
 324 000c FFF7FEFF 		bl	CyEnterCriticalSection
 325 0010 031C     		mov	r3, r0
 326 0012 2370     		strb	r3, [r4]
 348:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 349:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_QUAD_MODE_MASK;
 327              		.loc 1 349 0
 328 0014 0A4B     		ldr	r3, .L18
 329 0016 0A4A     		ldr	r2, .L18
 330 0018 1168     		ldr	r1, [r2]
 331 001a 0A4A     		ldr	r2, .L18+4
 332 001c 0A40     		and	r2, r1
 333 001e 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= qdMode;
 334              		.loc 1 350 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 13


 335 0020 074B     		ldr	r3, .L18
 336 0022 074A     		ldr	r2, .L18
 337 0024 1168     		ldr	r1, [r2]
 338 0026 7A68     		ldr	r2, [r7, #4]
 339 0028 0A43     		orr	r2, r1
 340 002a 1A60     		str	r2, [r3]
 351:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 352:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 341              		.loc 1 352 0
 342 002c 3B1C     		mov	r3, r7
 343 002e 0F33     		add	r3, r3, #15
 344 0030 1B78     		ldrb	r3, [r3]
 345 0032 181C     		mov	r0, r3
 346 0034 FFF7FEFF 		bl	CyExitCriticalSection
 353:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 347              		.loc 1 353 0
 348 0038 BD46     		mov	sp, r7
 349 003a 05B0     		add	sp, sp, #20
 350              		@ sp needed for prologue
 351 003c 90BD     		pop	{r4, r7, pc}
 352              	.L19:
 353 003e C046     		.align	2
 354              	.L18:
 355 0040 00010540 		.word	1074069760
 356 0044 FFFF8FFF 		.word	-7340033
 357              		.cfi_endproc
 358              	.LFE5:
 359              		.size	PWM_Fail_SetQDMode, .-PWM_Fail_SetQDMode
 360              		.section	.text.PWM_Fail_SetPrescaler,"ax",%progbits
 361              		.align	2
 362              		.global	PWM_Fail_SetPrescaler
 363              		.code	16
 364              		.thumb_func
 365              		.type	PWM_Fail_SetPrescaler, %function
 366              	PWM_Fail_SetPrescaler:
 367              	.LFB6:
 354:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 355:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 356:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPrescaler
 358:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 359:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 360:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 361:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 362:.\Generated_Source\PSoC4/PWM_Fail.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 363:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 364:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 365:.\Generated_Source\PSoC4/PWM_Fail.c **** *  prescaler: Prescaler divider value
 366:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 367:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 368:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY2    - Divide by 2
 369:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY4    - Divide by 4
 370:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY8    - Divide by 8
 371:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY16   - Divide by 16
 372:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY32   - Divide by 32
 373:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY64   - Divide by 64
 374:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY128  - Divide by 128
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 14


 375:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 376:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 377:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 378:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 379:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPrescaler(uint32 prescaler)
 381:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 368              		.loc 1 381 0
 369              		.cfi_startproc
 370 0000 90B5     		push	{r4, r7, lr}
 371              	.LCFI16:
 372              		.cfi_def_cfa_offset 12
 373              		.cfi_offset 4, -12
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 85B0     		sub	sp, sp, #20
 377              	.LCFI17:
 378              		.cfi_def_cfa_offset 32
 379 0004 00AF     		add	r7, sp, #0
 380              	.LCFI18:
 381              		.cfi_def_cfa_register 7
 382 0006 7860     		str	r0, [r7, #4]
 382:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 383:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 384:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 383              		.loc 1 384 0
 384 0008 3C1C     		mov	r4, r7
 385 000a 0F34     		add	r4, r4, #15
 386 000c FFF7FEFF 		bl	CyEnterCriticalSection
 387 0010 031C     		mov	r3, r0
 388 0012 2370     		strb	r3, [r4]
 385:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 386:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_PRESCALER_MASK;
 389              		.loc 1 386 0
 390 0014 0A4B     		ldr	r3, .L21
 391 0016 0A4A     		ldr	r2, .L21
 392 0018 1168     		ldr	r1, [r2]
 393 001a 0A4A     		ldr	r2, .L21+4
 394 001c 0A40     		and	r2, r1
 395 001e 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= prescaler;
 396              		.loc 1 387 0
 397 0020 074B     		ldr	r3, .L21
 398 0022 074A     		ldr	r2, .L21
 399 0024 1168     		ldr	r1, [r2]
 400 0026 7A68     		ldr	r2, [r7, #4]
 401 0028 0A43     		orr	r2, r1
 402 002a 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 389:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 403              		.loc 1 389 0
 404 002c 3B1C     		mov	r3, r7
 405 002e 0F33     		add	r3, r3, #15
 406 0030 1B78     		ldrb	r3, [r3]
 407 0032 181C     		mov	r0, r3
 408 0034 FFF7FEFF 		bl	CyExitCriticalSection
 390:.\Generated_Source\PSoC4/PWM_Fail.c **** }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 15


 409              		.loc 1 390 0
 410 0038 BD46     		mov	sp, r7
 411 003a 05B0     		add	sp, sp, #20
 412              		@ sp needed for prologue
 413 003c 90BD     		pop	{r4, r7, pc}
 414              	.L22:
 415 003e C046     		.align	2
 416              	.L21:
 417 0040 00010540 		.word	1074069760
 418 0044 FF00FFFF 		.word	-65281
 419              		.cfi_endproc
 420              	.LFE6:
 421              		.size	PWM_Fail_SetPrescaler, .-PWM_Fail_SetPrescaler
 422              		.section	.text.PWM_Fail_SetOneShot,"ax",%progbits
 423              		.align	2
 424              		.global	PWM_Fail_SetOneShot
 425              		.code	16
 426              		.thumb_func
 427              		.type	PWM_Fail_SetOneShot, %function
 428              	PWM_Fail_SetOneShot:
 429              	.LFB7:
 391:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 392:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 393:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 394:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetOneShot
 395:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 396:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 397:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 398:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the register that controls whether the PWM_Fail runs
 399:.\Generated_Source\PSoC4/PWM_Fail.c **** *  continuously or stops when terminal count is reached.  By default the
 400:.\Generated_Source\PSoC4/PWM_Fail.c **** *  PWM_Fail operates in the continuous mode.
 401:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 402:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 403:.\Generated_Source\PSoC4/PWM_Fail.c **** *  oneShotEnable
 404:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 405:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - 0 - Continuous
 406:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - 1 - Enable One Shot
 407:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 408:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 409:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 410:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 411:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetOneShot(uint32 oneShotEnable)
 413:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 430              		.loc 1 413 0
 431              		.cfi_startproc
 432 0000 90B5     		push	{r4, r7, lr}
 433              	.LCFI19:
 434              		.cfi_def_cfa_offset 12
 435              		.cfi_offset 4, -12
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 85B0     		sub	sp, sp, #20
 439              	.LCFI20:
 440              		.cfi_def_cfa_offset 32
 441 0004 00AF     		add	r7, sp, #0
 442              	.LCFI21:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 16


 443              		.cfi_def_cfa_register 7
 444 0006 7860     		str	r0, [r7, #4]
 414:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 415:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 416:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 445              		.loc 1 416 0
 446 0008 3C1C     		mov	r4, r7
 447 000a 0F34     		add	r4, r4, #15
 448 000c FFF7FEFF 		bl	CyEnterCriticalSection
 449 0010 031C     		mov	r3, r0
 450 0012 2370     		strb	r3, [r4]
 417:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 418:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_ONESHOT_MASK;
 451              		.loc 1 418 0
 452 0014 0B4B     		ldr	r3, .L24
 453 0016 0B4A     		ldr	r2, .L24
 454 0018 1168     		ldr	r1, [r2]
 455 001a 0B4A     		ldr	r2, .L24+4
 456 001c 0A40     		and	r2, r1
 457 001e 1A60     		str	r2, [r3]
 419:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_Fail_1BIT_MASK) <<
 458              		.loc 1 419 0
 459 0020 084B     		ldr	r3, .L24
 460 0022 084A     		ldr	r2, .L24
 461 0024 1168     		ldr	r1, [r2]
 462 0026 7868     		ldr	r0, [r7, #4]
 463 0028 0122     		mov	r2, #1
 464 002a 0240     		and	r2, r0
 465 002c 9204     		lsl	r2, r2, #18
 466 002e 0A43     		orr	r2, r1
 467 0030 1A60     		str	r2, [r3]
 420:.\Generated_Source\PSoC4/PWM_Fail.c ****                                                                PWM_Fail_ONESHOT_SHIFT));
 421:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 422:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 468              		.loc 1 422 0
 469 0032 3B1C     		mov	r3, r7
 470 0034 0F33     		add	r3, r3, #15
 471 0036 1B78     		ldrb	r3, [r3]
 472 0038 181C     		mov	r0, r3
 473 003a FFF7FEFF 		bl	CyExitCriticalSection
 423:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 474              		.loc 1 423 0
 475 003e BD46     		mov	sp, r7
 476 0040 05B0     		add	sp, sp, #20
 477              		@ sp needed for prologue
 478 0042 90BD     		pop	{r4, r7, pc}
 479              	.L25:
 480              		.align	2
 481              	.L24:
 482 0044 00010540 		.word	1074069760
 483 0048 FFFFFBFF 		.word	-262145
 484              		.cfi_endproc
 485              	.LFE7:
 486              		.size	PWM_Fail_SetOneShot, .-PWM_Fail_SetOneShot
 487              		.section	.text.PWM_Fail_SetPWMMode,"ax",%progbits
 488              		.align	2
 489              		.global	PWM_Fail_SetPWMMode
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 17


 490              		.code	16
 491              		.thumb_func
 492              		.type	PWM_Fail_SetPWMMode, %function
 493              	PWM_Fail_SetPWMMode:
 494              	.LFB8:
 424:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 425:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 426:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 427:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPWMMode
 428:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 429:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 430:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 431:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the control register that determines what mode of operation the PWM
 432:.\Generated_Source\PSoC4/PWM_Fail.c **** *  output lines are driven in.  There is a setting for what to do on a
 433:.\Generated_Source\PSoC4/PWM_Fail.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 434:.\Generated_Source\PSoC4/PWM_Fail.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 435:.\Generated_Source\PSoC4/PWM_Fail.c **** *  the mode.
 436:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 437:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 438:.\Generated_Source\PSoC4/PWM_Fail.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 439:.\Generated_Source\PSoC4/PWM_Fail.c **** *  for each of the three or use one of the preconfigured PWM settings.
 440:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 441:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - CC_MATCH_SET        - Set on comparison match
 442:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 443:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 444:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 445:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - OVERLOW_SET         - Set on overflow
 446:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 447:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - OVERLOW_INVERT      - Invert on overflow
 448:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 449:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - UNDERFLOW_SET       - Set on underflow
 450:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 451:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 452:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 453:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 454:.\Generated_Source\PSoC4/PWM_Fail.c **** *                             with up counting mode
 455:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 456:.\Generated_Source\PSoC4/PWM_Fail.c **** *                             with down counting mode
 457:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 458:.\Generated_Source\PSoC4/PWM_Fail.c **** *                             combined with up/down 0 mode
 459:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 460:.\Generated_Source\PSoC4/PWM_Fail.c **** *                             with up/down 1 mode
 461:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 462:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 463:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 464:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 465:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPWMMode(uint32 modeMask)
 467:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 495              		.loc 1 467 0
 496              		.cfi_startproc
 497 0000 80B5     		push	{r7, lr}
 498              	.LCFI22:
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 18


 503              	.LCFI23:
 504              		.cfi_def_cfa_offset 16
 505 0004 00AF     		add	r7, sp, #0
 506              	.LCFI24:
 507              		.cfi_def_cfa_register 7
 508 0006 7860     		str	r0, [r7, #4]
 468:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL2_REG = (modeMask & PWM_Fail_6BIT_MASK);
 509              		.loc 1 468 0
 510 0008 034B     		ldr	r3, .L27
 511 000a 7968     		ldr	r1, [r7, #4]
 512 000c 3F22     		mov	r2, #63
 513 000e 0A40     		and	r2, r1
 514 0010 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 515              		.loc 1 469 0
 516 0012 BD46     		mov	sp, r7
 517 0014 02B0     		add	sp, sp, #8
 518              		@ sp needed for prologue
 519 0016 80BD     		pop	{r7, pc}
 520              	.L28:
 521              		.align	2
 522              	.L27:
 523 0018 28010540 		.word	1074069800
 524              		.cfi_endproc
 525              	.LFE8:
 526              		.size	PWM_Fail_SetPWMMode, .-PWM_Fail_SetPWMMode
 527              		.section	.text.PWM_Fail_SetPWMSyncKill,"ax",%progbits
 528              		.align	2
 529              		.global	PWM_Fail_SetPWMSyncKill
 530              		.code	16
 531              		.thumb_func
 532              		.type	PWM_Fail_SetPWMSyncKill, %function
 533              	PWM_Fail_SetPWMSyncKill:
 534              	.LFB9:
 470:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 471:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 472:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 473:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPWMSyncKill
 475:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 476:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 477:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 478:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 479:.\Generated_Source\PSoC4/PWM_Fail.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 480:.\Generated_Source\PSoC4/PWM_Fail.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 481:.\Generated_Source\PSoC4/PWM_Fail.c **** *  and PWM with dead time modes.
 482:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 483:.\Generated_Source\PSoC4/PWM_Fail.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 484:.\Generated_Source\PSoC4/PWM_Fail.c **** *  signals until the next terminal count.
 485:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 486:.\Generated_Source\PSoC4/PWM_Fail.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 487:.\Generated_Source\PSoC4/PWM_Fail.c **** *  signals when the kill signal is present.  This mode should only be used
 488:.\Generated_Source\PSoC4/PWM_Fail.c **** *  when the kill signal (stop input) is configured in the pass through mode
 489:.\Generated_Source\PSoC4/PWM_Fail.c **** *  (Level sensitive signal).
 490:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 491:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 492:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 19


 493:.\Generated_Source\PSoC4/PWM_Fail.c **** *  syncKillEnable
 494:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 495:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - 0 - Asynchronous
 496:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - 1 - Synchronous
 497:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 498:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 499:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 500:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 501:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 502:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPWMSyncKill(uint32 syncKillEnable)
 503:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 535              		.loc 1 503 0
 536              		.cfi_startproc
 537 0000 90B5     		push	{r4, r7, lr}
 538              	.LCFI25:
 539              		.cfi_def_cfa_offset 12
 540              		.cfi_offset 4, -12
 541              		.cfi_offset 7, -8
 542              		.cfi_offset 14, -4
 543 0002 85B0     		sub	sp, sp, #20
 544              	.LCFI26:
 545              		.cfi_def_cfa_offset 32
 546 0004 00AF     		add	r7, sp, #0
 547              	.LCFI27:
 548              		.cfi_def_cfa_register 7
 549 0006 7860     		str	r0, [r7, #4]
 504:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 505:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 506:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 550              		.loc 1 506 0
 551 0008 3C1C     		mov	r4, r7
 552 000a 0F34     		add	r4, r4, #15
 553 000c FFF7FEFF 		bl	CyEnterCriticalSection
 554 0010 031C     		mov	r3, r0
 555 0012 2370     		strb	r3, [r4]
 507:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 508:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_PWM_SYNC_KILL_MASK;
 556              		.loc 1 508 0
 557 0014 0B4B     		ldr	r3, .L30
 558 0016 0B4A     		ldr	r2, .L30
 559 0018 1268     		ldr	r2, [r2]
 560 001a 0421     		mov	r1, #4
 561 001c 8A43     		bic	r2, r1
 562 001e 1A60     		str	r2, [r3]
 509:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_Fail_1BIT_MASK)  <<
 563              		.loc 1 509 0
 564 0020 084B     		ldr	r3, .L30
 565 0022 084A     		ldr	r2, .L30
 566 0024 1168     		ldr	r1, [r2]
 567 0026 7868     		ldr	r0, [r7, #4]
 568 0028 0122     		mov	r2, #1
 569 002a 0240     		and	r2, r0
 570 002c 9200     		lsl	r2, r2, #2
 571 002e 0A43     		orr	r2, r1
 572 0030 1A60     		str	r2, [r3]
 510:.\Generated_Source\PSoC4/PWM_Fail.c ****                                                PWM_Fail_PWM_SYNC_KILL_SHIFT));
 511:.\Generated_Source\PSoC4/PWM_Fail.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 20


 512:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 573              		.loc 1 512 0
 574 0032 3B1C     		mov	r3, r7
 575 0034 0F33     		add	r3, r3, #15
 576 0036 1B78     		ldrb	r3, [r3]
 577 0038 181C     		mov	r0, r3
 578 003a FFF7FEFF 		bl	CyExitCriticalSection
 513:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 579              		.loc 1 513 0
 580 003e BD46     		mov	sp, r7
 581 0040 05B0     		add	sp, sp, #20
 582              		@ sp needed for prologue
 583 0042 90BD     		pop	{r4, r7, pc}
 584              	.L31:
 585              		.align	2
 586              	.L30:
 587 0044 00010540 		.word	1074069760
 588              		.cfi_endproc
 589              	.LFE9:
 590              		.size	PWM_Fail_SetPWMSyncKill, .-PWM_Fail_SetPWMSyncKill
 591              		.section	.text.PWM_Fail_SetPWMStopOnKill,"ax",%progbits
 592              		.align	2
 593              		.global	PWM_Fail_SetPWMStopOnKill
 594              		.code	16
 595              		.thumb_func
 596              		.type	PWM_Fail_SetPWMStopOnKill, %function
 597              	PWM_Fail_SetPWMStopOnKill:
 598              	.LFB10:
 514:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 515:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 516:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPWMStopOnKill
 518:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 520:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 521:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 522:.\Generated_Source\PSoC4/PWM_Fail.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 523:.\Generated_Source\PSoC4/PWM_Fail.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 524:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 525:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 526:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 527:.\Generated_Source\PSoC4/PWM_Fail.c **** *  stopOnKillEnable
 528:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 529:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - 0 - Don't stop
 530:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - 1 - Stop
 531:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 532:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 533:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 534:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 535:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 536:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPWMStopOnKill(uint32 stopOnKillEnable)
 537:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 599              		.loc 1 537 0
 600              		.cfi_startproc
 601 0000 90B5     		push	{r4, r7, lr}
 602              	.LCFI28:
 603              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 21


 604              		.cfi_offset 4, -12
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 85B0     		sub	sp, sp, #20
 608              	.LCFI29:
 609              		.cfi_def_cfa_offset 32
 610 0004 00AF     		add	r7, sp, #0
 611              	.LCFI30:
 612              		.cfi_def_cfa_register 7
 613 0006 7860     		str	r0, [r7, #4]
 538:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 539:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 540:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 614              		.loc 1 540 0
 615 0008 3C1C     		mov	r4, r7
 616 000a 0F34     		add	r4, r4, #15
 617 000c FFF7FEFF 		bl	CyEnterCriticalSection
 618 0010 031C     		mov	r3, r0
 619 0012 2370     		strb	r3, [r4]
 541:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 542:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_PWM_STOP_KILL_MASK;
 620              		.loc 1 542 0
 621 0014 0B4B     		ldr	r3, .L33
 622 0016 0B4A     		ldr	r2, .L33
 623 0018 1268     		ldr	r2, [r2]
 624 001a 0821     		mov	r1, #8
 625 001c 8A43     		bic	r2, r1
 626 001e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_Fail_1BIT_MASK)  <<
 627              		.loc 1 543 0
 628 0020 084B     		ldr	r3, .L33
 629 0022 084A     		ldr	r2, .L33
 630 0024 1168     		ldr	r1, [r2]
 631 0026 7868     		ldr	r0, [r7, #4]
 632 0028 0122     		mov	r2, #1
 633 002a 0240     		and	r2, r0
 634 002c D200     		lsl	r2, r2, #3
 635 002e 0A43     		orr	r2, r1
 636 0030 1A60     		str	r2, [r3]
 544:.\Generated_Source\PSoC4/PWM_Fail.c ****                                                          PWM_Fail_PWM_STOP_KILL_SHIFT));
 545:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 546:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 637              		.loc 1 546 0
 638 0032 3B1C     		mov	r3, r7
 639 0034 0F33     		add	r3, r3, #15
 640 0036 1B78     		ldrb	r3, [r3]
 641 0038 181C     		mov	r0, r3
 642 003a FFF7FEFF 		bl	CyExitCriticalSection
 547:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 643              		.loc 1 547 0
 644 003e BD46     		mov	sp, r7
 645 0040 05B0     		add	sp, sp, #20
 646              		@ sp needed for prologue
 647 0042 90BD     		pop	{r4, r7, pc}
 648              	.L34:
 649              		.align	2
 650              	.L33:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 22


 651 0044 00010540 		.word	1074069760
 652              		.cfi_endproc
 653              	.LFE10:
 654              		.size	PWM_Fail_SetPWMStopOnKill, .-PWM_Fail_SetPWMStopOnKill
 655              		.section	.text.PWM_Fail_SetPWMDeadTime,"ax",%progbits
 656              		.align	2
 657              		.global	PWM_Fail_SetPWMDeadTime
 658              		.code	16
 659              		.thumb_func
 660              		.type	PWM_Fail_SetPWMDeadTime, %function
 661              	PWM_Fail_SetPWMDeadTime:
 662              	.LFB11:
 548:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 549:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 550:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPWMDeadTime
 552:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 553:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 554:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 555:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the dead time control value.  This value delays the rising edge of
 556:.\Generated_Source\PSoC4/PWM_Fail.c **** *  both the line and line_n signals the designated number of cycles resulting
 557:.\Generated_Source\PSoC4/PWM_Fail.c **** *  in both signals being inactive for that many cycles.  This functionality is
 558:.\Generated_Source\PSoC4/PWM_Fail.c **** *  only applicable to the PWM in the dead time mode.
 559:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 560:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 561:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 562:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Dead time to insert
 563:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values: 0 to 255
 564:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 565:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 566:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 567:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 568:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 569:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPWMDeadTime(uint32 deadTime)
 570:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 663              		.loc 1 570 0
 664              		.cfi_startproc
 665 0000 90B5     		push	{r4, r7, lr}
 666              	.LCFI31:
 667              		.cfi_def_cfa_offset 12
 668              		.cfi_offset 4, -12
 669              		.cfi_offset 7, -8
 670              		.cfi_offset 14, -4
 671 0002 85B0     		sub	sp, sp, #20
 672              	.LCFI32:
 673              		.cfi_def_cfa_offset 32
 674 0004 00AF     		add	r7, sp, #0
 675              	.LCFI33:
 676              		.cfi_def_cfa_register 7
 677 0006 7860     		str	r0, [r7, #4]
 571:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 572:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 573:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 678              		.loc 1 573 0
 679 0008 3C1C     		mov	r4, r7
 680 000a 0F34     		add	r4, r4, #15
 681 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 23


 682 0010 031C     		mov	r3, r0
 683 0012 2370     		strb	r3, [r4]
 574:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 575:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_PRESCALER_MASK;
 684              		.loc 1 575 0
 685 0014 0B4B     		ldr	r3, .L36
 686 0016 0B4A     		ldr	r2, .L36
 687 0018 1168     		ldr	r1, [r2]
 688 001a 0B4A     		ldr	r2, .L36+4
 689 001c 0A40     		and	r2, r1
 690 001e 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= ((uint32)((deadTime & PWM_Fail_8BIT_MASK) <<
 691              		.loc 1 576 0
 692 0020 084B     		ldr	r3, .L36
 693 0022 084A     		ldr	r2, .L36
 694 0024 1168     		ldr	r1, [r2]
 695 0026 7A68     		ldr	r2, [r7, #4]
 696 0028 1202     		lsl	r2, r2, #8
 697 002a 1204     		lsl	r2, r2, #16
 698 002c 120C     		lsr	r2, r2, #16
 699 002e 0A43     		orr	r2, r1
 700 0030 1A60     		str	r2, [r3]
 577:.\Generated_Source\PSoC4/PWM_Fail.c ****                                                           PWM_Fail_PRESCALER_SHIFT));
 578:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 579:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 701              		.loc 1 579 0
 702 0032 3B1C     		mov	r3, r7
 703 0034 0F33     		add	r3, r3, #15
 704 0036 1B78     		ldrb	r3, [r3]
 705 0038 181C     		mov	r0, r3
 706 003a FFF7FEFF 		bl	CyExitCriticalSection
 580:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 707              		.loc 1 580 0
 708 003e BD46     		mov	sp, r7
 709 0040 05B0     		add	sp, sp, #20
 710              		@ sp needed for prologue
 711 0042 90BD     		pop	{r4, r7, pc}
 712              	.L37:
 713              		.align	2
 714              	.L36:
 715 0044 00010540 		.word	1074069760
 716 0048 FF00FFFF 		.word	-65281
 717              		.cfi_endproc
 718              	.LFE11:
 719              		.size	PWM_Fail_SetPWMDeadTime, .-PWM_Fail_SetPWMDeadTime
 720              		.section	.text.PWM_Fail_SetPWMInvert,"ax",%progbits
 721              		.align	2
 722              		.global	PWM_Fail_SetPWMInvert
 723              		.code	16
 724              		.thumb_func
 725              		.type	PWM_Fail_SetPWMInvert, %function
 726              	PWM_Fail_SetPWMInvert:
 727              	.LFB12:
 581:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 582:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 583:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 584:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPWMInvert
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 24


 585:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 586:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 587:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 588:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the bits that control whether the line and line_n outputs are
 589:.\Generated_Source\PSoC4/PWM_Fail.c **** *  inverted from their normal output values.  This functionality is only
 590:.\Generated_Source\PSoC4/PWM_Fail.c **** *  applicable to the three PWM modes.
 591:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 592:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 593:.\Generated_Source\PSoC4/PWM_Fail.c **** *  mask: Mask of outputs to invert.
 594:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 595:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_INVERT_LINE   - Inverts the line output
 596:.\Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_INVERT_LINE_N - Inverts the line_n output
 597:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 598:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 599:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 600:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 601:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPWMInvert(uint32 mask)
 603:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 728              		.loc 1 603 0
 729              		.cfi_startproc
 730 0000 90B5     		push	{r4, r7, lr}
 731              	.LCFI34:
 732              		.cfi_def_cfa_offset 12
 733              		.cfi_offset 4, -12
 734              		.cfi_offset 7, -8
 735              		.cfi_offset 14, -4
 736 0002 85B0     		sub	sp, sp, #20
 737              	.LCFI35:
 738              		.cfi_def_cfa_offset 32
 739 0004 00AF     		add	r7, sp, #0
 740              	.LCFI36:
 741              		.cfi_def_cfa_register 7
 742 0006 7860     		str	r0, [r7, #4]
 604:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 605:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 606:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 743              		.loc 1 606 0
 744 0008 3C1C     		mov	r4, r7
 745 000a 0F34     		add	r4, r4, #15
 746 000c FFF7FEFF 		bl	CyEnterCriticalSection
 747 0010 031C     		mov	r3, r0
 748 0012 2370     		strb	r3, [r4]
 607:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 608:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_INV_OUT_MASK;
 749              		.loc 1 608 0
 750 0014 0A4B     		ldr	r3, .L39
 751 0016 0A4A     		ldr	r2, .L39
 752 0018 1168     		ldr	r1, [r2]
 753 001a 0A4A     		ldr	r2, .L39+4
 754 001c 0A40     		and	r2, r1
 755 001e 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= mask;
 756              		.loc 1 609 0
 757 0020 074B     		ldr	r3, .L39
 758 0022 074A     		ldr	r2, .L39
 759 0024 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 25


 760 0026 7A68     		ldr	r2, [r7, #4]
 761 0028 0A43     		orr	r2, r1
 762 002a 1A60     		str	r2, [r3]
 610:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 611:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 763              		.loc 1 611 0
 764 002c 3B1C     		mov	r3, r7
 765 002e 0F33     		add	r3, r3, #15
 766 0030 1B78     		ldrb	r3, [r3]
 767 0032 181C     		mov	r0, r3
 768 0034 FFF7FEFF 		bl	CyExitCriticalSection
 612:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 769              		.loc 1 612 0
 770 0038 BD46     		mov	sp, r7
 771 003a 05B0     		add	sp, sp, #20
 772              		@ sp needed for prologue
 773 003c 90BD     		pop	{r4, r7, pc}
 774              	.L40:
 775 003e C046     		.align	2
 776              	.L39:
 777 0040 00010540 		.word	1074069760
 778 0044 FFFFCFFF 		.word	-3145729
 779              		.cfi_endproc
 780              	.LFE12:
 781              		.size	PWM_Fail_SetPWMInvert, .-PWM_Fail_SetPWMInvert
 782              		.section	.text.PWM_Fail_WriteCounter,"ax",%progbits
 783              		.align	2
 784              		.global	PWM_Fail_WriteCounter
 785              		.code	16
 786              		.thumb_func
 787              		.type	PWM_Fail_WriteCounter, %function
 788              	PWM_Fail_WriteCounter:
 789              	.LFB13:
 613:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 614:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 615:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 616:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_WriteCounter
 618:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 620:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 621:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 622:.\Generated_Source\PSoC4/PWM_Fail.c **** *  setting the counter (not the period) to the value written. It is not
 623:.\Generated_Source\PSoC4/PWM_Fail.c **** *  advised to write to this field when the counter is running.
 624:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 625:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 626:.\Generated_Source\PSoC4/PWM_Fail.c **** *  count: value to write
 627:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 628:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 629:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 630:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 631:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 632:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_WriteCounter(uint32 count)
 633:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 790              		.loc 1 633 0
 791              		.cfi_startproc
 792 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 26


 793              	.LCFI37:
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 82B0     		sub	sp, sp, #8
 798              	.LCFI38:
 799              		.cfi_def_cfa_offset 16
 800 0004 00AF     		add	r7, sp, #0
 801              	.LCFI39:
 802              		.cfi_def_cfa_register 7
 803 0006 7860     		str	r0, [r7, #4]
 634:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_COUNTER_REG = (count & PWM_Fail_16BIT_MASK);
 804              		.loc 1 634 0
 805 0008 034B     		ldr	r3, .L42
 806 000a 7A68     		ldr	r2, [r7, #4]
 807 000c 1204     		lsl	r2, r2, #16
 808 000e 120C     		lsr	r2, r2, #16
 809 0010 1A60     		str	r2, [r3]
 635:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 810              		.loc 1 635 0
 811 0012 BD46     		mov	sp, r7
 812 0014 02B0     		add	sp, sp, #8
 813              		@ sp needed for prologue
 814 0016 80BD     		pop	{r7, pc}
 815              	.L43:
 816              		.align	2
 817              	.L42:
 818 0018 08010540 		.word	1074069768
 819              		.cfi_endproc
 820              	.LFE13:
 821              		.size	PWM_Fail_WriteCounter, .-PWM_Fail_WriteCounter
 822              		.section	.text.PWM_Fail_ReadCounter,"ax",%progbits
 823              		.align	2
 824              		.global	PWM_Fail_ReadCounter
 825              		.code	16
 826              		.thumb_func
 827              		.type	PWM_Fail_ReadCounter, %function
 828              	PWM_Fail_ReadCounter:
 829              	.LFB14:
 636:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 637:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 638:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 639:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadCounter
 640:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 641:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 642:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 643:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the current counter value.
 644:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 645:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 646:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 647:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 648:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 649:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Current counter value
 650:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 651:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 652:.\Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadCounter(void)
 653:.\Generated_Source\PSoC4/PWM_Fail.c **** {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 27


 830              		.loc 1 653 0
 831              		.cfi_startproc
 832 0000 80B5     		push	{r7, lr}
 833              	.LCFI40:
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 00AF     		add	r7, sp, #0
 838              	.LCFI41:
 839              		.cfi_def_cfa_register 7
 654:.\Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_COUNTER_REG & PWM_Fail_16BIT_MASK);
 840              		.loc 1 654 0
 841 0004 034B     		ldr	r3, .L46
 842 0006 1B68     		ldr	r3, [r3]
 843 0008 1B04     		lsl	r3, r3, #16
 844 000a 1B0C     		lsr	r3, r3, #16
 655:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 845              		.loc 1 655 0
 846 000c 181C     		mov	r0, r3
 847 000e BD46     		mov	sp, r7
 848              		@ sp needed for prologue
 849 0010 80BD     		pop	{r7, pc}
 850              	.L47:
 851 0012 C046     		.align	2
 852              	.L46:
 853 0014 08010540 		.word	1074069768
 854              		.cfi_endproc
 855              	.LFE14:
 856              		.size	PWM_Fail_ReadCounter, .-PWM_Fail_ReadCounter
 857              		.section	.text.PWM_Fail_SetCounterMode,"ax",%progbits
 858              		.align	2
 859              		.global	PWM_Fail_SetCounterMode
 860              		.code	16
 861              		.thumb_func
 862              		.type	PWM_Fail_SetCounterMode, %function
 863              	PWM_Fail_SetCounterMode:
 864              	.LFB15:
 656:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 657:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 658:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetCounterMode
 660:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 661:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 662:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 663:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 664:.\Generated_Source\PSoC4/PWM_Fail.c **** *  and the PWM with a pseudo random output.
 665:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 666:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 667:.\Generated_Source\PSoC4/PWM_Fail.c **** *  counterMode: Enumerated counter type values
 668:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 669:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_COUNT_UP       - Counts up
 670:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_COUNT_DOWN     - Counts down
 671:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_COUNT_UPDOWN0  - Counts up and down. Terminal count
 672:.\Generated_Source\PSoC4/PWM_Fail.c **** *                                         generated when counter reaches 0
 673:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_COUNT_UPDOWN1  - Counts up and down. Terminal count
 674:.\Generated_Source\PSoC4/PWM_Fail.c **** *                                         generated both when counter reaches 0
 675:.\Generated_Source\PSoC4/PWM_Fail.c **** *                                         and period
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 28


 676:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 677:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 678:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 679:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 680:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetCounterMode(uint32 counterMode)
 682:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 865              		.loc 1 682 0
 866              		.cfi_startproc
 867 0000 90B5     		push	{r4, r7, lr}
 868              	.LCFI42:
 869              		.cfi_def_cfa_offset 12
 870              		.cfi_offset 4, -12
 871              		.cfi_offset 7, -8
 872              		.cfi_offset 14, -4
 873 0002 85B0     		sub	sp, sp, #20
 874              	.LCFI43:
 875              		.cfi_def_cfa_offset 32
 876 0004 00AF     		add	r7, sp, #0
 877              	.LCFI44:
 878              		.cfi_def_cfa_register 7
 879 0006 7860     		str	r0, [r7, #4]
 683:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 684:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 685:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 880              		.loc 1 685 0
 881 0008 3C1C     		mov	r4, r7
 882 000a 0F34     		add	r4, r4, #15
 883 000c FFF7FEFF 		bl	CyEnterCriticalSection
 884 0010 031C     		mov	r3, r0
 885 0012 2370     		strb	r3, [r4]
 686:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 687:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_UPDOWN_MASK;
 886              		.loc 1 687 0
 887 0014 0A4B     		ldr	r3, .L49
 888 0016 0A4A     		ldr	r2, .L49
 889 0018 1168     		ldr	r1, [r2]
 890 001a 0A4A     		ldr	r2, .L49+4
 891 001c 0A40     		and	r2, r1
 892 001e 1A60     		str	r2, [r3]
 688:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= counterMode;
 893              		.loc 1 688 0
 894 0020 074B     		ldr	r3, .L49
 895 0022 074A     		ldr	r2, .L49
 896 0024 1168     		ldr	r1, [r2]
 897 0026 7A68     		ldr	r2, [r7, #4]
 898 0028 0A43     		orr	r2, r1
 899 002a 1A60     		str	r2, [r3]
 689:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 690:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 900              		.loc 1 690 0
 901 002c 3B1C     		mov	r3, r7
 902 002e 0F33     		add	r3, r3, #15
 903 0030 1B78     		ldrb	r3, [r3]
 904 0032 181C     		mov	r0, r3
 905 0034 FFF7FEFF 		bl	CyExitCriticalSection
 691:.\Generated_Source\PSoC4/PWM_Fail.c **** }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 29


 906              		.loc 1 691 0
 907 0038 BD46     		mov	sp, r7
 908 003a 05B0     		add	sp, sp, #20
 909              		@ sp needed for prologue
 910 003c 90BD     		pop	{r4, r7, pc}
 911              	.L50:
 912 003e C046     		.align	2
 913              	.L49:
 914 0040 00010540 		.word	1074069760
 915 0044 FFFFFCFF 		.word	-196609
 916              		.cfi_endproc
 917              	.LFE15:
 918              		.size	PWM_Fail_SetCounterMode, .-PWM_Fail_SetCounterMode
 919              		.section	.text.PWM_Fail_WritePeriod,"ax",%progbits
 920              		.align	2
 921              		.global	PWM_Fail_WritePeriod
 922              		.code	16
 923              		.thumb_func
 924              		.type	PWM_Fail_WritePeriod, %function
 925              	PWM_Fail_WritePeriod:
 926              	.LFB16:
 692:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 693:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 694:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_WritePeriod
 696:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 698:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 699:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the 16 bit period register with the new period value.
 700:.\Generated_Source\PSoC4/PWM_Fail.c **** *  To cause the counter to count for N cycles this register should be written
 701:.\Generated_Source\PSoC4/PWM_Fail.c **** *  with N-1 (counts from 0 to period inclusive).
 702:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 703:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 704:.\Generated_Source\PSoC4/PWM_Fail.c **** *  period: Period value
 705:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 706:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 707:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 708:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 709:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_WritePeriod(uint32 period)
 711:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 927              		.loc 1 711 0
 928              		.cfi_startproc
 929 0000 80B5     		push	{r7, lr}
 930              	.LCFI45:
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 82B0     		sub	sp, sp, #8
 935              	.LCFI46:
 936              		.cfi_def_cfa_offset 16
 937 0004 00AF     		add	r7, sp, #0
 938              	.LCFI47:
 939              		.cfi_def_cfa_register 7
 940 0006 7860     		str	r0, [r7, #4]
 712:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_PERIOD_REG = (period & PWM_Fail_16BIT_MASK);
 941              		.loc 1 712 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 30


 942 0008 034B     		ldr	r3, .L52
 943 000a 7A68     		ldr	r2, [r7, #4]
 944 000c 1204     		lsl	r2, r2, #16
 945 000e 120C     		lsr	r2, r2, #16
 946 0010 1A60     		str	r2, [r3]
 713:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 947              		.loc 1 713 0
 948 0012 BD46     		mov	sp, r7
 949 0014 02B0     		add	sp, sp, #8
 950              		@ sp needed for prologue
 951 0016 80BD     		pop	{r7, pc}
 952              	.L53:
 953              		.align	2
 954              	.L52:
 955 0018 14010540 		.word	1074069780
 956              		.cfi_endproc
 957              	.LFE16:
 958              		.size	PWM_Fail_WritePeriod, .-PWM_Fail_WritePeriod
 959              		.section	.text.PWM_Fail_ReadPeriod,"ax",%progbits
 960              		.align	2
 961              		.global	PWM_Fail_ReadPeriod
 962              		.code	16
 963              		.thumb_func
 964              		.type	PWM_Fail_ReadPeriod, %function
 965              	PWM_Fail_ReadPeriod:
 966              	.LFB17:
 714:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 715:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 716:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadPeriod
 718:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 719:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 720:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 721:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the 16 bit period register.
 722:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 723:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 725:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 726:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 727:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Period value
 728:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 729:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 730:.\Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadPeriod(void)
 731:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 967              		.loc 1 731 0
 968              		.cfi_startproc
 969 0000 80B5     		push	{r7, lr}
 970              	.LCFI48:
 971              		.cfi_def_cfa_offset 8
 972              		.cfi_offset 7, -8
 973              		.cfi_offset 14, -4
 974 0002 00AF     		add	r7, sp, #0
 975              	.LCFI49:
 976              		.cfi_def_cfa_register 7
 732:.\Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_PERIOD_REG & PWM_Fail_16BIT_MASK);
 977              		.loc 1 732 0
 978 0004 034B     		ldr	r3, .L56
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 31


 979 0006 1B68     		ldr	r3, [r3]
 980 0008 1B04     		lsl	r3, r3, #16
 981 000a 1B0C     		lsr	r3, r3, #16
 733:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 982              		.loc 1 733 0
 983 000c 181C     		mov	r0, r3
 984 000e BD46     		mov	sp, r7
 985              		@ sp needed for prologue
 986 0010 80BD     		pop	{r7, pc}
 987              	.L57:
 988 0012 C046     		.align	2
 989              	.L56:
 990 0014 14010540 		.word	1074069780
 991              		.cfi_endproc
 992              	.LFE17:
 993              		.size	PWM_Fail_ReadPeriod, .-PWM_Fail_ReadPeriod
 994              		.section	.text.PWM_Fail_SetCompareSwap,"ax",%progbits
 995              		.align	2
 996              		.global	PWM_Fail_SetCompareSwap
 997              		.code	16
 998              		.thumb_func
 999              		.type	PWM_Fail_SetCompareSwap, %function
 1000              	PWM_Fail_SetCompareSwap:
 1001              	.LFB18:
 734:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 735:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 736:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 737:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetCompareSwap
 738:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 739:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 740:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 741:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the register that controls whether the compare registers are
 742:.\Generated_Source\PSoC4/PWM_Fail.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 743:.\Generated_Source\PSoC4/PWM_Fail.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 744:.\Generated_Source\PSoC4/PWM_Fail.c **** *  following a hardware switch event.
 745:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 746:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 747:.\Generated_Source\PSoC4/PWM_Fail.c **** *  swapEnable
 748:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 749:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - 0 - Disable swap
 750:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - 1 - Enable swap
 751:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 752:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 753:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 754:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 755:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetCompareSwap(uint32 swapEnable)
 757:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1002              		.loc 1 757 0
 1003              		.cfi_startproc
 1004 0000 90B5     		push	{r4, r7, lr}
 1005              	.LCFI50:
 1006              		.cfi_def_cfa_offset 12
 1007              		.cfi_offset 4, -12
 1008              		.cfi_offset 7, -8
 1009              		.cfi_offset 14, -4
 1010 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 32


 1011              	.LCFI51:
 1012              		.cfi_def_cfa_offset 32
 1013 0004 00AF     		add	r7, sp, #0
 1014              	.LCFI52:
 1015              		.cfi_def_cfa_register 7
 1016 0006 7860     		str	r0, [r7, #4]
 758:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 759:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 760:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1017              		.loc 1 760 0
 1018 0008 3C1C     		mov	r4, r7
 1019 000a 0F34     		add	r4, r4, #15
 1020 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1021 0010 031C     		mov	r3, r0
 1022 0012 2370     		strb	r3, [r4]
 761:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 762:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_RELOAD_CC_MASK;
 1023              		.loc 1 762 0
 1024 0014 0B4B     		ldr	r3, .L59
 1025 0016 0B4A     		ldr	r2, .L59
 1026 0018 1268     		ldr	r2, [r2]
 1027 001a 0121     		mov	r1, #1
 1028 001c 8A43     		bic	r2, r1
 1029 001e 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= (swapEnable & PWM_Fail_1BIT_MASK);
 1030              		.loc 1 763 0
 1031 0020 084B     		ldr	r3, .L59
 1032 0022 084A     		ldr	r2, .L59
 1033 0024 1168     		ldr	r1, [r2]
 1034 0026 7868     		ldr	r0, [r7, #4]
 1035 0028 0122     		mov	r2, #1
 1036 002a 0240     		and	r2, r0
 1037 002c 0A43     		orr	r2, r1
 1038 002e 1A60     		str	r2, [r3]
 764:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 765:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1039              		.loc 1 765 0
 1040 0030 3B1C     		mov	r3, r7
 1041 0032 0F33     		add	r3, r3, #15
 1042 0034 1B78     		ldrb	r3, [r3]
 1043 0036 181C     		mov	r0, r3
 1044 0038 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1045              		.loc 1 766 0
 1046 003c BD46     		mov	sp, r7
 1047 003e 05B0     		add	sp, sp, #20
 1048              		@ sp needed for prologue
 1049 0040 90BD     		pop	{r4, r7, pc}
 1050              	.L60:
 1051 0042 C046     		.align	2
 1052              	.L59:
 1053 0044 00010540 		.word	1074069760
 1054              		.cfi_endproc
 1055              	.LFE18:
 1056              		.size	PWM_Fail_SetCompareSwap, .-PWM_Fail_SetCompareSwap
 1057              		.section	.text.PWM_Fail_WritePeriodBuf,"ax",%progbits
 1058              		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 33


 1059              		.global	PWM_Fail_WritePeriodBuf
 1060              		.code	16
 1061              		.thumb_func
 1062              		.type	PWM_Fail_WritePeriodBuf, %function
 1063              	PWM_Fail_WritePeriodBuf:
 1064              	.LFB19:
 767:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 768:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 769:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_WritePeriodBuf
 771:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 773:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 774:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the 16 bit period buf register with the new period value.
 775:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 776:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 777:.\Generated_Source\PSoC4/PWM_Fail.c **** *  periodBuf: Period value
 778:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 779:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 780:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 781:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 782:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 783:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_WritePeriodBuf(uint32 periodBuf)
 784:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1065              		.loc 1 784 0
 1066              		.cfi_startproc
 1067 0000 80B5     		push	{r7, lr}
 1068              	.LCFI53:
 1069              		.cfi_def_cfa_offset 8
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 1072 0002 82B0     		sub	sp, sp, #8
 1073              	.LCFI54:
 1074              		.cfi_def_cfa_offset 16
 1075 0004 00AF     		add	r7, sp, #0
 1076              	.LCFI55:
 1077              		.cfi_def_cfa_register 7
 1078 0006 7860     		str	r0, [r7, #4]
 785:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_PERIOD_BUF_REG = (periodBuf & PWM_Fail_16BIT_MASK);
 1079              		.loc 1 785 0
 1080 0008 034B     		ldr	r3, .L62
 1081 000a 7A68     		ldr	r2, [r7, #4]
 1082 000c 1204     		lsl	r2, r2, #16
 1083 000e 120C     		lsr	r2, r2, #16
 1084 0010 1A60     		str	r2, [r3]
 786:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1085              		.loc 1 786 0
 1086 0012 BD46     		mov	sp, r7
 1087 0014 02B0     		add	sp, sp, #8
 1088              		@ sp needed for prologue
 1089 0016 80BD     		pop	{r7, pc}
 1090              	.L63:
 1091              		.align	2
 1092              	.L62:
 1093 0018 18010540 		.word	1074069784
 1094              		.cfi_endproc
 1095              	.LFE19:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 34


 1096              		.size	PWM_Fail_WritePeriodBuf, .-PWM_Fail_WritePeriodBuf
 1097              		.section	.text.PWM_Fail_ReadPeriodBuf,"ax",%progbits
 1098              		.align	2
 1099              		.global	PWM_Fail_ReadPeriodBuf
 1100              		.code	16
 1101              		.thumb_func
 1102              		.type	PWM_Fail_ReadPeriodBuf, %function
 1103              	PWM_Fail_ReadPeriodBuf:
 1104              	.LFB20:
 787:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 788:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 789:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadPeriodBuf
 791:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 792:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 793:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 794:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the 16 bit period buf register.
 795:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 796:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 798:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 799:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 800:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Period value
 801:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 802:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadPeriodBuf(void)
 804:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1105              		.loc 1 804 0
 1106              		.cfi_startproc
 1107 0000 80B5     		push	{r7, lr}
 1108              	.LCFI56:
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 7, -8
 1111              		.cfi_offset 14, -4
 1112 0002 00AF     		add	r7, sp, #0
 1113              	.LCFI57:
 1114              		.cfi_def_cfa_register 7
 805:.\Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_PERIOD_BUF_REG & PWM_Fail_16BIT_MASK);
 1115              		.loc 1 805 0
 1116 0004 034B     		ldr	r3, .L66
 1117 0006 1B68     		ldr	r3, [r3]
 1118 0008 1B04     		lsl	r3, r3, #16
 1119 000a 1B0C     		lsr	r3, r3, #16
 806:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1120              		.loc 1 806 0
 1121 000c 181C     		mov	r0, r3
 1122 000e BD46     		mov	sp, r7
 1123              		@ sp needed for prologue
 1124 0010 80BD     		pop	{r7, pc}
 1125              	.L67:
 1126 0012 C046     		.align	2
 1127              	.L66:
 1128 0014 18010540 		.word	1074069784
 1129              		.cfi_endproc
 1130              	.LFE20:
 1131              		.size	PWM_Fail_ReadPeriodBuf, .-PWM_Fail_ReadPeriodBuf
 1132              		.section	.text.PWM_Fail_SetPeriodSwap,"ax",%progbits
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 35


 1133              		.align	2
 1134              		.global	PWM_Fail_SetPeriodSwap
 1135              		.code	16
 1136              		.thumb_func
 1137              		.type	PWM_Fail_SetPeriodSwap, %function
 1138              	PWM_Fail_SetPeriodSwap:
 1139              	.LFB21:
 807:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 808:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 809:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 810:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPeriodSwap
 811:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 812:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 813:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 814:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the register that controls whether the period registers are
 815:.\Generated_Source\PSoC4/PWM_Fail.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 816:.\Generated_Source\PSoC4/PWM_Fail.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 817:.\Generated_Source\PSoC4/PWM_Fail.c **** *  switch event.
 818:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 819:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 820:.\Generated_Source\PSoC4/PWM_Fail.c **** *  swapEnable
 821:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 822:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - 0 - Disable swap
 823:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - 1 - Enable swap
 824:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 825:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 826:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 827:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 828:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPeriodSwap(uint32 swapEnable)
 830:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1140              		.loc 1 830 0
 1141              		.cfi_startproc
 1142 0000 90B5     		push	{r4, r7, lr}
 1143              	.LCFI58:
 1144              		.cfi_def_cfa_offset 12
 1145              		.cfi_offset 4, -12
 1146              		.cfi_offset 7, -8
 1147              		.cfi_offset 14, -4
 1148 0002 85B0     		sub	sp, sp, #20
 1149              	.LCFI59:
 1150              		.cfi_def_cfa_offset 32
 1151 0004 00AF     		add	r7, sp, #0
 1152              	.LCFI60:
 1153              		.cfi_def_cfa_register 7
 1154 0006 7860     		str	r0, [r7, #4]
 831:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 832:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 833:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1155              		.loc 1 833 0
 1156 0008 3C1C     		mov	r4, r7
 1157 000a 0F34     		add	r4, r4, #15
 1158 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1159 0010 031C     		mov	r3, r0
 1160 0012 2370     		strb	r3, [r4]
 834:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 835:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_RELOAD_PERIOD_MASK;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 36


 1161              		.loc 1 835 0
 1162 0014 0B4B     		ldr	r3, .L69
 1163 0016 0B4A     		ldr	r2, .L69
 1164 0018 1268     		ldr	r2, [r2]
 1165 001a 0221     		mov	r1, #2
 1166 001c 8A43     		bic	r2, r1
 1167 001e 1A60     		str	r2, [r3]
 836:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= ((uint32)((swapEnable & PWM_Fail_1BIT_MASK) <<
 1168              		.loc 1 836 0
 1169 0020 084B     		ldr	r3, .L69
 1170 0022 084A     		ldr	r2, .L69
 1171 0024 1168     		ldr	r1, [r2]
 1172 0026 7868     		ldr	r0, [r7, #4]
 1173 0028 0122     		mov	r2, #1
 1174 002a 0240     		and	r2, r0
 1175 002c 5200     		lsl	r2, r2, #1
 1176 002e 0A43     		orr	r2, r1
 1177 0030 1A60     		str	r2, [r3]
 837:.\Generated_Source\PSoC4/PWM_Fail.c ****                                                             PWM_Fail_RELOAD_PERIOD_SHIFT));
 838:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 839:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1178              		.loc 1 839 0
 1179 0032 3B1C     		mov	r3, r7
 1180 0034 0F33     		add	r3, r3, #15
 1181 0036 1B78     		ldrb	r3, [r3]
 1182 0038 181C     		mov	r0, r3
 1183 003a FFF7FEFF 		bl	CyExitCriticalSection
 840:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1184              		.loc 1 840 0
 1185 003e BD46     		mov	sp, r7
 1186 0040 05B0     		add	sp, sp, #20
 1187              		@ sp needed for prologue
 1188 0042 90BD     		pop	{r4, r7, pc}
 1189              	.L70:
 1190              		.align	2
 1191              	.L69:
 1192 0044 00010540 		.word	1074069760
 1193              		.cfi_endproc
 1194              	.LFE21:
 1195              		.size	PWM_Fail_SetPeriodSwap, .-PWM_Fail_SetPeriodSwap
 1196              		.section	.text.PWM_Fail_WriteCompare,"ax",%progbits
 1197              		.align	2
 1198              		.global	PWM_Fail_WriteCompare
 1199              		.code	16
 1200              		.thumb_func
 1201              		.type	PWM_Fail_WriteCompare, %function
 1202              	PWM_Fail_WriteCompare:
 1203              	.LFB22:
 841:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 842:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 843:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_WriteCompare
 845:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 847:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 848:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the 16 bit compare register with the new compare value. Not
 849:.\Generated_Source\PSoC4/PWM_Fail.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 37


 850:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 851:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 852:.\Generated_Source\PSoC4/PWM_Fail.c **** *  compare: Compare value
 853:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 854:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 855:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 856:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 857:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_WriteCompare(uint32 compare)
 859:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1204              		.loc 1 859 0
 1205              		.cfi_startproc
 1206 0000 80B5     		push	{r7, lr}
 1207              	.LCFI61:
 1208              		.cfi_def_cfa_offset 8
 1209              		.cfi_offset 7, -8
 1210              		.cfi_offset 14, -4
 1211 0002 82B0     		sub	sp, sp, #8
 1212              	.LCFI62:
 1213              		.cfi_def_cfa_offset 16
 1214 0004 00AF     		add	r7, sp, #0
 1215              	.LCFI63:
 1216              		.cfi_def_cfa_register 7
 1217 0006 7860     		str	r0, [r7, #4]
 860:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_V2)
 861:.\Generated_Source\PSoC4/PWM_Fail.c ****         uint32 currentMode;
 862:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_V2) */
 863:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 864:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_V2)
 865:.\Generated_Source\PSoC4/PWM_Fail.c ****         currentMode = ((PWM_Fail_CONTROL_REG & PWM_Fail_UPDOWN_MASK) >> PWM_Fail_UPDOWN_SHIFT);
 866:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 867:.\Generated_Source\PSoC4/PWM_Fail.c ****         if (PWM_Fail__COUNT_DOWN == currentMode)
 868:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
 869:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_COMP_CAP_REG = ((compare + 1u) & PWM_Fail_16BIT_MASK);
 870:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
 871:.\Generated_Source\PSoC4/PWM_Fail.c ****         else if (PWM_Fail__COUNT_UP == currentMode)
 872:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
 873:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_COMP_CAP_REG = ((compare - 1u) & PWM_Fail_16BIT_MASK);
 874:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
 875:.\Generated_Source\PSoC4/PWM_Fail.c ****         else
 876:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
 877:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_COMP_CAP_REG = (compare & PWM_Fail_16BIT_MASK);
 878:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
 879:.\Generated_Source\PSoC4/PWM_Fail.c ****     #else
 880:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_COMP_CAP_REG = (compare & PWM_Fail_16BIT_MASK);
 1218              		.loc 1 880 0
 1219 0008 034B     		ldr	r3, .L72
 1220 000a 7A68     		ldr	r2, [r7, #4]
 1221 000c 1204     		lsl	r2, r2, #16
 1222 000e 120C     		lsr	r2, r2, #16
 1223 0010 1A60     		str	r2, [r3]
 881:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_V2) */
 882:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1224              		.loc 1 882 0
 1225 0012 BD46     		mov	sp, r7
 1226 0014 02B0     		add	sp, sp, #8
 1227              		@ sp needed for prologue
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 38


 1228 0016 80BD     		pop	{r7, pc}
 1229              	.L73:
 1230              		.align	2
 1231              	.L72:
 1232 0018 0C010540 		.word	1074069772
 1233              		.cfi_endproc
 1234              	.LFE22:
 1235              		.size	PWM_Fail_WriteCompare, .-PWM_Fail_WriteCompare
 1236              		.section	.text.PWM_Fail_ReadCompare,"ax",%progbits
 1237              		.align	2
 1238              		.global	PWM_Fail_ReadCompare
 1239              		.code	16
 1240              		.thumb_func
 1241              		.type	PWM_Fail_ReadCompare, %function
 1242              	PWM_Fail_ReadCompare:
 1243              	.LFB23:
 883:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 884:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 885:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 886:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadCompare
 887:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 888:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 889:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 890:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 891:.\Generated_Source\PSoC4/PWM_Fail.c **** *  or in Quadrature Decoder modes.
 892:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 893:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 894:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 895:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 896:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 897:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Compare value
 898:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 899:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadCompare(void)
 901:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1244              		.loc 1 901 0
 1245              		.cfi_startproc
 1246 0000 80B5     		push	{r7, lr}
 1247              	.LCFI64:
 1248              		.cfi_def_cfa_offset 8
 1249              		.cfi_offset 7, -8
 1250              		.cfi_offset 14, -4
 1251 0002 00AF     		add	r7, sp, #0
 1252              	.LCFI65:
 1253              		.cfi_def_cfa_register 7
 902:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_V2)
 903:.\Generated_Source\PSoC4/PWM_Fail.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/PWM_Fail.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_V2) */
 906:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 907:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_V2)
 908:.\Generated_Source\PSoC4/PWM_Fail.c ****         currentMode = ((PWM_Fail_CONTROL_REG & PWM_Fail_UPDOWN_MASK) >> PWM_Fail_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 910:.\Generated_Source\PSoC4/PWM_Fail.c ****         if (PWM_Fail__COUNT_DOWN == currentMode)
 911:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
 912:.\Generated_Source\PSoC4/PWM_Fail.c ****             regVal = ((PWM_Fail_COMP_CAP_REG - 1u) & PWM_Fail_16BIT_MASK);
 913:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 39


 914:.\Generated_Source\PSoC4/PWM_Fail.c ****         else if (PWM_Fail__COUNT_UP == currentMode)
 915:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
 916:.\Generated_Source\PSoC4/PWM_Fail.c ****             regVal = ((PWM_Fail_COMP_CAP_REG + 1u) & PWM_Fail_16BIT_MASK);
 917:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
 918:.\Generated_Source\PSoC4/PWM_Fail.c ****         else
 919:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
 920:.\Generated_Source\PSoC4/PWM_Fail.c ****             regVal = (PWM_Fail_COMP_CAP_REG & PWM_Fail_16BIT_MASK);
 921:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
 922:.\Generated_Source\PSoC4/PWM_Fail.c ****         return (regVal);
 923:.\Generated_Source\PSoC4/PWM_Fail.c ****     #else
 924:.\Generated_Source\PSoC4/PWM_Fail.c ****         return (PWM_Fail_COMP_CAP_REG & PWM_Fail_16BIT_MASK);
 1254              		.loc 1 924 0
 1255 0004 034B     		ldr	r3, .L76
 1256 0006 1B68     		ldr	r3, [r3]
 1257 0008 1B04     		lsl	r3, r3, #16
 1258 000a 1B0C     		lsr	r3, r3, #16
 925:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_V2) */
 926:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1259              		.loc 1 926 0
 1260 000c 181C     		mov	r0, r3
 1261 000e BD46     		mov	sp, r7
 1262              		@ sp needed for prologue
 1263 0010 80BD     		pop	{r7, pc}
 1264              	.L77:
 1265 0012 C046     		.align	2
 1266              	.L76:
 1267 0014 0C010540 		.word	1074069772
 1268              		.cfi_endproc
 1269              	.LFE23:
 1270              		.size	PWM_Fail_ReadCompare, .-PWM_Fail_ReadCompare
 1271              		.section	.text.PWM_Fail_WriteCompareBuf,"ax",%progbits
 1272              		.align	2
 1273              		.global	PWM_Fail_WriteCompareBuf
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	PWM_Fail_WriteCompareBuf, %function
 1277              	PWM_Fail_WriteCompareBuf:
 1278              	.LFB24:
 927:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 928:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 929:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 930:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_WriteCompareBuf
 931:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 932:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 933:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 934:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 935:.\Generated_Source\PSoC4/PWM_Fail.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 936:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 937:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 938:.\Generated_Source\PSoC4/PWM_Fail.c **** *  compareBuf: Compare value
 939:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 940:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 941:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 942:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 943:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 944:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_WriteCompareBuf(uint32 compareBuf)
 945:.\Generated_Source\PSoC4/PWM_Fail.c **** {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 40


 1279              		.loc 1 945 0
 1280              		.cfi_startproc
 1281 0000 80B5     		push	{r7, lr}
 1282              	.LCFI66:
 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 82B0     		sub	sp, sp, #8
 1287              	.LCFI67:
 1288              		.cfi_def_cfa_offset 16
 1289 0004 00AF     		add	r7, sp, #0
 1290              	.LCFI68:
 1291              		.cfi_def_cfa_register 7
 1292 0006 7860     		str	r0, [r7, #4]
 946:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_V2)
 947:.\Generated_Source\PSoC4/PWM_Fail.c ****         uint32 currentMode;
 948:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_V2) */
 949:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 950:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_V2)
 951:.\Generated_Source\PSoC4/PWM_Fail.c ****         currentMode = ((PWM_Fail_CONTROL_REG & PWM_Fail_UPDOWN_MASK) >> PWM_Fail_UPDOWN_SHIFT);
 952:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 953:.\Generated_Source\PSoC4/PWM_Fail.c ****         if (PWM_Fail__COUNT_DOWN == currentMode)
 954:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
 955:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_COMP_CAP_BUF_REG = ((compareBuf + 1u) & PWM_Fail_16BIT_MASK);
 956:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
 957:.\Generated_Source\PSoC4/PWM_Fail.c ****         else if (PWM_Fail__COUNT_UP == currentMode)
 958:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
 959:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_COMP_CAP_BUF_REG = ((compareBuf - 1u) & PWM_Fail_16BIT_MASK);
 960:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
 961:.\Generated_Source\PSoC4/PWM_Fail.c ****         else
 962:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
 963:.\Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_COMP_CAP_BUF_REG = (compareBuf & PWM_Fail_16BIT_MASK);
 964:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
 965:.\Generated_Source\PSoC4/PWM_Fail.c ****     #else
 966:.\Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_COMP_CAP_BUF_REG = (compareBuf & PWM_Fail_16BIT_MASK);
 1293              		.loc 1 966 0
 1294 0008 034B     		ldr	r3, .L79
 1295 000a 7A68     		ldr	r2, [r7, #4]
 1296 000c 1204     		lsl	r2, r2, #16
 1297 000e 120C     		lsr	r2, r2, #16
 1298 0010 1A60     		str	r2, [r3]
 967:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_V2) */
 968:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1299              		.loc 1 968 0
 1300 0012 BD46     		mov	sp, r7
 1301 0014 02B0     		add	sp, sp, #8
 1302              		@ sp needed for prologue
 1303 0016 80BD     		pop	{r7, pc}
 1304              	.L80:
 1305              		.align	2
 1306              	.L79:
 1307 0018 10010540 		.word	1074069776
 1308              		.cfi_endproc
 1309              	.LFE24:
 1310              		.size	PWM_Fail_WriteCompareBuf, .-PWM_Fail_WriteCompareBuf
 1311              		.section	.text.PWM_Fail_ReadCompareBuf,"ax",%progbits
 1312              		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 41


 1313              		.global	PWM_Fail_ReadCompareBuf
 1314              		.code	16
 1315              		.thumb_func
 1316              		.type	PWM_Fail_ReadCompareBuf, %function
 1317              	PWM_Fail_ReadCompareBuf:
 1318              	.LFB25:
 969:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 970:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 971:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 972:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadCompareBuf
 973:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 974:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 975:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 976:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 977:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Capture or in Quadrature Decoder modes.
 978:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 979:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 980:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
 981:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 982:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 983:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Compare buffer value
 984:.\Generated_Source\PSoC4/PWM_Fail.c **** *
 985:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 986:.\Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadCompareBuf(void)
 987:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1319              		.loc 1 987 0
 1320              		.cfi_startproc
 1321 0000 80B5     		push	{r7, lr}
 1322              	.LCFI69:
 1323              		.cfi_def_cfa_offset 8
 1324              		.cfi_offset 7, -8
 1325              		.cfi_offset 14, -4
 1326 0002 00AF     		add	r7, sp, #0
 1327              	.LCFI70:
 1328              		.cfi_def_cfa_register 7
 988:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_V2)
 989:.\Generated_Source\PSoC4/PWM_Fail.c ****         uint32 currentMode;
 990:.\Generated_Source\PSoC4/PWM_Fail.c ****         uint32 regVal;
 991:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_V2) */
 992:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 993:.\Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_V2)
 994:.\Generated_Source\PSoC4/PWM_Fail.c ****         currentMode = ((PWM_Fail_CONTROL_REG & PWM_Fail_UPDOWN_MASK) >> PWM_Fail_UPDOWN_SHIFT);
 995:.\Generated_Source\PSoC4/PWM_Fail.c **** 
 996:.\Generated_Source\PSoC4/PWM_Fail.c ****         if (PWM_Fail__COUNT_DOWN == currentMode)
 997:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
 998:.\Generated_Source\PSoC4/PWM_Fail.c ****             regVal = ((PWM_Fail_COMP_CAP_BUF_REG - 1u) & PWM_Fail_16BIT_MASK);
 999:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
1000:.\Generated_Source\PSoC4/PWM_Fail.c ****         else if (PWM_Fail__COUNT_UP == currentMode)
1001:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
1002:.\Generated_Source\PSoC4/PWM_Fail.c ****             regVal = ((PWM_Fail_COMP_CAP_BUF_REG + 1u) & PWM_Fail_16BIT_MASK);
1003:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
1004:.\Generated_Source\PSoC4/PWM_Fail.c ****         else
1005:.\Generated_Source\PSoC4/PWM_Fail.c ****         {
1006:.\Generated_Source\PSoC4/PWM_Fail.c ****             regVal = (PWM_Fail_COMP_CAP_BUF_REG & PWM_Fail_16BIT_MASK);
1007:.\Generated_Source\PSoC4/PWM_Fail.c ****         }
1008:.\Generated_Source\PSoC4/PWM_Fail.c ****         return (regVal);
1009:.\Generated_Source\PSoC4/PWM_Fail.c ****     #else
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 42


1010:.\Generated_Source\PSoC4/PWM_Fail.c ****         return (PWM_Fail_COMP_CAP_BUF_REG & PWM_Fail_16BIT_MASK);
 1329              		.loc 1 1010 0
 1330 0004 034B     		ldr	r3, .L83
 1331 0006 1B68     		ldr	r3, [r3]
 1332 0008 1B04     		lsl	r3, r3, #16
 1333 000a 1B0C     		lsr	r3, r3, #16
1011:.\Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_V2) */
1012:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1334              		.loc 1 1012 0
 1335 000c 181C     		mov	r0, r3
 1336 000e BD46     		mov	sp, r7
 1337              		@ sp needed for prologue
 1338 0010 80BD     		pop	{r7, pc}
 1339              	.L84:
 1340 0012 C046     		.align	2
 1341              	.L83:
 1342 0014 10010540 		.word	1074069776
 1343              		.cfi_endproc
 1344              	.LFE25:
 1345              		.size	PWM_Fail_ReadCompareBuf, .-PWM_Fail_ReadCompareBuf
 1346              		.section	.text.PWM_Fail_ReadCapture,"ax",%progbits
 1347              		.align	2
 1348              		.global	PWM_Fail_ReadCapture
 1349              		.code	16
 1350              		.thumb_func
 1351              		.type	PWM_Fail_ReadCapture, %function
 1352              	PWM_Fail_ReadCapture:
 1353              	.LFB26:
1013:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1014:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1015:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadCapture
1017:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1018:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1019:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1020:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the captured counter value. This API is applicable only for
1021:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1022:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1023:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1024:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1025:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1026:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1027:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Capture value
1028:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1029:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1030:.\Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadCapture(void)
1031:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1354              		.loc 1 1031 0
 1355              		.cfi_startproc
 1356 0000 80B5     		push	{r7, lr}
 1357              	.LCFI71:
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 7, -8
 1360              		.cfi_offset 14, -4
 1361 0002 00AF     		add	r7, sp, #0
 1362              	.LCFI72:
 1363              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 43


1032:.\Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_COMP_CAP_REG & PWM_Fail_16BIT_MASK);
 1364              		.loc 1 1032 0
 1365 0004 034B     		ldr	r3, .L87
 1366 0006 1B68     		ldr	r3, [r3]
 1367 0008 1B04     		lsl	r3, r3, #16
 1368 000a 1B0C     		lsr	r3, r3, #16
1033:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1369              		.loc 1 1033 0
 1370 000c 181C     		mov	r0, r3
 1371 000e BD46     		mov	sp, r7
 1372              		@ sp needed for prologue
 1373 0010 80BD     		pop	{r7, pc}
 1374              	.L88:
 1375 0012 C046     		.align	2
 1376              	.L87:
 1377 0014 0C010540 		.word	1074069772
 1378              		.cfi_endproc
 1379              	.LFE26:
 1380              		.size	PWM_Fail_ReadCapture, .-PWM_Fail_ReadCapture
 1381              		.section	.text.PWM_Fail_ReadCaptureBuf,"ax",%progbits
 1382              		.align	2
 1383              		.global	PWM_Fail_ReadCaptureBuf
 1384              		.code	16
 1385              		.thumb_func
 1386              		.type	PWM_Fail_ReadCaptureBuf, %function
 1387              	PWM_Fail_ReadCaptureBuf:
 1388              	.LFB27:
1034:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1035:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1036:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1037:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadCaptureBuf
1038:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1039:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1040:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1041:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the capture buffer register. This API is applicable only for
1042:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1043:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1044:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1045:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1046:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1047:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1048:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Capture buffer value
1049:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1050:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1051:.\Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadCaptureBuf(void)
1052:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1389              		.loc 1 1052 0
 1390              		.cfi_startproc
 1391 0000 80B5     		push	{r7, lr}
 1392              	.LCFI73:
 1393              		.cfi_def_cfa_offset 8
 1394              		.cfi_offset 7, -8
 1395              		.cfi_offset 14, -4
 1396 0002 00AF     		add	r7, sp, #0
 1397              	.LCFI74:
 1398              		.cfi_def_cfa_register 7
1053:.\Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_COMP_CAP_BUF_REG & PWM_Fail_16BIT_MASK);
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 44


 1399              		.loc 1 1053 0
 1400 0004 034B     		ldr	r3, .L91
 1401 0006 1B68     		ldr	r3, [r3]
 1402 0008 1B04     		lsl	r3, r3, #16
 1403 000a 1B0C     		lsr	r3, r3, #16
1054:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1404              		.loc 1 1054 0
 1405 000c 181C     		mov	r0, r3
 1406 000e BD46     		mov	sp, r7
 1407              		@ sp needed for prologue
 1408 0010 80BD     		pop	{r7, pc}
 1409              	.L92:
 1410 0012 C046     		.align	2
 1411              	.L91:
 1412 0014 10010540 		.word	1074069776
 1413              		.cfi_endproc
 1414              	.LFE27:
 1415              		.size	PWM_Fail_ReadCaptureBuf, .-PWM_Fail_ReadCaptureBuf
 1416              		.section	.text.PWM_Fail_SetCaptureMode,"ax",%progbits
 1417              		.align	2
 1418              		.global	PWM_Fail_SetCaptureMode
 1419              		.code	16
 1420              		.thumb_func
 1421              		.type	PWM_Fail_SetCaptureMode, %function
 1422              	PWM_Fail_SetCaptureMode:
 1423              	.LFB28:
1055:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1056:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1057:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1058:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetCaptureMode
1059:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1060:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1061:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1062:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1063:.\Generated_Source\PSoC4/PWM_Fail.c **** *  This input is not applicable to the Timer/Counter without Capture and
1064:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Quadrature Decoder modes.
1065:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1066:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1067:.\Generated_Source\PSoC4/PWM_Fail.c **** *  triggerMode: Enumerated trigger mode value
1068:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1069:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_LEVEL     - Level
1070:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_RISING    - Rising edge
1071:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_FALLING   - Falling edge
1072:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_BOTH      - Both rising and falling edge
1073:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1074:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1075:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1076:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1077:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1078:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetCaptureMode(uint32 triggerMode)
1079:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1424              		.loc 1 1079 0
 1425              		.cfi_startproc
 1426 0000 90B5     		push	{r4, r7, lr}
 1427              	.LCFI75:
 1428              		.cfi_def_cfa_offset 12
 1429              		.cfi_offset 4, -12
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 45


 1430              		.cfi_offset 7, -8
 1431              		.cfi_offset 14, -4
 1432 0002 85B0     		sub	sp, sp, #20
 1433              	.LCFI76:
 1434              		.cfi_def_cfa_offset 32
 1435 0004 00AF     		add	r7, sp, #0
 1436              	.LCFI77:
 1437              		.cfi_def_cfa_register 7
 1438 0006 7860     		str	r0, [r7, #4]
1080:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1081:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1082:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1439              		.loc 1 1082 0
 1440 0008 3C1C     		mov	r4, r7
 1441 000a 0F34     		add	r4, r4, #15
 1442 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1443 0010 031C     		mov	r3, r0
 1444 0012 2370     		strb	r3, [r4]
1083:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1084:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG &= (uint32)~PWM_Fail_CAPTURE_MASK;
 1445              		.loc 1 1084 0
 1446 0014 0A4B     		ldr	r3, .L94
 1447 0016 0A4A     		ldr	r2, .L94
 1448 0018 1268     		ldr	r2, [r2]
 1449 001a 0321     		mov	r1, #3
 1450 001c 8A43     		bic	r2, r1
 1451 001e 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG |= triggerMode;
 1452              		.loc 1 1085 0
 1453 0020 074B     		ldr	r3, .L94
 1454 0022 074A     		ldr	r2, .L94
 1455 0024 1168     		ldr	r1, [r2]
 1456 0026 7A68     		ldr	r2, [r7, #4]
 1457 0028 0A43     		orr	r2, r1
 1458 002a 1A60     		str	r2, [r3]
1086:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1087:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1459              		.loc 1 1087 0
 1460 002c 3B1C     		mov	r3, r7
 1461 002e 0F33     		add	r3, r3, #15
 1462 0030 1B78     		ldrb	r3, [r3]
 1463 0032 181C     		mov	r0, r3
 1464 0034 FFF7FEFF 		bl	CyExitCriticalSection
1088:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1465              		.loc 1 1088 0
 1466 0038 BD46     		mov	sp, r7
 1467 003a 05B0     		add	sp, sp, #20
 1468              		@ sp needed for prologue
 1469 003c 90BD     		pop	{r4, r7, pc}
 1470              	.L95:
 1471 003e C046     		.align	2
 1472              	.L94:
 1473 0040 24010540 		.word	1074069796
 1474              		.cfi_endproc
 1475              	.LFE28:
 1476              		.size	PWM_Fail_SetCaptureMode, .-PWM_Fail_SetCaptureMode
 1477              		.section	.text.PWM_Fail_SetReloadMode,"ax",%progbits
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 46


 1478              		.align	2
 1479              		.global	PWM_Fail_SetReloadMode
 1480              		.code	16
 1481              		.thumb_func
 1482              		.type	PWM_Fail_SetReloadMode, %function
 1483              	PWM_Fail_SetReloadMode:
 1484              	.LFB29:
1089:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1090:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1091:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetReloadMode
1093:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1095:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1096:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1097:.\Generated_Source\PSoC4/PWM_Fail.c **** *  input.
1098:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1099:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1100:.\Generated_Source\PSoC4/PWM_Fail.c **** *  triggerMode: Enumerated trigger mode value
1101:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1102:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_LEVEL     - Level
1103:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_RISING    - Rising edge
1104:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_FALLING   - Falling edge
1105:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_BOTH      - Both rising and falling edge
1106:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1107:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1108:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1109:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1110:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetReloadMode(uint32 triggerMode)
1112:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1485              		.loc 1 1112 0
 1486              		.cfi_startproc
 1487 0000 90B5     		push	{r4, r7, lr}
 1488              	.LCFI78:
 1489              		.cfi_def_cfa_offset 12
 1490              		.cfi_offset 4, -12
 1491              		.cfi_offset 7, -8
 1492              		.cfi_offset 14, -4
 1493 0002 85B0     		sub	sp, sp, #20
 1494              	.LCFI79:
 1495              		.cfi_def_cfa_offset 32
 1496 0004 00AF     		add	r7, sp, #0
 1497              	.LCFI80:
 1498              		.cfi_def_cfa_register 7
 1499 0006 7860     		str	r0, [r7, #4]
1113:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1114:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1115:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1500              		.loc 1 1115 0
 1501 0008 3C1C     		mov	r4, r7
 1502 000a 0F34     		add	r4, r4, #15
 1503 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1504 0010 031C     		mov	r3, r0
 1505 0012 2370     		strb	r3, [r4]
1116:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1117:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG &= (uint32)~PWM_Fail_RELOAD_MASK;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 47


 1506              		.loc 1 1117 0
 1507 0014 0A4B     		ldr	r3, .L97
 1508 0016 0A4A     		ldr	r2, .L97
 1509 0018 1268     		ldr	r2, [r2]
 1510 001a 3021     		mov	r1, #48
 1511 001c 8A43     		bic	r2, r1
 1512 001e 1A60     		str	r2, [r3]
1118:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Fail_RELOAD_SHIFT));
 1513              		.loc 1 1118 0
 1514 0020 074B     		ldr	r3, .L97
 1515 0022 074A     		ldr	r2, .L97
 1516 0024 1168     		ldr	r1, [r2]
 1517 0026 7A68     		ldr	r2, [r7, #4]
 1518 0028 1201     		lsl	r2, r2, #4
 1519 002a 0A43     		orr	r2, r1
 1520 002c 1A60     		str	r2, [r3]
1119:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1120:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1521              		.loc 1 1120 0
 1522 002e 3B1C     		mov	r3, r7
 1523 0030 0F33     		add	r3, r3, #15
 1524 0032 1B78     		ldrb	r3, [r3]
 1525 0034 181C     		mov	r0, r3
 1526 0036 FFF7FEFF 		bl	CyExitCriticalSection
1121:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1527              		.loc 1 1121 0
 1528 003a BD46     		mov	sp, r7
 1529 003c 05B0     		add	sp, sp, #20
 1530              		@ sp needed for prologue
 1531 003e 90BD     		pop	{r4, r7, pc}
 1532              	.L98:
 1533              		.align	2
 1534              	.L97:
 1535 0040 24010540 		.word	1074069796
 1536              		.cfi_endproc
 1537              	.LFE29:
 1538              		.size	PWM_Fail_SetReloadMode, .-PWM_Fail_SetReloadMode
 1539              		.section	.text.PWM_Fail_SetStartMode,"ax",%progbits
 1540              		.align	2
 1541              		.global	PWM_Fail_SetStartMode
 1542              		.code	16
 1543              		.thumb_func
 1544              		.type	PWM_Fail_SetStartMode, %function
 1545              	PWM_Fail_SetStartMode:
 1546              	.LFB30:
1122:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1123:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1124:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1125:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetStartMode
1126:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1127:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1128:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1129:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1130:.\Generated_Source\PSoC4/PWM_Fail.c **** *  phiB input.
1131:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1132:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1133:.\Generated_Source\PSoC4/PWM_Fail.c **** *  triggerMode: Enumerated trigger mode value
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 48


1134:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1135:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_LEVEL     - Level
1136:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_RISING    - Rising edge
1137:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_FALLING   - Falling edge
1138:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_BOTH      - Both rising and falling edge
1139:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1140:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1141:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1142:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1143:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1144:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetStartMode(uint32 triggerMode)
1145:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1547              		.loc 1 1145 0
 1548              		.cfi_startproc
 1549 0000 90B5     		push	{r4, r7, lr}
 1550              	.LCFI81:
 1551              		.cfi_def_cfa_offset 12
 1552              		.cfi_offset 4, -12
 1553              		.cfi_offset 7, -8
 1554              		.cfi_offset 14, -4
 1555 0002 85B0     		sub	sp, sp, #20
 1556              	.LCFI82:
 1557              		.cfi_def_cfa_offset 32
 1558 0004 00AF     		add	r7, sp, #0
 1559              	.LCFI83:
 1560              		.cfi_def_cfa_register 7
 1561 0006 7860     		str	r0, [r7, #4]
1146:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1147:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1148:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1562              		.loc 1 1148 0
 1563 0008 3C1C     		mov	r4, r7
 1564 000a 0F34     		add	r4, r4, #15
 1565 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1566 0010 031C     		mov	r3, r0
 1567 0012 2370     		strb	r3, [r4]
1149:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1150:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG &= (uint32)~PWM_Fail_START_MASK;
 1568              		.loc 1 1150 0
 1569 0014 0A4B     		ldr	r3, .L100
 1570 0016 0A4A     		ldr	r2, .L100
 1571 0018 1168     		ldr	r1, [r2]
 1572 001a 0A4A     		ldr	r2, .L100+4
 1573 001c 0A40     		and	r2, r1
 1574 001e 1A60     		str	r2, [r3]
1151:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Fail_START_SHIFT));
 1575              		.loc 1 1151 0
 1576 0020 074B     		ldr	r3, .L100
 1577 0022 074A     		ldr	r2, .L100
 1578 0024 1168     		ldr	r1, [r2]
 1579 0026 7A68     		ldr	r2, [r7, #4]
 1580 0028 1202     		lsl	r2, r2, #8
 1581 002a 0A43     		orr	r2, r1
 1582 002c 1A60     		str	r2, [r3]
1152:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1153:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1583              		.loc 1 1153 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 49


 1584 002e 3B1C     		mov	r3, r7
 1585 0030 0F33     		add	r3, r3, #15
 1586 0032 1B78     		ldrb	r3, [r3]
 1587 0034 181C     		mov	r0, r3
 1588 0036 FFF7FEFF 		bl	CyExitCriticalSection
1154:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1589              		.loc 1 1154 0
 1590 003a BD46     		mov	sp, r7
 1591 003c 05B0     		add	sp, sp, #20
 1592              		@ sp needed for prologue
 1593 003e 90BD     		pop	{r4, r7, pc}
 1594              	.L101:
 1595              		.align	2
 1596              	.L100:
 1597 0040 24010540 		.word	1074069796
 1598 0044 FFFCFFFF 		.word	-769
 1599              		.cfi_endproc
 1600              	.LFE30:
 1601              		.size	PWM_Fail_SetStartMode, .-PWM_Fail_SetStartMode
 1602              		.section	.text.PWM_Fail_SetStopMode,"ax",%progbits
 1603              		.align	2
 1604              		.global	PWM_Fail_SetStopMode
 1605              		.code	16
 1606              		.thumb_func
 1607              		.type	PWM_Fail_SetStopMode, %function
 1608              	PWM_Fail_SetStopMode:
 1609              	.LFB31:
1155:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1156:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1157:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1158:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetStopMode
1159:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1160:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1161:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1162:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1163:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1164:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1165:.\Generated_Source\PSoC4/PWM_Fail.c **** *  triggerMode: Enumerated trigger mode value
1166:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1167:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_LEVEL     - Level
1168:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_RISING    - Rising edge
1169:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_FALLING   - Falling edge
1170:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_BOTH      - Both rising and falling edge
1171:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1172:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1173:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1174:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1175:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1176:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetStopMode(uint32 triggerMode)
1177:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1610              		.loc 1 1177 0
 1611              		.cfi_startproc
 1612 0000 90B5     		push	{r4, r7, lr}
 1613              	.LCFI84:
 1614              		.cfi_def_cfa_offset 12
 1615              		.cfi_offset 4, -12
 1616              		.cfi_offset 7, -8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 50


 1617              		.cfi_offset 14, -4
 1618 0002 85B0     		sub	sp, sp, #20
 1619              	.LCFI85:
 1620              		.cfi_def_cfa_offset 32
 1621 0004 00AF     		add	r7, sp, #0
 1622              	.LCFI86:
 1623              		.cfi_def_cfa_register 7
 1624 0006 7860     		str	r0, [r7, #4]
1178:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1179:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1180:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1625              		.loc 1 1180 0
 1626 0008 3C1C     		mov	r4, r7
 1627 000a 0F34     		add	r4, r4, #15
 1628 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1629 0010 031C     		mov	r3, r0
 1630 0012 2370     		strb	r3, [r4]
1181:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1182:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG &= (uint32)~PWM_Fail_STOP_MASK;
 1631              		.loc 1 1182 0
 1632 0014 0A4B     		ldr	r3, .L103
 1633 0016 0A4A     		ldr	r2, .L103
 1634 0018 1268     		ldr	r2, [r2]
 1635 001a C021     		mov	r1, #192
 1636 001c 8A43     		bic	r2, r1
 1637 001e 1A60     		str	r2, [r3]
1183:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Fail_STOP_SHIFT));
 1638              		.loc 1 1183 0
 1639 0020 074B     		ldr	r3, .L103
 1640 0022 074A     		ldr	r2, .L103
 1641 0024 1168     		ldr	r1, [r2]
 1642 0026 7A68     		ldr	r2, [r7, #4]
 1643 0028 9201     		lsl	r2, r2, #6
 1644 002a 0A43     		orr	r2, r1
 1645 002c 1A60     		str	r2, [r3]
1184:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1185:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1646              		.loc 1 1185 0
 1647 002e 3B1C     		mov	r3, r7
 1648 0030 0F33     		add	r3, r3, #15
 1649 0032 1B78     		ldrb	r3, [r3]
 1650 0034 181C     		mov	r0, r3
 1651 0036 FFF7FEFF 		bl	CyExitCriticalSection
1186:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1652              		.loc 1 1186 0
 1653 003a BD46     		mov	sp, r7
 1654 003c 05B0     		add	sp, sp, #20
 1655              		@ sp needed for prologue
 1656 003e 90BD     		pop	{r4, r7, pc}
 1657              	.L104:
 1658              		.align	2
 1659              	.L103:
 1660 0040 24010540 		.word	1074069796
 1661              		.cfi_endproc
 1662              	.LFE31:
 1663              		.size	PWM_Fail_SetStopMode, .-PWM_Fail_SetStopMode
 1664              		.section	.text.PWM_Fail_SetCountMode,"ax",%progbits
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 51


 1665              		.align	2
 1666              		.global	PWM_Fail_SetCountMode
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	PWM_Fail_SetCountMode, %function
 1670              	PWM_Fail_SetCountMode:
 1671              	.LFB32:
1187:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1188:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1189:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1190:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetCountMode
1191:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1192:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1193:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1194:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1195:.\Generated_Source\PSoC4/PWM_Fail.c **** *  input.
1196:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1197:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1198:.\Generated_Source\PSoC4/PWM_Fail.c **** *  triggerMode: Enumerated trigger mode value
1199:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1200:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_LEVEL     - Level
1201:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_RISING    - Rising edge
1202:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_FALLING   - Falling edge
1203:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_BOTH      - Both rising and falling edge
1204:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1205:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1206:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1207:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1208:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetCountMode(uint32 triggerMode)
1210:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1672              		.loc 1 1210 0
 1673              		.cfi_startproc
 1674 0000 90B5     		push	{r4, r7, lr}
 1675              	.LCFI87:
 1676              		.cfi_def_cfa_offset 12
 1677              		.cfi_offset 4, -12
 1678              		.cfi_offset 7, -8
 1679              		.cfi_offset 14, -4
 1680 0002 85B0     		sub	sp, sp, #20
 1681              	.LCFI88:
 1682              		.cfi_def_cfa_offset 32
 1683 0004 00AF     		add	r7, sp, #0
 1684              	.LCFI89:
 1685              		.cfi_def_cfa_register 7
 1686 0006 7860     		str	r0, [r7, #4]
1211:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1212:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1213:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1687              		.loc 1 1213 0
 1688 0008 3C1C     		mov	r4, r7
 1689 000a 0F34     		add	r4, r4, #15
 1690 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1691 0010 031C     		mov	r3, r0
 1692 0012 2370     		strb	r3, [r4]
1214:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1215:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG &= (uint32)~PWM_Fail_COUNT_MASK;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 52


 1693              		.loc 1 1215 0
 1694 0014 0A4B     		ldr	r3, .L106
 1695 0016 0A4A     		ldr	r2, .L106
 1696 0018 1268     		ldr	r2, [r2]
 1697 001a 0C21     		mov	r1, #12
 1698 001c 8A43     		bic	r2, r1
 1699 001e 1A60     		str	r2, [r3]
1216:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Fail_COUNT_SHIFT));
 1700              		.loc 1 1216 0
 1701 0020 074B     		ldr	r3, .L106
 1702 0022 074A     		ldr	r2, .L106
 1703 0024 1168     		ldr	r1, [r2]
 1704 0026 7A68     		ldr	r2, [r7, #4]
 1705 0028 9200     		lsl	r2, r2, #2
 1706 002a 0A43     		orr	r2, r1
 1707 002c 1A60     		str	r2, [r3]
1217:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1218:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1708              		.loc 1 1218 0
 1709 002e 3B1C     		mov	r3, r7
 1710 0030 0F33     		add	r3, r3, #15
 1711 0032 1B78     		ldrb	r3, [r3]
 1712 0034 181C     		mov	r0, r3
 1713 0036 FFF7FEFF 		bl	CyExitCriticalSection
1219:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1714              		.loc 1 1219 0
 1715 003a BD46     		mov	sp, r7
 1716 003c 05B0     		add	sp, sp, #20
 1717              		@ sp needed for prologue
 1718 003e 90BD     		pop	{r4, r7, pc}
 1719              	.L107:
 1720              		.align	2
 1721              	.L106:
 1722 0040 24010540 		.word	1074069796
 1723              		.cfi_endproc
 1724              	.LFE32:
 1725              		.size	PWM_Fail_SetCountMode, .-PWM_Fail_SetCountMode
 1726              		.section	.text.PWM_Fail_TriggerCommand,"ax",%progbits
 1727              		.align	2
 1728              		.global	PWM_Fail_TriggerCommand
 1729              		.code	16
 1730              		.thumb_func
 1731              		.type	PWM_Fail_TriggerCommand, %function
 1732              	PWM_Fail_TriggerCommand:
 1733              	.LFB33:
1220:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1221:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1222:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_TriggerCommand
1224:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1225:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1226:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1227:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1228:.\Generated_Source\PSoC4/PWM_Fail.c **** *  The mask can be used to apply this command simultaneously to more than one
1229:.\Generated_Source\PSoC4/PWM_Fail.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1230:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1231:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 53


1232:.\Generated_Source\PSoC4/PWM_Fail.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1233:.\Generated_Source\PSoC4/PWM_Fail.c **** *        command should apply to.  This function from one instance can be used
1234:.\Generated_Source\PSoC4/PWM_Fail.c **** *        to apply the command to any of the instances in the design.
1235:.\Generated_Source\PSoC4/PWM_Fail.c **** *        The mask value for a specific instance is available with the MASK
1236:.\Generated_Source\PSoC4/PWM_Fail.c **** *        define.
1237:.\Generated_Source\PSoC4/PWM_Fail.c **** *  command: Enumerated command values. Capture command only applicable for
1238:.\Generated_Source\PSoC4/PWM_Fail.c **** *           Timer/Counter with Capture and PWM modes.
1239:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1240:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_CMD_CAPTURE    - Trigger Capture command
1241:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_CMD_RELOAD     - Trigger Reload command
1242:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_CMD_STOP       - Trigger Stop command
1243:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_CMD_START      - Trigger Start command
1244:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1245:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1246:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1247:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1248:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_TriggerCommand(uint32 mask, uint32 command)
1250:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1734              		.loc 1 1250 0
 1735              		.cfi_startproc
 1736 0000 90B5     		push	{r4, r7, lr}
 1737              	.LCFI90:
 1738              		.cfi_def_cfa_offset 12
 1739              		.cfi_offset 4, -12
 1740              		.cfi_offset 7, -8
 1741              		.cfi_offset 14, -4
 1742 0002 85B0     		sub	sp, sp, #20
 1743              	.LCFI91:
 1744              		.cfi_def_cfa_offset 32
 1745 0004 00AF     		add	r7, sp, #0
 1746              	.LCFI92:
 1747              		.cfi_def_cfa_register 7
 1748 0006 7860     		str	r0, [r7, #4]
 1749 0008 3960     		str	r1, [r7]
1251:.\Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1252:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1253:.\Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1750              		.loc 1 1253 0
 1751 000a 3C1C     		mov	r4, r7
 1752 000c 0F34     		add	r4, r4, #15
 1753 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1754 0012 031C     		mov	r3, r0
 1755 0014 2370     		strb	r3, [r4]
1254:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1255:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_COMMAND_REG = ((uint32)(mask << command));
 1756              		.loc 1 1255 0
 1757 0016 084B     		ldr	r3, .L109
 1758 0018 3A68     		ldr	r2, [r7]
 1759 001a 7968     		ldr	r1, [r7, #4]
 1760 001c 081C     		mov	r0, r1
 1761 001e 9040     		lsl	r0, r0, r2
 1762 0020 021C     		mov	r2, r0
 1763 0022 1A60     		str	r2, [r3]
1256:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1257:.\Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1764              		.loc 1 1257 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 54


 1765 0024 3B1C     		mov	r3, r7
 1766 0026 0F33     		add	r3, r3, #15
 1767 0028 1B78     		ldrb	r3, [r3]
 1768 002a 181C     		mov	r0, r3
 1769 002c FFF7FEFF 		bl	CyExitCriticalSection
1258:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1770              		.loc 1 1258 0
 1771 0030 BD46     		mov	sp, r7
 1772 0032 05B0     		add	sp, sp, #20
 1773              		@ sp needed for prologue
 1774 0034 90BD     		pop	{r4, r7, pc}
 1775              	.L110:
 1776 0036 C046     		.align	2
 1777              	.L109:
 1778 0038 08000540 		.word	1074069512
 1779              		.cfi_endproc
 1780              	.LFE33:
 1781              		.size	PWM_Fail_TriggerCommand, .-PWM_Fail_TriggerCommand
 1782              		.section	.text.PWM_Fail_ReadStatus,"ax",%progbits
 1783              		.align	2
 1784              		.global	PWM_Fail_ReadStatus
 1785              		.code	16
 1786              		.thumb_func
 1787              		.type	PWM_Fail_ReadStatus, %function
 1788              	PWM_Fail_ReadStatus:
 1789              	.LFB34:
1259:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1260:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1261:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadStatus
1263:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1265:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1266:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the status of the PWM_Fail.
1267:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1268:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1269:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1270:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1271:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1272:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Status
1273:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1274:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_STATUS_DOWN    - Set if counting down
1275:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_STATUS_RUNNING - Set if counter is running
1276:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1277:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadStatus(void)
1279:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1790              		.loc 1 1279 0
 1791              		.cfi_startproc
 1792 0000 80B5     		push	{r7, lr}
 1793              	.LCFI93:
 1794              		.cfi_def_cfa_offset 8
 1795              		.cfi_offset 7, -8
 1796              		.cfi_offset 14, -4
 1797 0002 00AF     		add	r7, sp, #0
 1798              	.LCFI94:
 1799              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 55


1280:.\Generated_Source\PSoC4/PWM_Fail.c ****     return ((PWM_Fail_STATUS_REG >> PWM_Fail_RUNNING_STATUS_SHIFT) |
 1800              		.loc 1 1280 0
 1801 0004 054B     		ldr	r3, .L113
 1802 0006 1B68     		ldr	r3, [r3]
 1803 0008 9A0F     		lsr	r2, r3, #30
1281:.\Generated_Source\PSoC4/PWM_Fail.c ****             (PWM_Fail_STATUS_REG & PWM_Fail_STATUS_DOWN));
 1804              		.loc 1 1281 0
 1805 000a 044B     		ldr	r3, .L113
 1806 000c 1968     		ldr	r1, [r3]
 1807 000e 0123     		mov	r3, #1
 1808 0010 0B40     		and	r3, r1
1280:.\Generated_Source\PSoC4/PWM_Fail.c ****     return ((PWM_Fail_STATUS_REG >> PWM_Fail_RUNNING_STATUS_SHIFT) |
 1809              		.loc 1 1280 0
 1810 0012 1343     		orr	r3, r2
1282:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1811              		.loc 1 1282 0
 1812 0014 181C     		mov	r0, r3
 1813 0016 BD46     		mov	sp, r7
 1814              		@ sp needed for prologue
 1815 0018 80BD     		pop	{r7, pc}
 1816              	.L114:
 1817 001a C046     		.align	2
 1818              	.L113:
 1819 001c 04010540 		.word	1074069764
 1820              		.cfi_endproc
 1821              	.LFE34:
 1822              		.size	PWM_Fail_ReadStatus, .-PWM_Fail_ReadStatus
 1823              		.section	.text.PWM_Fail_SetInterruptMode,"ax",%progbits
 1824              		.align	2
 1825              		.global	PWM_Fail_SetInterruptMode
 1826              		.code	16
 1827              		.thumb_func
 1828              		.type	PWM_Fail_SetInterruptMode, %function
 1829              	PWM_Fail_SetInterruptMode:
 1830              	.LFB35:
1283:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1284:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1285:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1286:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetInterruptMode
1287:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1288:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1289:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1290:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the interrupt mask to control which interrupt
1291:.\Generated_Source\PSoC4/PWM_Fail.c **** *  requests generate the interrupt signal.
1292:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1293:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1294:.\Generated_Source\PSoC4/PWM_Fail.c **** *   interruptMask: Mask of bits to be enabled
1295:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1296:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_TC       - Terminal count mask
1297:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_CC_MATCH - Compare count / capture mask
1298:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1299:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1300:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1301:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1302:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetInterruptMode(uint32 interruptMask)
1304:.\Generated_Source\PSoC4/PWM_Fail.c **** {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 56


 1831              		.loc 1 1304 0
 1832              		.cfi_startproc
 1833 0000 80B5     		push	{r7, lr}
 1834              	.LCFI95:
 1835              		.cfi_def_cfa_offset 8
 1836              		.cfi_offset 7, -8
 1837              		.cfi_offset 14, -4
 1838 0002 82B0     		sub	sp, sp, #8
 1839              	.LCFI96:
 1840              		.cfi_def_cfa_offset 16
 1841 0004 00AF     		add	r7, sp, #0
 1842              	.LCFI97:
 1843              		.cfi_def_cfa_register 7
 1844 0006 7860     		str	r0, [r7, #4]
1305:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_INTERRUPT_MASK_REG =  interruptMask;
 1845              		.loc 1 1305 0
 1846 0008 024B     		ldr	r3, .L116
 1847 000a 7A68     		ldr	r2, [r7, #4]
 1848 000c 1A60     		str	r2, [r3]
1306:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1849              		.loc 1 1306 0
 1850 000e BD46     		mov	sp, r7
 1851 0010 02B0     		add	sp, sp, #8
 1852              		@ sp needed for prologue
 1853 0012 80BD     		pop	{r7, pc}
 1854              	.L117:
 1855              		.align	2
 1856              	.L116:
 1857 0014 38010540 		.word	1074069816
 1858              		.cfi_endproc
 1859              	.LFE35:
 1860              		.size	PWM_Fail_SetInterruptMode, .-PWM_Fail_SetInterruptMode
 1861              		.section	.text.PWM_Fail_GetInterruptSourceMasked,"ax",%progbits
 1862              		.align	2
 1863              		.global	PWM_Fail_GetInterruptSourceMasked
 1864              		.code	16
 1865              		.thumb_func
 1866              		.type	PWM_Fail_GetInterruptSourceMasked, %function
 1867              	PWM_Fail_GetInterruptSourceMasked:
 1868              	.LFB36:
1307:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1308:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1309:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1310:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_GetInterruptSourceMasked
1311:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1312:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1313:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1314:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Gets the interrupt requests masked by the interrupt mask.
1315:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1316:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1317:.\Generated_Source\PSoC4/PWM_Fail.c **** *   None
1318:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1319:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1320:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Masked interrupt source
1321:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1322:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_TC       - Terminal count mask
1323:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_CC_MATCH - Compare count / capture mask
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 57


1324:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1325:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1326:.\Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_GetInterruptSourceMasked(void)
1327:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1869              		.loc 1 1327 0
 1870              		.cfi_startproc
 1871 0000 80B5     		push	{r7, lr}
 1872              	.LCFI98:
 1873              		.cfi_def_cfa_offset 8
 1874              		.cfi_offset 7, -8
 1875              		.cfi_offset 14, -4
 1876 0002 00AF     		add	r7, sp, #0
 1877              	.LCFI99:
 1878              		.cfi_def_cfa_register 7
1328:.\Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_INTERRUPT_MASKED_REG);
 1879              		.loc 1 1328 0
 1880 0004 024B     		ldr	r3, .L120
 1881 0006 1B68     		ldr	r3, [r3]
1329:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1882              		.loc 1 1329 0
 1883 0008 181C     		mov	r0, r3
 1884 000a BD46     		mov	sp, r7
 1885              		@ sp needed for prologue
 1886 000c 80BD     		pop	{r7, pc}
 1887              	.L121:
 1888 000e C046     		.align	2
 1889              	.L120:
 1890 0010 3C010540 		.word	1074069820
 1891              		.cfi_endproc
 1892              	.LFE36:
 1893              		.size	PWM_Fail_GetInterruptSourceMasked, .-PWM_Fail_GetInterruptSourceMasked
 1894              		.section	.text.PWM_Fail_GetInterruptSource,"ax",%progbits
 1895              		.align	2
 1896              		.global	PWM_Fail_GetInterruptSource
 1897              		.code	16
 1898              		.thumb_func
 1899              		.type	PWM_Fail_GetInterruptSource, %function
 1900              	PWM_Fail_GetInterruptSource:
 1901              	.LFB37:
1330:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1331:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1332:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1333:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_GetInterruptSource
1334:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1335:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1336:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1337:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Gets the interrupt requests (without masking).
1338:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1339:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1340:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1341:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1342:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1343:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Interrupt request value
1344:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1345:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_TC       - Terminal count mask
1346:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_CC_MATCH - Compare count / capture mask
1347:.\Generated_Source\PSoC4/PWM_Fail.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 58


1348:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1349:.\Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_GetInterruptSource(void)
1350:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1902              		.loc 1 1350 0
 1903              		.cfi_startproc
 1904 0000 80B5     		push	{r7, lr}
 1905              	.LCFI100:
 1906              		.cfi_def_cfa_offset 8
 1907              		.cfi_offset 7, -8
 1908              		.cfi_offset 14, -4
 1909 0002 00AF     		add	r7, sp, #0
 1910              	.LCFI101:
 1911              		.cfi_def_cfa_register 7
1351:.\Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_INTERRUPT_REQ_REG);
 1912              		.loc 1 1351 0
 1913 0004 024B     		ldr	r3, .L124
 1914 0006 1B68     		ldr	r3, [r3]
1352:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1915              		.loc 1 1352 0
 1916 0008 181C     		mov	r0, r3
 1917 000a BD46     		mov	sp, r7
 1918              		@ sp needed for prologue
 1919 000c 80BD     		pop	{r7, pc}
 1920              	.L125:
 1921 000e C046     		.align	2
 1922              	.L124:
 1923 0010 30010540 		.word	1074069808
 1924              		.cfi_endproc
 1925              	.LFE37:
 1926              		.size	PWM_Fail_GetInterruptSource, .-PWM_Fail_GetInterruptSource
 1927              		.section	.text.PWM_Fail_ClearInterrupt,"ax",%progbits
 1928              		.align	2
 1929              		.global	PWM_Fail_ClearInterrupt
 1930              		.code	16
 1931              		.thumb_func
 1932              		.type	PWM_Fail_ClearInterrupt, %function
 1933              	PWM_Fail_ClearInterrupt:
 1934              	.LFB38:
1353:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1354:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1355:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ClearInterrupt
1357:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1358:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1359:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1360:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Clears the interrupt request.
1361:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1362:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1363:.\Generated_Source\PSoC4/PWM_Fail.c **** *   interruptMask: Mask of interrupts to clear
1364:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1365:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_TC       - Terminal count mask
1366:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_CC_MATCH - Compare count / capture mask
1367:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1368:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1369:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1370:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1371:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 59


1372:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_ClearInterrupt(uint32 interruptMask)
1373:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1935              		.loc 1 1373 0
 1936              		.cfi_startproc
 1937 0000 80B5     		push	{r7, lr}
 1938              	.LCFI102:
 1939              		.cfi_def_cfa_offset 8
 1940              		.cfi_offset 7, -8
 1941              		.cfi_offset 14, -4
 1942 0002 82B0     		sub	sp, sp, #8
 1943              	.LCFI103:
 1944              		.cfi_def_cfa_offset 16
 1945 0004 00AF     		add	r7, sp, #0
 1946              	.LCFI104:
 1947              		.cfi_def_cfa_register 7
 1948 0006 7860     		str	r0, [r7, #4]
1374:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_INTERRUPT_REQ_REG = interruptMask;
 1949              		.loc 1 1374 0
 1950 0008 024B     		ldr	r3, .L127
 1951 000a 7A68     		ldr	r2, [r7, #4]
 1952 000c 1A60     		str	r2, [r3]
1375:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1953              		.loc 1 1375 0
 1954 000e BD46     		mov	sp, r7
 1955 0010 02B0     		add	sp, sp, #8
 1956              		@ sp needed for prologue
 1957 0012 80BD     		pop	{r7, pc}
 1958              	.L128:
 1959              		.align	2
 1960              	.L127:
 1961 0014 30010540 		.word	1074069808
 1962              		.cfi_endproc
 1963              	.LFE38:
 1964              		.size	PWM_Fail_ClearInterrupt, .-PWM_Fail_ClearInterrupt
 1965              		.section	.text.PWM_Fail_SetInterrupt,"ax",%progbits
 1966              		.align	2
 1967              		.global	PWM_Fail_SetInterrupt
 1968              		.code	16
 1969              		.thumb_func
 1970              		.type	PWM_Fail_SetInterrupt, %function
 1971              	PWM_Fail_SetInterrupt:
 1972              	.LFB39:
1376:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1377:.\Generated_Source\PSoC4/PWM_Fail.c **** 
1378:.\Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1379:.\Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetInterrupt
1380:.\Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1381:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1382:.\Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1383:.\Generated_Source\PSoC4/PWM_Fail.c **** *  Sets a software interrupt request.
1384:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1385:.\Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1386:.\Generated_Source\PSoC4/PWM_Fail.c **** *   interruptMask: Mask of interrupts to set
1387:.\Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1388:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_TC       - Terminal count mask
1389:.\Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_CC_MATCH - Compare count / capture mask
1390:.\Generated_Source\PSoC4/PWM_Fail.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 60


1391:.\Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1392:.\Generated_Source\PSoC4/PWM_Fail.c **** *  None
1393:.\Generated_Source\PSoC4/PWM_Fail.c **** *
1394:.\Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetInterrupt(uint32 interruptMask)
1396:.\Generated_Source\PSoC4/PWM_Fail.c **** {
 1973              		.loc 1 1396 0
 1974              		.cfi_startproc
 1975 0000 80B5     		push	{r7, lr}
 1976              	.LCFI105:
 1977              		.cfi_def_cfa_offset 8
 1978              		.cfi_offset 7, -8
 1979              		.cfi_offset 14, -4
 1980 0002 82B0     		sub	sp, sp, #8
 1981              	.LCFI106:
 1982              		.cfi_def_cfa_offset 16
 1983 0004 00AF     		add	r7, sp, #0
 1984              	.LCFI107:
 1985              		.cfi_def_cfa_register 7
 1986 0006 7860     		str	r0, [r7, #4]
1397:.\Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_INTERRUPT_SET_REG = interruptMask;
 1987              		.loc 1 1397 0
 1988 0008 024B     		ldr	r3, .L130
 1989 000a 7A68     		ldr	r2, [r7, #4]
 1990 000c 1A60     		str	r2, [r3]
1398:.\Generated_Source\PSoC4/PWM_Fail.c **** }
 1991              		.loc 1 1398 0
 1992 000e BD46     		mov	sp, r7
 1993 0010 02B0     		add	sp, sp, #8
 1994              		@ sp needed for prologue
 1995 0012 80BD     		pop	{r7, pc}
 1996              	.L131:
 1997              		.align	2
 1998              	.L130:
 1999 0014 34010540 		.word	1074069812
 2000              		.cfi_endproc
 2001              	.LFE39:
 2002              		.size	PWM_Fail_SetInterrupt, .-PWM_Fail_SetInterrupt
 2003              		.text
 2004              	.Letext0:
 2005              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2006              		.section	.debug_info,"",%progbits
 2007              	.Ldebug_info0:
 2008 0000 BA070000 		.4byte	0x7ba
 2009 0004 0200     		.2byte	0x2
 2010 0006 00000000 		.4byte	.Ldebug_abbrev0
 2011 000a 04       		.byte	0x4
 2012 000b 01       		.uleb128 0x1
 2013 000c 9B030000 		.4byte	.LASF76
 2014 0010 01       		.byte	0x1
 2015 0011 60030000 		.4byte	.LASF77
 2016 0015 7D020000 		.4byte	.LASF78
 2017 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2018 001d 00000000 		.4byte	0
 2019 0021 00000000 		.4byte	0
 2020 0025 00000000 		.4byte	.Ldebug_line0
 2021 0029 02       		.uleb128 0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 61


 2022 002a 01       		.byte	0x1
 2023 002b 06       		.byte	0x6
 2024 002c A7000000 		.4byte	.LASF0
 2025 0030 02       		.uleb128 0x2
 2026 0031 01       		.byte	0x1
 2027 0032 08       		.byte	0x8
 2028 0033 12040000 		.4byte	.LASF1
 2029 0037 02       		.uleb128 0x2
 2030 0038 02       		.byte	0x2
 2031 0039 05       		.byte	0x5
 2032 003a 3F040000 		.4byte	.LASF2
 2033 003e 02       		.uleb128 0x2
 2034 003f 02       		.byte	0x2
 2035 0040 07       		.byte	0x7
 2036 0041 CA010000 		.4byte	.LASF3
 2037 0045 02       		.uleb128 0x2
 2038 0046 04       		.byte	0x4
 2039 0047 05       		.byte	0x5
 2040 0048 DA000000 		.4byte	.LASF4
 2041 004c 02       		.uleb128 0x2
 2042 004d 04       		.byte	0x4
 2043 004e 07       		.byte	0x7
 2044 004f 83010000 		.4byte	.LASF5
 2045 0053 02       		.uleb128 0x2
 2046 0054 08       		.byte	0x8
 2047 0055 05       		.byte	0x5
 2048 0056 99000000 		.4byte	.LASF6
 2049 005a 02       		.uleb128 0x2
 2050 005b 08       		.byte	0x8
 2051 005c 07       		.byte	0x7
 2052 005d 44000000 		.4byte	.LASF7
 2053 0061 03       		.uleb128 0x3
 2054 0062 04       		.byte	0x4
 2055 0063 05       		.byte	0x5
 2056 0064 696E7400 		.ascii	"int\000"
 2057 0068 02       		.uleb128 0x2
 2058 0069 04       		.byte	0x4
 2059 006a 07       		.byte	0x7
 2060 006b 6E010000 		.4byte	.LASF8
 2061 006f 04       		.uleb128 0x4
 2062 0070 FF000000 		.4byte	.LASF9
 2063 0074 02       		.byte	0x2
 2064 0075 5B       		.byte	0x5b
 2065 0076 30000000 		.4byte	0x30
 2066 007a 04       		.uleb128 0x4
 2067 007b 21010000 		.4byte	.LASF10
 2068 007f 02       		.byte	0x2
 2069 0080 5D       		.byte	0x5d
 2070 0081 4C000000 		.4byte	0x4c
 2071 0085 02       		.uleb128 0x2
 2072 0086 04       		.byte	0x4
 2073 0087 04       		.byte	0x4
 2074 0088 42030000 		.4byte	.LASF11
 2075 008c 02       		.uleb128 0x2
 2076 008d 08       		.byte	0x8
 2077 008e 04       		.byte	0x4
 2078 008f 05010000 		.4byte	.LASF12
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 62


 2079 0093 02       		.uleb128 0x2
 2080 0094 01       		.byte	0x1
 2081 0095 08       		.byte	0x8
 2082 0096 C5040000 		.4byte	.LASF13
 2083 009a 04       		.uleb128 0x4
 2084 009b 31020000 		.4byte	.LASF14
 2085 009f 02       		.byte	0x2
 2086 00a0 F2       		.byte	0xf2
 2087 00a1 A5000000 		.4byte	0xa5
 2088 00a5 05       		.uleb128 0x5
 2089 00a6 7A000000 		.4byte	0x7a
 2090 00aa 02       		.uleb128 0x2
 2091 00ab 04       		.byte	0x4
 2092 00ac 07       		.byte	0x7
 2093 00ad 37020000 		.4byte	.LASF15
 2094 00b1 06       		.uleb128 0x6
 2095 00b2 01       		.byte	0x1
 2096 00b3 17000000 		.4byte	.LASF16
 2097 00b7 01       		.byte	0x1
 2098 00b8 27       		.byte	0x27
 2099 00b9 01       		.byte	0x1
 2100 00ba 00000000 		.4byte	.LFB0
 2101 00be 4C000000 		.4byte	.LFE0
 2102 00c2 00000000 		.4byte	.LLST0
 2103 00c6 01       		.byte	0x1
 2104 00c7 07       		.uleb128 0x7
 2105 00c8 01       		.byte	0x1
 2106 00c9 B5040000 		.4byte	.LASF18
 2107 00cd 01       		.byte	0x1
 2108 00ce C8       		.byte	0xc8
 2109 00cf 01       		.byte	0x1
 2110 00d0 00000000 		.4byte	.LFB1
 2111 00d4 38000000 		.4byte	.LFE1
 2112 00d8 2C000000 		.4byte	.LLST1
 2113 00dc 01       		.byte	0x1
 2114 00dd F0000000 		.4byte	0xf0
 2115 00e1 08       		.uleb128 0x8
 2116 00e2 54050000 		.4byte	.LASF20
 2117 00e6 01       		.byte	0x1
 2118 00e7 CA       		.byte	0xca
 2119 00e8 6F000000 		.4byte	0x6f
 2120 00ec 02       		.byte	0x2
 2121 00ed 91       		.byte	0x91
 2122 00ee 6F       		.sleb128 -17
 2123 00ef 00       		.byte	0
 2124 00f0 06       		.uleb128 0x6
 2125 00f1 01       		.byte	0x1
 2126 00f2 0C050000 		.4byte	.LASF17
 2127 00f6 01       		.byte	0x1
 2128 00f7 F7       		.byte	0xf7
 2129 00f8 01       		.byte	0x1
 2130 00f9 00000000 		.4byte	.LFB2
 2131 00fd 24000000 		.4byte	.LFE2
 2132 0101 64000000 		.4byte	.LLST2
 2133 0105 01       		.byte	0x1
 2134 0106 09       		.uleb128 0x9
 2135 0107 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 63


 2136 0108 20040000 		.4byte	.LASF19
 2137 010c 01       		.byte	0x1
 2138 010d 1101     		.2byte	0x111
 2139 010f 01       		.byte	0x1
 2140 0110 00000000 		.4byte	.LFB3
 2141 0114 30000000 		.4byte	.LFE3
 2142 0118 90000000 		.4byte	.LLST3
 2143 011c 01       		.byte	0x1
 2144 011d 31010000 		.4byte	0x131
 2145 0121 0A       		.uleb128 0xa
 2146 0122 54050000 		.4byte	.LASF20
 2147 0126 01       		.byte	0x1
 2148 0127 1301     		.2byte	0x113
 2149 0129 6F000000 		.4byte	0x6f
 2150 012d 02       		.byte	0x2
 2151 012e 91       		.byte	0x91
 2152 012f 6F       		.sleb128 -17
 2153 0130 00       		.byte	0
 2154 0131 09       		.uleb128 0x9
 2155 0132 01       		.byte	0x1
 2156 0133 C9000000 		.4byte	.LASF21
 2157 0137 01       		.byte	0x1
 2158 0138 3601     		.2byte	0x136
 2159 013a 01       		.byte	0x1
 2160 013b 00000000 		.4byte	.LFB4
 2161 013f 48000000 		.4byte	.LFE4
 2162 0143 C8000000 		.4byte	.LLST4
 2163 0147 01       		.byte	0x1
 2164 0148 6B010000 		.4byte	0x16b
 2165 014c 0B       		.uleb128 0xb
 2166 014d CA040000 		.4byte	.LASF23
 2167 0151 01       		.byte	0x1
 2168 0152 3601     		.2byte	0x136
 2169 0154 7A000000 		.4byte	0x7a
 2170 0158 02       		.byte	0x2
 2171 0159 91       		.byte	0x91
 2172 015a 64       		.sleb128 -28
 2173 015b 0A       		.uleb128 0xa
 2174 015c 54050000 		.4byte	.LASF20
 2175 0160 01       		.byte	0x1
 2176 0161 3801     		.2byte	0x138
 2177 0163 6F000000 		.4byte	0x6f
 2178 0167 02       		.byte	0x2
 2179 0168 91       		.byte	0x91
 2180 0169 6F       		.sleb128 -17
 2181 016a 00       		.byte	0
 2182 016b 09       		.uleb128 0x9
 2183 016c 01       		.byte	0x1
 2184 016d 2F030000 		.4byte	.LASF22
 2185 0171 01       		.byte	0x1
 2186 0172 5701     		.2byte	0x157
 2187 0174 01       		.byte	0x1
 2188 0175 00000000 		.4byte	.LFB5
 2189 0179 48000000 		.4byte	.LFE5
 2190 017d 00010000 		.4byte	.LLST5
 2191 0181 01       		.byte	0x1
 2192 0182 A5010000 		.4byte	0x1a5
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 64


 2193 0186 0B       		.uleb128 0xb
 2194 0187 7D000000 		.4byte	.LASF24
 2195 018b 01       		.byte	0x1
 2196 018c 5701     		.2byte	0x157
 2197 018e 7A000000 		.4byte	0x7a
 2198 0192 02       		.byte	0x2
 2199 0193 91       		.byte	0x91
 2200 0194 64       		.sleb128 -28
 2201 0195 0A       		.uleb128 0xa
 2202 0196 54050000 		.4byte	.LASF20
 2203 019a 01       		.byte	0x1
 2204 019b 5901     		.2byte	0x159
 2205 019d 6F000000 		.4byte	0x6f
 2206 01a1 02       		.byte	0x2
 2207 01a2 91       		.byte	0x91
 2208 01a3 6F       		.sleb128 -17
 2209 01a4 00       		.byte	0
 2210 01a5 09       		.uleb128 0x9
 2211 01a6 01       		.byte	0x1
 2212 01a7 B3000000 		.4byte	.LASF25
 2213 01ab 01       		.byte	0x1
 2214 01ac 7C01     		.2byte	0x17c
 2215 01ae 01       		.byte	0x1
 2216 01af 00000000 		.4byte	.LFB6
 2217 01b3 48000000 		.4byte	.LFE6
 2218 01b7 38010000 		.4byte	.LLST6
 2219 01bb 01       		.byte	0x1
 2220 01bc DF010000 		.4byte	0x1df
 2221 01c0 0B       		.uleb128 0xb
 2222 01c1 56030000 		.4byte	.LASF26
 2223 01c5 01       		.byte	0x1
 2224 01c6 7C01     		.2byte	0x17c
 2225 01c8 7A000000 		.4byte	0x7a
 2226 01cc 02       		.byte	0x2
 2227 01cd 91       		.byte	0x91
 2228 01ce 64       		.sleb128 -28
 2229 01cf 0A       		.uleb128 0xa
 2230 01d0 54050000 		.4byte	.LASF20
 2231 01d4 01       		.byte	0x1
 2232 01d5 7E01     		.2byte	0x17e
 2233 01d7 6F000000 		.4byte	0x6f
 2234 01db 02       		.byte	0x2
 2235 01dc 91       		.byte	0x91
 2236 01dd 6F       		.sleb128 -17
 2237 01de 00       		.byte	0
 2238 01df 09       		.uleb128 0x9
 2239 01e0 01       		.byte	0x1
 2240 01e1 5A010000 		.4byte	.LASF27
 2241 01e5 01       		.byte	0x1
 2242 01e6 9C01     		.2byte	0x19c
 2243 01e8 01       		.byte	0x1
 2244 01e9 00000000 		.4byte	.LFB7
 2245 01ed 4C000000 		.4byte	.LFE7
 2246 01f1 70010000 		.4byte	.LLST7
 2247 01f5 01       		.byte	0x1
 2248 01f6 19020000 		.4byte	0x219
 2249 01fa 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 65


 2250 01fb F4010000 		.4byte	.LASF28
 2251 01ff 01       		.byte	0x1
 2252 0200 9C01     		.2byte	0x19c
 2253 0202 7A000000 		.4byte	0x7a
 2254 0206 02       		.byte	0x2
 2255 0207 91       		.byte	0x91
 2256 0208 64       		.sleb128 -28
 2257 0209 0A       		.uleb128 0xa
 2258 020a 54050000 		.4byte	.LASF20
 2259 020e 01       		.byte	0x1
 2260 020f 9E01     		.2byte	0x19e
 2261 0211 6F000000 		.4byte	0x6f
 2262 0215 02       		.byte	0x2
 2263 0216 91       		.byte	0x91
 2264 0217 6F       		.sleb128 -17
 2265 0218 00       		.byte	0
 2266 0219 0C       		.uleb128 0xc
 2267 021a 01       		.byte	0x1
 2268 021b A1040000 		.4byte	.LASF29
 2269 021f 01       		.byte	0x1
 2270 0220 D201     		.2byte	0x1d2
 2271 0222 01       		.byte	0x1
 2272 0223 00000000 		.4byte	.LFB8
 2273 0227 1C000000 		.4byte	.LFE8
 2274 022b A8010000 		.4byte	.LLST8
 2275 022f 01       		.byte	0x1
 2276 0230 44020000 		.4byte	0x244
 2277 0234 0B       		.uleb128 0xb
 2278 0235 95010000 		.4byte	.LASF30
 2279 0239 01       		.byte	0x1
 2280 023a D201     		.2byte	0x1d2
 2281 023c 7A000000 		.4byte	0x7a
 2282 0240 02       		.byte	0x2
 2283 0241 91       		.byte	0x91
 2284 0242 74       		.sleb128 -12
 2285 0243 00       		.byte	0
 2286 0244 09       		.uleb128 0x9
 2287 0245 01       		.byte	0x1
 2288 0246 3C050000 		.4byte	.LASF31
 2289 024a 01       		.byte	0x1
 2290 024b F601     		.2byte	0x1f6
 2291 024d 01       		.byte	0x1
 2292 024e 00000000 		.4byte	.LFB9
 2293 0252 48000000 		.4byte	.LFE9
 2294 0256 E0010000 		.4byte	.LLST9
 2295 025a 01       		.byte	0x1
 2296 025b 7E020000 		.4byte	0x27e
 2297 025f 0B       		.uleb128 0xb
 2298 0260 6E020000 		.4byte	.LASF32
 2299 0264 01       		.byte	0x1
 2300 0265 F601     		.2byte	0x1f6
 2301 0267 7A000000 		.4byte	0x7a
 2302 026b 02       		.byte	0x2
 2303 026c 91       		.byte	0x91
 2304 026d 64       		.sleb128 -28
 2305 026e 0A       		.uleb128 0xa
 2306 026f 54050000 		.4byte	.LASF20
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 66


 2307 0273 01       		.byte	0x1
 2308 0274 F801     		.2byte	0x1f8
 2309 0276 6F000000 		.4byte	0x6f
 2310 027a 02       		.byte	0x2
 2311 027b 91       		.byte	0x91
 2312 027c 6F       		.sleb128 -17
 2313 027d 00       		.byte	0
 2314 027e 09       		.uleb128 0x9
 2315 027f 01       		.byte	0x1
 2316 0280 65050000 		.4byte	.LASF33
 2317 0284 01       		.byte	0x1
 2318 0285 1802     		.2byte	0x218
 2319 0287 01       		.byte	0x1
 2320 0288 00000000 		.4byte	.LFB10
 2321 028c 48000000 		.4byte	.LFE10
 2322 0290 18020000 		.4byte	.LLST10
 2323 0294 01       		.byte	0x1
 2324 0295 B8020000 		.4byte	0x2b8
 2325 0299 0B       		.uleb128 0xb
 2326 029a 2E040000 		.4byte	.LASF34
 2327 029e 01       		.byte	0x1
 2328 029f 1802     		.2byte	0x218
 2329 02a1 7A000000 		.4byte	0x7a
 2330 02a5 02       		.byte	0x2
 2331 02a6 91       		.byte	0x91
 2332 02a7 64       		.sleb128 -28
 2333 02a8 0A       		.uleb128 0xa
 2334 02a9 54050000 		.4byte	.LASF20
 2335 02ad 01       		.byte	0x1
 2336 02ae 1A02     		.2byte	0x21a
 2337 02b0 6F000000 		.4byte	0x6f
 2338 02b4 02       		.byte	0x2
 2339 02b5 91       		.byte	0x91
 2340 02b6 6F       		.sleb128 -17
 2341 02b7 00       		.byte	0
 2342 02b8 09       		.uleb128 0x9
 2343 02b9 01       		.byte	0x1
 2344 02ba 7F050000 		.4byte	.LASF35
 2345 02be 01       		.byte	0x1
 2346 02bf 3902     		.2byte	0x239
 2347 02c1 01       		.byte	0x1
 2348 02c2 00000000 		.4byte	.LFB11
 2349 02c6 4C000000 		.4byte	.LFE11
 2350 02ca 50020000 		.4byte	.LLST11
 2351 02ce 01       		.byte	0x1
 2352 02cf F2020000 		.4byte	0x2f2
 2353 02d3 0B       		.uleb128 0xb
 2354 02d4 51010000 		.4byte	.LASF36
 2355 02d8 01       		.byte	0x1
 2356 02d9 3902     		.2byte	0x239
 2357 02db 7A000000 		.4byte	0x7a
 2358 02df 02       		.byte	0x2
 2359 02e0 91       		.byte	0x91
 2360 02e1 64       		.sleb128 -28
 2361 02e2 0A       		.uleb128 0xa
 2362 02e3 54050000 		.4byte	.LASF20
 2363 02e7 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 67


 2364 02e8 3B02     		.2byte	0x23b
 2365 02ea 6F000000 		.4byte	0x6f
 2366 02ee 02       		.byte	0x2
 2367 02ef 91       		.byte	0x91
 2368 02f0 6F       		.sleb128 -17
 2369 02f1 00       		.byte	0
 2370 02f2 09       		.uleb128 0x9
 2371 02f3 01       		.byte	0x1
 2372 02f4 C4050000 		.4byte	.LASF37
 2373 02f8 01       		.byte	0x1
 2374 02f9 5A02     		.2byte	0x25a
 2375 02fb 01       		.byte	0x1
 2376 02fc 00000000 		.4byte	.LFB12
 2377 0300 48000000 		.4byte	.LFE12
 2378 0304 88020000 		.4byte	.LLST12
 2379 0308 01       		.byte	0x1
 2380 0309 2C030000 		.4byte	0x32c
 2381 030d 0B       		.uleb128 0xb
 2382 030e 4C010000 		.4byte	.LASF38
 2383 0312 01       		.byte	0x1
 2384 0313 5A02     		.2byte	0x25a
 2385 0315 7A000000 		.4byte	0x7a
 2386 0319 02       		.byte	0x2
 2387 031a 91       		.byte	0x91
 2388 031b 64       		.sleb128 -28
 2389 031c 0A       		.uleb128 0xa
 2390 031d 54050000 		.4byte	.LASF20
 2391 0321 01       		.byte	0x1
 2392 0322 5C02     		.2byte	0x25c
 2393 0324 6F000000 		.4byte	0x6f
 2394 0328 02       		.byte	0x2
 2395 0329 91       		.byte	0x91
 2396 032a 6F       		.sleb128 -17
 2397 032b 00       		.byte	0
 2398 032c 0C       		.uleb128 0xc
 2399 032d 01       		.byte	0x1
 2400 032e 26050000 		.4byte	.LASF39
 2401 0332 01       		.byte	0x1
 2402 0333 7802     		.2byte	0x278
 2403 0335 01       		.byte	0x1
 2404 0336 00000000 		.4byte	.LFB13
 2405 033a 1C000000 		.4byte	.LFE13
 2406 033e C0020000 		.4byte	.LLST13
 2407 0342 01       		.byte	0x1
 2408 0343 57030000 		.4byte	0x357
 2409 0347 0B       		.uleb128 0xb
 2410 0348 00000000 		.4byte	.LASF40
 2411 034c 01       		.byte	0x1
 2412 034d 7802     		.2byte	0x278
 2413 034f 7A000000 		.4byte	0x7a
 2414 0353 02       		.byte	0x2
 2415 0354 91       		.byte	0x91
 2416 0355 74       		.sleb128 -12
 2417 0356 00       		.byte	0
 2418 0357 0D       		.uleb128 0xd
 2419 0358 01       		.byte	0x1
 2420 0359 0C010000 		.4byte	.LASF45
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 68


 2421 035d 01       		.byte	0x1
 2422 035e 8C02     		.2byte	0x28c
 2423 0360 01       		.byte	0x1
 2424 0361 7A000000 		.4byte	0x7a
 2425 0365 00000000 		.4byte	.LFB14
 2426 0369 18000000 		.4byte	.LFE14
 2427 036d F8020000 		.4byte	.LLST14
 2428 0371 01       		.byte	0x1
 2429 0372 09       		.uleb128 0x9
 2430 0373 01       		.byte	0x1
 2431 0374 56020000 		.4byte	.LASF41
 2432 0378 01       		.byte	0x1
 2433 0379 A902     		.2byte	0x2a9
 2434 037b 01       		.byte	0x1
 2435 037c 00000000 		.4byte	.LFB15
 2436 0380 48000000 		.4byte	.LFE15
 2437 0384 24030000 		.4byte	.LLST15
 2438 0388 01       		.byte	0x1
 2439 0389 AC030000 		.4byte	0x3ac
 2440 038d 0B       		.uleb128 0xb
 2441 038e 00050000 		.4byte	.LASF42
 2442 0392 01       		.byte	0x1
 2443 0393 A902     		.2byte	0x2a9
 2444 0395 7A000000 		.4byte	0x7a
 2445 0399 02       		.byte	0x2
 2446 039a 91       		.byte	0x91
 2447 039b 64       		.sleb128 -28
 2448 039c 0A       		.uleb128 0xa
 2449 039d 54050000 		.4byte	.LASF20
 2450 03a1 01       		.byte	0x1
 2451 03a2 AB02     		.2byte	0x2ab
 2452 03a4 6F000000 		.4byte	0x6f
 2453 03a8 02       		.byte	0x2
 2454 03a9 91       		.byte	0x91
 2455 03aa 6F       		.sleb128 -17
 2456 03ab 00       		.byte	0
 2457 03ac 0C       		.uleb128 0xc
 2458 03ad 01       		.byte	0x1
 2459 03ae 1A030000 		.4byte	.LASF43
 2460 03b2 01       		.byte	0x1
 2461 03b3 C602     		.2byte	0x2c6
 2462 03b5 01       		.byte	0x1
 2463 03b6 00000000 		.4byte	.LFB16
 2464 03ba 1C000000 		.4byte	.LFE16
 2465 03be 5C030000 		.4byte	.LLST16
 2466 03c2 01       		.byte	0x1
 2467 03c3 D7030000 		.4byte	0x3d7
 2468 03c7 0B       		.uleb128 0xb
 2469 03c8 3D000000 		.4byte	.LASF44
 2470 03cc 01       		.byte	0x1
 2471 03cd C602     		.2byte	0x2c6
 2472 03cf 7A000000 		.4byte	0x7a
 2473 03d3 02       		.byte	0x2
 2474 03d4 91       		.byte	0x91
 2475 03d5 74       		.sleb128 -12
 2476 03d6 00       		.byte	0
 2477 03d7 0D       		.uleb128 0xd
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 69


 2478 03d8 01       		.byte	0x1
 2479 03d9 06030000 		.4byte	.LASF46
 2480 03dd 01       		.byte	0x1
 2481 03de DA02     		.2byte	0x2da
 2482 03e0 01       		.byte	0x1
 2483 03e1 7A000000 		.4byte	0x7a
 2484 03e5 00000000 		.4byte	.LFB17
 2485 03e9 18000000 		.4byte	.LFE17
 2486 03ed 94030000 		.4byte	.LLST17
 2487 03f1 01       		.byte	0x1
 2488 03f2 09       		.uleb128 0x9
 2489 03f3 01       		.byte	0x1
 2490 03f4 CF040000 		.4byte	.LASF47
 2491 03f8 01       		.byte	0x1
 2492 03f9 F402     		.2byte	0x2f4
 2493 03fb 01       		.byte	0x1
 2494 03fc 00000000 		.4byte	.LFB18
 2495 0400 48000000 		.4byte	.LFE18
 2496 0404 C0030000 		.4byte	.LLST18
 2497 0408 01       		.byte	0x1
 2498 0409 2C040000 		.4byte	0x42c
 2499 040d 0B       		.uleb128 0xb
 2500 040e 97050000 		.4byte	.LASF48
 2501 0412 01       		.byte	0x1
 2502 0413 F402     		.2byte	0x2f4
 2503 0415 7A000000 		.4byte	0x7a
 2504 0419 02       		.byte	0x2
 2505 041a 91       		.byte	0x91
 2506 041b 64       		.sleb128 -28
 2507 041c 0A       		.uleb128 0xa
 2508 041d 54050000 		.4byte	.LASF20
 2509 0421 01       		.byte	0x1
 2510 0422 F602     		.2byte	0x2f6
 2511 0424 6F000000 		.4byte	0x6f
 2512 0428 02       		.byte	0x2
 2513 0429 91       		.byte	0x91
 2514 042a 6F       		.sleb128 -17
 2515 042b 00       		.byte	0
 2516 042c 0C       		.uleb128 0xc
 2517 042d 01       		.byte	0x1
 2518 042e 34010000 		.4byte	.LASF49
 2519 0432 01       		.byte	0x1
 2520 0433 0F03     		.2byte	0x30f
 2521 0435 01       		.byte	0x1
 2522 0436 00000000 		.4byte	.LFB19
 2523 043a 1C000000 		.4byte	.LFE19
 2524 043e F8030000 		.4byte	.LLST19
 2525 0442 01       		.byte	0x1
 2526 0443 57040000 		.4byte	0x457
 2527 0447 0B       		.uleb128 0xb
 2528 0448 BA050000 		.4byte	.LASF50
 2529 044c 01       		.byte	0x1
 2530 044d 0F03     		.2byte	0x30f
 2531 044f 7A000000 		.4byte	0x7a
 2532 0453 02       		.byte	0x2
 2533 0454 91       		.byte	0x91
 2534 0455 74       		.sleb128 -12
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 70


 2535 0456 00       		.byte	0
 2536 0457 0D       		.uleb128 0xd
 2537 0458 01       		.byte	0x1
 2538 0459 84030000 		.4byte	.LASF51
 2539 045d 01       		.byte	0x1
 2540 045e 2303     		.2byte	0x323
 2541 0460 01       		.byte	0x1
 2542 0461 7A000000 		.4byte	0x7a
 2543 0465 00000000 		.4byte	.LFB20
 2544 0469 18000000 		.4byte	.LFE20
 2545 046d 30040000 		.4byte	.LLST20
 2546 0471 01       		.byte	0x1
 2547 0472 09       		.uleb128 0x9
 2548 0473 01       		.byte	0x1
 2549 0474 49040000 		.4byte	.LASF52
 2550 0478 01       		.byte	0x1
 2551 0479 3D03     		.2byte	0x33d
 2552 047b 01       		.byte	0x1
 2553 047c 00000000 		.4byte	.LFB21
 2554 0480 48000000 		.4byte	.LFE21
 2555 0484 5C040000 		.4byte	.LLST21
 2556 0488 01       		.byte	0x1
 2557 0489 AC040000 		.4byte	0x4ac
 2558 048d 0B       		.uleb128 0xb
 2559 048e 97050000 		.4byte	.LASF48
 2560 0492 01       		.byte	0x1
 2561 0493 3D03     		.2byte	0x33d
 2562 0495 7A000000 		.4byte	0x7a
 2563 0499 02       		.byte	0x2
 2564 049a 91       		.byte	0x91
 2565 049b 64       		.sleb128 -28
 2566 049c 0A       		.uleb128 0xa
 2567 049d 54050000 		.4byte	.LASF20
 2568 04a1 01       		.byte	0x1
 2569 04a2 3F03     		.2byte	0x33f
 2570 04a4 6F000000 		.4byte	0x6f
 2571 04a8 02       		.byte	0x2
 2572 04a9 91       		.byte	0x91
 2573 04aa 6F       		.sleb128 -17
 2574 04ab 00       		.byte	0
 2575 04ac 0C       		.uleb128 0xc
 2576 04ad 01       		.byte	0x1
 2577 04ae 76040000 		.4byte	.LASF53
 2578 04b2 01       		.byte	0x1
 2579 04b3 5A03     		.2byte	0x35a
 2580 04b5 01       		.byte	0x1
 2581 04b6 00000000 		.4byte	.LFB22
 2582 04ba 1C000000 		.4byte	.LFE22
 2583 04be 94040000 		.4byte	.LLST22
 2584 04c2 01       		.byte	0x1
 2585 04c3 D7040000 		.4byte	0x4d7
 2586 04c7 0B       		.uleb128 0xb
 2587 04c8 FE020000 		.4byte	.LASF54
 2588 04cc 01       		.byte	0x1
 2589 04cd 5A03     		.2byte	0x35a
 2590 04cf 7A000000 		.4byte	0x7a
 2591 04d3 02       		.byte	0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 71


 2592 04d4 91       		.byte	0x91
 2593 04d5 74       		.sleb128 -12
 2594 04d6 00       		.byte	0
 2595 04d7 0D       		.uleb128 0xd
 2596 04d8 01       		.byte	0x1
 2597 04d9 84000000 		.4byte	.LASF55
 2598 04dd 01       		.byte	0x1
 2599 04de 8403     		.2byte	0x384
 2600 04e0 01       		.byte	0x1
 2601 04e1 7A000000 		.4byte	0x7a
 2602 04e5 00000000 		.4byte	.LFB23
 2603 04e9 18000000 		.4byte	.LFE23
 2604 04ed CC040000 		.4byte	.LLST23
 2605 04f1 01       		.byte	0x1
 2606 04f2 0C       		.uleb128 0xc
 2607 04f3 01       		.byte	0x1
 2608 04f4 E7040000 		.4byte	.LASF56
 2609 04f8 01       		.byte	0x1
 2610 04f9 B003     		.2byte	0x3b0
 2611 04fb 01       		.byte	0x1
 2612 04fc 00000000 		.4byte	.LFB24
 2613 0500 1C000000 		.4byte	.LFE24
 2614 0504 F8040000 		.4byte	.LLST24
 2615 0508 01       		.byte	0x1
 2616 0509 1D050000 		.4byte	0x51d
 2617 050d 0B       		.uleb128 0xb
 2618 050e 1B050000 		.4byte	.LASF57
 2619 0512 01       		.byte	0x1
 2620 0513 B003     		.2byte	0x3b0
 2621 0515 7A000000 		.4byte	0x7a
 2622 0519 02       		.byte	0x2
 2623 051a 91       		.byte	0x91
 2624 051b 74       		.sleb128 -12
 2625 051c 00       		.byte	0
 2626 051d 0D       		.uleb128 0xd
 2627 051e 01       		.byte	0x1
 2628 051f 25000000 		.4byte	.LASF58
 2629 0523 01       		.byte	0x1
 2630 0524 DA03     		.2byte	0x3da
 2631 0526 01       		.byte	0x1
 2632 0527 7A000000 		.4byte	0x7a
 2633 052b 00000000 		.4byte	.LFB25
 2634 052f 18000000 		.4byte	.LFE25
 2635 0533 30050000 		.4byte	.LLST25
 2636 0537 01       		.byte	0x1
 2637 0538 0D       		.uleb128 0xd
 2638 0539 01       		.byte	0x1
 2639 053a 8C040000 		.4byte	.LASF59
 2640 053e 01       		.byte	0x1
 2641 053f 0604     		.2byte	0x406
 2642 0541 01       		.byte	0x1
 2643 0542 7A000000 		.4byte	0x7a
 2644 0546 00000000 		.4byte	.LFB26
 2645 054a 18000000 		.4byte	.LFE26
 2646 054e 5C050000 		.4byte	.LLST26
 2647 0552 01       		.byte	0x1
 2648 0553 0D       		.uleb128 0xd
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 72


 2649 0554 01       		.byte	0x1
 2650 0555 B2010000 		.4byte	.LASF60
 2651 0559 01       		.byte	0x1
 2652 055a 1B04     		.2byte	0x41b
 2653 055c 01       		.byte	0x1
 2654 055d 7A000000 		.4byte	0x7a
 2655 0561 00000000 		.4byte	.LFB27
 2656 0565 18000000 		.4byte	.LFE27
 2657 0569 88050000 		.4byte	.LLST27
 2658 056d 01       		.byte	0x1
 2659 056e 09       		.uleb128 0x9
 2660 056f 01       		.byte	0x1
 2661 0570 FA030000 		.4byte	.LASF61
 2662 0574 01       		.byte	0x1
 2663 0575 3604     		.2byte	0x436
 2664 0577 01       		.byte	0x1
 2665 0578 00000000 		.4byte	.LFB28
 2666 057c 44000000 		.4byte	.LFE28
 2667 0580 B4050000 		.4byte	.LLST28
 2668 0584 01       		.byte	0x1
 2669 0585 A8050000 		.4byte	0x5a8
 2670 0589 0B       		.uleb128 0xb
 2671 058a 28010000 		.4byte	.LASF62
 2672 058e 01       		.byte	0x1
 2673 058f 3604     		.2byte	0x436
 2674 0591 7A000000 		.4byte	0x7a
 2675 0595 02       		.byte	0x2
 2676 0596 91       		.byte	0x91
 2677 0597 64       		.sleb128 -28
 2678 0598 0A       		.uleb128 0xa
 2679 0599 54050000 		.4byte	.LASF20
 2680 059d 01       		.byte	0x1
 2681 059e 3804     		.2byte	0x438
 2682 05a0 6F000000 		.4byte	0x6f
 2683 05a4 02       		.byte	0x2
 2684 05a5 91       		.byte	0x91
 2685 05a6 6F       		.sleb128 -17
 2686 05a7 00       		.byte	0
 2687 05a8 09       		.uleb128 0x9
 2688 05a9 01       		.byte	0x1
 2689 05aa DD010000 		.4byte	.LASF63
 2690 05ae 01       		.byte	0x1
 2691 05af 5704     		.2byte	0x457
 2692 05b1 01       		.byte	0x1
 2693 05b2 00000000 		.4byte	.LFB29
 2694 05b6 44000000 		.4byte	.LFE29
 2695 05ba EC050000 		.4byte	.LLST29
 2696 05be 01       		.byte	0x1
 2697 05bf E2050000 		.4byte	0x5e2
 2698 05c3 0B       		.uleb128 0xb
 2699 05c4 28010000 		.4byte	.LASF62
 2700 05c8 01       		.byte	0x1
 2701 05c9 5704     		.2byte	0x457
 2702 05cb 7A000000 		.4byte	0x7a
 2703 05cf 02       		.byte	0x2
 2704 05d0 91       		.byte	0x91
 2705 05d1 64       		.sleb128 -28
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 73


 2706 05d2 0A       		.uleb128 0xa
 2707 05d3 54050000 		.4byte	.LASF20
 2708 05d7 01       		.byte	0x1
 2709 05d8 5904     		.2byte	0x459
 2710 05da 6F000000 		.4byte	0x6f
 2711 05de 02       		.byte	0x2
 2712 05df 91       		.byte	0x91
 2713 05e0 6F       		.sleb128 -17
 2714 05e1 00       		.byte	0
 2715 05e2 09       		.uleb128 0x9
 2716 05e3 01       		.byte	0x1
 2717 05e4 60040000 		.4byte	.LASF64
 2718 05e8 01       		.byte	0x1
 2719 05e9 7804     		.2byte	0x478
 2720 05eb 01       		.byte	0x1
 2721 05ec 00000000 		.4byte	.LFB30
 2722 05f0 48000000 		.4byte	.LFE30
 2723 05f4 24060000 		.4byte	.LLST30
 2724 05f8 01       		.byte	0x1
 2725 05f9 1C060000 		.4byte	0x61c
 2726 05fd 0B       		.uleb128 0xb
 2727 05fe 28010000 		.4byte	.LASF62
 2728 0602 01       		.byte	0x1
 2729 0603 7804     		.2byte	0x478
 2730 0605 7A000000 		.4byte	0x7a
 2731 0609 02       		.byte	0x2
 2732 060a 91       		.byte	0x91
 2733 060b 64       		.sleb128 -28
 2734 060c 0A       		.uleb128 0xa
 2735 060d 54050000 		.4byte	.LASF20
 2736 0611 01       		.byte	0x1
 2737 0612 7A04     		.2byte	0x47a
 2738 0614 6F000000 		.4byte	0x6f
 2739 0618 02       		.byte	0x2
 2740 0619 91       		.byte	0x91
 2741 061a 6F       		.sleb128 -17
 2742 061b 00       		.byte	0
 2743 061c 09       		.uleb128 0x9
 2744 061d 01       		.byte	0x1
 2745 061e 02020000 		.4byte	.LASF65
 2746 0622 01       		.byte	0x1
 2747 0623 9804     		.2byte	0x498
 2748 0625 01       		.byte	0x1
 2749 0626 00000000 		.4byte	.LFB31
 2750 062a 44000000 		.4byte	.LFE31
 2751 062e 5C060000 		.4byte	.LLST31
 2752 0632 01       		.byte	0x1
 2753 0633 56060000 		.4byte	0x656
 2754 0637 0B       		.uleb128 0xb
 2755 0638 28010000 		.4byte	.LASF62
 2756 063c 01       		.byte	0x1
 2757 063d 9804     		.2byte	0x498
 2758 063f 7A000000 		.4byte	0x7a
 2759 0643 02       		.byte	0x2
 2760 0644 91       		.byte	0x91
 2761 0645 64       		.sleb128 -28
 2762 0646 0A       		.uleb128 0xa
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 74


 2763 0647 54050000 		.4byte	.LASF20
 2764 064b 01       		.byte	0x1
 2765 064c 9A04     		.2byte	0x49a
 2766 064e 6F000000 		.4byte	0x6f
 2767 0652 02       		.byte	0x2
 2768 0653 91       		.byte	0x91
 2769 0654 6F       		.sleb128 -17
 2770 0655 00       		.byte	0
 2771 0656 09       		.uleb128 0x9
 2772 0657 01       		.byte	0x1
 2773 0658 E4030000 		.4byte	.LASF66
 2774 065c 01       		.byte	0x1
 2775 065d B904     		.2byte	0x4b9
 2776 065f 01       		.byte	0x1
 2777 0660 00000000 		.4byte	.LFB32
 2778 0664 44000000 		.4byte	.LFE32
 2779 0668 94060000 		.4byte	.LLST32
 2780 066c 01       		.byte	0x1
 2781 066d 90060000 		.4byte	0x690
 2782 0671 0B       		.uleb128 0xb
 2783 0672 28010000 		.4byte	.LASF62
 2784 0676 01       		.byte	0x1
 2785 0677 B904     		.2byte	0x4b9
 2786 0679 7A000000 		.4byte	0x7a
 2787 067d 02       		.byte	0x2
 2788 067e 91       		.byte	0x91
 2789 067f 64       		.sleb128 -28
 2790 0680 0A       		.uleb128 0xa
 2791 0681 54050000 		.4byte	.LASF20
 2792 0685 01       		.byte	0x1
 2793 0686 BB04     		.2byte	0x4bb
 2794 0688 6F000000 		.4byte	0x6f
 2795 068c 02       		.byte	0x2
 2796 068d 91       		.byte	0x91
 2797 068e 6F       		.sleb128 -17
 2798 068f 00       		.byte	0
 2799 0690 09       		.uleb128 0x9
 2800 0691 01       		.byte	0x1
 2801 0692 A2050000 		.4byte	.LASF67
 2802 0696 01       		.byte	0x1
 2803 0697 E104     		.2byte	0x4e1
 2804 0699 01       		.byte	0x1
 2805 069a 00000000 		.4byte	.LFB33
 2806 069e 3C000000 		.4byte	.LFE33
 2807 06a2 CC060000 		.4byte	.LLST33
 2808 06a6 01       		.byte	0x1
 2809 06a7 D9060000 		.4byte	0x6d9
 2810 06ab 0B       		.uleb128 0xb
 2811 06ac 4C010000 		.4byte	.LASF38
 2812 06b0 01       		.byte	0x1
 2813 06b1 E104     		.2byte	0x4e1
 2814 06b3 7A000000 		.4byte	0x7a
 2815 06b7 02       		.byte	0x2
 2816 06b8 91       		.byte	0x91
 2817 06b9 64       		.sleb128 -28
 2818 06ba 0B       		.uleb128 0xb
 2819 06bb 7B010000 		.4byte	.LASF68
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 75


 2820 06bf 01       		.byte	0x1
 2821 06c0 E104     		.2byte	0x4e1
 2822 06c2 7A000000 		.4byte	0x7a
 2823 06c6 02       		.byte	0x2
 2824 06c7 91       		.byte	0x91
 2825 06c8 60       		.sleb128 -32
 2826 06c9 0A       		.uleb128 0xa
 2827 06ca 54050000 		.4byte	.LASF20
 2828 06ce 01       		.byte	0x1
 2829 06cf E304     		.2byte	0x4e3
 2830 06d1 6F000000 		.4byte	0x6f
 2831 06d5 02       		.byte	0x2
 2832 06d6 91       		.byte	0x91
 2833 06d7 6F       		.sleb128 -17
 2834 06d8 00       		.byte	0
 2835 06d9 0D       		.uleb128 0xd
 2836 06da 01       		.byte	0x1
 2837 06db 9E010000 		.4byte	.LASF69
 2838 06df 01       		.byte	0x1
 2839 06e0 FE04     		.2byte	0x4fe
 2840 06e2 01       		.byte	0x1
 2841 06e3 7A000000 		.4byte	0x7a
 2842 06e7 00000000 		.4byte	.LFB34
 2843 06eb 20000000 		.4byte	.LFE34
 2844 06ef 04070000 		.4byte	.LLST34
 2845 06f3 01       		.byte	0x1
 2846 06f4 0C       		.uleb128 0xc
 2847 06f5 01       		.byte	0x1
 2848 06f6 17020000 		.4byte	.LASF70
 2849 06fa 01       		.byte	0x1
 2850 06fb 1705     		.2byte	0x517
 2851 06fd 01       		.byte	0x1
 2852 06fe 00000000 		.4byte	.LFB35
 2853 0702 18000000 		.4byte	.LFE35
 2854 0706 30070000 		.4byte	.LLST35
 2855 070a 01       		.byte	0x1
 2856 070b 1F070000 		.4byte	0x71f
 2857 070f 0B       		.uleb128 0xb
 2858 0710 48030000 		.4byte	.LASF71
 2859 0714 01       		.byte	0x1
 2860 0715 1705     		.2byte	0x517
 2861 0717 7A000000 		.4byte	0x7a
 2862 071b 02       		.byte	0x2
 2863 071c 91       		.byte	0x91
 2864 071d 74       		.sleb128 -12
 2865 071e 00       		.byte	0
 2866 071f 0D       		.uleb128 0xd
 2867 0720 01       		.byte	0x1
 2868 0721 5B000000 		.4byte	.LASF72
 2869 0725 01       		.byte	0x1
 2870 0726 2E05     		.2byte	0x52e
 2871 0728 01       		.byte	0x1
 2872 0729 7A000000 		.4byte	0x7a
 2873 072d 00000000 		.4byte	.LFB36
 2874 0731 14000000 		.4byte	.LFE36
 2875 0735 68070000 		.4byte	.LLST36
 2876 0739 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 76


 2877 073a 0D       		.uleb128 0xd
 2878 073b 01       		.byte	0x1
 2879 073c E3000000 		.4byte	.LASF73
 2880 0740 01       		.byte	0x1
 2881 0741 4505     		.2byte	0x545
 2882 0743 01       		.byte	0x1
 2883 0744 7A000000 		.4byte	0x7a
 2884 0748 00000000 		.4byte	.LFB37
 2885 074c 14000000 		.4byte	.LFE37
 2886 0750 94070000 		.4byte	.LLST37
 2887 0754 01       		.byte	0x1
 2888 0755 0C       		.uleb128 0xc
 2889 0756 01       		.byte	0x1
 2890 0757 DA050000 		.4byte	.LASF74
 2891 075b 01       		.byte	0x1
 2892 075c 5C05     		.2byte	0x55c
 2893 075e 01       		.byte	0x1
 2894 075f 00000000 		.4byte	.LFB38
 2895 0763 18000000 		.4byte	.LFE38
 2896 0767 C0070000 		.4byte	.LLST38
 2897 076b 01       		.byte	0x1
 2898 076c 80070000 		.4byte	0x780
 2899 0770 0B       		.uleb128 0xb
 2900 0771 48030000 		.4byte	.LASF71
 2901 0775 01       		.byte	0x1
 2902 0776 5C05     		.2byte	0x55c
 2903 0778 7A000000 		.4byte	0x7a
 2904 077c 02       		.byte	0x2
 2905 077d 91       		.byte	0x91
 2906 077e 74       		.sleb128 -12
 2907 077f 00       		.byte	0
 2908 0780 0C       		.uleb128 0xc
 2909 0781 01       		.byte	0x1
 2910 0782 40020000 		.4byte	.LASF75
 2911 0786 01       		.byte	0x1
 2912 0787 7305     		.2byte	0x573
 2913 0789 01       		.byte	0x1
 2914 078a 00000000 		.4byte	.LFB39
 2915 078e 18000000 		.4byte	.LFE39
 2916 0792 F8070000 		.4byte	.LLST39
 2917 0796 01       		.byte	0x1
 2918 0797 AB070000 		.4byte	0x7ab
 2919 079b 0B       		.uleb128 0xb
 2920 079c 48030000 		.4byte	.LASF71
 2921 07a0 01       		.byte	0x1
 2922 07a1 7305     		.2byte	0x573
 2923 07a3 7A000000 		.4byte	0x7a
 2924 07a7 02       		.byte	0x2
 2925 07a8 91       		.byte	0x91
 2926 07a9 74       		.sleb128 -12
 2927 07aa 00       		.byte	0
 2928 07ab 0E       		.uleb128 0xe
 2929 07ac 06000000 		.4byte	.LASF79
 2930 07b0 01       		.byte	0x1
 2931 07b1 16       		.byte	0x16
 2932 07b2 6F000000 		.4byte	0x6f
 2933 07b6 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 77


 2934 07b7 05       		.byte	0x5
 2935 07b8 03       		.byte	0x3
 2936 07b9 00000000 		.4byte	PWM_Fail_initVar
 2937 07bd 00       		.byte	0
 2938              		.section	.debug_abbrev,"",%progbits
 2939              	.Ldebug_abbrev0:
 2940 0000 01       		.uleb128 0x1
 2941 0001 11       		.uleb128 0x11
 2942 0002 01       		.byte	0x1
 2943 0003 25       		.uleb128 0x25
 2944 0004 0E       		.uleb128 0xe
 2945 0005 13       		.uleb128 0x13
 2946 0006 0B       		.uleb128 0xb
 2947 0007 03       		.uleb128 0x3
 2948 0008 0E       		.uleb128 0xe
 2949 0009 1B       		.uleb128 0x1b
 2950 000a 0E       		.uleb128 0xe
 2951 000b 55       		.uleb128 0x55
 2952 000c 06       		.uleb128 0x6
 2953 000d 11       		.uleb128 0x11
 2954 000e 01       		.uleb128 0x1
 2955 000f 52       		.uleb128 0x52
 2956 0010 01       		.uleb128 0x1
 2957 0011 10       		.uleb128 0x10
 2958 0012 06       		.uleb128 0x6
 2959 0013 00       		.byte	0
 2960 0014 00       		.byte	0
 2961 0015 02       		.uleb128 0x2
 2962 0016 24       		.uleb128 0x24
 2963 0017 00       		.byte	0
 2964 0018 0B       		.uleb128 0xb
 2965 0019 0B       		.uleb128 0xb
 2966 001a 3E       		.uleb128 0x3e
 2967 001b 0B       		.uleb128 0xb
 2968 001c 03       		.uleb128 0x3
 2969 001d 0E       		.uleb128 0xe
 2970 001e 00       		.byte	0
 2971 001f 00       		.byte	0
 2972 0020 03       		.uleb128 0x3
 2973 0021 24       		.uleb128 0x24
 2974 0022 00       		.byte	0
 2975 0023 0B       		.uleb128 0xb
 2976 0024 0B       		.uleb128 0xb
 2977 0025 3E       		.uleb128 0x3e
 2978 0026 0B       		.uleb128 0xb
 2979 0027 03       		.uleb128 0x3
 2980 0028 08       		.uleb128 0x8
 2981 0029 00       		.byte	0
 2982 002a 00       		.byte	0
 2983 002b 04       		.uleb128 0x4
 2984 002c 16       		.uleb128 0x16
 2985 002d 00       		.byte	0
 2986 002e 03       		.uleb128 0x3
 2987 002f 0E       		.uleb128 0xe
 2988 0030 3A       		.uleb128 0x3a
 2989 0031 0B       		.uleb128 0xb
 2990 0032 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 78


 2991 0033 0B       		.uleb128 0xb
 2992 0034 49       		.uleb128 0x49
 2993 0035 13       		.uleb128 0x13
 2994 0036 00       		.byte	0
 2995 0037 00       		.byte	0
 2996 0038 05       		.uleb128 0x5
 2997 0039 35       		.uleb128 0x35
 2998 003a 00       		.byte	0
 2999 003b 49       		.uleb128 0x49
 3000 003c 13       		.uleb128 0x13
 3001 003d 00       		.byte	0
 3002 003e 00       		.byte	0
 3003 003f 06       		.uleb128 0x6
 3004 0040 2E       		.uleb128 0x2e
 3005 0041 00       		.byte	0
 3006 0042 3F       		.uleb128 0x3f
 3007 0043 0C       		.uleb128 0xc
 3008 0044 03       		.uleb128 0x3
 3009 0045 0E       		.uleb128 0xe
 3010 0046 3A       		.uleb128 0x3a
 3011 0047 0B       		.uleb128 0xb
 3012 0048 3B       		.uleb128 0x3b
 3013 0049 0B       		.uleb128 0xb
 3014 004a 27       		.uleb128 0x27
 3015 004b 0C       		.uleb128 0xc
 3016 004c 11       		.uleb128 0x11
 3017 004d 01       		.uleb128 0x1
 3018 004e 12       		.uleb128 0x12
 3019 004f 01       		.uleb128 0x1
 3020 0050 40       		.uleb128 0x40
 3021 0051 06       		.uleb128 0x6
 3022 0052 9642     		.uleb128 0x2116
 3023 0054 0C       		.uleb128 0xc
 3024 0055 00       		.byte	0
 3025 0056 00       		.byte	0
 3026 0057 07       		.uleb128 0x7
 3027 0058 2E       		.uleb128 0x2e
 3028 0059 01       		.byte	0x1
 3029 005a 3F       		.uleb128 0x3f
 3030 005b 0C       		.uleb128 0xc
 3031 005c 03       		.uleb128 0x3
 3032 005d 0E       		.uleb128 0xe
 3033 005e 3A       		.uleb128 0x3a
 3034 005f 0B       		.uleb128 0xb
 3035 0060 3B       		.uleb128 0x3b
 3036 0061 0B       		.uleb128 0xb
 3037 0062 27       		.uleb128 0x27
 3038 0063 0C       		.uleb128 0xc
 3039 0064 11       		.uleb128 0x11
 3040 0065 01       		.uleb128 0x1
 3041 0066 12       		.uleb128 0x12
 3042 0067 01       		.uleb128 0x1
 3043 0068 40       		.uleb128 0x40
 3044 0069 06       		.uleb128 0x6
 3045 006a 9642     		.uleb128 0x2116
 3046 006c 0C       		.uleb128 0xc
 3047 006d 01       		.uleb128 0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 79


 3048 006e 13       		.uleb128 0x13
 3049 006f 00       		.byte	0
 3050 0070 00       		.byte	0
 3051 0071 08       		.uleb128 0x8
 3052 0072 34       		.uleb128 0x34
 3053 0073 00       		.byte	0
 3054 0074 03       		.uleb128 0x3
 3055 0075 0E       		.uleb128 0xe
 3056 0076 3A       		.uleb128 0x3a
 3057 0077 0B       		.uleb128 0xb
 3058 0078 3B       		.uleb128 0x3b
 3059 0079 0B       		.uleb128 0xb
 3060 007a 49       		.uleb128 0x49
 3061 007b 13       		.uleb128 0x13
 3062 007c 02       		.uleb128 0x2
 3063 007d 0A       		.uleb128 0xa
 3064 007e 00       		.byte	0
 3065 007f 00       		.byte	0
 3066 0080 09       		.uleb128 0x9
 3067 0081 2E       		.uleb128 0x2e
 3068 0082 01       		.byte	0x1
 3069 0083 3F       		.uleb128 0x3f
 3070 0084 0C       		.uleb128 0xc
 3071 0085 03       		.uleb128 0x3
 3072 0086 0E       		.uleb128 0xe
 3073 0087 3A       		.uleb128 0x3a
 3074 0088 0B       		.uleb128 0xb
 3075 0089 3B       		.uleb128 0x3b
 3076 008a 05       		.uleb128 0x5
 3077 008b 27       		.uleb128 0x27
 3078 008c 0C       		.uleb128 0xc
 3079 008d 11       		.uleb128 0x11
 3080 008e 01       		.uleb128 0x1
 3081 008f 12       		.uleb128 0x12
 3082 0090 01       		.uleb128 0x1
 3083 0091 40       		.uleb128 0x40
 3084 0092 06       		.uleb128 0x6
 3085 0093 9642     		.uleb128 0x2116
 3086 0095 0C       		.uleb128 0xc
 3087 0096 01       		.uleb128 0x1
 3088 0097 13       		.uleb128 0x13
 3089 0098 00       		.byte	0
 3090 0099 00       		.byte	0
 3091 009a 0A       		.uleb128 0xa
 3092 009b 34       		.uleb128 0x34
 3093 009c 00       		.byte	0
 3094 009d 03       		.uleb128 0x3
 3095 009e 0E       		.uleb128 0xe
 3096 009f 3A       		.uleb128 0x3a
 3097 00a0 0B       		.uleb128 0xb
 3098 00a1 3B       		.uleb128 0x3b
 3099 00a2 05       		.uleb128 0x5
 3100 00a3 49       		.uleb128 0x49
 3101 00a4 13       		.uleb128 0x13
 3102 00a5 02       		.uleb128 0x2
 3103 00a6 0A       		.uleb128 0xa
 3104 00a7 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 80


 3105 00a8 00       		.byte	0
 3106 00a9 0B       		.uleb128 0xb
 3107 00aa 05       		.uleb128 0x5
 3108 00ab 00       		.byte	0
 3109 00ac 03       		.uleb128 0x3
 3110 00ad 0E       		.uleb128 0xe
 3111 00ae 3A       		.uleb128 0x3a
 3112 00af 0B       		.uleb128 0xb
 3113 00b0 3B       		.uleb128 0x3b
 3114 00b1 05       		.uleb128 0x5
 3115 00b2 49       		.uleb128 0x49
 3116 00b3 13       		.uleb128 0x13
 3117 00b4 02       		.uleb128 0x2
 3118 00b5 0A       		.uleb128 0xa
 3119 00b6 00       		.byte	0
 3120 00b7 00       		.byte	0
 3121 00b8 0C       		.uleb128 0xc
 3122 00b9 2E       		.uleb128 0x2e
 3123 00ba 01       		.byte	0x1
 3124 00bb 3F       		.uleb128 0x3f
 3125 00bc 0C       		.uleb128 0xc
 3126 00bd 03       		.uleb128 0x3
 3127 00be 0E       		.uleb128 0xe
 3128 00bf 3A       		.uleb128 0x3a
 3129 00c0 0B       		.uleb128 0xb
 3130 00c1 3B       		.uleb128 0x3b
 3131 00c2 05       		.uleb128 0x5
 3132 00c3 27       		.uleb128 0x27
 3133 00c4 0C       		.uleb128 0xc
 3134 00c5 11       		.uleb128 0x11
 3135 00c6 01       		.uleb128 0x1
 3136 00c7 12       		.uleb128 0x12
 3137 00c8 01       		.uleb128 0x1
 3138 00c9 40       		.uleb128 0x40
 3139 00ca 06       		.uleb128 0x6
 3140 00cb 9742     		.uleb128 0x2117
 3141 00cd 0C       		.uleb128 0xc
 3142 00ce 01       		.uleb128 0x1
 3143 00cf 13       		.uleb128 0x13
 3144 00d0 00       		.byte	0
 3145 00d1 00       		.byte	0
 3146 00d2 0D       		.uleb128 0xd
 3147 00d3 2E       		.uleb128 0x2e
 3148 00d4 00       		.byte	0
 3149 00d5 3F       		.uleb128 0x3f
 3150 00d6 0C       		.uleb128 0xc
 3151 00d7 03       		.uleb128 0x3
 3152 00d8 0E       		.uleb128 0xe
 3153 00d9 3A       		.uleb128 0x3a
 3154 00da 0B       		.uleb128 0xb
 3155 00db 3B       		.uleb128 0x3b
 3156 00dc 05       		.uleb128 0x5
 3157 00dd 27       		.uleb128 0x27
 3158 00de 0C       		.uleb128 0xc
 3159 00df 49       		.uleb128 0x49
 3160 00e0 13       		.uleb128 0x13
 3161 00e1 11       		.uleb128 0x11
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 81


 3162 00e2 01       		.uleb128 0x1
 3163 00e3 12       		.uleb128 0x12
 3164 00e4 01       		.uleb128 0x1
 3165 00e5 40       		.uleb128 0x40
 3166 00e6 06       		.uleb128 0x6
 3167 00e7 9742     		.uleb128 0x2117
 3168 00e9 0C       		.uleb128 0xc
 3169 00ea 00       		.byte	0
 3170 00eb 00       		.byte	0
 3171 00ec 0E       		.uleb128 0xe
 3172 00ed 34       		.uleb128 0x34
 3173 00ee 00       		.byte	0
 3174 00ef 03       		.uleb128 0x3
 3175 00f0 0E       		.uleb128 0xe
 3176 00f1 3A       		.uleb128 0x3a
 3177 00f2 0B       		.uleb128 0xb
 3178 00f3 3B       		.uleb128 0x3b
 3179 00f4 0B       		.uleb128 0xb
 3180 00f5 49       		.uleb128 0x49
 3181 00f6 13       		.uleb128 0x13
 3182 00f7 3F       		.uleb128 0x3f
 3183 00f8 0C       		.uleb128 0xc
 3184 00f9 02       		.uleb128 0x2
 3185 00fa 0A       		.uleb128 0xa
 3186 00fb 00       		.byte	0
 3187 00fc 00       		.byte	0
 3188 00fd 00       		.byte	0
 3189              		.section	.debug_loc,"",%progbits
 3190              	.Ldebug_loc0:
 3191              	.LLST0:
 3192 0000 00000000 		.4byte	.LFB0
 3193 0004 02000000 		.4byte	.LCFI0
 3194 0008 0200     		.2byte	0x2
 3195 000a 7D       		.byte	0x7d
 3196 000b 00       		.sleb128 0
 3197 000c 02000000 		.4byte	.LCFI0
 3198 0010 04000000 		.4byte	.LCFI1
 3199 0014 0200     		.2byte	0x2
 3200 0016 7D       		.byte	0x7d
 3201 0017 08       		.sleb128 8
 3202 0018 04000000 		.4byte	.LCFI1
 3203 001c 4C000000 		.4byte	.LFE0
 3204 0020 0200     		.2byte	0x2
 3205 0022 77       		.byte	0x77
 3206 0023 08       		.sleb128 8
 3207 0024 00000000 		.4byte	0
 3208 0028 00000000 		.4byte	0
 3209              	.LLST1:
 3210 002c 00000000 		.4byte	.LFB1
 3211 0030 02000000 		.4byte	.LCFI2
 3212 0034 0200     		.2byte	0x2
 3213 0036 7D       		.byte	0x7d
 3214 0037 00       		.sleb128 0
 3215 0038 02000000 		.4byte	.LCFI2
 3216 003c 04000000 		.4byte	.LCFI3
 3217 0040 0200     		.2byte	0x2
 3218 0042 7D       		.byte	0x7d
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 82


 3219 0043 0C       		.sleb128 12
 3220 0044 04000000 		.4byte	.LCFI3
 3221 0048 06000000 		.4byte	.LCFI4
 3222 004c 0200     		.2byte	0x2
 3223 004e 7D       		.byte	0x7d
 3224 004f 18       		.sleb128 24
 3225 0050 06000000 		.4byte	.LCFI4
 3226 0054 38000000 		.4byte	.LFE1
 3227 0058 0200     		.2byte	0x2
 3228 005a 77       		.byte	0x77
 3229 005b 18       		.sleb128 24
 3230 005c 00000000 		.4byte	0
 3231 0060 00000000 		.4byte	0
 3232              	.LLST2:
 3233 0064 00000000 		.4byte	.LFB2
 3234 0068 02000000 		.4byte	.LCFI5
 3235 006c 0200     		.2byte	0x2
 3236 006e 7D       		.byte	0x7d
 3237 006f 00       		.sleb128 0
 3238 0070 02000000 		.4byte	.LCFI5
 3239 0074 04000000 		.4byte	.LCFI6
 3240 0078 0200     		.2byte	0x2
 3241 007a 7D       		.byte	0x7d
 3242 007b 08       		.sleb128 8
 3243 007c 04000000 		.4byte	.LCFI6
 3244 0080 24000000 		.4byte	.LFE2
 3245 0084 0200     		.2byte	0x2
 3246 0086 77       		.byte	0x77
 3247 0087 08       		.sleb128 8
 3248 0088 00000000 		.4byte	0
 3249 008c 00000000 		.4byte	0
 3250              	.LLST3:
 3251 0090 00000000 		.4byte	.LFB3
 3252 0094 02000000 		.4byte	.LCFI7
 3253 0098 0200     		.2byte	0x2
 3254 009a 7D       		.byte	0x7d
 3255 009b 00       		.sleb128 0
 3256 009c 02000000 		.4byte	.LCFI7
 3257 00a0 04000000 		.4byte	.LCFI8
 3258 00a4 0200     		.2byte	0x2
 3259 00a6 7D       		.byte	0x7d
 3260 00a7 0C       		.sleb128 12
 3261 00a8 04000000 		.4byte	.LCFI8
 3262 00ac 06000000 		.4byte	.LCFI9
 3263 00b0 0200     		.2byte	0x2
 3264 00b2 7D       		.byte	0x7d
 3265 00b3 18       		.sleb128 24
 3266 00b4 06000000 		.4byte	.LCFI9
 3267 00b8 30000000 		.4byte	.LFE3
 3268 00bc 0200     		.2byte	0x2
 3269 00be 77       		.byte	0x77
 3270 00bf 18       		.sleb128 24
 3271 00c0 00000000 		.4byte	0
 3272 00c4 00000000 		.4byte	0
 3273              	.LLST4:
 3274 00c8 00000000 		.4byte	.LFB4
 3275 00cc 02000000 		.4byte	.LCFI10
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 83


 3276 00d0 0200     		.2byte	0x2
 3277 00d2 7D       		.byte	0x7d
 3278 00d3 00       		.sleb128 0
 3279 00d4 02000000 		.4byte	.LCFI10
 3280 00d8 04000000 		.4byte	.LCFI11
 3281 00dc 0200     		.2byte	0x2
 3282 00de 7D       		.byte	0x7d
 3283 00df 0C       		.sleb128 12
 3284 00e0 04000000 		.4byte	.LCFI11
 3285 00e4 06000000 		.4byte	.LCFI12
 3286 00e8 0200     		.2byte	0x2
 3287 00ea 7D       		.byte	0x7d
 3288 00eb 20       		.sleb128 32
 3289 00ec 06000000 		.4byte	.LCFI12
 3290 00f0 48000000 		.4byte	.LFE4
 3291 00f4 0200     		.2byte	0x2
 3292 00f6 77       		.byte	0x77
 3293 00f7 20       		.sleb128 32
 3294 00f8 00000000 		.4byte	0
 3295 00fc 00000000 		.4byte	0
 3296              	.LLST5:
 3297 0100 00000000 		.4byte	.LFB5
 3298 0104 02000000 		.4byte	.LCFI13
 3299 0108 0200     		.2byte	0x2
 3300 010a 7D       		.byte	0x7d
 3301 010b 00       		.sleb128 0
 3302 010c 02000000 		.4byte	.LCFI13
 3303 0110 04000000 		.4byte	.LCFI14
 3304 0114 0200     		.2byte	0x2
 3305 0116 7D       		.byte	0x7d
 3306 0117 0C       		.sleb128 12
 3307 0118 04000000 		.4byte	.LCFI14
 3308 011c 06000000 		.4byte	.LCFI15
 3309 0120 0200     		.2byte	0x2
 3310 0122 7D       		.byte	0x7d
 3311 0123 20       		.sleb128 32
 3312 0124 06000000 		.4byte	.LCFI15
 3313 0128 48000000 		.4byte	.LFE5
 3314 012c 0200     		.2byte	0x2
 3315 012e 77       		.byte	0x77
 3316 012f 20       		.sleb128 32
 3317 0130 00000000 		.4byte	0
 3318 0134 00000000 		.4byte	0
 3319              	.LLST6:
 3320 0138 00000000 		.4byte	.LFB6
 3321 013c 02000000 		.4byte	.LCFI16
 3322 0140 0200     		.2byte	0x2
 3323 0142 7D       		.byte	0x7d
 3324 0143 00       		.sleb128 0
 3325 0144 02000000 		.4byte	.LCFI16
 3326 0148 04000000 		.4byte	.LCFI17
 3327 014c 0200     		.2byte	0x2
 3328 014e 7D       		.byte	0x7d
 3329 014f 0C       		.sleb128 12
 3330 0150 04000000 		.4byte	.LCFI17
 3331 0154 06000000 		.4byte	.LCFI18
 3332 0158 0200     		.2byte	0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 84


 3333 015a 7D       		.byte	0x7d
 3334 015b 20       		.sleb128 32
 3335 015c 06000000 		.4byte	.LCFI18
 3336 0160 48000000 		.4byte	.LFE6
 3337 0164 0200     		.2byte	0x2
 3338 0166 77       		.byte	0x77
 3339 0167 20       		.sleb128 32
 3340 0168 00000000 		.4byte	0
 3341 016c 00000000 		.4byte	0
 3342              	.LLST7:
 3343 0170 00000000 		.4byte	.LFB7
 3344 0174 02000000 		.4byte	.LCFI19
 3345 0178 0200     		.2byte	0x2
 3346 017a 7D       		.byte	0x7d
 3347 017b 00       		.sleb128 0
 3348 017c 02000000 		.4byte	.LCFI19
 3349 0180 04000000 		.4byte	.LCFI20
 3350 0184 0200     		.2byte	0x2
 3351 0186 7D       		.byte	0x7d
 3352 0187 0C       		.sleb128 12
 3353 0188 04000000 		.4byte	.LCFI20
 3354 018c 06000000 		.4byte	.LCFI21
 3355 0190 0200     		.2byte	0x2
 3356 0192 7D       		.byte	0x7d
 3357 0193 20       		.sleb128 32
 3358 0194 06000000 		.4byte	.LCFI21
 3359 0198 4C000000 		.4byte	.LFE7
 3360 019c 0200     		.2byte	0x2
 3361 019e 77       		.byte	0x77
 3362 019f 20       		.sleb128 32
 3363 01a0 00000000 		.4byte	0
 3364 01a4 00000000 		.4byte	0
 3365              	.LLST8:
 3366 01a8 00000000 		.4byte	.LFB8
 3367 01ac 02000000 		.4byte	.LCFI22
 3368 01b0 0200     		.2byte	0x2
 3369 01b2 7D       		.byte	0x7d
 3370 01b3 00       		.sleb128 0
 3371 01b4 02000000 		.4byte	.LCFI22
 3372 01b8 04000000 		.4byte	.LCFI23
 3373 01bc 0200     		.2byte	0x2
 3374 01be 7D       		.byte	0x7d
 3375 01bf 08       		.sleb128 8
 3376 01c0 04000000 		.4byte	.LCFI23
 3377 01c4 06000000 		.4byte	.LCFI24
 3378 01c8 0200     		.2byte	0x2
 3379 01ca 7D       		.byte	0x7d
 3380 01cb 10       		.sleb128 16
 3381 01cc 06000000 		.4byte	.LCFI24
 3382 01d0 1C000000 		.4byte	.LFE8
 3383 01d4 0200     		.2byte	0x2
 3384 01d6 77       		.byte	0x77
 3385 01d7 10       		.sleb128 16
 3386 01d8 00000000 		.4byte	0
 3387 01dc 00000000 		.4byte	0
 3388              	.LLST9:
 3389 01e0 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 85


 3390 01e4 02000000 		.4byte	.LCFI25
 3391 01e8 0200     		.2byte	0x2
 3392 01ea 7D       		.byte	0x7d
 3393 01eb 00       		.sleb128 0
 3394 01ec 02000000 		.4byte	.LCFI25
 3395 01f0 04000000 		.4byte	.LCFI26
 3396 01f4 0200     		.2byte	0x2
 3397 01f6 7D       		.byte	0x7d
 3398 01f7 0C       		.sleb128 12
 3399 01f8 04000000 		.4byte	.LCFI26
 3400 01fc 06000000 		.4byte	.LCFI27
 3401 0200 0200     		.2byte	0x2
 3402 0202 7D       		.byte	0x7d
 3403 0203 20       		.sleb128 32
 3404 0204 06000000 		.4byte	.LCFI27
 3405 0208 48000000 		.4byte	.LFE9
 3406 020c 0200     		.2byte	0x2
 3407 020e 77       		.byte	0x77
 3408 020f 20       		.sleb128 32
 3409 0210 00000000 		.4byte	0
 3410 0214 00000000 		.4byte	0
 3411              	.LLST10:
 3412 0218 00000000 		.4byte	.LFB10
 3413 021c 02000000 		.4byte	.LCFI28
 3414 0220 0200     		.2byte	0x2
 3415 0222 7D       		.byte	0x7d
 3416 0223 00       		.sleb128 0
 3417 0224 02000000 		.4byte	.LCFI28
 3418 0228 04000000 		.4byte	.LCFI29
 3419 022c 0200     		.2byte	0x2
 3420 022e 7D       		.byte	0x7d
 3421 022f 0C       		.sleb128 12
 3422 0230 04000000 		.4byte	.LCFI29
 3423 0234 06000000 		.4byte	.LCFI30
 3424 0238 0200     		.2byte	0x2
 3425 023a 7D       		.byte	0x7d
 3426 023b 20       		.sleb128 32
 3427 023c 06000000 		.4byte	.LCFI30
 3428 0240 48000000 		.4byte	.LFE10
 3429 0244 0200     		.2byte	0x2
 3430 0246 77       		.byte	0x77
 3431 0247 20       		.sleb128 32
 3432 0248 00000000 		.4byte	0
 3433 024c 00000000 		.4byte	0
 3434              	.LLST11:
 3435 0250 00000000 		.4byte	.LFB11
 3436 0254 02000000 		.4byte	.LCFI31
 3437 0258 0200     		.2byte	0x2
 3438 025a 7D       		.byte	0x7d
 3439 025b 00       		.sleb128 0
 3440 025c 02000000 		.4byte	.LCFI31
 3441 0260 04000000 		.4byte	.LCFI32
 3442 0264 0200     		.2byte	0x2
 3443 0266 7D       		.byte	0x7d
 3444 0267 0C       		.sleb128 12
 3445 0268 04000000 		.4byte	.LCFI32
 3446 026c 06000000 		.4byte	.LCFI33
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 86


 3447 0270 0200     		.2byte	0x2
 3448 0272 7D       		.byte	0x7d
 3449 0273 20       		.sleb128 32
 3450 0274 06000000 		.4byte	.LCFI33
 3451 0278 4C000000 		.4byte	.LFE11
 3452 027c 0200     		.2byte	0x2
 3453 027e 77       		.byte	0x77
 3454 027f 20       		.sleb128 32
 3455 0280 00000000 		.4byte	0
 3456 0284 00000000 		.4byte	0
 3457              	.LLST12:
 3458 0288 00000000 		.4byte	.LFB12
 3459 028c 02000000 		.4byte	.LCFI34
 3460 0290 0200     		.2byte	0x2
 3461 0292 7D       		.byte	0x7d
 3462 0293 00       		.sleb128 0
 3463 0294 02000000 		.4byte	.LCFI34
 3464 0298 04000000 		.4byte	.LCFI35
 3465 029c 0200     		.2byte	0x2
 3466 029e 7D       		.byte	0x7d
 3467 029f 0C       		.sleb128 12
 3468 02a0 04000000 		.4byte	.LCFI35
 3469 02a4 06000000 		.4byte	.LCFI36
 3470 02a8 0200     		.2byte	0x2
 3471 02aa 7D       		.byte	0x7d
 3472 02ab 20       		.sleb128 32
 3473 02ac 06000000 		.4byte	.LCFI36
 3474 02b0 48000000 		.4byte	.LFE12
 3475 02b4 0200     		.2byte	0x2
 3476 02b6 77       		.byte	0x77
 3477 02b7 20       		.sleb128 32
 3478 02b8 00000000 		.4byte	0
 3479 02bc 00000000 		.4byte	0
 3480              	.LLST13:
 3481 02c0 00000000 		.4byte	.LFB13
 3482 02c4 02000000 		.4byte	.LCFI37
 3483 02c8 0200     		.2byte	0x2
 3484 02ca 7D       		.byte	0x7d
 3485 02cb 00       		.sleb128 0
 3486 02cc 02000000 		.4byte	.LCFI37
 3487 02d0 04000000 		.4byte	.LCFI38
 3488 02d4 0200     		.2byte	0x2
 3489 02d6 7D       		.byte	0x7d
 3490 02d7 08       		.sleb128 8
 3491 02d8 04000000 		.4byte	.LCFI38
 3492 02dc 06000000 		.4byte	.LCFI39
 3493 02e0 0200     		.2byte	0x2
 3494 02e2 7D       		.byte	0x7d
 3495 02e3 10       		.sleb128 16
 3496 02e4 06000000 		.4byte	.LCFI39
 3497 02e8 1C000000 		.4byte	.LFE13
 3498 02ec 0200     		.2byte	0x2
 3499 02ee 77       		.byte	0x77
 3500 02ef 10       		.sleb128 16
 3501 02f0 00000000 		.4byte	0
 3502 02f4 00000000 		.4byte	0
 3503              	.LLST14:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 87


 3504 02f8 00000000 		.4byte	.LFB14
 3505 02fc 02000000 		.4byte	.LCFI40
 3506 0300 0200     		.2byte	0x2
 3507 0302 7D       		.byte	0x7d
 3508 0303 00       		.sleb128 0
 3509 0304 02000000 		.4byte	.LCFI40
 3510 0308 04000000 		.4byte	.LCFI41
 3511 030c 0200     		.2byte	0x2
 3512 030e 7D       		.byte	0x7d
 3513 030f 08       		.sleb128 8
 3514 0310 04000000 		.4byte	.LCFI41
 3515 0314 18000000 		.4byte	.LFE14
 3516 0318 0200     		.2byte	0x2
 3517 031a 77       		.byte	0x77
 3518 031b 08       		.sleb128 8
 3519 031c 00000000 		.4byte	0
 3520 0320 00000000 		.4byte	0
 3521              	.LLST15:
 3522 0324 00000000 		.4byte	.LFB15
 3523 0328 02000000 		.4byte	.LCFI42
 3524 032c 0200     		.2byte	0x2
 3525 032e 7D       		.byte	0x7d
 3526 032f 00       		.sleb128 0
 3527 0330 02000000 		.4byte	.LCFI42
 3528 0334 04000000 		.4byte	.LCFI43
 3529 0338 0200     		.2byte	0x2
 3530 033a 7D       		.byte	0x7d
 3531 033b 0C       		.sleb128 12
 3532 033c 04000000 		.4byte	.LCFI43
 3533 0340 06000000 		.4byte	.LCFI44
 3534 0344 0200     		.2byte	0x2
 3535 0346 7D       		.byte	0x7d
 3536 0347 20       		.sleb128 32
 3537 0348 06000000 		.4byte	.LCFI44
 3538 034c 48000000 		.4byte	.LFE15
 3539 0350 0200     		.2byte	0x2
 3540 0352 77       		.byte	0x77
 3541 0353 20       		.sleb128 32
 3542 0354 00000000 		.4byte	0
 3543 0358 00000000 		.4byte	0
 3544              	.LLST16:
 3545 035c 00000000 		.4byte	.LFB16
 3546 0360 02000000 		.4byte	.LCFI45
 3547 0364 0200     		.2byte	0x2
 3548 0366 7D       		.byte	0x7d
 3549 0367 00       		.sleb128 0
 3550 0368 02000000 		.4byte	.LCFI45
 3551 036c 04000000 		.4byte	.LCFI46
 3552 0370 0200     		.2byte	0x2
 3553 0372 7D       		.byte	0x7d
 3554 0373 08       		.sleb128 8
 3555 0374 04000000 		.4byte	.LCFI46
 3556 0378 06000000 		.4byte	.LCFI47
 3557 037c 0200     		.2byte	0x2
 3558 037e 7D       		.byte	0x7d
 3559 037f 10       		.sleb128 16
 3560 0380 06000000 		.4byte	.LCFI47
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 88


 3561 0384 1C000000 		.4byte	.LFE16
 3562 0388 0200     		.2byte	0x2
 3563 038a 77       		.byte	0x77
 3564 038b 10       		.sleb128 16
 3565 038c 00000000 		.4byte	0
 3566 0390 00000000 		.4byte	0
 3567              	.LLST17:
 3568 0394 00000000 		.4byte	.LFB17
 3569 0398 02000000 		.4byte	.LCFI48
 3570 039c 0200     		.2byte	0x2
 3571 039e 7D       		.byte	0x7d
 3572 039f 00       		.sleb128 0
 3573 03a0 02000000 		.4byte	.LCFI48
 3574 03a4 04000000 		.4byte	.LCFI49
 3575 03a8 0200     		.2byte	0x2
 3576 03aa 7D       		.byte	0x7d
 3577 03ab 08       		.sleb128 8
 3578 03ac 04000000 		.4byte	.LCFI49
 3579 03b0 18000000 		.4byte	.LFE17
 3580 03b4 0200     		.2byte	0x2
 3581 03b6 77       		.byte	0x77
 3582 03b7 08       		.sleb128 8
 3583 03b8 00000000 		.4byte	0
 3584 03bc 00000000 		.4byte	0
 3585              	.LLST18:
 3586 03c0 00000000 		.4byte	.LFB18
 3587 03c4 02000000 		.4byte	.LCFI50
 3588 03c8 0200     		.2byte	0x2
 3589 03ca 7D       		.byte	0x7d
 3590 03cb 00       		.sleb128 0
 3591 03cc 02000000 		.4byte	.LCFI50
 3592 03d0 04000000 		.4byte	.LCFI51
 3593 03d4 0200     		.2byte	0x2
 3594 03d6 7D       		.byte	0x7d
 3595 03d7 0C       		.sleb128 12
 3596 03d8 04000000 		.4byte	.LCFI51
 3597 03dc 06000000 		.4byte	.LCFI52
 3598 03e0 0200     		.2byte	0x2
 3599 03e2 7D       		.byte	0x7d
 3600 03e3 20       		.sleb128 32
 3601 03e4 06000000 		.4byte	.LCFI52
 3602 03e8 48000000 		.4byte	.LFE18
 3603 03ec 0200     		.2byte	0x2
 3604 03ee 77       		.byte	0x77
 3605 03ef 20       		.sleb128 32
 3606 03f0 00000000 		.4byte	0
 3607 03f4 00000000 		.4byte	0
 3608              	.LLST19:
 3609 03f8 00000000 		.4byte	.LFB19
 3610 03fc 02000000 		.4byte	.LCFI53
 3611 0400 0200     		.2byte	0x2
 3612 0402 7D       		.byte	0x7d
 3613 0403 00       		.sleb128 0
 3614 0404 02000000 		.4byte	.LCFI53
 3615 0408 04000000 		.4byte	.LCFI54
 3616 040c 0200     		.2byte	0x2
 3617 040e 7D       		.byte	0x7d
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 89


 3618 040f 08       		.sleb128 8
 3619 0410 04000000 		.4byte	.LCFI54
 3620 0414 06000000 		.4byte	.LCFI55
 3621 0418 0200     		.2byte	0x2
 3622 041a 7D       		.byte	0x7d
 3623 041b 10       		.sleb128 16
 3624 041c 06000000 		.4byte	.LCFI55
 3625 0420 1C000000 		.4byte	.LFE19
 3626 0424 0200     		.2byte	0x2
 3627 0426 77       		.byte	0x77
 3628 0427 10       		.sleb128 16
 3629 0428 00000000 		.4byte	0
 3630 042c 00000000 		.4byte	0
 3631              	.LLST20:
 3632 0430 00000000 		.4byte	.LFB20
 3633 0434 02000000 		.4byte	.LCFI56
 3634 0438 0200     		.2byte	0x2
 3635 043a 7D       		.byte	0x7d
 3636 043b 00       		.sleb128 0
 3637 043c 02000000 		.4byte	.LCFI56
 3638 0440 04000000 		.4byte	.LCFI57
 3639 0444 0200     		.2byte	0x2
 3640 0446 7D       		.byte	0x7d
 3641 0447 08       		.sleb128 8
 3642 0448 04000000 		.4byte	.LCFI57
 3643 044c 18000000 		.4byte	.LFE20
 3644 0450 0200     		.2byte	0x2
 3645 0452 77       		.byte	0x77
 3646 0453 08       		.sleb128 8
 3647 0454 00000000 		.4byte	0
 3648 0458 00000000 		.4byte	0
 3649              	.LLST21:
 3650 045c 00000000 		.4byte	.LFB21
 3651 0460 02000000 		.4byte	.LCFI58
 3652 0464 0200     		.2byte	0x2
 3653 0466 7D       		.byte	0x7d
 3654 0467 00       		.sleb128 0
 3655 0468 02000000 		.4byte	.LCFI58
 3656 046c 04000000 		.4byte	.LCFI59
 3657 0470 0200     		.2byte	0x2
 3658 0472 7D       		.byte	0x7d
 3659 0473 0C       		.sleb128 12
 3660 0474 04000000 		.4byte	.LCFI59
 3661 0478 06000000 		.4byte	.LCFI60
 3662 047c 0200     		.2byte	0x2
 3663 047e 7D       		.byte	0x7d
 3664 047f 20       		.sleb128 32
 3665 0480 06000000 		.4byte	.LCFI60
 3666 0484 48000000 		.4byte	.LFE21
 3667 0488 0200     		.2byte	0x2
 3668 048a 77       		.byte	0x77
 3669 048b 20       		.sleb128 32
 3670 048c 00000000 		.4byte	0
 3671 0490 00000000 		.4byte	0
 3672              	.LLST22:
 3673 0494 00000000 		.4byte	.LFB22
 3674 0498 02000000 		.4byte	.LCFI61
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 90


 3675 049c 0200     		.2byte	0x2
 3676 049e 7D       		.byte	0x7d
 3677 049f 00       		.sleb128 0
 3678 04a0 02000000 		.4byte	.LCFI61
 3679 04a4 04000000 		.4byte	.LCFI62
 3680 04a8 0200     		.2byte	0x2
 3681 04aa 7D       		.byte	0x7d
 3682 04ab 08       		.sleb128 8
 3683 04ac 04000000 		.4byte	.LCFI62
 3684 04b0 06000000 		.4byte	.LCFI63
 3685 04b4 0200     		.2byte	0x2
 3686 04b6 7D       		.byte	0x7d
 3687 04b7 10       		.sleb128 16
 3688 04b8 06000000 		.4byte	.LCFI63
 3689 04bc 1C000000 		.4byte	.LFE22
 3690 04c0 0200     		.2byte	0x2
 3691 04c2 77       		.byte	0x77
 3692 04c3 10       		.sleb128 16
 3693 04c4 00000000 		.4byte	0
 3694 04c8 00000000 		.4byte	0
 3695              	.LLST23:
 3696 04cc 00000000 		.4byte	.LFB23
 3697 04d0 02000000 		.4byte	.LCFI64
 3698 04d4 0200     		.2byte	0x2
 3699 04d6 7D       		.byte	0x7d
 3700 04d7 00       		.sleb128 0
 3701 04d8 02000000 		.4byte	.LCFI64
 3702 04dc 04000000 		.4byte	.LCFI65
 3703 04e0 0200     		.2byte	0x2
 3704 04e2 7D       		.byte	0x7d
 3705 04e3 08       		.sleb128 8
 3706 04e4 04000000 		.4byte	.LCFI65
 3707 04e8 18000000 		.4byte	.LFE23
 3708 04ec 0200     		.2byte	0x2
 3709 04ee 77       		.byte	0x77
 3710 04ef 08       		.sleb128 8
 3711 04f0 00000000 		.4byte	0
 3712 04f4 00000000 		.4byte	0
 3713              	.LLST24:
 3714 04f8 00000000 		.4byte	.LFB24
 3715 04fc 02000000 		.4byte	.LCFI66
 3716 0500 0200     		.2byte	0x2
 3717 0502 7D       		.byte	0x7d
 3718 0503 00       		.sleb128 0
 3719 0504 02000000 		.4byte	.LCFI66
 3720 0508 04000000 		.4byte	.LCFI67
 3721 050c 0200     		.2byte	0x2
 3722 050e 7D       		.byte	0x7d
 3723 050f 08       		.sleb128 8
 3724 0510 04000000 		.4byte	.LCFI67
 3725 0514 06000000 		.4byte	.LCFI68
 3726 0518 0200     		.2byte	0x2
 3727 051a 7D       		.byte	0x7d
 3728 051b 10       		.sleb128 16
 3729 051c 06000000 		.4byte	.LCFI68
 3730 0520 1C000000 		.4byte	.LFE24
 3731 0524 0200     		.2byte	0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 91


 3732 0526 77       		.byte	0x77
 3733 0527 10       		.sleb128 16
 3734 0528 00000000 		.4byte	0
 3735 052c 00000000 		.4byte	0
 3736              	.LLST25:
 3737 0530 00000000 		.4byte	.LFB25
 3738 0534 02000000 		.4byte	.LCFI69
 3739 0538 0200     		.2byte	0x2
 3740 053a 7D       		.byte	0x7d
 3741 053b 00       		.sleb128 0
 3742 053c 02000000 		.4byte	.LCFI69
 3743 0540 04000000 		.4byte	.LCFI70
 3744 0544 0200     		.2byte	0x2
 3745 0546 7D       		.byte	0x7d
 3746 0547 08       		.sleb128 8
 3747 0548 04000000 		.4byte	.LCFI70
 3748 054c 18000000 		.4byte	.LFE25
 3749 0550 0200     		.2byte	0x2
 3750 0552 77       		.byte	0x77
 3751 0553 08       		.sleb128 8
 3752 0554 00000000 		.4byte	0
 3753 0558 00000000 		.4byte	0
 3754              	.LLST26:
 3755 055c 00000000 		.4byte	.LFB26
 3756 0560 02000000 		.4byte	.LCFI71
 3757 0564 0200     		.2byte	0x2
 3758 0566 7D       		.byte	0x7d
 3759 0567 00       		.sleb128 0
 3760 0568 02000000 		.4byte	.LCFI71
 3761 056c 04000000 		.4byte	.LCFI72
 3762 0570 0200     		.2byte	0x2
 3763 0572 7D       		.byte	0x7d
 3764 0573 08       		.sleb128 8
 3765 0574 04000000 		.4byte	.LCFI72
 3766 0578 18000000 		.4byte	.LFE26
 3767 057c 0200     		.2byte	0x2
 3768 057e 77       		.byte	0x77
 3769 057f 08       		.sleb128 8
 3770 0580 00000000 		.4byte	0
 3771 0584 00000000 		.4byte	0
 3772              	.LLST27:
 3773 0588 00000000 		.4byte	.LFB27
 3774 058c 02000000 		.4byte	.LCFI73
 3775 0590 0200     		.2byte	0x2
 3776 0592 7D       		.byte	0x7d
 3777 0593 00       		.sleb128 0
 3778 0594 02000000 		.4byte	.LCFI73
 3779 0598 04000000 		.4byte	.LCFI74
 3780 059c 0200     		.2byte	0x2
 3781 059e 7D       		.byte	0x7d
 3782 059f 08       		.sleb128 8
 3783 05a0 04000000 		.4byte	.LCFI74
 3784 05a4 18000000 		.4byte	.LFE27
 3785 05a8 0200     		.2byte	0x2
 3786 05aa 77       		.byte	0x77
 3787 05ab 08       		.sleb128 8
 3788 05ac 00000000 		.4byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 92


 3789 05b0 00000000 		.4byte	0
 3790              	.LLST28:
 3791 05b4 00000000 		.4byte	.LFB28
 3792 05b8 02000000 		.4byte	.LCFI75
 3793 05bc 0200     		.2byte	0x2
 3794 05be 7D       		.byte	0x7d
 3795 05bf 00       		.sleb128 0
 3796 05c0 02000000 		.4byte	.LCFI75
 3797 05c4 04000000 		.4byte	.LCFI76
 3798 05c8 0200     		.2byte	0x2
 3799 05ca 7D       		.byte	0x7d
 3800 05cb 0C       		.sleb128 12
 3801 05cc 04000000 		.4byte	.LCFI76
 3802 05d0 06000000 		.4byte	.LCFI77
 3803 05d4 0200     		.2byte	0x2
 3804 05d6 7D       		.byte	0x7d
 3805 05d7 20       		.sleb128 32
 3806 05d8 06000000 		.4byte	.LCFI77
 3807 05dc 44000000 		.4byte	.LFE28
 3808 05e0 0200     		.2byte	0x2
 3809 05e2 77       		.byte	0x77
 3810 05e3 20       		.sleb128 32
 3811 05e4 00000000 		.4byte	0
 3812 05e8 00000000 		.4byte	0
 3813              	.LLST29:
 3814 05ec 00000000 		.4byte	.LFB29
 3815 05f0 02000000 		.4byte	.LCFI78
 3816 05f4 0200     		.2byte	0x2
 3817 05f6 7D       		.byte	0x7d
 3818 05f7 00       		.sleb128 0
 3819 05f8 02000000 		.4byte	.LCFI78
 3820 05fc 04000000 		.4byte	.LCFI79
 3821 0600 0200     		.2byte	0x2
 3822 0602 7D       		.byte	0x7d
 3823 0603 0C       		.sleb128 12
 3824 0604 04000000 		.4byte	.LCFI79
 3825 0608 06000000 		.4byte	.LCFI80
 3826 060c 0200     		.2byte	0x2
 3827 060e 7D       		.byte	0x7d
 3828 060f 20       		.sleb128 32
 3829 0610 06000000 		.4byte	.LCFI80
 3830 0614 44000000 		.4byte	.LFE29
 3831 0618 0200     		.2byte	0x2
 3832 061a 77       		.byte	0x77
 3833 061b 20       		.sleb128 32
 3834 061c 00000000 		.4byte	0
 3835 0620 00000000 		.4byte	0
 3836              	.LLST30:
 3837 0624 00000000 		.4byte	.LFB30
 3838 0628 02000000 		.4byte	.LCFI81
 3839 062c 0200     		.2byte	0x2
 3840 062e 7D       		.byte	0x7d
 3841 062f 00       		.sleb128 0
 3842 0630 02000000 		.4byte	.LCFI81
 3843 0634 04000000 		.4byte	.LCFI82
 3844 0638 0200     		.2byte	0x2
 3845 063a 7D       		.byte	0x7d
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 93


 3846 063b 0C       		.sleb128 12
 3847 063c 04000000 		.4byte	.LCFI82
 3848 0640 06000000 		.4byte	.LCFI83
 3849 0644 0200     		.2byte	0x2
 3850 0646 7D       		.byte	0x7d
 3851 0647 20       		.sleb128 32
 3852 0648 06000000 		.4byte	.LCFI83
 3853 064c 48000000 		.4byte	.LFE30
 3854 0650 0200     		.2byte	0x2
 3855 0652 77       		.byte	0x77
 3856 0653 20       		.sleb128 32
 3857 0654 00000000 		.4byte	0
 3858 0658 00000000 		.4byte	0
 3859              	.LLST31:
 3860 065c 00000000 		.4byte	.LFB31
 3861 0660 02000000 		.4byte	.LCFI84
 3862 0664 0200     		.2byte	0x2
 3863 0666 7D       		.byte	0x7d
 3864 0667 00       		.sleb128 0
 3865 0668 02000000 		.4byte	.LCFI84
 3866 066c 04000000 		.4byte	.LCFI85
 3867 0670 0200     		.2byte	0x2
 3868 0672 7D       		.byte	0x7d
 3869 0673 0C       		.sleb128 12
 3870 0674 04000000 		.4byte	.LCFI85
 3871 0678 06000000 		.4byte	.LCFI86
 3872 067c 0200     		.2byte	0x2
 3873 067e 7D       		.byte	0x7d
 3874 067f 20       		.sleb128 32
 3875 0680 06000000 		.4byte	.LCFI86
 3876 0684 44000000 		.4byte	.LFE31
 3877 0688 0200     		.2byte	0x2
 3878 068a 77       		.byte	0x77
 3879 068b 20       		.sleb128 32
 3880 068c 00000000 		.4byte	0
 3881 0690 00000000 		.4byte	0
 3882              	.LLST32:
 3883 0694 00000000 		.4byte	.LFB32
 3884 0698 02000000 		.4byte	.LCFI87
 3885 069c 0200     		.2byte	0x2
 3886 069e 7D       		.byte	0x7d
 3887 069f 00       		.sleb128 0
 3888 06a0 02000000 		.4byte	.LCFI87
 3889 06a4 04000000 		.4byte	.LCFI88
 3890 06a8 0200     		.2byte	0x2
 3891 06aa 7D       		.byte	0x7d
 3892 06ab 0C       		.sleb128 12
 3893 06ac 04000000 		.4byte	.LCFI88
 3894 06b0 06000000 		.4byte	.LCFI89
 3895 06b4 0200     		.2byte	0x2
 3896 06b6 7D       		.byte	0x7d
 3897 06b7 20       		.sleb128 32
 3898 06b8 06000000 		.4byte	.LCFI89
 3899 06bc 44000000 		.4byte	.LFE32
 3900 06c0 0200     		.2byte	0x2
 3901 06c2 77       		.byte	0x77
 3902 06c3 20       		.sleb128 32
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 94


 3903 06c4 00000000 		.4byte	0
 3904 06c8 00000000 		.4byte	0
 3905              	.LLST33:
 3906 06cc 00000000 		.4byte	.LFB33
 3907 06d0 02000000 		.4byte	.LCFI90
 3908 06d4 0200     		.2byte	0x2
 3909 06d6 7D       		.byte	0x7d
 3910 06d7 00       		.sleb128 0
 3911 06d8 02000000 		.4byte	.LCFI90
 3912 06dc 04000000 		.4byte	.LCFI91
 3913 06e0 0200     		.2byte	0x2
 3914 06e2 7D       		.byte	0x7d
 3915 06e3 0C       		.sleb128 12
 3916 06e4 04000000 		.4byte	.LCFI91
 3917 06e8 06000000 		.4byte	.LCFI92
 3918 06ec 0200     		.2byte	0x2
 3919 06ee 7D       		.byte	0x7d
 3920 06ef 20       		.sleb128 32
 3921 06f0 06000000 		.4byte	.LCFI92
 3922 06f4 3C000000 		.4byte	.LFE33
 3923 06f8 0200     		.2byte	0x2
 3924 06fa 77       		.byte	0x77
 3925 06fb 20       		.sleb128 32
 3926 06fc 00000000 		.4byte	0
 3927 0700 00000000 		.4byte	0
 3928              	.LLST34:
 3929 0704 00000000 		.4byte	.LFB34
 3930 0708 02000000 		.4byte	.LCFI93
 3931 070c 0200     		.2byte	0x2
 3932 070e 7D       		.byte	0x7d
 3933 070f 00       		.sleb128 0
 3934 0710 02000000 		.4byte	.LCFI93
 3935 0714 04000000 		.4byte	.LCFI94
 3936 0718 0200     		.2byte	0x2
 3937 071a 7D       		.byte	0x7d
 3938 071b 08       		.sleb128 8
 3939 071c 04000000 		.4byte	.LCFI94
 3940 0720 20000000 		.4byte	.LFE34
 3941 0724 0200     		.2byte	0x2
 3942 0726 77       		.byte	0x77
 3943 0727 08       		.sleb128 8
 3944 0728 00000000 		.4byte	0
 3945 072c 00000000 		.4byte	0
 3946              	.LLST35:
 3947 0730 00000000 		.4byte	.LFB35
 3948 0734 02000000 		.4byte	.LCFI95
 3949 0738 0200     		.2byte	0x2
 3950 073a 7D       		.byte	0x7d
 3951 073b 00       		.sleb128 0
 3952 073c 02000000 		.4byte	.LCFI95
 3953 0740 04000000 		.4byte	.LCFI96
 3954 0744 0200     		.2byte	0x2
 3955 0746 7D       		.byte	0x7d
 3956 0747 08       		.sleb128 8
 3957 0748 04000000 		.4byte	.LCFI96
 3958 074c 06000000 		.4byte	.LCFI97
 3959 0750 0200     		.2byte	0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 95


 3960 0752 7D       		.byte	0x7d
 3961 0753 10       		.sleb128 16
 3962 0754 06000000 		.4byte	.LCFI97
 3963 0758 18000000 		.4byte	.LFE35
 3964 075c 0200     		.2byte	0x2
 3965 075e 77       		.byte	0x77
 3966 075f 10       		.sleb128 16
 3967 0760 00000000 		.4byte	0
 3968 0764 00000000 		.4byte	0
 3969              	.LLST36:
 3970 0768 00000000 		.4byte	.LFB36
 3971 076c 02000000 		.4byte	.LCFI98
 3972 0770 0200     		.2byte	0x2
 3973 0772 7D       		.byte	0x7d
 3974 0773 00       		.sleb128 0
 3975 0774 02000000 		.4byte	.LCFI98
 3976 0778 04000000 		.4byte	.LCFI99
 3977 077c 0200     		.2byte	0x2
 3978 077e 7D       		.byte	0x7d
 3979 077f 08       		.sleb128 8
 3980 0780 04000000 		.4byte	.LCFI99
 3981 0784 14000000 		.4byte	.LFE36
 3982 0788 0200     		.2byte	0x2
 3983 078a 77       		.byte	0x77
 3984 078b 08       		.sleb128 8
 3985 078c 00000000 		.4byte	0
 3986 0790 00000000 		.4byte	0
 3987              	.LLST37:
 3988 0794 00000000 		.4byte	.LFB37
 3989 0798 02000000 		.4byte	.LCFI100
 3990 079c 0200     		.2byte	0x2
 3991 079e 7D       		.byte	0x7d
 3992 079f 00       		.sleb128 0
 3993 07a0 02000000 		.4byte	.LCFI100
 3994 07a4 04000000 		.4byte	.LCFI101
 3995 07a8 0200     		.2byte	0x2
 3996 07aa 7D       		.byte	0x7d
 3997 07ab 08       		.sleb128 8
 3998 07ac 04000000 		.4byte	.LCFI101
 3999 07b0 14000000 		.4byte	.LFE37
 4000 07b4 0200     		.2byte	0x2
 4001 07b6 77       		.byte	0x77
 4002 07b7 08       		.sleb128 8
 4003 07b8 00000000 		.4byte	0
 4004 07bc 00000000 		.4byte	0
 4005              	.LLST38:
 4006 07c0 00000000 		.4byte	.LFB38
 4007 07c4 02000000 		.4byte	.LCFI102
 4008 07c8 0200     		.2byte	0x2
 4009 07ca 7D       		.byte	0x7d
 4010 07cb 00       		.sleb128 0
 4011 07cc 02000000 		.4byte	.LCFI102
 4012 07d0 04000000 		.4byte	.LCFI103
 4013 07d4 0200     		.2byte	0x2
 4014 07d6 7D       		.byte	0x7d
 4015 07d7 08       		.sleb128 8
 4016 07d8 04000000 		.4byte	.LCFI103
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 96


 4017 07dc 06000000 		.4byte	.LCFI104
 4018 07e0 0200     		.2byte	0x2
 4019 07e2 7D       		.byte	0x7d
 4020 07e3 10       		.sleb128 16
 4021 07e4 06000000 		.4byte	.LCFI104
 4022 07e8 18000000 		.4byte	.LFE38
 4023 07ec 0200     		.2byte	0x2
 4024 07ee 77       		.byte	0x77
 4025 07ef 10       		.sleb128 16
 4026 07f0 00000000 		.4byte	0
 4027 07f4 00000000 		.4byte	0
 4028              	.LLST39:
 4029 07f8 00000000 		.4byte	.LFB39
 4030 07fc 02000000 		.4byte	.LCFI105
 4031 0800 0200     		.2byte	0x2
 4032 0802 7D       		.byte	0x7d
 4033 0803 00       		.sleb128 0
 4034 0804 02000000 		.4byte	.LCFI105
 4035 0808 04000000 		.4byte	.LCFI106
 4036 080c 0200     		.2byte	0x2
 4037 080e 7D       		.byte	0x7d
 4038 080f 08       		.sleb128 8
 4039 0810 04000000 		.4byte	.LCFI106
 4040 0814 06000000 		.4byte	.LCFI107
 4041 0818 0200     		.2byte	0x2
 4042 081a 7D       		.byte	0x7d
 4043 081b 10       		.sleb128 16
 4044 081c 06000000 		.4byte	.LCFI107
 4045 0820 18000000 		.4byte	.LFE39
 4046 0824 0200     		.2byte	0x2
 4047 0826 77       		.byte	0x77
 4048 0827 10       		.sleb128 16
 4049 0828 00000000 		.4byte	0
 4050 082c 00000000 		.4byte	0
 4051              		.section	.debug_aranges,"",%progbits
 4052 0000 54010000 		.4byte	0x154
 4053 0004 0200     		.2byte	0x2
 4054 0006 00000000 		.4byte	.Ldebug_info0
 4055 000a 04       		.byte	0x4
 4056 000b 00       		.byte	0
 4057 000c 0000     		.2byte	0
 4058 000e 0000     		.2byte	0
 4059 0010 00000000 		.4byte	.LFB0
 4060 0014 4C000000 		.4byte	.LFE0-.LFB0
 4061 0018 00000000 		.4byte	.LFB1
 4062 001c 38000000 		.4byte	.LFE1-.LFB1
 4063 0020 00000000 		.4byte	.LFB2
 4064 0024 24000000 		.4byte	.LFE2-.LFB2
 4065 0028 00000000 		.4byte	.LFB3
 4066 002c 30000000 		.4byte	.LFE3-.LFB3
 4067 0030 00000000 		.4byte	.LFB4
 4068 0034 48000000 		.4byte	.LFE4-.LFB4
 4069 0038 00000000 		.4byte	.LFB5
 4070 003c 48000000 		.4byte	.LFE5-.LFB5
 4071 0040 00000000 		.4byte	.LFB6
 4072 0044 48000000 		.4byte	.LFE6-.LFB6
 4073 0048 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 97


 4074 004c 4C000000 		.4byte	.LFE7-.LFB7
 4075 0050 00000000 		.4byte	.LFB8
 4076 0054 1C000000 		.4byte	.LFE8-.LFB8
 4077 0058 00000000 		.4byte	.LFB9
 4078 005c 48000000 		.4byte	.LFE9-.LFB9
 4079 0060 00000000 		.4byte	.LFB10
 4080 0064 48000000 		.4byte	.LFE10-.LFB10
 4081 0068 00000000 		.4byte	.LFB11
 4082 006c 4C000000 		.4byte	.LFE11-.LFB11
 4083 0070 00000000 		.4byte	.LFB12
 4084 0074 48000000 		.4byte	.LFE12-.LFB12
 4085 0078 00000000 		.4byte	.LFB13
 4086 007c 1C000000 		.4byte	.LFE13-.LFB13
 4087 0080 00000000 		.4byte	.LFB14
 4088 0084 18000000 		.4byte	.LFE14-.LFB14
 4089 0088 00000000 		.4byte	.LFB15
 4090 008c 48000000 		.4byte	.LFE15-.LFB15
 4091 0090 00000000 		.4byte	.LFB16
 4092 0094 1C000000 		.4byte	.LFE16-.LFB16
 4093 0098 00000000 		.4byte	.LFB17
 4094 009c 18000000 		.4byte	.LFE17-.LFB17
 4095 00a0 00000000 		.4byte	.LFB18
 4096 00a4 48000000 		.4byte	.LFE18-.LFB18
 4097 00a8 00000000 		.4byte	.LFB19
 4098 00ac 1C000000 		.4byte	.LFE19-.LFB19
 4099 00b0 00000000 		.4byte	.LFB20
 4100 00b4 18000000 		.4byte	.LFE20-.LFB20
 4101 00b8 00000000 		.4byte	.LFB21
 4102 00bc 48000000 		.4byte	.LFE21-.LFB21
 4103 00c0 00000000 		.4byte	.LFB22
 4104 00c4 1C000000 		.4byte	.LFE22-.LFB22
 4105 00c8 00000000 		.4byte	.LFB23
 4106 00cc 18000000 		.4byte	.LFE23-.LFB23
 4107 00d0 00000000 		.4byte	.LFB24
 4108 00d4 1C000000 		.4byte	.LFE24-.LFB24
 4109 00d8 00000000 		.4byte	.LFB25
 4110 00dc 18000000 		.4byte	.LFE25-.LFB25
 4111 00e0 00000000 		.4byte	.LFB26
 4112 00e4 18000000 		.4byte	.LFE26-.LFB26
 4113 00e8 00000000 		.4byte	.LFB27
 4114 00ec 18000000 		.4byte	.LFE27-.LFB27
 4115 00f0 00000000 		.4byte	.LFB28
 4116 00f4 44000000 		.4byte	.LFE28-.LFB28
 4117 00f8 00000000 		.4byte	.LFB29
 4118 00fc 44000000 		.4byte	.LFE29-.LFB29
 4119 0100 00000000 		.4byte	.LFB30
 4120 0104 48000000 		.4byte	.LFE30-.LFB30
 4121 0108 00000000 		.4byte	.LFB31
 4122 010c 44000000 		.4byte	.LFE31-.LFB31
 4123 0110 00000000 		.4byte	.LFB32
 4124 0114 44000000 		.4byte	.LFE32-.LFB32
 4125 0118 00000000 		.4byte	.LFB33
 4126 011c 3C000000 		.4byte	.LFE33-.LFB33
 4127 0120 00000000 		.4byte	.LFB34
 4128 0124 20000000 		.4byte	.LFE34-.LFB34
 4129 0128 00000000 		.4byte	.LFB35
 4130 012c 18000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 98


 4131 0130 00000000 		.4byte	.LFB36
 4132 0134 14000000 		.4byte	.LFE36-.LFB36
 4133 0138 00000000 		.4byte	.LFB37
 4134 013c 14000000 		.4byte	.LFE37-.LFB37
 4135 0140 00000000 		.4byte	.LFB38
 4136 0144 18000000 		.4byte	.LFE38-.LFB38
 4137 0148 00000000 		.4byte	.LFB39
 4138 014c 18000000 		.4byte	.LFE39-.LFB39
 4139 0150 00000000 		.4byte	0
 4140 0154 00000000 		.4byte	0
 4141              		.section	.debug_ranges,"",%progbits
 4142              	.Ldebug_ranges0:
 4143 0000 00000000 		.4byte	.LFB0
 4144 0004 4C000000 		.4byte	.LFE0
 4145 0008 00000000 		.4byte	.LFB1
 4146 000c 38000000 		.4byte	.LFE1
 4147 0010 00000000 		.4byte	.LFB2
 4148 0014 24000000 		.4byte	.LFE2
 4149 0018 00000000 		.4byte	.LFB3
 4150 001c 30000000 		.4byte	.LFE3
 4151 0020 00000000 		.4byte	.LFB4
 4152 0024 48000000 		.4byte	.LFE4
 4153 0028 00000000 		.4byte	.LFB5
 4154 002c 48000000 		.4byte	.LFE5
 4155 0030 00000000 		.4byte	.LFB6
 4156 0034 48000000 		.4byte	.LFE6
 4157 0038 00000000 		.4byte	.LFB7
 4158 003c 4C000000 		.4byte	.LFE7
 4159 0040 00000000 		.4byte	.LFB8
 4160 0044 1C000000 		.4byte	.LFE8
 4161 0048 00000000 		.4byte	.LFB9
 4162 004c 48000000 		.4byte	.LFE9
 4163 0050 00000000 		.4byte	.LFB10
 4164 0054 48000000 		.4byte	.LFE10
 4165 0058 00000000 		.4byte	.LFB11
 4166 005c 4C000000 		.4byte	.LFE11
 4167 0060 00000000 		.4byte	.LFB12
 4168 0064 48000000 		.4byte	.LFE12
 4169 0068 00000000 		.4byte	.LFB13
 4170 006c 1C000000 		.4byte	.LFE13
 4171 0070 00000000 		.4byte	.LFB14
 4172 0074 18000000 		.4byte	.LFE14
 4173 0078 00000000 		.4byte	.LFB15
 4174 007c 48000000 		.4byte	.LFE15
 4175 0080 00000000 		.4byte	.LFB16
 4176 0084 1C000000 		.4byte	.LFE16
 4177 0088 00000000 		.4byte	.LFB17
 4178 008c 18000000 		.4byte	.LFE17
 4179 0090 00000000 		.4byte	.LFB18
 4180 0094 48000000 		.4byte	.LFE18
 4181 0098 00000000 		.4byte	.LFB19
 4182 009c 1C000000 		.4byte	.LFE19
 4183 00a0 00000000 		.4byte	.LFB20
 4184 00a4 18000000 		.4byte	.LFE20
 4185 00a8 00000000 		.4byte	.LFB21
 4186 00ac 48000000 		.4byte	.LFE21
 4187 00b0 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 99


 4188 00b4 1C000000 		.4byte	.LFE22
 4189 00b8 00000000 		.4byte	.LFB23
 4190 00bc 18000000 		.4byte	.LFE23
 4191 00c0 00000000 		.4byte	.LFB24
 4192 00c4 1C000000 		.4byte	.LFE24
 4193 00c8 00000000 		.4byte	.LFB25
 4194 00cc 18000000 		.4byte	.LFE25
 4195 00d0 00000000 		.4byte	.LFB26
 4196 00d4 18000000 		.4byte	.LFE26
 4197 00d8 00000000 		.4byte	.LFB27
 4198 00dc 18000000 		.4byte	.LFE27
 4199 00e0 00000000 		.4byte	.LFB28
 4200 00e4 44000000 		.4byte	.LFE28
 4201 00e8 00000000 		.4byte	.LFB29
 4202 00ec 44000000 		.4byte	.LFE29
 4203 00f0 00000000 		.4byte	.LFB30
 4204 00f4 48000000 		.4byte	.LFE30
 4205 00f8 00000000 		.4byte	.LFB31
 4206 00fc 44000000 		.4byte	.LFE31
 4207 0100 00000000 		.4byte	.LFB32
 4208 0104 44000000 		.4byte	.LFE32
 4209 0108 00000000 		.4byte	.LFB33
 4210 010c 3C000000 		.4byte	.LFE33
 4211 0110 00000000 		.4byte	.LFB34
 4212 0114 20000000 		.4byte	.LFE34
 4213 0118 00000000 		.4byte	.LFB35
 4214 011c 18000000 		.4byte	.LFE35
 4215 0120 00000000 		.4byte	.LFB36
 4216 0124 14000000 		.4byte	.LFE36
 4217 0128 00000000 		.4byte	.LFB37
 4218 012c 14000000 		.4byte	.LFE37
 4219 0130 00000000 		.4byte	.LFB38
 4220 0134 18000000 		.4byte	.LFE38
 4221 0138 00000000 		.4byte	.LFB39
 4222 013c 18000000 		.4byte	.LFE39
 4223 0140 00000000 		.4byte	0
 4224 0144 00000000 		.4byte	0
 4225              		.section	.debug_line,"",%progbits
 4226              	.Ldebug_line0:
 4227 0000 79030000 		.section	.debug_str,"MS",%progbits,1
 4227      02004700 
 4227      00000201 
 4227      FB0E0D00 
 4227      01010101 
 4228              	.LASF40:
 4229 0000 636F756E 		.ascii	"count\000"
 4229      7400
 4230              	.LASF79:
 4231 0006 50574D5F 		.ascii	"PWM_Fail_initVar\000"
 4231      4661696C 
 4231      5F696E69 
 4231      74566172 
 4231      00
 4232              	.LASF16:
 4233 0017 50574D5F 		.ascii	"PWM_Fail_Init\000"
 4233      4661696C 
 4233      5F496E69 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 100


 4233      7400
 4234              	.LASF58:
 4235 0025 50574D5F 		.ascii	"PWM_Fail_ReadCompareBuf\000"
 4235      4661696C 
 4235      5F526561 
 4235      64436F6D 
 4235      70617265 
 4236              	.LASF44:
 4237 003d 70657269 		.ascii	"period\000"
 4237      6F6400
 4238              	.LASF7:
 4239 0044 6C6F6E67 		.ascii	"long long unsigned int\000"
 4239      206C6F6E 
 4239      6720756E 
 4239      7369676E 
 4239      65642069 
 4240              	.LASF72:
 4241 005b 50574D5F 		.ascii	"PWM_Fail_GetInterruptSourceMasked\000"
 4241      4661696C 
 4241      5F476574 
 4241      496E7465 
 4241      72727570 
 4242              	.LASF24:
 4243 007d 71644D6F 		.ascii	"qdMode\000"
 4243      646500
 4244              	.LASF55:
 4245 0084 50574D5F 		.ascii	"PWM_Fail_ReadCompare\000"
 4245      4661696C 
 4245      5F526561 
 4245      64436F6D 
 4245      70617265 
 4246              	.LASF6:
 4247 0099 6C6F6E67 		.ascii	"long long int\000"
 4247      206C6F6E 
 4247      6720696E 
 4247      7400
 4248              	.LASF0:
 4249 00a7 7369676E 		.ascii	"signed char\000"
 4249      65642063 
 4249      68617200 
 4250              	.LASF25:
 4251 00b3 50574D5F 		.ascii	"PWM_Fail_SetPrescaler\000"
 4251      4661696C 
 4251      5F536574 
 4251      50726573 
 4251      63616C65 
 4252              	.LASF21:
 4253 00c9 50574D5F 		.ascii	"PWM_Fail_SetMode\000"
 4253      4661696C 
 4253      5F536574 
 4253      4D6F6465 
 4253      00
 4254              	.LASF4:
 4255 00da 6C6F6E67 		.ascii	"long int\000"
 4255      20696E74 
 4255      00
 4256              	.LASF73:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 101


 4257 00e3 50574D5F 		.ascii	"PWM_Fail_GetInterruptSource\000"
 4257      4661696C 
 4257      5F476574 
 4257      496E7465 
 4257      72727570 
 4258              	.LASF9:
 4259 00ff 75696E74 		.ascii	"uint8\000"
 4259      3800
 4260              	.LASF12:
 4261 0105 646F7562 		.ascii	"double\000"
 4261      6C6500
 4262              	.LASF45:
 4263 010c 50574D5F 		.ascii	"PWM_Fail_ReadCounter\000"
 4263      4661696C 
 4263      5F526561 
 4263      64436F75 
 4263      6E746572 
 4264              	.LASF10:
 4265 0121 75696E74 		.ascii	"uint32\000"
 4265      333200
 4266              	.LASF62:
 4267 0128 74726967 		.ascii	"triggerMode\000"
 4267      6765724D 
 4267      6F646500 
 4268              	.LASF49:
 4269 0134 50574D5F 		.ascii	"PWM_Fail_WritePeriodBuf\000"
 4269      4661696C 
 4269      5F577269 
 4269      74655065 
 4269      72696F64 
 4270              	.LASF38:
 4271 014c 6D61736B 		.ascii	"mask\000"
 4271      00
 4272              	.LASF36:
 4273 0151 64656164 		.ascii	"deadTime\000"
 4273      54696D65 
 4273      00
 4274              	.LASF27:
 4275 015a 50574D5F 		.ascii	"PWM_Fail_SetOneShot\000"
 4275      4661696C 
 4275      5F536574 
 4275      4F6E6553 
 4275      686F7400 
 4276              	.LASF8:
 4277 016e 756E7369 		.ascii	"unsigned int\000"
 4277      676E6564 
 4277      20696E74 
 4277      00
 4278              	.LASF68:
 4279 017b 636F6D6D 		.ascii	"command\000"
 4279      616E6400 
 4280              	.LASF5:
 4281 0183 6C6F6E67 		.ascii	"long unsigned int\000"
 4281      20756E73 
 4281      69676E65 
 4281      6420696E 
 4281      7400
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 102


 4282              	.LASF30:
 4283 0195 6D6F6465 		.ascii	"modeMask\000"
 4283      4D61736B 
 4283      00
 4284              	.LASF69:
 4285 019e 50574D5F 		.ascii	"PWM_Fail_ReadStatus\000"
 4285      4661696C 
 4285      5F526561 
 4285      64537461 
 4285      74757300 
 4286              	.LASF60:
 4287 01b2 50574D5F 		.ascii	"PWM_Fail_ReadCaptureBuf\000"
 4287      4661696C 
 4287      5F526561 
 4287      64436170 
 4287      74757265 
 4288              	.LASF3:
 4289 01ca 73686F72 		.ascii	"short unsigned int\000"
 4289      7420756E 
 4289      7369676E 
 4289      65642069 
 4289      6E7400
 4290              	.LASF63:
 4291 01dd 50574D5F 		.ascii	"PWM_Fail_SetReloadMode\000"
 4291      4661696C 
 4291      5F536574 
 4291      52656C6F 
 4291      61644D6F 
 4292              	.LASF28:
 4293 01f4 6F6E6553 		.ascii	"oneShotEnable\000"
 4293      686F7445 
 4293      6E61626C 
 4293      6500
 4294              	.LASF65:
 4295 0202 50574D5F 		.ascii	"PWM_Fail_SetStopMode\000"
 4295      4661696C 
 4295      5F536574 
 4295      53746F70 
 4295      4D6F6465 
 4296              	.LASF70:
 4297 0217 50574D5F 		.ascii	"PWM_Fail_SetInterruptMode\000"
 4297      4661696C 
 4297      5F536574 
 4297      496E7465 
 4297      72727570 
 4298              	.LASF14:
 4299 0231 72656733 		.ascii	"reg32\000"
 4299      3200
 4300              	.LASF15:
 4301 0237 73697A65 		.ascii	"sizetype\000"
 4301      74797065 
 4301      00
 4302              	.LASF75:
 4303 0240 50574D5F 		.ascii	"PWM_Fail_SetInterrupt\000"
 4303      4661696C 
 4303      5F536574 
 4303      496E7465 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 103


 4303      72727570 
 4304              	.LASF41:
 4305 0256 50574D5F 		.ascii	"PWM_Fail_SetCounterMode\000"
 4305      4661696C 
 4305      5F536574 
 4305      436F756E 
 4305      7465724D 
 4306              	.LASF32:
 4307 026e 73796E63 		.ascii	"syncKillEnable\000"
 4307      4B696C6C 
 4307      456E6162 
 4307      6C6500
 4308              	.LASF78:
 4309 027d 433A5C70 		.ascii	"C:\\perforce\\gjl_work\\apps\\CYSC\\Cypress_PSoC_Ac"
 4309      6572666F 
 4309      7263655C 
 4309      676A6C5F 
 4309      776F726B 
 4310 02ab 6164656D 		.ascii	"ademy\\101_basic\\Projects\\Simon_Rev03\\Simon_Slav"
 4310      795C3130 
 4310      315F6261 
 4310      7369635C 
 4310      50726F6A 
 4311 02da 655F5069 		.ascii	"e_Pioneer\\Simon_Slave_Pioneer.cydsn\000"
 4311      6F6E6565 
 4311      725C5369 
 4311      6D6F6E5F 
 4311      536C6176 
 4312              	.LASF54:
 4313 02fe 636F6D70 		.ascii	"compare\000"
 4313      61726500 
 4314              	.LASF46:
 4315 0306 50574D5F 		.ascii	"PWM_Fail_ReadPeriod\000"
 4315      4661696C 
 4315      5F526561 
 4315      64506572 
 4315      696F6400 
 4316              	.LASF43:
 4317 031a 50574D5F 		.ascii	"PWM_Fail_WritePeriod\000"
 4317      4661696C 
 4317      5F577269 
 4317      74655065 
 4317      72696F64 
 4318              	.LASF22:
 4319 032f 50574D5F 		.ascii	"PWM_Fail_SetQDMode\000"
 4319      4661696C 
 4319      5F536574 
 4319      51444D6F 
 4319      646500
 4320              	.LASF11:
 4321 0342 666C6F61 		.ascii	"float\000"
 4321      7400
 4322              	.LASF71:
 4323 0348 696E7465 		.ascii	"interruptMask\000"
 4323      72727570 
 4323      744D6173 
 4323      6B00
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 104


 4324              	.LASF26:
 4325 0356 70726573 		.ascii	"prescaler\000"
 4325      63616C65 
 4325      7200
 4326              	.LASF77:
 4327 0360 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_Fail.c\000"
 4327      6E657261 
 4327      7465645F 
 4327      536F7572 
 4327      63655C50 
 4328              	.LASF51:
 4329 0384 50574D5F 		.ascii	"PWM_Fail_ReadPeriodBuf\000"
 4329      4661696C 
 4329      5F526561 
 4329      64506572 
 4329      696F6442 
 4330              	.LASF76:
 4331 039b 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 4331      4320342E 
 4331      372E3320 
 4331      32303133 
 4331      30333132 
 4332 03ce 616E6368 		.ascii	"anch revision 196615]\000"
 4332      20726576 
 4332      6973696F 
 4332      6E203139 
 4332      36363135 
 4333              	.LASF66:
 4334 03e4 50574D5F 		.ascii	"PWM_Fail_SetCountMode\000"
 4334      4661696C 
 4334      5F536574 
 4334      436F756E 
 4334      744D6F64 
 4335              	.LASF61:
 4336 03fa 50574D5F 		.ascii	"PWM_Fail_SetCaptureMode\000"
 4336      4661696C 
 4336      5F536574 
 4336      43617074 
 4336      7572654D 
 4337              	.LASF1:
 4338 0412 756E7369 		.ascii	"unsigned char\000"
 4338      676E6564 
 4338      20636861 
 4338      7200
 4339              	.LASF19:
 4340 0420 50574D5F 		.ascii	"PWM_Fail_Stop\000"
 4340      4661696C 
 4340      5F53746F 
 4340      7000
 4341              	.LASF34:
 4342 042e 73746F70 		.ascii	"stopOnKillEnable\000"
 4342      4F6E4B69 
 4342      6C6C456E 
 4342      61626C65 
 4342      00
 4343              	.LASF2:
 4344 043f 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 105


 4344      7420696E 
 4344      7400
 4345              	.LASF52:
 4346 0449 50574D5F 		.ascii	"PWM_Fail_SetPeriodSwap\000"
 4346      4661696C 
 4346      5F536574 
 4346      50657269 
 4346      6F645377 
 4347              	.LASF64:
 4348 0460 50574D5F 		.ascii	"PWM_Fail_SetStartMode\000"
 4348      4661696C 
 4348      5F536574 
 4348      53746172 
 4348      744D6F64 
 4349              	.LASF53:
 4350 0476 50574D5F 		.ascii	"PWM_Fail_WriteCompare\000"
 4350      4661696C 
 4350      5F577269 
 4350      7465436F 
 4350      6D706172 
 4351              	.LASF59:
 4352 048c 50574D5F 		.ascii	"PWM_Fail_ReadCapture\000"
 4352      4661696C 
 4352      5F526561 
 4352      64436170 
 4352      74757265 
 4353              	.LASF29:
 4354 04a1 50574D5F 		.ascii	"PWM_Fail_SetPWMMode\000"
 4354      4661696C 
 4354      5F536574 
 4354      50574D4D 
 4354      6F646500 
 4355              	.LASF18:
 4356 04b5 50574D5F 		.ascii	"PWM_Fail_Enable\000"
 4356      4661696C 
 4356      5F456E61 
 4356      626C6500 
 4357              	.LASF13:
 4358 04c5 63686172 		.ascii	"char\000"
 4358      00
 4359              	.LASF23:
 4360 04ca 6D6F6465 		.ascii	"mode\000"
 4360      00
 4361              	.LASF47:
 4362 04cf 50574D5F 		.ascii	"PWM_Fail_SetCompareSwap\000"
 4362      4661696C 
 4362      5F536574 
 4362      436F6D70 
 4362      61726553 
 4363              	.LASF56:
 4364 04e7 50574D5F 		.ascii	"PWM_Fail_WriteCompareBuf\000"
 4364      4661696C 
 4364      5F577269 
 4364      7465436F 
 4364      6D706172 
 4365              	.LASF42:
 4366 0500 636F756E 		.ascii	"counterMode\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 106


 4366      7465724D 
 4366      6F646500 
 4367              	.LASF17:
 4368 050c 50574D5F 		.ascii	"PWM_Fail_Start\000"
 4368      4661696C 
 4368      5F537461 
 4368      727400
 4369              	.LASF57:
 4370 051b 636F6D70 		.ascii	"compareBuf\000"
 4370      61726542 
 4370      756600
 4371              	.LASF39:
 4372 0526 50574D5F 		.ascii	"PWM_Fail_WriteCounter\000"
 4372      4661696C 
 4372      5F577269 
 4372      7465436F 
 4372      756E7465 
 4373              	.LASF31:
 4374 053c 50574D5F 		.ascii	"PWM_Fail_SetPWMSyncKill\000"
 4374      4661696C 
 4374      5F536574 
 4374      50574D53 
 4374      796E634B 
 4375              	.LASF20:
 4376 0554 656E6162 		.ascii	"enableInterrupts\000"
 4376      6C65496E 
 4376      74657272 
 4376      75707473 
 4376      00
 4377              	.LASF33:
 4378 0565 50574D5F 		.ascii	"PWM_Fail_SetPWMStopOnKill\000"
 4378      4661696C 
 4378      5F536574 
 4378      50574D53 
 4378      746F704F 
 4379              	.LASF35:
 4380 057f 50574D5F 		.ascii	"PWM_Fail_SetPWMDeadTime\000"
 4380      4661696C 
 4380      5F536574 
 4380      50574D44 
 4380      65616454 
 4381              	.LASF48:
 4382 0597 73776170 		.ascii	"swapEnable\000"
 4382      456E6162 
 4382      6C6500
 4383              	.LASF67:
 4384 05a2 50574D5F 		.ascii	"PWM_Fail_TriggerCommand\000"
 4384      4661696C 
 4384      5F547269 
 4384      67676572 
 4384      436F6D6D 
 4385              	.LASF50:
 4386 05ba 70657269 		.ascii	"periodBuf\000"
 4386      6F644275 
 4386      6600
 4387              	.LASF37:
 4388 05c4 50574D5F 		.ascii	"PWM_Fail_SetPWMInvert\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccDa5X8H.s 			page 107


 4388      4661696C 
 4388      5F536574 
 4388      50574D49 
 4388      6E766572 
 4389              	.LASF74:
 4390 05da 50574D5F 		.ascii	"PWM_Fail_ClearInterrupt\000"
 4390      4661696C 
 4390      5F436C65 
 4390      6172496E 
 4390      74657272 
 4391              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
