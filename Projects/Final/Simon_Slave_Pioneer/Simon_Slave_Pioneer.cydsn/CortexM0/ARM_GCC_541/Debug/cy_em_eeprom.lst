ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_em_eeprom.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_Em_EEPROM_Init,"ax",%progbits
  20              		.align	2
  21              		.global	Cy_Em_EEPROM_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	Cy_Em_EEPROM_Init, %function
  25              	Cy_Em_EEPROM_Init:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\cy_em_eeprom.c"
   1:Generated_Source\PSoC4/cy_em_eeprom.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cy_em_eeprom.c **** * \file cy_em_eeprom.c
   3:Generated_Source\PSoC4/cy_em_eeprom.c **** * \version 2.0
   4:Generated_Source\PSoC4/cy_em_eeprom.c **** *
   5:Generated_Source\PSoC4/cy_em_eeprom.c **** * \brief
   6:Generated_Source\PSoC4/cy_em_eeprom.c **** *  This file provides source code of the API for the Emulated EEPROM library.
   7:Generated_Source\PSoC4/cy_em_eeprom.c **** *  The Emulated EEPROM API allows creating of an emulated EEPROM in flash that
   8:Generated_Source\PSoC4/cy_em_eeprom.c **** *  has the ability to do wear leveling and restore corrupted data from a
   9:Generated_Source\PSoC4/cy_em_eeprom.c **** *  redundant copy.
  10:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  11:Generated_Source\PSoC4/cy_em_eeprom.c **** ********************************************************************************
  12:Generated_Source\PSoC4/cy_em_eeprom.c **** * \copyright
  13:Generated_Source\PSoC4/cy_em_eeprom.c **** * Copyright 2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/cy_em_eeprom.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/cy_em_eeprom.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/cy_em_eeprom.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  19:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  20:Generated_Source\PSoC4/cy_em_eeprom.c **** #include "cytypes.h"
  21:Generated_Source\PSoC4/cy_em_eeprom.c **** #include <string.h>
  22:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  23:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC6)
  24:Generated_Source\PSoC4/cy_em_eeprom.c ****     #include "em_eeprom/cy_em_eeprom.h"
  25:Generated_Source\PSoC4/cy_em_eeprom.c **** #else
  26:Generated_Source\PSoC4/cy_em_eeprom.c ****     #include "cy_em_eeprom.h"
  27:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC6) */
  28:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  29:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  30:Generated_Source\PSoC4/cy_em_eeprom.c **** #if defined(__cplusplus)
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 2


  31:Generated_Source\PSoC4/cy_em_eeprom.c **** extern "C" {
  32:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif
  33:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  34:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  35:Generated_Source\PSoC4/cy_em_eeprom.c **** /***************************************
  36:Generated_Source\PSoC4/cy_em_eeprom.c **** * Private Function Prototypes
  37:Generated_Source\PSoC4/cy_em_eeprom.c **** ***************************************/
  38:Generated_Source\PSoC4/cy_em_eeprom.c **** static void FindLastWrittenRow(uint32 * lastWrRowPtr, cy_stc_eeprom_context_t * context);
  39:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetRowAddrBySeqNum(uint32 seqNum, cy_stc_eeprom_context_t * context);
  40:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint8 CalcChecksum(uint8 rowData[], uint32 len);
  41:Generated_Source\PSoC4/cy_em_eeprom.c **** static void GetNextRowToWrite(uint32 seqNum,
  42:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToWrPtr,
  43:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToRdPtr,
  44:Generated_Source\PSoC4/cy_em_eeprom.c ****                             cy_stc_eeprom_context_t * context);
  45:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckRanges(cy_stc_eeprom_config_t* config);
  46:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t WriteRow(uint32 rowAddr, uint32 *rowData, cy_stc_eeprom_context_t *
  47:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t EraseRow(uint32 rowAddr, uint32 ramBuffAddr, cy_stc_eeprom_context_
  48:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckCrcAndCopy(uint32 startAddr,
  49:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 dstAddr,
  50:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 rowOffset,
  51:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 numBytes,
  52:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 cy_stc_eeprom_context_t * context);
  53:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetAddresses(uint32 *startAddr, uint32 *endAddr, uint32 *offset, uint32 rowNum, uint3
  54:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t FillChecksum(cy_stc_eeprom_context_t * context);
  55:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  56:Generated_Source\PSoC4/cy_em_eeprom.c **** /**
  57:Generated_Source\PSoC4/cy_em_eeprom.c **** * \addtogroup group_em_eeprom_functions
  58:Generated_Source\PSoC4/cy_em_eeprom.c **** * \{
  59:Generated_Source\PSoC4/cy_em_eeprom.c **** */
  60:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  61:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
  62:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Init
  63:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
  64:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  65:Generated_Source\PSoC4/cy_em_eeprom.c **** * Initializes the Emulated EEPROM library by filling the context structure. 
  66:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  67:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param config
  68:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a configuration structure. See \ref cy_stc_eeprom_config_t.
  69:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  70:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
  71:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure to be filled by the function.
  72:Generated_Source\PSoC4/cy_em_eeprom.c **** * \ref cy_stc_eeprom_context_t.
  73:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  74:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
  75:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
  76:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  77:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
  78:Generated_Source\PSoC4/cy_em_eeprom.c **** * The context structure should not be modified by the user after it is filled
  79:Generated_Source\PSoC4/cy_em_eeprom.c **** * with this function. Modification of context structure may cause the 
  80:Generated_Source\PSoC4/cy_em_eeprom.c **** * unexpected behavior of the Cy_Em_EEPROM API functions which rely on it.
  81:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  82:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
  83:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
  84:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
  85:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
  86:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  87:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 3


  88:Generated_Source\PSoC4/cy_em_eeprom.c **** * If the "Redundant Copy" option is used, the function performs a number of 
  89:Generated_Source\PSoC4/cy_em_eeprom.c **** * write operations to the EEPROM to initialize flash rows checksums. Therefore,
  90:Generated_Source\PSoC4/cy_em_eeprom.c **** * Cy_Em_EEPROM_NumWrites(), when it is called right after Cy_Em_EEPROM_Init(), 
  91:Generated_Source\PSoC4/cy_em_eeprom.c **** * will return a non-zero value that identifies the number of writes performed 
  92:Generated_Source\PSoC4/cy_em_eeprom.c **** * by Cy_Em_EEPROM_Init().
  93:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  94:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Init(cy_stc_eeprom_config_t* config, cy_stc_eeprom_context_t 
  96:Generated_Source\PSoC4/cy_em_eeprom.c **** {
  28              		.loc 1 96 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              		.cfi_def_cfa_offset 32
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  42 0008 3960     		str	r1, [r7]
  97:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
  43              		.loc 1 97 0
  44 000a 0F23     		movs	r3, #15
  45 000c FB18     		adds	r3, r7, r3
  46 000e 0122     		movs	r2, #1
  47 0010 1A70     		strb	r2, [r3]
  98:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  99:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((NULL != context) && (NULL != config) && (NULL != ((uint32 *)config->userFlashStartAddr)) &&
  48              		.loc 1 99 0
  49 0012 3B68     		ldr	r3, [r7]
  50 0014 002B     		cmp	r3, #0
  51 0016 67D0     		beq	.L2
  52              		.loc 1 99 0 is_stmt 0 discriminator 1
  53 0018 7B68     		ldr	r3, [r7, #4]
  54 001a 002B     		cmp	r3, #0
  55 001c 64D0     		beq	.L2
  56              		.loc 1 99 0 discriminator 2
  57 001e 7B68     		ldr	r3, [r7, #4]
  58 0020 DB68     		ldr	r3, [r3, #12]
  59 0022 002B     		cmp	r3, #0
  60 0024 60D0     		beq	.L2
 100:Generated_Source\PSoC4/cy_em_eeprom.c ****         (config->wearLevelingFactor <= CY_EM_EEPROM_MAX_WEAR_LEVELING_FACTOR) && (config->eepromSiz
  61              		.loc 1 100 0 is_stmt 1 discriminator 3
  62 0026 7B68     		ldr	r3, [r7, #4]
  63 0028 5B68     		ldr	r3, [r3, #4]
  99:Generated_Source\PSoC4/cy_em_eeprom.c ****         (config->wearLevelingFactor <= CY_EM_EEPROM_MAX_WEAR_LEVELING_FACTOR) && (config->eepromSiz
  64              		.loc 1 99 0 discriminator 3
  65 002a 0A2B     		cmp	r3, #10
  66 002c 5CD8     		bhi	.L2
  67              		.loc 1 100 0
  68 002e 7B68     		ldr	r3, [r7, #4]
  69 0030 1B68     		ldr	r3, [r3]
  70 0032 002B     		cmp	r3, #0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 4


  71 0034 58D0     		beq	.L2
 101:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 102:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CheckRanges(config);
  72              		.loc 1 102 0
  73 0036 0F23     		movs	r3, #15
  74 0038 FC18     		adds	r4, r7, r3
  75 003a 7B68     		ldr	r3, [r7, #4]
  76 003c 1800     		movs	r0, r3
  77 003e FFF7FEFF 		bl	CheckRanges
  78 0042 0300     		movs	r3, r0
  79 0044 2370     		strb	r3, [r4]
 103:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 104:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
  80              		.loc 1 104 0
  81 0046 0F23     		movs	r3, #15
  82 0048 FB18     		adds	r3, r7, r3
  83 004a 1B78     		ldrb	r3, [r3]
  84 004c 002B     		cmp	r3, #0
  85 004e 4BD1     		bne	.L2
 105:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 106:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Copy the user config structure fields into context */
 107:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->eepromSize = config->eepromSize;
  86              		.loc 1 107 0
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1A68     		ldr	r2, [r3]
  89 0054 3B68     		ldr	r3, [r7]
  90 0056 DA60     		str	r2, [r3, #12]
 108:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wearLevelingFactor = config->wearLevelingFactor;
  91              		.loc 1 108 0
  92 0058 7B68     		ldr	r3, [r7, #4]
  93 005a 5A68     		ldr	r2, [r3, #4]
  94 005c 3B68     		ldr	r3, [r7]
  95 005e 1A61     		str	r2, [r3, #16]
 109:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->redundantCopy = config->redundantCopy;
  96              		.loc 1 109 0
  97 0060 7B68     		ldr	r3, [r7, #4]
  98 0062 1A7A     		ldrb	r2, [r3, #8]
  99 0064 3B68     		ldr	r3, [r7]
 100 0066 1A75     		strb	r2, [r3, #20]
 110:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->blockingWrite = config->blockingWrite;
 101              		.loc 1 110 0
 102 0068 7B68     		ldr	r3, [r7, #4]
 103 006a 5A7A     		ldrb	r2, [r3, #9]
 104 006c 3B68     		ldr	r3, [r7]
 105 006e 5A75     		strb	r2, [r3, #21]
 111:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->userFlashStartAddr = config->userFlashStartAddr;
 106              		.loc 1 111 0
 107 0070 7B68     		ldr	r3, [r7, #4]
 108 0072 DA68     		ldr	r2, [r3, #12]
 109 0074 3B68     		ldr	r3, [r7]
 110 0076 9A61     		str	r2, [r3, #24]
 112:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Store frequently used data for internal use */
 113:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->numberOfRows = CY_EM_EEPROM_GET_NUM_ROWS_IN_EEPROM(config->eepromSize);
 111              		.loc 1 113 0
 112 0078 7B68     		ldr	r3, [r7, #4]
 113 007a 1B68     		ldr	r3, [r3]
 114 007c 9A09     		lsrs	r2, r3, #6
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 5


 115 007e 7B68     		ldr	r3, [r7, #4]
 116 0080 1B68     		ldr	r3, [r3]
 117 0082 3F21     		movs	r1, #63
 118 0084 0B40     		ands	r3, r1
 119 0086 01D0     		beq	.L3
 120              		.loc 1 113 0 is_stmt 0 discriminator 1
 121 0088 0123     		movs	r3, #1
 122 008a 00E0     		b	.L4
 123              	.L3:
 124              		.loc 1 113 0 discriminator 2
 125 008c 0023     		movs	r3, #0
 126              	.L4:
 127              		.loc 1 113 0 discriminator 4
 128 008e D218     		adds	r2, r2, r3
 129 0090 3B68     		ldr	r3, [r7]
 130 0092 5A60     		str	r2, [r3, #4]
 114:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wlEndAddr = ((CY_EM_EEPROM_GET_EEPROM_SIZE(context->numberOfRows) * config->we
 131              		.loc 1 114 0 is_stmt 1 discriminator 4
 132 0094 3B68     		ldr	r3, [r7]
 133 0096 5A68     		ldr	r2, [r3, #4]
 134 0098 7B68     		ldr	r3, [r7, #4]
 135 009a 5B68     		ldr	r3, [r3, #4]
 136 009c 5343     		muls	r3, r2
 137 009e DA01     		lsls	r2, r3, #7
 115:Generated_Source\PSoC4/cy_em_eeprom.c ****                     config->userFlashStartAddr);
 138              		.loc 1 115 0 discriminator 4
 139 00a0 7B68     		ldr	r3, [r7, #4]
 140 00a2 DB68     		ldr	r3, [r3, #12]
 114:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wlEndAddr = ((CY_EM_EEPROM_GET_EEPROM_SIZE(context->numberOfRows) * config->we
 141              		.loc 1 114 0 discriminator 4
 142 00a4 D218     		adds	r2, r2, r3
 143 00a6 3B68     		ldr	r3, [r7]
 144 00a8 1A60     		str	r2, [r3]
 116:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Find last written EEPROM row and store it for quick access */
 117:Generated_Source\PSoC4/cy_em_eeprom.c ****             FindLastWrittenRow(&context->lastWrRowAddr, context);
 145              		.loc 1 117 0 discriminator 4
 146 00aa 3B68     		ldr	r3, [r7]
 147 00ac 0833     		adds	r3, r3, #8
 148 00ae 3A68     		ldr	r2, [r7]
 149 00b0 1100     		movs	r1, r2
 150 00b2 1800     		movs	r0, r3
 151 00b4 FFF7FEFF 		bl	FindLastWrittenRow
 118:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 119:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((0u == CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr)) && (0u != context->redundan
 152              		.loc 1 119 0 discriminator 4
 153 00b8 3B68     		ldr	r3, [r7]
 154 00ba 9B68     		ldr	r3, [r3, #8]
 155 00bc 1B68     		ldr	r3, [r3]
 156 00be 002B     		cmp	r3, #0
 157 00c0 12D1     		bne	.L2
 158              		.loc 1 119 0 is_stmt 0 discriminator 1
 159 00c2 3B68     		ldr	r3, [r7]
 160 00c4 1B7D     		ldrb	r3, [r3, #20]
 161 00c6 002B     		cmp	r3, #0
 162 00c8 0ED0     		beq	.L2
 120:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 121:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Call the function only after device reprogramming in case
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 6


 122:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * if redundant copy is enabled.
 123:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 124:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = FillChecksum(context);
 163              		.loc 1 124 0 is_stmt 1
 164 00ca 0F23     		movs	r3, #15
 165 00cc FC18     		adds	r4, r7, r3
 166 00ce 3B68     		ldr	r3, [r7]
 167 00d0 1800     		movs	r0, r3
 168 00d2 FFF7FEFF 		bl	FillChecksum
 169 00d6 0300     		movs	r3, r0
 170 00d8 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/cy_em_eeprom.c ****                 
 126:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Update the last written EEPROM row for Cy_Em_EEPROM_NumWrites() */
 127:Generated_Source\PSoC4/cy_em_eeprom.c ****                 FindLastWrittenRow(&context->lastWrRowAddr, context);
 171              		.loc 1 127 0
 172 00da 3B68     		ldr	r3, [r7]
 173 00dc 0833     		adds	r3, r3, #8
 174 00de 3A68     		ldr	r2, [r7]
 175 00e0 1100     		movs	r1, r2
 176 00e2 1800     		movs	r0, r3
 177 00e4 FFF7FEFF 		bl	FindLastWrittenRow
 178              	.L2:
 128:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 129:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 130:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 131:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 132:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 179              		.loc 1 132 0
 180 00e8 0F23     		movs	r3, #15
 181 00ea FB18     		adds	r3, r7, r3
 182 00ec 1B78     		ldrb	r3, [r3]
 133:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 183              		.loc 1 133 0
 184 00ee 1800     		movs	r0, r3
 185 00f0 BD46     		mov	sp, r7
 186 00f2 05B0     		add	sp, sp, #20
 187              		@ sp needed
 188 00f4 90BD     		pop	{r4, r7, pc}
 189              		.cfi_endproc
 190              	.LFE0:
 191              		.size	Cy_Em_EEPROM_Init, .-Cy_Em_EEPROM_Init
 192              		.global	__aeabi_uidiv
 193 00f6 C046     		.section	.text.Cy_Em_EEPROM_Read,"ax",%progbits
 194              		.align	2
 195              		.global	Cy_Em_EEPROM_Read
 196              		.code	16
 197              		.thumb_func
 198              		.type	Cy_Em_EEPROM_Read, %function
 199              	Cy_Em_EEPROM_Read:
 200              	.LFB1:
 134:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 135:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 136:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 137:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Read
 138:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 139:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 140:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function takes the logical EEPROM address, converts it to the actual
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 7


 141:Generated_Source\PSoC4/cy_em_eeprom.c **** * physical address where the data is stored and returns the data to the user.
 142:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 143:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
 144:Generated_Source\PSoC4/cy_em_eeprom.c **** * The logical start address in EEPROM to start reading data from.
 145:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 146:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param eepromData
 147:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a user array to write data to.
 148:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 149:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param size
 150:Generated_Source\PSoC4/cy_em_eeprom.c **** * The amount of data to read.
 151:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 152:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 153:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 154:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 155:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 156:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 157:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 158:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 159:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
 160:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 161:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 162:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 163:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 164:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if redundant copy option is enabled the function may perform writes
 165:Generated_Source\PSoC4/cy_em_eeprom.c **** * to EEPROM. This is done in case if the data in the EEPPROM is corrupted and
 166:Generated_Source\PSoC4/cy_em_eeprom.c **** * the data in redundant copy is valid based on CRC-8 data integrity check.
 167:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 168:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 169:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Read(uint32 addr, 
 170:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         void * eepromData, 
 171:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         uint32 size,
 172:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
 173:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 201              		.loc 1 173 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 96
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205 0000 B0B5     		push	{r4, r5, r7, lr}
 206              		.cfi_def_cfa_offset 16
 207              		.cfi_offset 4, -16
 208              		.cfi_offset 5, -12
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 9AB0     		sub	sp, sp, #104
 212              		.cfi_def_cfa_offset 120
 213 0004 02AF     		add	r7, sp, #8
 214              		.cfi_def_cfa 7, 112
 215 0006 F860     		str	r0, [r7, #12]
 216 0008 B960     		str	r1, [r7, #8]
 217 000a 7A60     		str	r2, [r7, #4]
 218 000c 3B60     		str	r3, [r7]
 174:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 219              		.loc 1 174 0
 220 000e 5F23     		movs	r3, #95
 221 0010 FB18     		adds	r3, r7, r3
 222 0012 0122     		movs	r2, #1
 223 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 8


 175:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 176:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 numBytesToRead;
 177:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curEepromBaseAddr;
 178:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curRowOffset;
 179:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startRowAddr;
 180:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 actEepromRowNum;
 181:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curRdEepromRowNum = 0u;
 224              		.loc 1 181 0
 225 0016 0023     		movs	r3, #0
 226 0018 FB64     		str	r3, [r7, #76]
 182:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 dataStartEepromRowNum = 0u;
 227              		.loc 1 182 0
 228 001a 0023     		movs	r3, #0
 229 001c BB64     		str	r3, [r7, #72]
 183:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 eeData = (uint32) eepromData; /* To avoid the pointer arithmetic with void */
 230              		.loc 1 183 0
 231 001e BB68     		ldr	r3, [r7, #8]
 232 0020 7B64     		str	r3, [r7, #68]
 184:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 185:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Validate input parameters */
 186:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((0u != size) && ((addr + size) <= (context->eepromSize)) && (NULL != eepromData))
 233              		.loc 1 186 0
 234 0022 7B68     		ldr	r3, [r7, #4]
 235 0024 002B     		cmp	r3, #0
 236 0026 00D1     		bne	.LCB175
 237 0028 78E1     		b	.L7	@long jump
 238              	.LCB175:
 239              		.loc 1 186 0 is_stmt 0 discriminator 1
 240 002a FA68     		ldr	r2, [r7, #12]
 241 002c 7B68     		ldr	r3, [r7, #4]
 242 002e D218     		adds	r2, r2, r3
 243 0030 3B68     		ldr	r3, [r7]
 244 0032 DB68     		ldr	r3, [r3, #12]
 245 0034 9A42     		cmp	r2, r3
 246 0036 00D9     		bls	.LCB182
 247 0038 70E1     		b	.L7	@long jump
 248              	.LCB182:
 249              		.loc 1 186 0 discriminator 2
 250 003a BB68     		ldr	r3, [r7, #8]
 251 003c 002B     		cmp	r3, #0
 252 003e 00D1     		bne	.LCB185
 253 0040 6CE1     		b	.L7	@long jump
 254              	.LCB185:
 255              	.LBB2:
 187:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 188:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 rdAddr = addr;
 256              		.loc 1 188 0 is_stmt 1
 257 0042 FB68     		ldr	r3, [r7, #12]
 258 0044 3B64     		str	r3, [r7, #64]
 189:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 rdSize = size;
 259              		.loc 1 189 0
 260 0046 7B68     		ldr	r3, [r7, #4]
 261 0048 FB63     		str	r3, [r7, #60]
 190:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Get the sequence number of the last written row */
 191:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr);
 262              		.loc 1 191 0
 263 004a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 9


 264 004c 9B68     		ldr	r3, [r3, #8]
 265 004e 1B68     		ldr	r3, [r3]
 266 0050 7B63     		str	r3, [r7, #52]
 192:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 updateAddrFlag = 0u;
 267              		.loc 1 192 0
 268 0052 0023     		movs	r3, #0
 269 0054 BB63     		str	r3, [r7, #56]
 193:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 194:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Calculate the number of the row read operations. Currently this only concerns
 195:Generated_Source\PSoC4/cy_em_eeprom.c ****         * the reads from the EEPROM data locations.
 196:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
 197:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 numRowReads = ((((rdAddr + rdSize) - 1u) / CY_EM_EEPROM_EEPROM_DATA_LEN) -
 270              		.loc 1 197 0
 271 0056 3A6C     		ldr	r2, [r7, #64]
 272 0058 FB6B     		ldr	r3, [r7, #60]
 273 005a D318     		adds	r3, r2, r3
 274 005c 013B     		subs	r3, r3, #1
 275 005e 9A09     		lsrs	r2, r3, #6
 198:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (rdAddr / CY_EM_EEPROM_EEPROM_DATA_LEN)) + 1u;
 276              		.loc 1 198 0
 277 0060 3B6C     		ldr	r3, [r7, #64]
 278 0062 9B09     		lsrs	r3, r3, #6
 197:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (rdAddr / CY_EM_EEPROM_EEPROM_DATA_LEN)) + 1u;
 279              		.loc 1 197 0
 280 0064 D31A     		subs	r3, r2, r3
 281 0066 0133     		adds	r3, r3, #1
 282 0068 3B63     		str	r3, [r7, #48]
 199:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 200:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Get the address of the first row of the currently active EEPROM sector. If
 201:Generated_Source\PSoC4/cy_em_eeprom.c ****         * no wear leveling is used - the EEPROM has only one sector, so use the base
 202:Generated_Source\PSoC4/cy_em_eeprom.c ****         * addr stored in "context->userFlashStartAddr".
 203:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
 204:Generated_Source\PSoC4/cy_em_eeprom.c ****         curEepromBaseAddr = (((context->lastWrRowAddr - context->userFlashStartAddr) /
 283              		.loc 1 204 0
 284 006a 3B68     		ldr	r3, [r7]
 285 006c 9A68     		ldr	r2, [r3, #8]
 286 006e 3B68     		ldr	r3, [r7]
 287 0070 9B69     		ldr	r3, [r3, #24]
 288 0072 D21A     		subs	r2, r2, r3
 205:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 289              		.loc 1 205 0
 290 0074 3B68     		ldr	r3, [r7]
 291 0076 5B68     		ldr	r3, [r3, #4]
 292 0078 DB01     		lsls	r3, r3, #7
 204:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 293              		.loc 1 204 0
 294 007a 1900     		movs	r1, r3
 295 007c 1000     		movs	r0, r2
 296 007e FFF7FEFF 		bl	__aeabi_uidiv
 297 0082 0300     		movs	r3, r0
 298 0084 1A00     		movs	r2, r3
 206:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) +
 299              		.loc 1 206 0
 300 0086 3B68     		ldr	r3, [r7]
 301 0088 5B68     		ldr	r3, [r3, #4]
 205:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 302              		.loc 1 205 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 10


 303 008a 5343     		muls	r3, r2
 304 008c DA01     		lsls	r2, r3, #7
 207:Generated_Source\PSoC4/cy_em_eeprom.c ****                                context->userFlashStartAddr;
 305              		.loc 1 207 0
 306 008e 3B68     		ldr	r3, [r7]
 307 0090 9B69     		ldr	r3, [r3, #24]
 204:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 308              		.loc 1 204 0
 309 0092 D318     		adds	r3, r2, r3
 310 0094 FB62     		str	r3, [r7, #44]
 208:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 209:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Find the number of the row that contains the start address of the data */
 210:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(i = 0u; i < context->numberOfRows; i++)
 311              		.loc 1 210 0
 312 0096 0023     		movs	r3, #0
 313 0098 BB65     		str	r3, [r7, #88]
 314 009a 18E0     		b	.L8
 315              	.L13:
 211:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 212:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(rdAddr, i))
 316              		.loc 1 212 0
 317 009c BB6D     		ldr	r3, [r7, #88]
 318 009e 9A01     		lsls	r2, r3, #6
 319 00a0 3B6C     		ldr	r3, [r7, #64]
 320 00a2 9A42     		cmp	r2, r3
 321 00a4 08D8     		bhi	.L9
 322              		.loc 1 212 0 is_stmt 0 discriminator 1
 323 00a6 BB6D     		ldr	r3, [r7, #88]
 324 00a8 0133     		adds	r3, r3, #1
 325 00aa 9B01     		lsls	r3, r3, #6
 326 00ac 5A1E     		subs	r2, r3, #1
 327 00ae 3B6C     		ldr	r3, [r7, #64]
 328 00b0 9A42     		cmp	r2, r3
 329 00b2 01D3     		bcc	.L9
 330              		.loc 1 212 0 discriminator 3
 331 00b4 0123     		movs	r3, #1
 332 00b6 00E0     		b	.L10
 333              	.L9:
 334              		.loc 1 212 0 discriminator 4
 335 00b8 0023     		movs	r3, #0
 336              	.L10:
 337              		.loc 1 212 0 discriminator 6
 338 00ba 002B     		cmp	r3, #0
 339 00bc 04D0     		beq	.L11
 213:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 214:Generated_Source\PSoC4/cy_em_eeprom.c ****                 dataStartEepromRowNum = i;
 340              		.loc 1 214 0 is_stmt 1
 341 00be BB6D     		ldr	r3, [r7, #88]
 342 00c0 BB64     		str	r3, [r7, #72]
 215:Generated_Source\PSoC4/cy_em_eeprom.c ****                 curRdEepromRowNum = dataStartEepromRowNum;
 343              		.loc 1 215 0
 344 00c2 BB6C     		ldr	r3, [r7, #72]
 345 00c4 FB64     		str	r3, [r7, #76]
 216:Generated_Source\PSoC4/cy_em_eeprom.c ****                 break;
 346              		.loc 1 216 0
 347 00c6 07E0     		b	.L12
 348              	.L11:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 11


 210:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 349              		.loc 1 210 0 discriminator 2
 350 00c8 BB6D     		ldr	r3, [r7, #88]
 351 00ca 0133     		adds	r3, r3, #1
 352 00cc BB65     		str	r3, [r7, #88]
 353              	.L8:
 210:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 354              		.loc 1 210 0 is_stmt 0 discriminator 1
 355 00ce 3B68     		ldr	r3, [r7]
 356 00d0 5A68     		ldr	r2, [r3, #4]
 357 00d2 BB6D     		ldr	r3, [r7, #88]
 358 00d4 9A42     		cmp	r2, r3
 359 00d6 E1D8     		bhi	.L13
 360              	.L12:
 217:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 218:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 219:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 220:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Find the row number of the last written row */
 221:Generated_Source\PSoC4/cy_em_eeprom.c ****         actEepromRowNum = (context->lastWrRowAddr - curEepromBaseAddr) / CY_EM_EEPROM_FLASH_SIZEOF_
 361              		.loc 1 221 0 is_stmt 1
 362 00d8 3B68     		ldr	r3, [r7]
 363 00da 9A68     		ldr	r2, [r3, #8]
 364 00dc FB6A     		ldr	r3, [r7, #44]
 365 00de D31A     		subs	r3, r2, r3
 366 00e0 DB09     		lsrs	r3, r3, #7
 367 00e2 BB62     		str	r3, [r7, #40]
 222:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 223:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Check if wear leveling is used */
 224:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(context->wearLevelingFactor > 1u)
 368              		.loc 1 224 0
 369 00e4 3B68     		ldr	r3, [r7]
 370 00e6 1B69     		ldr	r3, [r3, #16]
 371 00e8 012B     		cmp	r3, #1
 372 00ea 12D9     		bls	.L14
 373              	.LBB3:
 225:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 226:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 dataEndEepromRowNum = dataStartEepromRowNum + (numRowReads - 1u);
 374              		.loc 1 226 0
 375 00ec 3A6B     		ldr	r2, [r7, #48]
 376 00ee BB6C     		ldr	r3, [r7, #72]
 377 00f0 D318     		adds	r3, r2, r3
 378 00f2 013B     		subs	r3, r3, #1
 379 00f4 7B62     		str	r3, [r7, #36]
 227:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 228:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if the future validation of the read address is required. */
 229:Generated_Source\PSoC4/cy_em_eeprom.c ****             updateAddrFlag = (dataStartEepromRowNum > actEepromRowNum) ? 1u :
 380              		.loc 1 229 0
 381 00f6 BA6C     		ldr	r2, [r7, #72]
 382 00f8 BB6A     		ldr	r3, [r7, #40]
 383 00fa 9A42     		cmp	r2, r3
 384 00fc 07D8     		bhi	.L15
 385              		.loc 1 229 0 is_stmt 0 discriminator 1
 386 00fe 7A6A     		ldr	r2, [r7, #36]
 387 0100 BB6A     		ldr	r3, [r7, #40]
 388 0102 9A42     		cmp	r2, r3
 389 0104 01D9     		bls	.L16
 390              		.loc 1 229 0 discriminator 3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 12


 391 0106 0123     		movs	r3, #1
 392 0108 02E0     		b	.L18
 393              	.L16:
 394              		.loc 1 229 0 discriminator 4
 395 010a 0023     		movs	r3, #0
 396 010c 00E0     		b	.L18
 397              	.L15:
 398              		.loc 1 229 0 discriminator 2
 399 010e 0123     		movs	r3, #1
 400              	.L18:
 401              		.loc 1 229 0 discriminator 8
 402 0110 BB63     		str	r3, [r7, #56]
 403              	.L14:
 404              	.LBE3:
 230:Generated_Source\PSoC4/cy_em_eeprom.c ****                               ((dataEndEepromRowNum > actEepromRowNum) ? 1u : 0u);
 231:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 232:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 233:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Copy data from the EEPROM data locations to the user buffer */
 234:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(i = 0u; i < numRowReads; i++)
 405              		.loc 1 234 0 is_stmt 1
 406 0112 0023     		movs	r3, #0
 407 0114 BB65     		str	r3, [r7, #88]
 408 0116 68E0     		b	.L19
 409              	.L26:
 235:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 236:Generated_Source\PSoC4/cy_em_eeprom.c ****             startRowAddr = curEepromBaseAddr + (curRdEepromRowNum * CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 410              		.loc 1 236 0
 411 0118 FB6C     		ldr	r3, [r7, #76]
 412 011a DA01     		lsls	r2, r3, #7
 413 011c FB6A     		ldr	r3, [r7, #44]
 414 011e D318     		adds	r3, r2, r3
 415 0120 3B65     		str	r3, [r7, #80]
 237:Generated_Source\PSoC4/cy_em_eeprom.c ****             curRowOffset = CY_EM_EEPROM_EEPROM_DATA_LEN + (rdAddr % CY_EM_EEPROM_EEPROM_DATA_LEN);
 416              		.loc 1 237 0
 417 0122 3B6C     		ldr	r3, [r7, #64]
 418 0124 3F22     		movs	r2, #63
 419 0126 1340     		ands	r3, r2
 420 0128 4033     		adds	r3, r3, #64
 421 012a 3B62     		str	r3, [r7, #32]
 238:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 239:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if there are more reads pending and update the number of the
 240:Generated_Source\PSoC4/cy_em_eeprom.c ****             * remaining bytes to read respectively.
 241:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 242:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((i + 1u) < numRowReads)
 422              		.loc 1 242 0
 423 012c BB6D     		ldr	r3, [r7, #88]
 424 012e 5A1C     		adds	r2, r3, #1
 425 0130 3B6B     		ldr	r3, [r7, #48]
 426 0132 9A42     		cmp	r2, r3
 427 0134 06D2     		bcs	.L20
 243:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 244:Generated_Source\PSoC4/cy_em_eeprom.c ****                 numBytesToRead = CY_EM_EEPROM_EEPROM_DATA_LEN - (rdAddr % CY_EM_EEPROM_EEPROM_DATA_
 428              		.loc 1 244 0
 429 0136 3B6C     		ldr	r3, [r7, #64]
 430 0138 3F22     		movs	r2, #63
 431 013a 1340     		ands	r3, r2
 432 013c 4022     		movs	r2, #64
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 13


 433 013e D31A     		subs	r3, r2, r3
 434 0140 7B65     		str	r3, [r7, #84]
 435 0142 01E0     		b	.L21
 436              	.L20:
 245:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 246:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 247:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 248:Generated_Source\PSoC4/cy_em_eeprom.c ****                 numBytesToRead = rdSize;
 437              		.loc 1 248 0
 438 0144 FB6B     		ldr	r3, [r7, #60]
 439 0146 7B65     		str	r3, [r7, #84]
 440              	.L21:
 249:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 250:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 251:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if the read address needs to be updated to point to the correct
 252:Generated_Source\PSoC4/cy_em_eeprom.c ****             * EEPROM sector.
 253:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 254:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((0u != updateAddrFlag) && (curRdEepromRowNum > actEepromRowNum))
 441              		.loc 1 254 0
 442 0148 BB6B     		ldr	r3, [r7, #56]
 443 014a 002B     		cmp	r3, #0
 444 014c 17D0     		beq	.L22
 445              		.loc 1 254 0 is_stmt 0 discriminator 1
 446 014e FA6C     		ldr	r2, [r7, #76]
 447 0150 BB6A     		ldr	r3, [r7, #40]
 448 0152 9A42     		cmp	r2, r3
 449 0154 13D9     		bls	.L22
 255:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 256:Generated_Source\PSoC4/cy_em_eeprom.c ****                 startRowAddr -= context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 450              		.loc 1 256 0 is_stmt 1
 451 0156 3B68     		ldr	r3, [r7]
 452 0158 5B68     		ldr	r3, [r3, #4]
 453 015a DB01     		lsls	r3, r3, #7
 454 015c 3A6D     		ldr	r2, [r7, #80]
 455 015e D31A     		subs	r3, r2, r3
 456 0160 3B65     		str	r3, [r7, #80]
 257:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 258:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(startRowAddr < context->userFlashStartAddr)
 457              		.loc 1 258 0
 458 0162 3B68     		ldr	r3, [r7]
 459 0164 9A69     		ldr	r2, [r3, #24]
 460 0166 3B6D     		ldr	r3, [r7, #80]
 461 0168 9A42     		cmp	r2, r3
 462 016a 08D9     		bls	.L22
 259:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 260:Generated_Source\PSoC4/cy_em_eeprom.c ****                     startRowAddr = context->wlEndAddr -
 463              		.loc 1 260 0
 464 016c 3B68     		ldr	r3, [r7]
 465 016e 1A68     		ldr	r2, [r3]
 261:Generated_Source\PSoC4/cy_em_eeprom.c ****                         ((context->numberOfRows - curRdEepromRowNum) * CY_EM_EEPROM_FLASH_SIZEOF_RO
 466              		.loc 1 261 0
 467 0170 3B68     		ldr	r3, [r7]
 468 0172 5968     		ldr	r1, [r3, #4]
 469 0174 FB6C     		ldr	r3, [r7, #76]
 470 0176 CB1A     		subs	r3, r1, r3
 471 0178 DB01     		lsls	r3, r3, #7
 260:Generated_Source\PSoC4/cy_em_eeprom.c ****                         ((context->numberOfRows - curRdEepromRowNum) * CY_EM_EEPROM_FLASH_SIZEOF_RO
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 14


 472              		.loc 1 260 0
 473 017a D31A     		subs	r3, r2, r3
 474 017c 3B65     		str	r3, [r7, #80]
 475              	.L22:
 262:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 263:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 264:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 265:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u != context->redundantCopy)
 476              		.loc 1 265 0
 477 017e 3B68     		ldr	r3, [r7]
 478 0180 1B7D     		ldrb	r3, [r3, #20]
 479 0182 002B     		cmp	r3, #0
 480 0184 12D0     		beq	.L23
 266:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 267:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Check a checksum of the EEPROM row and if it is bad, check a checksum in
 268:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * the corresponding row in redundant copy, otherwise return failure.
 269:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 270:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CheckCrcAndCopy(startRowAddr, eeData, curRowOffset, numBytesToRead, context);
 481              		.loc 1 270 0
 482 0186 5F23     		movs	r3, #95
 483 0188 FC18     		adds	r4, r7, r3
 484 018a 7D6D     		ldr	r5, [r7, #84]
 485 018c 3A6A     		ldr	r2, [r7, #32]
 486 018e 796C     		ldr	r1, [r7, #68]
 487 0190 386D     		ldr	r0, [r7, #80]
 488 0192 3B68     		ldr	r3, [r7]
 489 0194 0093     		str	r3, [sp]
 490 0196 2B00     		movs	r3, r5
 491 0198 FFF7FEFF 		bl	CheckCrcAndCopy
 492 019c 0300     		movs	r3, r0
 493 019e 2370     		strb	r3, [r4]
 271:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 272:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(CY_EM_EEPROM_SUCCESS != ret)
 494              		.loc 1 272 0
 495 01a0 5F23     		movs	r3, #95
 496 01a2 FB18     		adds	r3, r7, r3
 497 01a4 1B78     		ldrb	r3, [r3]
 498 01a6 002B     		cmp	r3, #0
 499 01a8 0DD0     		beq	.L24
 273:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 274:Generated_Source\PSoC4/cy_em_eeprom.c ****                     break;
 500              		.loc 1 274 0
 501 01aa 22E0     		b	.L25
 502              	.L23:
 275:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 276:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 277:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 278:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 279:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Copy the data to the user buffer */
 280:Generated_Source\PSoC4/cy_em_eeprom.c ****                 (void)memcpy((void *)(eeData),
 503              		.loc 1 280 0
 504 01ac 786C     		ldr	r0, [r7, #68]
 281:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(startRowAddr + curRowOffset),
 505              		.loc 1 281 0
 506 01ae 3A6D     		ldr	r2, [r7, #80]
 507 01b0 3B6A     		ldr	r3, [r7, #32]
 508 01b2 D318     		adds	r3, r2, r3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 15


 280:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(startRowAddr + curRowOffset),
 509              		.loc 1 280 0
 510 01b4 1900     		movs	r1, r3
 511 01b6 7B6D     		ldr	r3, [r7, #84]
 512 01b8 1A00     		movs	r2, r3
 513 01ba FFF7FEFF 		bl	memcpy
 282:Generated_Source\PSoC4/cy_em_eeprom.c ****                              numBytesToRead);
 283:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 284:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Indicate success to be able to execute next code block */
 285:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
 514              		.loc 1 285 0
 515 01be 5F23     		movs	r3, #95
 516 01c0 FB18     		adds	r3, r7, r3
 517 01c2 0022     		movs	r2, #0
 518 01c4 1A70     		strb	r2, [r3]
 519              	.L24:
 286:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 287:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 288:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Update variables anticipated in the read operation */
 289:Generated_Source\PSoC4/cy_em_eeprom.c ****             rdAddr += numBytesToRead;
 520              		.loc 1 289 0 discriminator 2
 521 01c6 3A6C     		ldr	r2, [r7, #64]
 522 01c8 7B6D     		ldr	r3, [r7, #84]
 523 01ca D318     		adds	r3, r2, r3
 524 01cc 3B64     		str	r3, [r7, #64]
 290:Generated_Source\PSoC4/cy_em_eeprom.c ****             rdSize -= numBytesToRead;
 525              		.loc 1 290 0 discriminator 2
 526 01ce FA6B     		ldr	r2, [r7, #60]
 527 01d0 7B6D     		ldr	r3, [r7, #84]
 528 01d2 D31A     		subs	r3, r2, r3
 529 01d4 FB63     		str	r3, [r7, #60]
 291:Generated_Source\PSoC4/cy_em_eeprom.c ****             eeData += numBytesToRead;
 530              		.loc 1 291 0 discriminator 2
 531 01d6 7A6C     		ldr	r2, [r7, #68]
 532 01d8 7B6D     		ldr	r3, [r7, #84]
 533 01da D318     		adds	r3, r2, r3
 534 01dc 7B64     		str	r3, [r7, #68]
 292:Generated_Source\PSoC4/cy_em_eeprom.c ****             curRdEepromRowNum++;
 535              		.loc 1 292 0 discriminator 2
 536 01de FB6C     		ldr	r3, [r7, #76]
 537 01e0 0133     		adds	r3, r3, #1
 538 01e2 FB64     		str	r3, [r7, #76]
 234:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 539              		.loc 1 234 0 discriminator 2
 540 01e4 BB6D     		ldr	r3, [r7, #88]
 541 01e6 0133     		adds	r3, r3, #1
 542 01e8 BB65     		str	r3, [r7, #88]
 543              	.L19:
 234:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 544              		.loc 1 234 0 is_stmt 0 discriminator 1
 545 01ea BA6D     		ldr	r2, [r7, #88]
 546 01ec 3B6B     		ldr	r3, [r7, #48]
 547 01ee 9A42     		cmp	r2, r3
 548 01f0 92D3     		bcc	.L26
 549              	.L25:
 293:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 294:Generated_Source\PSoC4/cy_em_eeprom.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 16


 295:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* This code block will copy the latest data from the EEPROM headers into the
 296:Generated_Source\PSoC4/cy_em_eeprom.c ****         * user buffer. The data previously copied into the user buffer may be updated
 297:Generated_Source\PSoC4/cy_em_eeprom.c ****         * as the EEPROM headers contain more recent data. 
 298:Generated_Source\PSoC4/cy_em_eeprom.c ****         * The code block is executed when two following conditions are true:
 299:Generated_Source\PSoC4/cy_em_eeprom.c ****         *  1) The reads from "historic" data locations were successful;
 300:Generated_Source\PSoC4/cy_em_eeprom.c ****         *  2) The user performed at least one write operation to Em_EEPROM (0u !=
 301:Generated_Source\PSoC4/cy_em_eeprom.c ****         *     seqNum).        
 302:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
 303:Generated_Source\PSoC4/cy_em_eeprom.c ****         if((CY_EM_EEPROM_SUCCESS == ret) && (0u != seqNum))
 550              		.loc 1 303 0 is_stmt 1
 551 01f2 5F23     		movs	r3, #95
 552 01f4 FB18     		adds	r3, r7, r3
 553 01f6 1B78     		ldrb	r3, [r3]
 554 01f8 002B     		cmp	r3, #0
 555 01fa 00D0     		beq	.LCB448
 556 01fc 8EE0     		b	.L7	@long jump
 557              	.LCB448:
 558              		.loc 1 303 0 is_stmt 0 discriminator 1
 559 01fe 7B6B     		ldr	r3, [r7, #52]
 560 0200 002B     		cmp	r3, #0
 561 0202 00D1     		bne	.LCB451
 562 0204 8AE0     		b	.L7	@long jump
 563              	.LCB451:
 304:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 305:Generated_Source\PSoC4/cy_em_eeprom.c ****             numRowReads = (context->numberOfRows <= seqNum) ? (context->numberOfRows) : (seqNum);
 564              		.loc 1 305 0 is_stmt 1
 565 0206 3B68     		ldr	r3, [r7]
 566 0208 5B68     		ldr	r3, [r3, #4]
 567 020a 7A6B     		ldr	r2, [r7, #52]
 568 020c 9342     		cmp	r3, r2
 569 020e 00D9     		bls	.L27
 570 0210 1300     		movs	r3, r2
 571              	.L27:
 572 0212 3B63     		str	r3, [r7, #48]
 306:Generated_Source\PSoC4/cy_em_eeprom.c ****             numRowReads--;
 573              		.loc 1 306 0
 574 0214 3B6B     		ldr	r3, [r7, #48]
 575 0216 013B     		subs	r3, r3, #1
 576 0218 3B63     		str	r3, [r7, #48]
 307:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 308:Generated_Source\PSoC4/cy_em_eeprom.c ****             for(i = (seqNum - numRowReads); i <= seqNum; i++)
 577              		.loc 1 308 0
 578 021a 7A6B     		ldr	r2, [r7, #52]
 579 021c 3B6B     		ldr	r3, [r7, #48]
 580 021e D31A     		subs	r3, r2, r3
 581 0220 BB65     		str	r3, [r7, #88]
 582 0222 77E0     		b	.L28
 583              	.L39:
 309:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 310:Generated_Source\PSoC4/cy_em_eeprom.c ****                 startRowAddr = GetRowAddrBySeqNum(i, context);
 584              		.loc 1 310 0
 585 0224 3A68     		ldr	r2, [r7]
 586 0226 BB6D     		ldr	r3, [r7, #88]
 587 0228 1100     		movs	r1, r2
 588 022a 1800     		movs	r0, r3
 589 022c FFF7FEFF 		bl	GetRowAddrBySeqNum
 590 0230 0300     		movs	r3, r0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 17


 591 0232 3B65     		str	r3, [r7, #80]
 311:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 312:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if (0u != startRowAddr)
 592              		.loc 1 312 0
 593 0234 3B6D     		ldr	r3, [r7, #80]
 594 0236 002B     		cmp	r3, #0
 595 0238 69D0     		beq	.L29
 596              	.LBB4:
 313:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 314:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* The following variables are introduced to increase code readability. */
 315:Generated_Source\PSoC4/cy_em_eeprom.c ****                     uint32 startAddr  = *(uint32 *)(startRowAddr + CY_EM_EEPROM_HEADER_ADDR_OFFSET)
 597              		.loc 1 315 0
 598 023a 3B6D     		ldr	r3, [r7, #80]
 599 023c 0433     		adds	r3, r3, #4
 600 023e 1B68     		ldr	r3, [r3]
 601 0240 FB61     		str	r3, [r7, #28]
 316:Generated_Source\PSoC4/cy_em_eeprom.c ****                     uint32 endAddr    = startAddr + (*(uint32 *)(startRowAddr + CY_EM_EEPROM_HEADER
 602              		.loc 1 316 0
 603 0242 3B6D     		ldr	r3, [r7, #80]
 604 0244 0833     		adds	r3, r3, #8
 605 0246 1A68     		ldr	r2, [r3]
 606 0248 FB69     		ldr	r3, [r7, #28]
 607 024a D318     		adds	r3, r2, r3
 608 024c BB61     		str	r3, [r7, #24]
 317:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 318:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Check if the current row EEPROM header contains the data requested for read 
 319:Generated_Source\PSoC4/cy_em_eeprom.c ****                     if(0u != CY_EM_EEPROM_IS_ADDRESES_CROSSING(startAddr, endAddr, addr, addr + siz
 609              		.loc 1 319 0
 610 024e FA69     		ldr	r2, [r7, #28]
 611 0250 FB68     		ldr	r3, [r7, #12]
 612 0252 9A42     		cmp	r2, r3
 613 0254 08D9     		bls	.L30
 614              		.loc 1 319 0 is_stmt 0 discriminator 1
 615 0256 FA68     		ldr	r2, [r7, #12]
 616 0258 7B68     		ldr	r3, [r7, #4]
 617 025a D318     		adds	r3, r2, r3
 618 025c FA69     		ldr	r2, [r7, #28]
 619 025e 9A42     		cmp	r2, r3
 620 0260 9B41     		sbcs	r3, r3, r3
 621 0262 5B42     		rsbs	r3, r3, #0
 622 0264 DBB2     		uxtb	r3, r3
 623 0266 05E0     		b	.L31
 624              	.L30:
 625              		.loc 1 319 0 discriminator 2
 626 0268 FA68     		ldr	r2, [r7, #12]
 627 026a BB69     		ldr	r3, [r7, #24]
 628 026c 9A42     		cmp	r2, r3
 629 026e 9B41     		sbcs	r3, r3, r3
 630 0270 5B42     		rsbs	r3, r3, #0
 631 0272 DBB2     		uxtb	r3, r3
 632              	.L31:
 633              		.loc 1 319 0 discriminator 4
 634 0274 002B     		cmp	r3, #0
 635 0276 4AD0     		beq	.L29
 636              	.LBB5:
 320:Generated_Source\PSoC4/cy_em_eeprom.c ****                     {
 321:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 srcOffset = (startAddr > addr) ? (0u) : (addr - startAddr);
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 18


 637              		.loc 1 321 0 is_stmt 1
 638 0278 FA69     		ldr	r2, [r7, #28]
 639 027a FB68     		ldr	r3, [r7, #12]
 640 027c 9A42     		cmp	r2, r3
 641 027e 03D8     		bhi	.L32
 642              		.loc 1 321 0 is_stmt 0 discriminator 1
 643 0280 FA68     		ldr	r2, [r7, #12]
 644 0282 FB69     		ldr	r3, [r7, #28]
 645 0284 D31A     		subs	r3, r2, r3
 646 0286 00E0     		b	.L33
 647              	.L32:
 648              		.loc 1 321 0 discriminator 2
 649 0288 0023     		movs	r3, #0
 650              	.L33:
 651              		.loc 1 321 0 discriminator 4
 652 028a 7B61     		str	r3, [r7, #20]
 322:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 dstOffset = (startAddr > addr) ? (startAddr - addr): (0u);
 653              		.loc 1 322 0 is_stmt 1 discriminator 4
 654 028c FA69     		ldr	r2, [r7, #28]
 655 028e FB68     		ldr	r3, [r7, #12]
 656 0290 9A42     		cmp	r2, r3
 657 0292 03D9     		bls	.L34
 658              		.loc 1 322 0 is_stmt 0 discriminator 1
 659 0294 FA69     		ldr	r2, [r7, #28]
 660 0296 FB68     		ldr	r3, [r7, #12]
 661 0298 D31A     		subs	r3, r2, r3
 662 029a 00E0     		b	.L35
 663              	.L34:
 664              		.loc 1 322 0 discriminator 2
 665 029c 0023     		movs	r3, #0
 666              	.L35:
 667              		.loc 1 322 0 discriminator 4
 668 029e 3B61     		str	r3, [r7, #16]
 323:Generated_Source\PSoC4/cy_em_eeprom.c ****                         rdAddr = (startAddr > addr) ? (startAddr) : (addr);
 669              		.loc 1 323 0 is_stmt 1 discriminator 4
 670 02a0 FA69     		ldr	r2, [r7, #28]
 671 02a2 FB68     		ldr	r3, [r7, #12]
 672 02a4 9342     		cmp	r3, r2
 673 02a6 00D2     		bcs	.L36
 674 02a8 1300     		movs	r3, r2
 675              	.L36:
 676 02aa 3B64     		str	r3, [r7, #64]
 324:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 325:Generated_Source\PSoC4/cy_em_eeprom.c ****                         srcOffset += CY_EM_EEPROM_HEADER_DATA_OFFSET;
 677              		.loc 1 325 0 discriminator 4
 678 02ac 7B69     		ldr	r3, [r7, #20]
 679 02ae 0C33     		adds	r3, r3, #12
 680 02b0 7B61     		str	r3, [r7, #20]
 326:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 327:Generated_Source\PSoC4/cy_em_eeprom.c ****                         /* Calculate the number of bytes to be read from the current row's EEPROM h
 328:Generated_Source\PSoC4/cy_em_eeprom.c ****                         numBytesToRead = ((endAddr < (addr + size)) ? endAddr : (addr + size)) - rd
 681              		.loc 1 328 0 discriminator 4
 682 02b2 FA68     		ldr	r2, [r7, #12]
 683 02b4 7B68     		ldr	r3, [r7, #4]
 684 02b6 D318     		adds	r3, r2, r3
 685 02b8 BA69     		ldr	r2, [r7, #24]
 686 02ba 9342     		cmp	r3, r2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 19


 687 02bc 00D9     		bls	.L37
 688 02be 1300     		movs	r3, r2
 689              	.L37:
 690 02c0 3A6C     		ldr	r2, [r7, #64]
 691 02c2 9B1A     		subs	r3, r3, r2
 692 02c4 7B65     		str	r3, [r7, #84]
 329:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 330:Generated_Source\PSoC4/cy_em_eeprom.c ****                         /* Calculate the offset in the user buffer from which the data will be upda
 331:Generated_Source\PSoC4/cy_em_eeprom.c ****                         eeData = ((uint32)eepromData) + dstOffset;
 693              		.loc 1 331 0 discriminator 4
 694 02c6 BA68     		ldr	r2, [r7, #8]
 695 02c8 3B69     		ldr	r3, [r7, #16]
 696 02ca D318     		adds	r3, r2, r3
 697 02cc 7B64     		str	r3, [r7, #68]
 332:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 333:Generated_Source\PSoC4/cy_em_eeprom.c ****                         /* Check a checksum of the EEPROM row and if it is bad, check a checksum in
 334:Generated_Source\PSoC4/cy_em_eeprom.c ****                         * corresponding row in redundant copy, otherwise return failure. Copy the d
 335:Generated_Source\PSoC4/cy_em_eeprom.c ****                         * from the recent EEPROM headers to the user buffer. This will overwrite th
 336:Generated_Source\PSoC4/cy_em_eeprom.c ****                         * data copied form EEPROM data locations as the data in EEPROM headers is n
 337:Generated_Source\PSoC4/cy_em_eeprom.c ****                         */
 338:Generated_Source\PSoC4/cy_em_eeprom.c ****                         if(0u != context->redundantCopy)
 698              		.loc 1 338 0 discriminator 4
 699 02ce 3B68     		ldr	r3, [r7]
 700 02d0 1B7D     		ldrb	r3, [r3, #20]
 701 02d2 002B     		cmp	r3, #0
 702 02d4 12D0     		beq	.L38
 339:Generated_Source\PSoC4/cy_em_eeprom.c ****                         {
 340:Generated_Source\PSoC4/cy_em_eeprom.c ****                             ret = CheckCrcAndCopy(startRowAddr, eeData, srcOffset, numBytesToRead, 
 703              		.loc 1 340 0
 704 02d6 5F23     		movs	r3, #95
 705 02d8 FC18     		adds	r4, r7, r3
 706 02da 7D6D     		ldr	r5, [r7, #84]
 707 02dc 7A69     		ldr	r2, [r7, #20]
 708 02de 796C     		ldr	r1, [r7, #68]
 709 02e0 386D     		ldr	r0, [r7, #80]
 710 02e2 3B68     		ldr	r3, [r7]
 711 02e4 0093     		str	r3, [sp]
 712 02e6 2B00     		movs	r3, r5
 713 02e8 FFF7FEFF 		bl	CheckCrcAndCopy
 714 02ec 0300     		movs	r3, r0
 715 02ee 2370     		strb	r3, [r4]
 341:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 342:Generated_Source\PSoC4/cy_em_eeprom.c ****                             if(CY_EM_EEPROM_SUCCESS != ret)
 716              		.loc 1 342 0
 717 02f0 5F23     		movs	r3, #95
 718 02f2 FB18     		adds	r3, r7, r3
 719 02f4 1B78     		ldrb	r3, [r3]
 720 02f6 002B     		cmp	r3, #0
 721 02f8 09D0     		beq	.L29
 343:Generated_Source\PSoC4/cy_em_eeprom.c ****                             {
 344:Generated_Source\PSoC4/cy_em_eeprom.c ****                                 break;
 722              		.loc 1 344 0
 723 02fa 0FE0     		b	.L7
 724              	.L38:
 345:Generated_Source\PSoC4/cy_em_eeprom.c ****                             }
 346:Generated_Source\PSoC4/cy_em_eeprom.c ****                         }
 347:Generated_Source\PSoC4/cy_em_eeprom.c ****                         else
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 20


 348:Generated_Source\PSoC4/cy_em_eeprom.c ****                         {
 349:Generated_Source\PSoC4/cy_em_eeprom.c ****                             (void)memcpy((void *)(eeData), (void *)(startRowAddr + srcOffset), numB
 725              		.loc 1 349 0
 726 02fc 786C     		ldr	r0, [r7, #68]
 727 02fe 3A6D     		ldr	r2, [r7, #80]
 728 0300 7B69     		ldr	r3, [r7, #20]
 729 0302 D318     		adds	r3, r2, r3
 730 0304 1900     		movs	r1, r3
 731 0306 7B6D     		ldr	r3, [r7, #84]
 732 0308 1A00     		movs	r2, r3
 733 030a FFF7FEFF 		bl	memcpy
 734              	.L29:
 735              	.LBE5:
 736              	.LBE4:
 308:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 737              		.loc 1 308 0 discriminator 2
 738 030e BB6D     		ldr	r3, [r7, #88]
 739 0310 0133     		adds	r3, r3, #1
 740 0312 BB65     		str	r3, [r7, #88]
 741              	.L28:
 308:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 742              		.loc 1 308 0 is_stmt 0 discriminator 1
 743 0314 BA6D     		ldr	r2, [r7, #88]
 744 0316 7B6B     		ldr	r3, [r7, #52]
 745 0318 9A42     		cmp	r2, r3
 746 031a 83D9     		bls	.L39
 747              	.L7:
 748              	.LBE2:
 350:Generated_Source\PSoC4/cy_em_eeprom.c ****                         }
 351:Generated_Source\PSoC4/cy_em_eeprom.c ****                     }
 352:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 353:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 354:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 355:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 356:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 357:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 749              		.loc 1 357 0 is_stmt 1
 750 031c 5F23     		movs	r3, #95
 751 031e FB18     		adds	r3, r7, r3
 752 0320 1B78     		ldrb	r3, [r3]
 358:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 753              		.loc 1 358 0
 754 0322 1800     		movs	r0, r3
 755 0324 BD46     		mov	sp, r7
 756 0326 18B0     		add	sp, sp, #96
 757              		@ sp needed
 758 0328 B0BD     		pop	{r4, r5, r7, pc}
 759              		.cfi_endproc
 760              	.LFE1:
 761              		.size	Cy_Em_EEPROM_Read, .-Cy_Em_EEPROM_Read
 762              		.global	__aeabi_uidivmod
 763 032a C046     		.section	.text.Cy_Em_EEPROM_Write,"ax",%progbits
 764              		.align	2
 765              		.global	Cy_Em_EEPROM_Write
 766              		.code	16
 767              		.thumb_func
 768              		.type	Cy_Em_EEPROM_Write, %function
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 21


 769              	Cy_Em_EEPROM_Write:
 770              	.LFB2:
 359:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 360:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 361:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 362:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Write
 363:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 364:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 365:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function takes the logical EEPROM address and converts it to the actual
 366:Generated_Source\PSoC4/cy_em_eeprom.c **** * physical address and writes data there. If wear leveling is implemented, the
 367:Generated_Source\PSoC4/cy_em_eeprom.c **** * writing process will use the wear leveling techniques. This is a blocking
 368:Generated_Source\PSoC4/cy_em_eeprom.c **** * function and it does not return until the write operation is completed. The
 369:Generated_Source\PSoC4/cy_em_eeprom.c **** * user firmware should not enter Hibernate mode until write is completed. The
 370:Generated_Source\PSoC4/cy_em_eeprom.c **** * write operation is allowed in Sleep and Deep-Sleep modes. During the flash
 371:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation, the device should not be reset, including the XRES pin, a software
 372:Generated_Source\PSoC4/cy_em_eeprom.c **** * reset, and watchdog reset sources. Also, low-voltage detect circuits should
 373:Generated_Source\PSoC4/cy_em_eeprom.c **** * be configured to generate an interrupt instead of a reset. Otherwise, portions
 374:Generated_Source\PSoC4/cy_em_eeprom.c **** * of flash may undergo unexpected changes.
 375:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 376:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
 377:Generated_Source\PSoC4/cy_em_eeprom.c **** * The logical start address in EEPROM to start writing data from.
 378:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 379:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param eepromData
 380:Generated_Source\PSoC4/cy_em_eeprom.c **** * Data to write to EEPROM.
 381:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 382:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param size
 383:Generated_Source\PSoC4/cy_em_eeprom.c **** * The amount of data to write to EEPROM.
 384:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 385:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 386:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 387:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 388:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 389:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 390:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 391:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 392:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform write
 393:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 394:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 395:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 396:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 397:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case when blocking write option is used, if this function is called by
 398:Generated_Source\PSoC4/cy_em_eeprom.c **** * the CM4 the user code on CM0P and the user code on CM4 are blocked until erase
 399:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row operation is finished. If this function is called by the CM0P the
 400:Generated_Source\PSoC4/cy_em_eeprom.c **** * user code on CM4 is not blocked and the user code on CM0P is blocked until
 401:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase flash row operation is finished. Plan your task allocation accordingly.
 402:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 403:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 404:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if non-blocking write option is used and when user flash is used as
 405:Generated_Source\PSoC4/cy_em_eeprom.c **** * an EEPROM storage care should be taken to prevent the read while write (RWW)
 406:Generated_Source\PSoC4/cy_em_eeprom.c **** * exception. To prevent the RWW exception the user flash macro that includes
 407:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM storage should not be read while the EEPROM write is not completed.
 408:Generated_Source\PSoC4/cy_em_eeprom.c **** * The read also means the user code execution from the respective flash macro.
 409:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 410:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 411:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Write(uint32 addr,
 412:Generated_Source\PSoC4/cy_em_eeprom.c ****                                             void * eepromData,
 413:Generated_Source\PSoC4/cy_em_eeprom.c ****                                             uint32 size,
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 22


 414:Generated_Source\PSoC4/cy_em_eeprom.c ****                                             cy_stc_eeprom_context_t * context)
 415:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 771              		.loc 1 415 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 208
 774              		@ frame_needed = 1, uses_anonymous_args = 0
 775 0000 B0B5     		push	{r4, r5, r7, lr}
 776              		.cfi_def_cfa_offset 16
 777              		.cfi_offset 4, -16
 778              		.cfi_offset 5, -12
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 B6B0     		sub	sp, sp, #216
 782              		.cfi_def_cfa_offset 232
 783 0004 02AF     		add	r7, sp, #8
 784              		.cfi_def_cfa 7, 224
 785 0006 F860     		str	r0, [r7, #12]
 786 0008 B960     		str	r1, [r7, #8]
 787 000a 7A60     		str	r2, [r7, #4]
 788 000c 3B60     		str	r3, [r7]
 416:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 789              		.loc 1 416 0
 790 000e CF23     		movs	r3, #207
 791 0010 FB18     		adds	r3, r7, r3
 792 0012 0122     		movs	r2, #1
 793 0014 1A70     		strb	r2, [r3]
 417:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 418:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 wrCnt;
 419:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 actEmEepromRowNum;
 420:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
 421:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startAddr = 0u;
 794              		.loc 1 421 0
 795 0016 0023     		movs	r3, #0
 796 0018 3B62     		str	r3, [r7, #32]
 422:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 endAddr = 0u;
 797              		.loc 1 422 0
 798 001a 0023     		movs	r3, #0
 799 001c FB61     		str	r3, [r7, #28]
 423:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 tmpRowAddr;
 424:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = context->lastWrRowAddr;
 800              		.loc 1 424 0
 801 001e 3B68     		ldr	r3, [r7]
 802 0020 9B68     		ldr	r3, [r3, #8]
 803 0022 BB61     		str	r3, [r7, #24]
 425:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowRdAddr;
 426:Generated_Source\PSoC4/cy_em_eeprom.c ****     void * tmpData;
 427:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 eeData = (uint32) eepromData; /* To avoid the pointer arithmetic with void */
 804              		.loc 1 427 0
 805 0024 BB68     		ldr	r3, [r7, #8]
 806 0026 BC22     		movs	r2, #188
 807 0028 BA18     		adds	r2, r7, r2
 808 002a 1360     		str	r3, [r2]
 428:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 429:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check if the EEPROM data does not exceed the EEPROM capacity */
 430:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((0u != size) && ((addr + size) <= (context->eepromSize)) && (NULL != eepromData))
 809              		.loc 1 430 0
 810 002c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 23


 811 002e 002B     		cmp	r3, #0
 812 0030 00D1     		bne	.LCB674
 813 0032 77E1     		b	.L42	@long jump
 814              	.LCB674:
 815              		.loc 1 430 0 is_stmt 0 discriminator 1
 816 0034 FA68     		ldr	r2, [r7, #12]
 817 0036 7B68     		ldr	r3, [r7, #4]
 818 0038 D218     		adds	r2, r2, r3
 819 003a 3B68     		ldr	r3, [r7]
 820 003c DB68     		ldr	r3, [r3, #12]
 821 003e 9A42     		cmp	r2, r3
 822 0040 00D9     		bls	.LCB681
 823 0042 6FE1     		b	.L42	@long jump
 824              	.LCB681:
 825              		.loc 1 430 0 discriminator 2
 826 0044 BB68     		ldr	r3, [r7, #8]
 827 0046 002B     		cmp	r3, #0
 828 0048 00D1     		bne	.LCB684
 829 004a 6BE1     		b	.L42	@long jump
 830              	.LCB684:
 831              	.LBB6:
 431:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 432:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 numWrites = ((size - 1u) / CY_EM_EEPROM_HEADER_DATA_LEN) + 1u;
 832              		.loc 1 432 0 is_stmt 1
 833 004c 7B68     		ldr	r3, [r7, #4]
 834 004e 013B     		subs	r3, r3, #1
 835 0050 3021     		movs	r1, #48
 836 0052 1800     		movs	r0, r3
 837 0054 FFF7FEFF 		bl	__aeabi_uidiv
 838 0058 0300     		movs	r3, r0
 839 005a 0133     		adds	r3, r3, #1
 840 005c B422     		movs	r2, #180
 841 005e BA18     		adds	r2, r7, r2
 842 0060 1360     		str	r3, [r2]
 433:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 eeHeaderDataOffset = 0u;
 843              		.loc 1 433 0
 844 0062 0023     		movs	r3, #0
 845 0064 3B61     		str	r3, [r7, #16]
 434:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 435:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(wrCnt = 0u; wrCnt < numWrites; wrCnt++)
 846              		.loc 1 435 0
 847 0066 0023     		movs	r3, #0
 848 0068 C422     		movs	r2, #196
 849 006a BA18     		adds	r2, r7, r2
 850 006c 1360     		str	r3, [r2]
 851 006e 4EE1     		b	.L43
 852              	.L61:
 853              	.LBB7:
 436:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 437:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 skipOperation = 0u;
 854              		.loc 1 437 0
 855 0070 0023     		movs	r3, #0
 856 0072 B822     		movs	r2, #184
 857 0074 BA18     		adds	r2, r7, r2
 858 0076 1360     		str	r3, [r2]
 438:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the sequence number of the last written row */
 439:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 24


 859              		.loc 1 439 0
 860 0078 BB69     		ldr	r3, [r7, #24]
 861 007a 1B68     		ldr	r3, [r3]
 862 007c B022     		movs	r2, #176
 863 007e BA18     		adds	r2, r7, r2
 864 0080 1360     		str	r3, [r2]
 440:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 441:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the address of the row to be written. The "emEepromRowAddr" may be
 442:Generated_Source\PSoC4/cy_em_eeprom.c ****             * updated with the proper address (if wear leveling is used). The
 443:Generated_Source\PSoC4/cy_em_eeprom.c ****             * "emEepromRowRdAddr" will point to the row address from which the historic
 444:Generated_Source\PSoC4/cy_em_eeprom.c ****             * data will be read into the RAM buffer.
 445:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 446:Generated_Source\PSoC4/cy_em_eeprom.c ****             GetNextRowToWrite(seqNum, &emEepromRowAddr, &emEepromRowRdAddr, context);
 865              		.loc 1 446 0
 866 0082 3B68     		ldr	r3, [r7]
 867 0084 1422     		movs	r2, #20
 868 0086 BA18     		adds	r2, r7, r2
 869 0088 1821     		movs	r1, #24
 870 008a 7918     		adds	r1, r7, r1
 871 008c B020     		movs	r0, #176
 872 008e 3818     		adds	r0, r7, r0
 873 0090 0068     		ldr	r0, [r0]
 874 0092 FFF7FEFF 		bl	GetNextRowToWrite
 447:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 448:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Clear the RAM buffer so to not put junk into flash */
 449:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memset(writeRamBuffer, 0, CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 875              		.loc 1 449 0
 876 0096 2423     		movs	r3, #36
 877 0098 FB18     		adds	r3, r7, r3
 878 009a 8022     		movs	r2, #128
 879 009c 0021     		movs	r1, #0
 880 009e 1800     		movs	r0, r3
 881 00a0 FFF7FEFF 		bl	memset
 450:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 451:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Fill the EM_EEPROM header info for the row in the RAM buffer */
 452:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum++;
 882              		.loc 1 452 0
 883 00a4 B023     		movs	r3, #176
 884 00a6 FB18     		adds	r3, r7, r3
 885 00a8 1B68     		ldr	r3, [r3]
 886 00aa 0133     		adds	r3, r3, #1
 887 00ac B022     		movs	r2, #176
 888 00ae BA18     		adds	r2, r7, r2
 889 00b0 1360     		str	r3, [r2]
 453:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_SEQ_NUM_OFFSET_U32] = seqNum;
 890              		.loc 1 453 0
 891 00b2 2423     		movs	r3, #36
 892 00b4 FB18     		adds	r3, r7, r3
 893 00b6 B022     		movs	r2, #176
 894 00b8 BA18     		adds	r2, r7, r2
 895 00ba 1268     		ldr	r2, [r2]
 896 00bc 1A60     		str	r2, [r3]
 454:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_ADDR_OFFSET_U32] = addr;
 897              		.loc 1 454 0
 898 00be 2423     		movs	r3, #36
 899 00c0 FB18     		adds	r3, r7, r3
 900 00c2 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 25


 901 00c4 5A60     		str	r2, [r3, #4]
 455:Generated_Source\PSoC4/cy_em_eeprom.c ****             tmpData = (void *) eeData;
 902              		.loc 1 455 0
 903 00c6 BC23     		movs	r3, #188
 904 00c8 FB18     		adds	r3, r7, r3
 905 00ca 1B68     		ldr	r3, [r3]
 906 00cc AC22     		movs	r2, #172
 907 00ce BA18     		adds	r2, r7, r2
 908 00d0 1360     		str	r3, [r2]
 456:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 457:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if this is the last row to write */
 458:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(wrCnt == (numWrites - 1u))
 909              		.loc 1 458 0
 910 00d2 B423     		movs	r3, #180
 911 00d4 FB18     		adds	r3, r7, r3
 912 00d6 1B68     		ldr	r3, [r3]
 913 00d8 5A1E     		subs	r2, r3, #1
 914 00da C423     		movs	r3, #196
 915 00dc FB18     		adds	r3, r7, r3
 916 00de 1B68     		ldr	r3, [r3]
 917 00e0 9A42     		cmp	r2, r3
 918 00e2 04D1     		bne	.L44
 459:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 460:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Fill in the remaining size value to the EEPROM header. */
 461:Generated_Source\PSoC4/cy_em_eeprom.c ****                 writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32] = size;
 919              		.loc 1 461 0
 920 00e4 2423     		movs	r3, #36
 921 00e6 FB18     		adds	r3, r7, r3
 922 00e8 7A68     		ldr	r2, [r7, #4]
 923 00ea 9A60     		str	r2, [r3, #8]
 924 00ec 10E0     		b	.L45
 925              	.L44:
 462:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 463:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 464:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 465:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* This is not the last row to write in the current EEPROM write operation.
 466:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * Write the maximum possible data size to the EEPROM header. Update the
 467:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * size, eeData and addr respectively.
 468:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 469:Generated_Source\PSoC4/cy_em_eeprom.c ****                 writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32] = CY_EM_EEPROM_HEADER_DATA_LEN;
 926              		.loc 1 469 0
 927 00ee 2423     		movs	r3, #36
 928 00f0 FB18     		adds	r3, r7, r3
 929 00f2 3022     		movs	r2, #48
 930 00f4 9A60     		str	r2, [r3, #8]
 470:Generated_Source\PSoC4/cy_em_eeprom.c ****                 size -= CY_EM_EEPROM_HEADER_DATA_LEN;
 931              		.loc 1 470 0
 932 00f6 7B68     		ldr	r3, [r7, #4]
 933 00f8 303B     		subs	r3, r3, #48
 934 00fa 7B60     		str	r3, [r7, #4]
 471:Generated_Source\PSoC4/cy_em_eeprom.c ****                 addr += CY_EM_EEPROM_HEADER_DATA_LEN;
 935              		.loc 1 471 0
 936 00fc FB68     		ldr	r3, [r7, #12]
 937 00fe 3033     		adds	r3, r3, #48
 938 0100 FB60     		str	r3, [r7, #12]
 472:Generated_Source\PSoC4/cy_em_eeprom.c ****                 eeData += CY_EM_EEPROM_HEADER_DATA_LEN;
 939              		.loc 1 472 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 26


 940 0102 BC23     		movs	r3, #188
 941 0104 FB18     		adds	r3, r7, r3
 942 0106 1B68     		ldr	r3, [r3]
 943 0108 3033     		adds	r3, r3, #48
 944 010a BC22     		movs	r2, #188
 945 010c BA18     		adds	r2, r7, r2
 946 010e 1360     		str	r3, [r2]
 947              	.L45:
 473:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 474:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 475:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the data to the EEPROM header */
 476:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memcpy((void *)&writeRamBuffer[CY_EM_EEPROM_HEADER_DATA_OFFSET_U32],
 477:Generated_Source\PSoC4/cy_em_eeprom.c ****                          tmpData,
 478:Generated_Source\PSoC4/cy_em_eeprom.c ****                          writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32]);
 948              		.loc 1 478 0
 949 0110 2423     		movs	r3, #36
 950 0112 FB18     		adds	r3, r7, r3
 951 0114 9A68     		ldr	r2, [r3, #8]
 476:Generated_Source\PSoC4/cy_em_eeprom.c ****                          tmpData,
 952              		.loc 1 476 0
 953 0116 AC23     		movs	r3, #172
 954 0118 FB18     		adds	r3, r7, r3
 955 011a 1968     		ldr	r1, [r3]
 956 011c 2423     		movs	r3, #36
 957 011e FB18     		adds	r3, r7, r3
 958 0120 0C33     		adds	r3, r3, #12
 959 0122 1800     		movs	r0, r3
 960 0124 FFF7FEFF 		bl	memcpy
 479:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 480:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(emEepromRowRdAddr != 0UL)
 961              		.loc 1 480 0
 962 0128 7B69     		ldr	r3, [r7, #20]
 963 012a 002B     		cmp	r3, #0
 964 012c 09D0     		beq	.L46
 481:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 482:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Copy the EEPROM historic data for this row from flash to RAM */
 483:Generated_Source\PSoC4/cy_em_eeprom.c ****                 (void)memcpy((void *)&writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 484:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(emEepromRowRdAddr + CY_EM_EEPROM_EEPROM_DATA_LEN),
 965              		.loc 1 484 0
 966 012e 7B69     		ldr	r3, [r7, #20]
 967 0130 4033     		adds	r3, r3, #64
 483:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(emEepromRowRdAddr + CY_EM_EEPROM_EEPROM_DATA_LEN),
 968              		.loc 1 483 0
 969 0132 1900     		movs	r1, r3
 970 0134 2423     		movs	r3, #36
 971 0136 FB18     		adds	r3, r7, r3
 972 0138 4033     		adds	r3, r3, #64
 973 013a 4022     		movs	r2, #64
 974 013c 1800     		movs	r0, r3
 975 013e FFF7FEFF 		bl	memcpy
 976              	.L46:
 485:Generated_Source\PSoC4/cy_em_eeprom.c ****                              CY_EM_EEPROM_EEPROM_DATA_LEN);
 486:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 487:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 488:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if there is data for this location in other EEPROM headers:
 489:Generated_Source\PSoC4/cy_em_eeprom.c ****             * find out the row with the lowest possible sequence number which
 490:Generated_Source\PSoC4/cy_em_eeprom.c ****             * may contain the data for the current row.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 27


 491:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 492:Generated_Source\PSoC4/cy_em_eeprom.c ****             i = (seqNum > context->numberOfRows) ? ((seqNum - (context->numberOfRows)) + 1u) : 1u;
 977              		.loc 1 492 0
 978 0142 3B68     		ldr	r3, [r7]
 979 0144 5A68     		ldr	r2, [r3, #4]
 980 0146 B023     		movs	r3, #176
 981 0148 FB18     		adds	r3, r7, r3
 982 014a 1B68     		ldr	r3, [r3]
 983 014c 9A42     		cmp	r2, r3
 984 014e 07D2     		bcs	.L47
 985              		.loc 1 492 0 is_stmt 0 discriminator 1
 986 0150 3B68     		ldr	r3, [r7]
 987 0152 5B68     		ldr	r3, [r3, #4]
 988 0154 B022     		movs	r2, #176
 989 0156 BA18     		adds	r2, r7, r2
 990 0158 1268     		ldr	r2, [r2]
 991 015a D31A     		subs	r3, r2, r3
 992 015c 0133     		adds	r3, r3, #1
 993 015e 00E0     		b	.L48
 994              	.L47:
 995              		.loc 1 492 0 discriminator 2
 996 0160 0123     		movs	r3, #1
 997              	.L48:
 998              		.loc 1 492 0 discriminator 4
 999 0162 C822     		movs	r2, #200
 1000 0164 BA18     		adds	r2, r7, r2
 1001 0166 1360     		str	r3, [r2]
 493:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 494:Generated_Source\PSoC4/cy_em_eeprom.c ****             for(; i <= seqNum; i++)
 1002              		.loc 1 494 0 is_stmt 1 discriminator 4
 1003 0168 8AE0     		b	.L49
 1004              	.L56:
 495:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 496:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(i == seqNum)
 1005              		.loc 1 496 0
 1006 016a C823     		movs	r3, #200
 1007 016c FB18     		adds	r3, r7, r3
 1008 016e 1A68     		ldr	r2, [r3]
 1009 0170 B023     		movs	r3, #176
 1010 0172 FB18     		adds	r3, r7, r3
 1011 0174 1B68     		ldr	r3, [r3]
 1012 0176 9A42     		cmp	r2, r3
 1013 0178 05D1     		bne	.L50
 497:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 498:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* The code reached the row that is about to be written. Analyze the recently
 499:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * created EEPROM header (stored in the RAM buffer currently): if it contains
 500:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * the data for EEPROM data locations in the row that is about to be written.
 501:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 502:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = (uint32) writeRamBuffer;
 1014              		.loc 1 502 0
 1015 017a 2423     		movs	r3, #36
 1016 017c FB18     		adds	r3, r7, r3
 1017 017e C022     		movs	r2, #192
 1018 0180 BA18     		adds	r2, r7, r2
 1019 0182 1360     		str	r3, [r2]
 1020 0184 0BE0     		b	.L51
 1021              	.L50:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 28


 503:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 504:Generated_Source\PSoC4/cy_em_eeprom.c ****                 else
 505:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 506:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Retrieve the address of the previously written row by its sequence number.
 507:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * The pointer will be used to get data from the respective EEPROM header.
 508:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 509:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = GetRowAddrBySeqNum(i, context);
 1022              		.loc 1 509 0
 1023 0186 3A68     		ldr	r2, [r7]
 1024 0188 C823     		movs	r3, #200
 1025 018a FB18     		adds	r3, r7, r3
 1026 018c 1B68     		ldr	r3, [r3]
 1027 018e 1100     		movs	r1, r2
 1028 0190 1800     		movs	r0, r3
 1029 0192 FFF7FEFF 		bl	GetRowAddrBySeqNum
 1030 0196 0300     		movs	r3, r0
 1031 0198 C022     		movs	r2, #192
 1032 019a BA18     		adds	r2, r7, r2
 1033 019c 1360     		str	r3, [r2]
 1034              	.L51:
 510:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 511:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 512:Generated_Source\PSoC4/cy_em_eeprom.c ****                 actEmEepromRowNum = CY_EM_EEPROM_GET_ACT_ROW_NUM_FROM_ADDR(emEepromRowAddr,
 1035              		.loc 1 512 0
 1036 019e BA69     		ldr	r2, [r7, #24]
 1037 01a0 3B68     		ldr	r3, [r7]
 1038 01a2 9B69     		ldr	r3, [r3, #24]
 1039 01a4 D31A     		subs	r3, r2, r3
 1040 01a6 DA09     		lsrs	r2, r3, #7
 1041 01a8 3B68     		ldr	r3, [r7]
 1042 01aa 5B68     		ldr	r3, [r3, #4]
 1043 01ac 1900     		movs	r1, r3
 1044 01ae 1000     		movs	r0, r2
 1045 01b0 FFF7FEFF 		bl	__aeabi_uidivmod
 1046 01b4 0B00     		movs	r3, r1
 1047 01b6 A822     		movs	r2, #168
 1048 01b8 BA18     		adds	r2, r7, r2
 1049 01ba 1360     		str	r3, [r2]
 513:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                                            context->numberOfRows,
 514:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                                            context->userFlashStartA
 515:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0UL != tmpRowAddr)
 1050              		.loc 1 515 0
 1051 01bc C023     		movs	r3, #192
 1052 01be FB18     		adds	r3, r7, r3
 1053 01c0 1B68     		ldr	r3, [r3]
 1054 01c2 002B     		cmp	r3, #0
 1055 01c4 1DD0     		beq	.L52
 516:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 517:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Calculate the required addressed for the later EEPROM historic data update *
 518:Generated_Source\PSoC4/cy_em_eeprom.c ****                     skipOperation = GetAddresses(
 519:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 520:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &endAddr,
 521:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &eeHeaderDataOffset,
 522:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               actEmEepromRowNum,
 523:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               *(uint32 *)(tmpRowAddr + CY_EM_EEPROM_HEADER_ADDR_OFF
 1056              		.loc 1 523 0
 1057 01c6 C023     		movs	r3, #192
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 29


 1058 01c8 FB18     		adds	r3, r7, r3
 1059 01ca 1B68     		ldr	r3, [r3]
 1060 01cc 0433     		adds	r3, r3, #4
 518:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 1061              		.loc 1 518 0
 1062 01ce 1A68     		ldr	r2, [r3]
 524:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               *(uint32 *)(tmpRowAddr + CY_EM_EEPROM_HEADER_LEN_OFFS
 1063              		.loc 1 524 0
 1064 01d0 C023     		movs	r3, #192
 1065 01d2 FB18     		adds	r3, r7, r3
 1066 01d4 1B68     		ldr	r3, [r3]
 1067 01d6 0833     		adds	r3, r3, #8
 518:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 1068              		.loc 1 518 0
 1069 01d8 1B68     		ldr	r3, [r3]
 1070 01da A821     		movs	r1, #168
 1071 01dc 7918     		adds	r1, r7, r1
 1072 01de 0D68     		ldr	r5, [r1]
 1073 01e0 1021     		movs	r1, #16
 1074 01e2 7C18     		adds	r4, r7, r1
 1075 01e4 1C21     		movs	r1, #28
 1076 01e6 7918     		adds	r1, r7, r1
 1077 01e8 2020     		movs	r0, #32
 1078 01ea 3818     		adds	r0, r7, r0
 1079 01ec 0193     		str	r3, [sp, #4]
 1080 01ee 0092     		str	r2, [sp]
 1081 01f0 2B00     		movs	r3, r5
 1082 01f2 2200     		movs	r2, r4
 1083 01f4 FFF7FEFF 		bl	GetAddresses
 1084 01f8 0300     		movs	r3, r0
 1085 01fa B822     		movs	r2, #184
 1086 01fc BA18     		adds	r2, r7, r2
 1087 01fe 1360     		str	r3, [r2]
 1088 0200 06E0     		b	.L53
 1089              	.L52:
 525:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 526:Generated_Source\PSoC4/cy_em_eeprom.c ****                 else
 527:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 528:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Skip writes to the RAM buffer */
 529:Generated_Source\PSoC4/cy_em_eeprom.c ****                     skipOperation++;
 1090              		.loc 1 529 0
 1091 0202 B823     		movs	r3, #184
 1092 0204 FB18     		adds	r3, r7, r3
 1093 0206 1B68     		ldr	r3, [r3]
 1094 0208 0133     		adds	r3, r3, #1
 1095 020a B822     		movs	r2, #184
 1096 020c BA18     		adds	r2, r7, r2
 1097 020e 1360     		str	r3, [r2]
 1098              	.L53:
 530:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 531:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 532:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Write data to the RAM buffer */
 533:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0u == skipOperation)
 1099              		.loc 1 533 0
 1100 0210 B823     		movs	r3, #184
 1101 0212 FB18     		adds	r3, r7, r3
 1102 0214 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 30


 1103 0216 002B     		cmp	r3, #0
 1104 0218 1BD1     		bne	.L54
 1105              	.LBB8:
 534:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 535:Generated_Source\PSoC4/cy_em_eeprom.c ****                     uint32 dataAddr = ((uint32)((uint8 *)&writeRamBuffer)) + startAddr;
 1106              		.loc 1 535 0
 1107 021a 2423     		movs	r3, #36
 1108 021c FA18     		adds	r2, r7, r3
 1109 021e 3B6A     		ldr	r3, [r7, #32]
 1110 0220 D318     		adds	r3, r2, r3
 1111 0222 A422     		movs	r2, #164
 1112 0224 BA18     		adds	r2, r7, r2
 1113 0226 1360     		str	r3, [r2]
 536:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 537:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Update the address to point to the EEPROM header data and not to
 538:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * the start of the row.
 539:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 540:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = tmpRowAddr + CY_EM_EEPROM_HEADER_DATA_OFFSET + eeHeaderDataOffset;
 1114              		.loc 1 540 0
 1115 0228 3A69     		ldr	r2, [r7, #16]
 1116 022a C023     		movs	r3, #192
 1117 022c FB18     		adds	r3, r7, r3
 1118 022e 1B68     		ldr	r3, [r3]
 1119 0230 D318     		adds	r3, r2, r3
 1120 0232 0C33     		adds	r3, r3, #12
 1121 0234 C022     		movs	r2, #192
 1122 0236 BA18     		adds	r2, r7, r2
 1123 0238 1360     		str	r3, [r2]
 541:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (void)memcpy((void *)(dataAddr), (void *)(tmpRowAddr), endAddr - startAddr);
 1124              		.loc 1 541 0
 1125 023a A423     		movs	r3, #164
 1126 023c FB18     		adds	r3, r7, r3
 1127 023e 1868     		ldr	r0, [r3]
 1128 0240 C023     		movs	r3, #192
 1129 0242 FB18     		adds	r3, r7, r3
 1130 0244 1968     		ldr	r1, [r3]
 1131 0246 FA69     		ldr	r2, [r7, #28]
 1132 0248 3B6A     		ldr	r3, [r7, #32]
 1133 024a D31A     		subs	r3, r2, r3
 1134 024c 1A00     		movs	r2, r3
 1135 024e FFF7FEFF 		bl	memcpy
 1136              	.L54:
 1137              	.LBE8:
 542:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 543:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 544:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Calculate the checksum if redundant copy is enabled */
 545:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0u != context->redundantCopy)
 1138              		.loc 1 545 0
 1139 0252 3B68     		ldr	r3, [r7]
 1140 0254 1B7D     		ldrb	r3, [r3, #20]
 1141 0256 002B     		cmp	r3, #0
 1142 0258 0BD0     		beq	.L55
 546:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 547:Generated_Source\PSoC4/cy_em_eeprom.c ****                     writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
 548:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1143              		.loc 1 548 0
 1144 025a 2423     		movs	r3, #36
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 31


 1145 025c FB18     		adds	r3, r7, r3
 1146 025e 4033     		adds	r3, r3, #64
 1147 0260 4021     		movs	r1, #64
 1148 0262 1800     		movs	r0, r3
 1149 0264 FFF7FEFF 		bl	CalcChecksum
 1150 0268 0300     		movs	r3, r0
 547:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1151              		.loc 1 547 0
 1152 026a 1A00     		movs	r2, r3
 1153 026c 2423     		movs	r3, #36
 1154 026e FB18     		adds	r3, r7, r3
 1155 0270 DA63     		str	r2, [r3, #60]
 1156              	.L55:
 494:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 1157              		.loc 1 494 0
 1158 0272 C823     		movs	r3, #200
 1159 0274 FB18     		adds	r3, r7, r3
 1160 0276 1B68     		ldr	r3, [r3]
 1161 0278 0133     		adds	r3, r3, #1
 1162 027a C822     		movs	r2, #200
 1163 027c BA18     		adds	r2, r7, r2
 1164 027e 1360     		str	r3, [r2]
 1165              	.L49:
 494:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 1166              		.loc 1 494 0 is_stmt 0 discriminator 1
 1167 0280 C823     		movs	r3, #200
 1168 0282 FB18     		adds	r3, r7, r3
 1169 0284 1A68     		ldr	r2, [r3]
 1170 0286 B023     		movs	r3, #176
 1171 0288 FB18     		adds	r3, r7, r3
 1172 028a 1B68     		ldr	r3, [r3]
 1173 028c 9A42     		cmp	r2, r3
 1174 028e 00D8     		bhi	.LCB1002
 1175 0290 6BE7     		b	.L56	@long jump
 1176              	.LCB1002:
 549:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                   CY_EM_EEPROM_EEPROM_DATA_LEN);
 550:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 551:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 552:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 553:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the data to the specified flash row */
 554:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = WriteRow(emEepromRowAddr, writeRamBuffer, context);
 1177              		.loc 1 554 0 is_stmt 1
 1178 0292 BB69     		ldr	r3, [r7, #24]
 1179 0294 CF22     		movs	r2, #207
 1180 0296 BC18     		adds	r4, r7, r2
 1181 0298 3A68     		ldr	r2, [r7]
 1182 029a 2421     		movs	r1, #36
 1183 029c 7918     		adds	r1, r7, r1
 1184 029e 1800     		movs	r0, r3
 1185 02a0 FFF7FEFF 		bl	WriteRow
 1186 02a4 0300     		movs	r3, r0
 1187 02a6 2370     		strb	r3, [r4]
 555:Generated_Source\PSoC4/cy_em_eeprom.c ****             tmpRowAddr = emEepromRowAddr;
 1188              		.loc 1 555 0
 1189 02a8 BB69     		ldr	r3, [r7, #24]
 1190 02aa C022     		movs	r2, #192
 1191 02ac BA18     		adds	r2, r7, r2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 32


 1192 02ae 1360     		str	r3, [r2]
 556:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 557:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if redundant copy is used */
 558:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((0u != context->redundantCopy) && (CY_EM_EEPROM_SUCCESS == ret))
 1193              		.loc 1 558 0
 1194 02b0 3B68     		ldr	r3, [r7]
 1195 02b2 1B7D     		ldrb	r3, [r3, #20]
 1196 02b4 002B     		cmp	r3, #0
 1197 02b6 1BD0     		beq	.L57
 1198              		.loc 1 558 0 is_stmt 0 discriminator 1
 1199 02b8 CF23     		movs	r3, #207
 1200 02ba FB18     		adds	r3, r7, r3
 1201 02bc 1B78     		ldrb	r3, [r3]
 1202 02be 002B     		cmp	r3, #0
 1203 02c0 16D1     		bne	.L57
 559:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 560:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Update the row address to point to the row in the redundant EEPROM's copy */
 561:Generated_Source\PSoC4/cy_em_eeprom.c ****                 tmpRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
 1204              		.loc 1 561 0 is_stmt 1
 1205 02c2 BA69     		ldr	r2, [r7, #24]
 1206 02c4 3B68     		ldr	r3, [r7]
 1207 02c6 9B69     		ldr	r3, [r3, #24]
 1208 02c8 D21A     		subs	r2, r2, r3
 1209 02ca 3B68     		ldr	r3, [r7]
 1210 02cc 1B68     		ldr	r3, [r3]
 1211 02ce D318     		adds	r3, r2, r3
 1212 02d0 C022     		movs	r2, #192
 1213 02d2 BA18     		adds	r2, r7, r2
 1214 02d4 1360     		str	r3, [r2]
 562:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 563:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Write the data to the specified flash row */
 564:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = WriteRow(tmpRowAddr, writeRamBuffer, context);
 1215              		.loc 1 564 0
 1216 02d6 CF23     		movs	r3, #207
 1217 02d8 FC18     		adds	r4, r7, r3
 1218 02da 3A68     		ldr	r2, [r7]
 1219 02dc 2423     		movs	r3, #36
 1220 02de F918     		adds	r1, r7, r3
 1221 02e0 C023     		movs	r3, #192
 1222 02e2 FB18     		adds	r3, r7, r3
 1223 02e4 1B68     		ldr	r3, [r3]
 1224 02e6 1800     		movs	r0, r3
 1225 02e8 FFF7FEFF 		bl	WriteRow
 1226 02ec 0300     		movs	r3, r0
 1227 02ee 2370     		strb	r3, [r4]
 1228              	.L57:
 565:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 566:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 567:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_EM_EEPROM_SUCCESS == ret)
 1229              		.loc 1 567 0
 1230 02f0 CF23     		movs	r3, #207
 1231 02f2 FB18     		adds	r3, r7, r3
 1232 02f4 1B78     		ldrb	r3, [r3]
 1233 02f6 002B     		cmp	r3, #0
 1234 02f8 13D1     		bne	.L63
 568:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 569:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Store last written row address only when EEPROM and redundant
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 33


 570:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * copy writes were successful.
 571:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 572:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->lastWrRowAddr = emEepromRowAddr;
 1235              		.loc 1 572 0
 1236 02fa BA69     		ldr	r2, [r7, #24]
 1237 02fc 3B68     		ldr	r3, [r7]
 1238 02fe 9A60     		str	r2, [r3, #8]
 1239              	.LBE7:
 435:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1240              		.loc 1 435 0
 1241 0300 C423     		movs	r3, #196
 1242 0302 FB18     		adds	r3, r7, r3
 1243 0304 1B68     		ldr	r3, [r3]
 1244 0306 0133     		adds	r3, r3, #1
 1245 0308 C422     		movs	r2, #196
 1246 030a BA18     		adds	r2, r7, r2
 1247 030c 1360     		str	r3, [r2]
 1248              	.L43:
 435:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1249              		.loc 1 435 0 is_stmt 0 discriminator 1
 1250 030e C423     		movs	r3, #196
 1251 0310 FB18     		adds	r3, r7, r3
 1252 0312 1A68     		ldr	r2, [r3]
 1253 0314 B423     		movs	r3, #180
 1254 0316 FB18     		adds	r3, r7, r3
 1255 0318 1B68     		ldr	r3, [r3]
 1256 031a 9A42     		cmp	r2, r3
 1257 031c 00D2     		bcs	.LCB1075
 1258 031e A7E6     		b	.L61	@long jump
 1259              	.LCB1075:
 1260 0320 00E0     		b	.L42
 1261              	.L63:
 1262              	.LBB9:
 573:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 574:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 575:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 576:Generated_Source\PSoC4/cy_em_eeprom.c ****                 break;
 1263              		.loc 1 576 0 is_stmt 1
 1264 0322 C046     		nop
 1265              	.L42:
 1266              	.LBE9:
 1267              	.LBE6:
 577:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 578:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 579:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 580:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 1268              		.loc 1 580 0
 1269 0324 CF23     		movs	r3, #207
 1270 0326 FB18     		adds	r3, r7, r3
 1271 0328 1B78     		ldrb	r3, [r3]
 581:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1272              		.loc 1 581 0
 1273 032a 1800     		movs	r0, r3
 1274 032c BD46     		mov	sp, r7
 1275 032e 34B0     		add	sp, sp, #208
 1276              		@ sp needed
 1277 0330 B0BD     		pop	{r4, r5, r7, pc}
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 34


 1278              		.cfi_endproc
 1279              	.LFE2:
 1280              		.size	Cy_Em_EEPROM_Write, .-Cy_Em_EEPROM_Write
 1281 0332 C046     		.section	.text.Cy_Em_EEPROM_Erase,"ax",%progbits
 1282              		.align	2
 1283              		.global	Cy_Em_EEPROM_Erase
 1284              		.code	16
 1285              		.thumb_func
 1286              		.type	Cy_Em_EEPROM_Erase, %function
 1287              	Cy_Em_EEPROM_Erase:
 1288              	.LFB3:
 582:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 583:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 584:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 585:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Erase
 586:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 587:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 588:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function erases the entire contents of the EEPROM. Erased values are all
 589:Generated_Source\PSoC4/cy_em_eeprom.c **** * zeros. This is a blocking function and it does not return until the write
 590:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation is completed. The user firmware should not enter Hibernate mode until
 591:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase is completed. The erase operation is allowed in Sleep and Deep-Sleep modes.
 592:Generated_Source\PSoC4/cy_em_eeprom.c **** * During the flash operation, the device should not be reset, including the
 593:Generated_Source\PSoC4/cy_em_eeprom.c **** * XRES pin, a software reset, and watchdog reset sources. Also, low-voltage
 594:Generated_Source\PSoC4/cy_em_eeprom.c **** * detect circuits should be configured to generate an interrupt instead of a
 595:Generated_Source\PSoC4/cy_em_eeprom.c **** * reset. Otherwise, portions of flash may undergo unexpected changes.
 596:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 597:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 598:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 599:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 600:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 601:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 602:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 603:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 604:Generated_Source\PSoC4/cy_em_eeprom.c **** * For all non PSoC 6 devices the erase operation is performed by clearing
 605:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM data using flash write. This affects the flash durability.
 606:Generated_Source\PSoC4/cy_em_eeprom.c **** * So it is recommended to use this function in utmost case to prolongate
 607:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash life.
 608:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 609:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 610:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform erase
 611:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 612:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 613:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 614:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 615:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case when blocking write option is used, if this function is called by
 616:Generated_Source\PSoC4/cy_em_eeprom.c **** * the CM4 the user code on CM0P and the user code on CM4 are blocked until erase
 617:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row operation is finished. If this function is called by the CM0P the
 618:Generated_Source\PSoC4/cy_em_eeprom.c **** * user code on CM4 is not blocked and the user code on CM0P is blocked until
 619:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase flash row operation is finished. Plan your task allocation accordingly.
 620:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 621:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 622:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if non-blocking write option is used and when user flash is used as
 623:Generated_Source\PSoC4/cy_em_eeprom.c **** * an EEPROM storage care should be taken to prevent the read while write (RWW)
 624:Generated_Source\PSoC4/cy_em_eeprom.c **** * exception. To prevent the RWW exception the user flash macro that includes
 625:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM storage should not be read while the EEPROM erase is not completed.
 626:Generated_Source\PSoC4/cy_em_eeprom.c **** * The read also means the user code execution from the respective flash macro.
 627:Generated_Source\PSoC4/cy_em_eeprom.c **** *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 35


 628:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 629:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Erase(cy_stc_eeprom_context_t * context)
 630:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1289              		.loc 1 630 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 160
 1292              		@ frame_needed = 1, uses_anonymous_args = 0
 1293 0000 90B5     		push	{r4, r7, lr}
 1294              		.cfi_def_cfa_offset 12
 1295              		.cfi_offset 4, -12
 1296              		.cfi_offset 7, -8
 1297              		.cfi_offset 14, -4
 1298 0002 A9B0     		sub	sp, sp, #164
 1299              		.cfi_def_cfa_offset 176
 1300 0004 00AF     		add	r7, sp, #0
 1301              		.cfi_def_cfa_register 7
 1302 0006 7860     		str	r0, [r7, #4]
 631:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 632:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 seqNum;
 633:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = context->lastWrRowAddr;
 1303              		.loc 1 633 0
 1304 0008 7B68     		ldr	r3, [r7, #4]
 1305 000a 9B68     		ldr	r3, [r3, #8]
 1306 000c 8C22     		movs	r2, #140
 1307 000e BA18     		adds	r2, r7, r2
 1308 0010 1360     		str	r3, [r2]
 634:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowRdAddr;
 635:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 1309              		.loc 1 635 0
 1310 0012 9B23     		movs	r3, #155
 1311 0014 FB18     		adds	r3, r7, r3
 1312 0016 0422     		movs	r2, #4
 1313 0018 1A70     		strb	r2, [r3]
 636:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV] = {0u};
 1314              		.loc 1 636 0
 1315 001a 0823     		movs	r3, #8
 1316 001c FB18     		adds	r3, r7, r3
 1317 001e 1800     		movs	r0, r3
 1318 0020 8023     		movs	r3, #128
 1319 0022 1A00     		movs	r2, r3
 1320 0024 0021     		movs	r1, #0
 1321 0026 FFF7FEFF 		bl	memset
 637:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CY_PSOC6)
 638:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromStoredRowAddr = context->lastWrRowAddr;
 639:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 storedSeqNum;
 640:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (!CY_PSOC6) */
 641:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 642:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Get the sequence number of the last written row */
 643:Generated_Source\PSoC4/cy_em_eeprom.c ****     seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
 1322              		.loc 1 643 0
 1323 002a 8C23     		movs	r3, #140
 1324 002c FB18     		adds	r3, r7, r3
 1325 002e 1B68     		ldr	r3, [r3]
 1326 0030 1B68     		ldr	r3, [r3]
 1327 0032 9422     		movs	r2, #148
 1328 0034 BA18     		adds	r2, r7, r2
 1329 0036 1360     		str	r3, [r2]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 36


 644:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 645:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* If there were no writes to EEPROM - nothing to erase */
 646:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != seqNum)
 1330              		.loc 1 646 0
 1331 0038 9423     		movs	r3, #148
 1332 003a FB18     		adds	r3, r7, r3
 1333 003c 1B68     		ldr	r3, [r3]
 1334 003e 002B     		cmp	r3, #0
 1335 0040 56D0     		beq	.L65
 1336              	.LBB10:
 647:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 648:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Calculate the number of row erase operations required */
 649:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 numWrites = context->numberOfRows * context->wearLevelingFactor;
 1337              		.loc 1 649 0
 1338 0042 7B68     		ldr	r3, [r7, #4]
 1339 0044 5A68     		ldr	r2, [r3, #4]
 1340 0046 7B68     		ldr	r3, [r7, #4]
 1341 0048 1B69     		ldr	r3, [r3, #16]
 1342 004a 5343     		muls	r3, r2
 1343 004c 9022     		movs	r2, #144
 1344 004e BA18     		adds	r2, r7, r2
 1345 0050 1360     		str	r3, [r2]
 650:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 651:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC6)
 652:Generated_Source\PSoC4/cy_em_eeprom.c ****         GetNextRowToWrite(seqNum, &emEepromStoredRowAddr, &emEepromRowRdAddr, context);
 653:Generated_Source\PSoC4/cy_em_eeprom.c ****         storedSeqNum = seqNum + 1u;
 654:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC6) */
 655:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 656:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != context->redundantCopy)
 1346              		.loc 1 656 0
 1347 0052 7B68     		ldr	r3, [r7, #4]
 1348 0054 1B7D     		ldrb	r3, [r3, #20]
 1349 0056 002B     		cmp	r3, #0
 1350 0058 0BD0     		beq	.L66
 657:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 658:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
 659:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1351              		.loc 1 659 0
 1352 005a 0823     		movs	r3, #8
 1353 005c FB18     		adds	r3, r7, r3
 1354 005e 4033     		adds	r3, r3, #64
 1355 0060 4021     		movs	r1, #64
 1356 0062 1800     		movs	r0, r3
 1357 0064 FFF7FEFF 		bl	CalcChecksum
 1358 0068 0300     		movs	r3, r0
 658:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1359              		.loc 1 658 0
 1360 006a 1A00     		movs	r2, r3
 1361 006c 0823     		movs	r3, #8
 1362 006e FB18     		adds	r3, r7, r3
 1363 0070 DA63     		str	r2, [r3, #60]
 1364              	.L66:
 660:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                   CY_EM_EEPROM_EEPROM_DATA_LEN);
 661:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 662:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 663:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(i = 0u; i < numWrites; i++)
 1365              		.loc 1 663 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 37


 1366 0072 0023     		movs	r3, #0
 1367 0074 9C22     		movs	r2, #156
 1368 0076 BA18     		adds	r2, r7, r2
 1369 0078 1360     		str	r3, [r2]
 1370 007a 31E0     		b	.L67
 1371              	.L68:
 664:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 665:Generated_Source\PSoC4/cy_em_eeprom.c ****         #if (CY_PSOC6)
 666:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* For PSoC 6 the erase operation moves backwards. From last written row
 667:Generated_Source\PSoC4/cy_em_eeprom.c ****             * identified by "seqNum" down to "seqNum" - "numWrites". If "emEepromRowAddr"
 668:Generated_Source\PSoC4/cy_em_eeprom.c ****             * is zero this means that the row identified by "seqNum" was previously 
 669:Generated_Source\PSoC4/cy_em_eeprom.c ****             * erased.
 670:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 671:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u != emEepromRowAddr)
 672:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 673:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = EraseRow(emEepromRowAddr, (uint32)writeRamBuffer, context);
 674:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 675:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 676:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum--;
 677:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 678:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u == seqNum)
 679:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 680:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Exit the loop as there is no more row is EEPROM to be erased */
 681:Generated_Source\PSoC4/cy_em_eeprom.c ****                 break;
 682:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 683:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromRowAddr = GetRowAddrBySeqNum(seqNum, context);
 684:Generated_Source\PSoC4/cy_em_eeprom.c ****         #else
 685:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
 1372              		.loc 1 685 0 discriminator 3
 1373 007c 8C23     		movs	r3, #140
 1374 007e FB18     		adds	r3, r7, r3
 1375 0080 1B68     		ldr	r3, [r3]
 1376 0082 1B68     		ldr	r3, [r3]
 1377 0084 9422     		movs	r2, #148
 1378 0086 BA18     		adds	r2, r7, r2
 1379 0088 1360     		str	r3, [r2]
 686:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the address of the row to be erased. "emEepromRowAddr" may be updated
 687:Generated_Source\PSoC4/cy_em_eeprom.c ****             * with the proper address (if wear leveling is used).
 688:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 689:Generated_Source\PSoC4/cy_em_eeprom.c ****             GetNextRowToWrite(seqNum, &emEepromRowAddr, &emEepromRowRdAddr, context);
 1380              		.loc 1 689 0 discriminator 3
 1381 008a 7B68     		ldr	r3, [r7, #4]
 1382 008c 8822     		movs	r2, #136
 1383 008e BA18     		adds	r2, r7, r2
 1384 0090 8C21     		movs	r1, #140
 1385 0092 7918     		adds	r1, r7, r1
 1386 0094 9420     		movs	r0, #148
 1387 0096 3818     		adds	r0, r7, r0
 1388 0098 0068     		ldr	r0, [r0]
 1389 009a FFF7FEFF 		bl	GetNextRowToWrite
 690:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum++;
 1390              		.loc 1 690 0 discriminator 3
 1391 009e 9423     		movs	r3, #148
 1392 00a0 FB18     		adds	r3, r7, r3
 1393 00a2 1B68     		ldr	r3, [r3]
 1394 00a4 0133     		adds	r3, r3, #1
 1395 00a6 9422     		movs	r2, #148
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 38


 1396 00a8 BA18     		adds	r2, r7, r2
 1397 00aa 1360     		str	r3, [r2]
 691:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[0u] = seqNum;
 1398              		.loc 1 691 0 discriminator 3
 1399 00ac 0823     		movs	r3, #8
 1400 00ae FB18     		adds	r3, r7, r3
 1401 00b0 9422     		movs	r2, #148
 1402 00b2 BA18     		adds	r2, r7, r2
 1403 00b4 1268     		ldr	r2, [r2]
 1404 00b6 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = EraseRow(emEepromRowAddr, (uint32)writeRamBuffer, context);
 1405              		.loc 1 692 0 discriminator 3
 1406 00b8 8C23     		movs	r3, #140
 1407 00ba FB18     		adds	r3, r7, r3
 1408 00bc 1B68     		ldr	r3, [r3]
 1409 00be 0822     		movs	r2, #8
 1410 00c0 B918     		adds	r1, r7, r2
 1411 00c2 9B22     		movs	r2, #155
 1412 00c4 BC18     		adds	r4, r7, r2
 1413 00c6 7A68     		ldr	r2, [r7, #4]
 1414 00c8 1800     		movs	r0, r3
 1415 00ca FFF7FEFF 		bl	EraseRow
 1416 00ce 0300     		movs	r3, r0
 1417 00d0 2370     		strb	r3, [r4]
 663:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1418              		.loc 1 663 0 discriminator 3
 1419 00d2 9C23     		movs	r3, #156
 1420 00d4 FB18     		adds	r3, r7, r3
 1421 00d6 1B68     		ldr	r3, [r3]
 1422 00d8 0133     		adds	r3, r3, #1
 1423 00da 9C22     		movs	r2, #156
 1424 00dc BA18     		adds	r2, r7, r2
 1425 00de 1360     		str	r3, [r2]
 1426              	.L67:
 663:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1427              		.loc 1 663 0 is_stmt 0 discriminator 1
 1428 00e0 9C23     		movs	r3, #156
 1429 00e2 FB18     		adds	r3, r7, r3
 1430 00e4 1A68     		ldr	r2, [r3]
 1431 00e6 9023     		movs	r3, #144
 1432 00e8 FB18     		adds	r3, r7, r3
 1433 00ea 1B68     		ldr	r3, [r3]
 1434 00ec 9A42     		cmp	r2, r3
 1435 00ee C5D3     		bcc	.L68
 1436              	.L65:
 1437              	.LBE10:
 693:Generated_Source\PSoC4/cy_em_eeprom.c ****         #endif /* (CY_PSOC6) */
 694:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 695:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 696:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC6)
 697:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
 698:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 699:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[0u] = storedSeqNum;
 700:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 701:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the previously stored sequence number to the flash row which would be
 702:Generated_Source\PSoC4/cy_em_eeprom.c ****             * written next if the erase wouldn't happen. In this case the write to
 703:Generated_Source\PSoC4/cy_em_eeprom.c ****             * redundant copy can be skipped as it does not add any value.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 39


 704:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 705:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = WriteRow(emEepromStoredRowAddr, writeRamBuffer, context);
 706:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 707:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_EM_EEPROM_SUCCESS == ret)
 708:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 709:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->lastWrRowAddr = emEepromStoredRowAddr;
 710:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 711:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 712:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC6) */
 713:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 714:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 715:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 1438              		.loc 1 715 0 is_stmt 1
 1439 00f0 9B23     		movs	r3, #155
 1440 00f2 FB18     		adds	r3, r7, r3
 1441 00f4 1B78     		ldrb	r3, [r3]
 716:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1442              		.loc 1 716 0
 1443 00f6 1800     		movs	r0, r3
 1444 00f8 BD46     		mov	sp, r7
 1445 00fa 29B0     		add	sp, sp, #164
 1446              		@ sp needed
 1447 00fc 90BD     		pop	{r4, r7, pc}
 1448              		.cfi_endproc
 1449              	.LFE3:
 1450              		.size	Cy_Em_EEPROM_Erase, .-Cy_Em_EEPROM_Erase
 1451 00fe C046     		.section	.text.Cy_Em_EEPROM_NumWrites,"ax",%progbits
 1452              		.align	2
 1453              		.global	Cy_Em_EEPROM_NumWrites
 1454              		.code	16
 1455              		.thumb_func
 1456              		.type	Cy_Em_EEPROM_NumWrites, %function
 1457              	Cy_Em_EEPROM_NumWrites:
 1458              	.LFB4:
 717:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 718:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 719:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_NumWrites
 721:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 722:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 723:Generated_Source\PSoC4/cy_em_eeprom.c **** * Returns the number of the EEPROM writes completed so far.
 724:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 725:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 726:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 727:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 728:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 729:Generated_Source\PSoC4/cy_em_eeprom.c **** * The number of writes performed to the EEPROM.
 730:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 731:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 732:Generated_Source\PSoC4/cy_em_eeprom.c **** uint32 Cy_Em_EEPROM_NumWrites(cy_stc_eeprom_context_t * context)
 733:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1459              		.loc 1 733 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 8
 1462              		@ frame_needed = 1, uses_anonymous_args = 0
 1463 0000 80B5     		push	{r7, lr}
 1464              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 40


 1465              		.cfi_offset 7, -8
 1466              		.cfi_offset 14, -4
 1467 0002 82B0     		sub	sp, sp, #8
 1468              		.cfi_def_cfa_offset 16
 1469 0004 00AF     		add	r7, sp, #0
 1470              		.cfi_def_cfa_register 7
 1471 0006 7860     		str	r0, [r7, #4]
 734:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr));
 1472              		.loc 1 734 0
 1473 0008 7B68     		ldr	r3, [r7, #4]
 1474 000a 9B68     		ldr	r3, [r3, #8]
 1475 000c 1B68     		ldr	r3, [r3]
 735:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1476              		.loc 1 735 0
 1477 000e 1800     		movs	r0, r3
 1478 0010 BD46     		mov	sp, r7
 1479 0012 02B0     		add	sp, sp, #8
 1480              		@ sp needed
 1481 0014 80BD     		pop	{r7, pc}
 1482              		.cfi_endproc
 1483              	.LFE4:
 1484              		.size	Cy_Em_EEPROM_NumWrites, .-Cy_Em_EEPROM_NumWrites
 1485 0016 C046     		.section	.text.FindLastWrittenRow,"ax",%progbits
 1486              		.align	2
 1487              		.code	16
 1488              		.thumb_func
 1489              		.type	FindLastWrittenRow, %function
 1490              	FindLastWrittenRow:
 1491              	.LFB5:
 736:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 737:Generated_Source\PSoC4/cy_em_eeprom.c **** /** \} */
 738:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 739:Generated_Source\PSoC4/cy_em_eeprom.c **** /** \cond INTERNAL */
 740:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 741:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 742:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 743:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: FindLastWrittenRow
 744:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 745:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 746:Generated_Source\PSoC4/cy_em_eeprom.c **** * Performs a search of the last written row address of the EEPROM associated
 747:Generated_Source\PSoC4/cy_em_eeprom.c **** * with the context structure. If there were no writes to the EEPROM the
 748:Generated_Source\PSoC4/cy_em_eeprom.c **** * function returns the start address of the EEPROM. The row address is returned
 749:Generated_Source\PSoC4/cy_em_eeprom.c **** * in the input parameter.
 750:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 751:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param lastWrRowPtr
 752:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a memory where the last written row will be returned.
 753:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 754:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 755:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 756:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 757:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 758:Generated_Source\PSoC4/cy_em_eeprom.c **** static void FindLastWrittenRow(uint32 * lastWrRowPtr, cy_stc_eeprom_context_t * context)
 759:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1492              		.loc 1 759 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 24
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 41


 1496 0000 80B5     		push	{r7, lr}
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 86B0     		sub	sp, sp, #24
 1501              		.cfi_def_cfa_offset 32
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 7860     		str	r0, [r7, #4]
 1505 0008 3960     		str	r1, [r7]
 760:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 seqNum = 0u;
 1506              		.loc 1 760 0
 1507 000a 0023     		movs	r3, #0
 1508 000c BB60     		str	r3, [r7, #8]
 761:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 prevSeqNum = 0u;
 1509              		.loc 1 761 0
 1510 000e 0023     		movs	r3, #0
 1511 0010 7B61     		str	r3, [r7, #20]
 762:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 numRows;
 763:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromAddr = context->userFlashStartAddr;
 1512              		.loc 1 763 0
 1513 0012 3B68     		ldr	r3, [r7]
 1514 0014 9B69     		ldr	r3, [r3, #24]
 1515 0016 FB60     		str	r3, [r7, #12]
 764:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 765:Generated_Source\PSoC4/cy_em_eeprom.c ****     *lastWrRowPtr = emEepromAddr;
 1516              		.loc 1 765 0
 1517 0018 7B68     		ldr	r3, [r7, #4]
 1518 001a FA68     		ldr	r2, [r7, #12]
 1519 001c 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 767:Generated_Source\PSoC4/cy_em_eeprom.c ****     for(numRows = 0u; numRows < (context->numberOfRows * context->wearLevelingFactor); numRows++)
 1520              		.loc 1 767 0
 1521 001e 0023     		movs	r3, #0
 1522 0020 3B61     		str	r3, [r7, #16]
 1523 0022 14E0     		b	.L73
 1524              	.L75:
 768:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 769:Generated_Source\PSoC4/cy_em_eeprom.c ****         seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromAddr);
 1525              		.loc 1 769 0
 1526 0024 FB68     		ldr	r3, [r7, #12]
 1527 0026 1B68     		ldr	r3, [r3]
 1528 0028 BB60     		str	r3, [r7, #8]
 770:Generated_Source\PSoC4/cy_em_eeprom.c ****         if((0u != seqNum) && (seqNum > prevSeqNum))
 1529              		.loc 1 770 0
 1530 002a BB68     		ldr	r3, [r7, #8]
 1531 002c 002B     		cmp	r3, #0
 1532 002e 08D0     		beq	.L74
 1533              		.loc 1 770 0 is_stmt 0 discriminator 1
 1534 0030 BA68     		ldr	r2, [r7, #8]
 1535 0032 7B69     		ldr	r3, [r7, #20]
 1536 0034 9A42     		cmp	r2, r3
 1537 0036 04D9     		bls	.L74
 771:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 772:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Some record in EEPROM was found. Store found sequence
 773:Generated_Source\PSoC4/cy_em_eeprom.c ****             * number and row address.
 774:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 42


 775:Generated_Source\PSoC4/cy_em_eeprom.c ****             prevSeqNum = seqNum;
 1538              		.loc 1 775 0 is_stmt 1
 1539 0038 BB68     		ldr	r3, [r7, #8]
 1540 003a 7B61     		str	r3, [r7, #20]
 776:Generated_Source\PSoC4/cy_em_eeprom.c ****             *lastWrRowPtr = emEepromAddr;
 1541              		.loc 1 776 0
 1542 003c 7B68     		ldr	r3, [r7, #4]
 1543 003e FA68     		ldr	r2, [r7, #12]
 1544 0040 1A60     		str	r2, [r3]
 1545              	.L74:
 777:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 778:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 779:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Switch to the next row */
 780:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromAddr = emEepromAddr + CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 1546              		.loc 1 780 0 discriminator 2
 1547 0042 FB68     		ldr	r3, [r7, #12]
 1548 0044 8033     		adds	r3, r3, #128
 1549 0046 FB60     		str	r3, [r7, #12]
 767:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1550              		.loc 1 767 0 discriminator 2
 1551 0048 3B69     		ldr	r3, [r7, #16]
 1552 004a 0133     		adds	r3, r3, #1
 1553 004c 3B61     		str	r3, [r7, #16]
 1554              	.L73:
 767:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1555              		.loc 1 767 0 is_stmt 0 discriminator 1
 1556 004e 3B68     		ldr	r3, [r7]
 1557 0050 5A68     		ldr	r2, [r3, #4]
 1558 0052 3B68     		ldr	r3, [r7]
 1559 0054 1B69     		ldr	r3, [r3, #16]
 1560 0056 5A43     		muls	r2, r3
 1561 0058 3B69     		ldr	r3, [r7, #16]
 1562 005a 9A42     		cmp	r2, r3
 1563 005c E2D8     		bhi	.L75
 781:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 782:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1564              		.loc 1 782 0 is_stmt 1
 1565 005e C046     		nop
 1566 0060 BD46     		mov	sp, r7
 1567 0062 06B0     		add	sp, sp, #24
 1568              		@ sp needed
 1569 0064 80BD     		pop	{r7, pc}
 1570              		.cfi_endproc
 1571              	.LFE5:
 1572              		.size	FindLastWrittenRow, .-FindLastWrittenRow
 1573 0066 C046     		.section	.text.GetRowAddrBySeqNum,"ax",%progbits
 1574              		.align	2
 1575              		.code	16
 1576              		.thumb_func
 1577              		.type	GetRowAddrBySeqNum, %function
 1578              	GetRowAddrBySeqNum:
 1579              	.LFB6:
 783:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 784:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 785:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 786:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetRowAddrBySeqNum
 787:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 43


 788:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 789:Generated_Source\PSoC4/cy_em_eeprom.c **** * Returns the address of the row in EEPROM using its sequence number.
 790:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 791:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param seqNum
 792:Generated_Source\PSoC4/cy_em_eeprom.c **** * The sequence number of the row.
 793:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 794:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 795:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure.
 796:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 797:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 798:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the row or zero if the row with the sequence number was not
 799:Generated_Source\PSoC4/cy_em_eeprom.c **** * found.
 800:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 801:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 802:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetRowAddrBySeqNum(uint32 seqNum, cy_stc_eeprom_context_t * context)
 803:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1580              		.loc 1 803 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 16
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584 0000 80B5     		push	{r7, lr}
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 7, -8
 1587              		.cfi_offset 14, -4
 1588 0002 84B0     		sub	sp, sp, #16
 1589              		.cfi_def_cfa_offset 24
 1590 0004 00AF     		add	r7, sp, #0
 1591              		.cfi_def_cfa_register 7
 1592 0006 7860     		str	r0, [r7, #4]
 1593 0008 3960     		str	r1, [r7]
 804:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromAddr = context->userFlashStartAddr;
 1594              		.loc 1 804 0
 1595 000a 3B68     		ldr	r3, [r7]
 1596 000c 9B69     		ldr	r3, [r3, #24]
 1597 000e FB60     		str	r3, [r7, #12]
 805:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 806:Generated_Source\PSoC4/cy_em_eeprom.c ****     while(CY_EM_EEPROM_GET_SEQ_NUM(emEepromAddr) != seqNum)
 1598              		.loc 1 806 0
 1599 0010 0AE0     		b	.L77
 1600              	.L79:
 807:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 808:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Switch to the next row */
 809:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromAddr = emEepromAddr + CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 1601              		.loc 1 809 0
 1602 0012 FB68     		ldr	r3, [r7, #12]
 1603 0014 8033     		adds	r3, r3, #128
 1604 0016 FB60     		str	r3, [r7, #12]
 810:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 811:Generated_Source\PSoC4/cy_em_eeprom.c ****         if (CY_EM_EEPROM_ADDR_IN_RANGE !=
 812:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(emEepromAddr, context->wlEndAddr))
 1605              		.loc 1 812 0
 1606 0018 3B68     		ldr	r3, [r7]
 1607 001a 1A68     		ldr	r2, [r3]
 811:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(emEepromAddr, context->wlEndAddr))
 1608              		.loc 1 811 0
 1609 001c FB68     		ldr	r3, [r7, #12]
 1610 001e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 44


 1611 0020 02D8     		bhi	.L77
 813:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 814:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromAddr = 0u;
 1612              		.loc 1 814 0
 1613 0022 0023     		movs	r3, #0
 1614 0024 FB60     		str	r3, [r7, #12]
 815:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Exit the loop as we reached the end of EEPROM */
 816:Generated_Source\PSoC4/cy_em_eeprom.c ****             break;
 1615              		.loc 1 816 0
 1616 0026 04E0     		b	.L78
 1617              	.L77:
 806:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1618              		.loc 1 806 0
 1619 0028 FB68     		ldr	r3, [r7, #12]
 1620 002a 1A68     		ldr	r2, [r3]
 1621 002c 7B68     		ldr	r3, [r7, #4]
 1622 002e 9A42     		cmp	r2, r3
 1623 0030 EFD1     		bne	.L79
 1624              	.L78:
 817:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 818:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 819:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 820:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (emEepromAddr);
 1625              		.loc 1 820 0
 1626 0032 FB68     		ldr	r3, [r7, #12]
 821:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1627              		.loc 1 821 0
 1628 0034 1800     		movs	r0, r3
 1629 0036 BD46     		mov	sp, r7
 1630 0038 04B0     		add	sp, sp, #16
 1631              		@ sp needed
 1632 003a 80BD     		pop	{r7, pc}
 1633              		.cfi_endproc
 1634              	.LFE6:
 1635              		.size	GetRowAddrBySeqNum, .-GetRowAddrBySeqNum
 1636              		.section	.text.GetNextRowToWrite,"ax",%progbits
 1637              		.align	2
 1638              		.code	16
 1639              		.thumb_func
 1640              		.type	GetNextRowToWrite, %function
 1641              	GetNextRowToWrite:
 1642              	.LFB7:
 822:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 823:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 824:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 825:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetNextRowToWrite
 826:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 827:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 828:Generated_Source\PSoC4/cy_em_eeprom.c **** * Performs a range check of the row that should be written and updates the
 829:Generated_Source\PSoC4/cy_em_eeprom.c **** * address to the row respectively. The similar actions are done for the read
 830:Generated_Source\PSoC4/cy_em_eeprom.c **** * address.
 831:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 832:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param seqNum
 833:Generated_Source\PSoC4/cy_em_eeprom.c **** * The sequence number of the last written row.
 834:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 835:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowToWrPtr
 836:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the last written row (input). The address of the row to be 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 45


 837:Generated_Source\PSoC4/cy_em_eeprom.c **** * written (output).
 838:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 839:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowToRdPtr
 840:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the row from which the data should be read into the RAM buffer
 841:Generated_Source\PSoC4/cy_em_eeprom.c **** * in a later write operation. Out parameter.
 842:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 843:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 844:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 845:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 846:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 847:Generated_Source\PSoC4/cy_em_eeprom.c **** static void GetNextRowToWrite(uint32 seqNum,
 848:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToWrPtr,
 849:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToRdPtr,
 850:Generated_Source\PSoC4/cy_em_eeprom.c ****                             cy_stc_eeprom_context_t * context)
 851:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1643              		.loc 1 851 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 16
 1646              		@ frame_needed = 1, uses_anonymous_args = 0
 1647 0000 80B5     		push	{r7, lr}
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 7, -8
 1650              		.cfi_offset 14, -4
 1651 0002 84B0     		sub	sp, sp, #16
 1652              		.cfi_def_cfa_offset 24
 1653 0004 00AF     		add	r7, sp, #0
 1654              		.cfi_def_cfa_register 7
 1655 0006 F860     		str	r0, [r7, #12]
 1656 0008 B960     		str	r1, [r7, #8]
 1657 000a 7A60     		str	r2, [r7, #4]
 1658 000c 3B60     		str	r3, [r7]
 852:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Switch to the next row to be written if the current sequence number is
 853:Generated_Source\PSoC4/cy_em_eeprom.c ****     * not zero.
 854:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 855:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != seqNum)
 1659              		.loc 1 855 0
 1660 000e FB68     		ldr	r3, [r7, #12]
 1661 0010 002B     		cmp	r3, #0
 1662 0012 05D0     		beq	.L82
 856:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 857:Generated_Source\PSoC4/cy_em_eeprom.c ****         *rowToWrPtr = (*rowToWrPtr + CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 1663              		.loc 1 857 0
 1664 0014 BB68     		ldr	r3, [r7, #8]
 1665 0016 1B68     		ldr	r3, [r3]
 1666 0018 8033     		adds	r3, r3, #128
 1667 001a 1A00     		movs	r2, r3
 1668 001c BB68     		ldr	r3, [r7, #8]
 1669 001e 1A60     		str	r2, [r3]
 1670              	.L82:
 858:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 859:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 860:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* If the resulting row address is out of EEPROM, then switch to the base
 861:Generated_Source\PSoC4/cy_em_eeprom.c ****     * EEPROM address (Row#0).
 862:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 863:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CY_EM_EEPROM_ADDR_IN_RANGE !=
 864:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(*rowToWrPtr, context->wlEndAddr))
 1671              		.loc 1 864 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 46


 1672 0020 BB68     		ldr	r3, [r7, #8]
 1673 0022 1A68     		ldr	r2, [r3]
 1674 0024 3B68     		ldr	r3, [r7]
 1675 0026 1B68     		ldr	r3, [r3]
 863:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(*rowToWrPtr, context->wlEndAddr))
 1676              		.loc 1 863 0
 1677 0028 9A42     		cmp	r2, r3
 1678 002a 03D3     		bcc	.L83
 865:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 866:Generated_Source\PSoC4/cy_em_eeprom.c ****         *rowToWrPtr = context->userFlashStartAddr;
 1679              		.loc 1 866 0
 1680 002c 3B68     		ldr	r3, [r7]
 1681 002e 9A69     		ldr	r2, [r3, #24]
 1682 0030 BB68     		ldr	r3, [r7, #8]
 1683 0032 1A60     		str	r2, [r3]
 1684              	.L83:
 867:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 868:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 869:Generated_Source\PSoC4/cy_em_eeprom.c ****     *rowToRdPtr = 0u;
 1685              		.loc 1 869 0
 1686 0034 7B68     		ldr	r3, [r7, #4]
 1687 0036 0022     		movs	r2, #0
 1688 0038 1A60     		str	r2, [r3]
 870:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 871:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check if the sequence number is larger than the number of rows in the EEPROM.
 872:Generated_Source\PSoC4/cy_em_eeprom.c ****     * If not, do not update the row read address because there is no historic
 873:Generated_Source\PSoC4/cy_em_eeprom.c ****     * data to be read.
 874:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 875:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(context->numberOfRows <= seqNum)
 1689              		.loc 1 875 0
 1690 003a 3B68     		ldr	r3, [r7]
 1691 003c 5A68     		ldr	r2, [r3, #4]
 1692 003e FB68     		ldr	r3, [r7, #12]
 1693 0040 9A42     		cmp	r2, r3
 1694 0042 2FD8     		bhi	.L88
 876:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 877:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Check if wear leveling is used in EEPROM */
 878:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(context->wearLevelingFactor > 1u)
 1695              		.loc 1 878 0
 1696 0044 3B68     		ldr	r3, [r7]
 1697 0046 1B69     		ldr	r3, [r3, #16]
 1698 0048 012B     		cmp	r3, #1
 1699 004a 27D9     		bls	.L85
 879:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 880:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* The read row address should be taken from an EEPROM copy that became
 881:Generated_Source\PSoC4/cy_em_eeprom.c ****             * inactive recently. This condition check handles that.
 882:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 883:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((*rowToWrPtr - (context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW)) <
 1700              		.loc 1 883 0
 1701 004c BB68     		ldr	r3, [r7, #8]
 1702 004e 1A68     		ldr	r2, [r3]
 1703 0050 3B68     		ldr	r3, [r7]
 1704 0052 5B68     		ldr	r3, [r3, #4]
 1705 0054 DB01     		lsls	r3, r3, #7
 1706 0056 D21A     		subs	r2, r2, r3
 884:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->userFlashStartAddr)
 1707              		.loc 1 884 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 47


 1708 0058 3B68     		ldr	r3, [r7]
 1709 005a 9B69     		ldr	r3, [r3, #24]
 883:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->userFlashStartAddr)
 1710              		.loc 1 883 0
 1711 005c 9A42     		cmp	r2, r3
 1712 005e 14D2     		bcs	.L86
 885:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 886:Generated_Source\PSoC4/cy_em_eeprom.c ****                 *rowToRdPtr = context->userFlashStartAddr +
 1713              		.loc 1 886 0
 1714 0060 3B68     		ldr	r3, [r7]
 1715 0062 9A69     		ldr	r2, [r3, #24]
 887:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1716              		.loc 1 887 0
 1717 0064 3B68     		ldr	r3, [r7]
 1718 0066 5968     		ldr	r1, [r3, #4]
 1719 0068 3B68     		ldr	r3, [r7]
 1720 006a 1B69     		ldr	r3, [r3, #16]
 1721 006c 0F48     		ldr	r0, .L89
 1722 006e 8446     		mov	ip, r0
 1723 0070 6344     		add	r3, r3, ip
 1724 0072 4B43     		muls	r3, r1
 1725 0074 DB01     		lsls	r3, r3, #7
 886:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1726              		.loc 1 886 0
 1727 0076 D218     		adds	r2, r2, r3
 888:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CY_EM_EEPROM_FLASH_SIZEOF_ROW) + (*rowToWrPtr - context->userFlashStartAddr
 1728              		.loc 1 888 0
 1729 0078 BB68     		ldr	r3, [r7, #8]
 1730 007a 1968     		ldr	r1, [r3]
 1731 007c 3B68     		ldr	r3, [r7]
 1732 007e 9B69     		ldr	r3, [r3, #24]
 1733 0080 CB1A     		subs	r3, r1, r3
 1734 0082 D218     		adds	r2, r2, r3
 886:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1735              		.loc 1 886 0
 1736 0084 7B68     		ldr	r3, [r7, #4]
 1737 0086 1A60     		str	r2, [r3]
 889:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 890:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 891:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 892:Generated_Source\PSoC4/cy_em_eeprom.c ****                 *rowToRdPtr = *rowToWrPtr - (context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW)
 893:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 894:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 895:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
 896:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 897:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* If no wear leveling, always read from the same flash row that
 898:Generated_Source\PSoC4/cy_em_eeprom.c ****             * should be written.
 899:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 900:Generated_Source\PSoC4/cy_em_eeprom.c ****             *rowToRdPtr = *rowToWrPtr;
 901:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 902:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 903:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1738              		.loc 1 903 0
 1739 0088 0CE0     		b	.L88
 1740              	.L86:
 892:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 1741              		.loc 1 892 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 48


 1742 008a BB68     		ldr	r3, [r7, #8]
 1743 008c 1A68     		ldr	r2, [r3]
 1744 008e 3B68     		ldr	r3, [r7]
 1745 0090 5B68     		ldr	r3, [r3, #4]
 1746 0092 DB01     		lsls	r3, r3, #7
 1747 0094 D21A     		subs	r2, r2, r3
 1748 0096 7B68     		ldr	r3, [r7, #4]
 1749 0098 1A60     		str	r2, [r3]
 1750              		.loc 1 903 0
 1751 009a 03E0     		b	.L88
 1752              	.L85:
 900:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 1753              		.loc 1 900 0
 1754 009c BB68     		ldr	r3, [r7, #8]
 1755 009e 1A68     		ldr	r2, [r3]
 1756 00a0 7B68     		ldr	r3, [r7, #4]
 1757 00a2 1A60     		str	r2, [r3]
 1758              	.L88:
 1759              		.loc 1 903 0
 1760 00a4 C046     		nop
 1761 00a6 BD46     		mov	sp, r7
 1762 00a8 04B0     		add	sp, sp, #16
 1763              		@ sp needed
 1764 00aa 80BD     		pop	{r7, pc}
 1765              	.L90:
 1766              		.align	2
 1767              	.L89:
 1768 00ac FFFFFF01 		.word	33554431
 1769              		.cfi_endproc
 1770              	.LFE7:
 1771              		.size	GetNextRowToWrite, .-GetNextRowToWrite
 1772              		.section	.text.CalcChecksum,"ax",%progbits
 1773              		.align	2
 1774              		.code	16
 1775              		.thumb_func
 1776              		.type	CalcChecksum, %function
 1777              	CalcChecksum:
 1778              	.LFB8:
 904:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 905:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 906:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 907:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CalcChecksum
 908:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 909:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 910:Generated_Source\PSoC4/cy_em_eeprom.c **** * Implements CRC-8 that is used in checksum calculation for the redundant copy
 911:Generated_Source\PSoC4/cy_em_eeprom.c **** * algorithm.
 912:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 913:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowData
 914:Generated_Source\PSoC4/cy_em_eeprom.c **** * The row data to be used to calculate the checksum.
 915:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 916:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param len
 917:Generated_Source\PSoC4/cy_em_eeprom.c **** * The length of rowData.
 918:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 919:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 920:Generated_Source\PSoC4/cy_em_eeprom.c **** * The calculated value of CRC-8.
 921:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 922:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 49


 923:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint8 CalcChecksum(uint8 rowData[], uint32 len)
 924:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1779              		.loc 1 924 0
 1780              		.cfi_startproc
 1781              		@ args = 0, pretend = 0, frame = 16
 1782              		@ frame_needed = 1, uses_anonymous_args = 0
 1783 0000 80B5     		push	{r7, lr}
 1784              		.cfi_def_cfa_offset 8
 1785              		.cfi_offset 7, -8
 1786              		.cfi_offset 14, -4
 1787 0002 84B0     		sub	sp, sp, #16
 1788              		.cfi_def_cfa_offset 24
 1789 0004 00AF     		add	r7, sp, #0
 1790              		.cfi_def_cfa_register 7
 1791 0006 7860     		str	r0, [r7, #4]
 1792 0008 3960     		str	r1, [r7]
 925:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint8 crc = CY_EM_EEPROM_CRC8_SEED;
 1793              		.loc 1 925 0
 1794 000a 0F23     		movs	r3, #15
 1795 000c FB18     		adds	r3, r7, r3
 1796 000e FF22     		movs	r2, #255
 1797 0010 1A70     		strb	r2, [r3]
 926:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint8 i;
 927:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint16 cnt = 0u;
 1798              		.loc 1 927 0
 1799 0012 0C23     		movs	r3, #12
 1800 0014 FB18     		adds	r3, r7, r3
 1801 0016 0022     		movs	r2, #0
 1802 0018 1A80     		strh	r2, [r3]
 928:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 929:Generated_Source\PSoC4/cy_em_eeprom.c ****     while(cnt != len)
 1803              		.loc 1 929 0
 1804 001a 3BE0     		b	.L92
 1805              	.L97:
 930:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 931:Generated_Source\PSoC4/cy_em_eeprom.c ****         crc ^= rowData[cnt];
 1806              		.loc 1 931 0
 1807 001c 0C23     		movs	r3, #12
 1808 001e FB18     		adds	r3, r7, r3
 1809 0020 1B88     		ldrh	r3, [r3]
 1810 0022 7A68     		ldr	r2, [r7, #4]
 1811 0024 D318     		adds	r3, r2, r3
 1812 0026 1978     		ldrb	r1, [r3]
 1813 0028 0F23     		movs	r3, #15
 1814 002a FB18     		adds	r3, r7, r3
 1815 002c 0F22     		movs	r2, #15
 1816 002e BA18     		adds	r2, r7, r2
 1817 0030 1278     		ldrb	r2, [r2]
 1818 0032 4A40     		eors	r2, r1
 1819 0034 1A70     		strb	r2, [r3]
 932:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1820              		.loc 1 932 0
 1821 0036 0E23     		movs	r3, #14
 1822 0038 FB18     		adds	r3, r7, r3
 1823 003a 0022     		movs	r2, #0
 1824 003c 1A70     		strb	r2, [r3]
 1825 003e 1DE0     		b	.L93
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 50


 1826              	.L96:
 933:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 934:Generated_Source\PSoC4/cy_em_eeprom.c ****             crc = CY_EM_EEPROM_CALCULATE_CRC8(crc);
 1827              		.loc 1 934 0
 1828 0040 0F23     		movs	r3, #15
 1829 0042 FB18     		adds	r3, r7, r3
 1830 0044 1B78     		ldrb	r3, [r3]
 1831 0046 5BB2     		sxtb	r3, r3
 1832 0048 002B     		cmp	r3, #0
 1833 004a 08DA     		bge	.L94
 1834              		.loc 1 934 0 is_stmt 0 discriminator 1
 1835 004c 0F23     		movs	r3, #15
 1836 004e FB18     		adds	r3, r7, r3
 1837 0050 1B78     		ldrb	r3, [r3]
 1838 0052 DB18     		adds	r3, r3, r3
 1839 0054 DBB2     		uxtb	r3, r3
 1840 0056 3122     		movs	r2, #49
 1841 0058 5340     		eors	r3, r2
 1842 005a DBB2     		uxtb	r3, r3
 1843 005c 04E0     		b	.L95
 1844              	.L94:
 1845              		.loc 1 934 0 discriminator 2
 1846 005e 0F23     		movs	r3, #15
 1847 0060 FB18     		adds	r3, r7, r3
 1848 0062 1B78     		ldrb	r3, [r3]
 1849 0064 DB18     		adds	r3, r3, r3
 1850 0066 DBB2     		uxtb	r3, r3
 1851              	.L95:
 1852              		.loc 1 934 0 discriminator 4
 1853 0068 0F22     		movs	r2, #15
 1854 006a BA18     		adds	r2, r7, r2
 1855 006c 1370     		strb	r3, [r2]
 932:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1856              		.loc 1 932 0 is_stmt 1 discriminator 4
 1857 006e 0E23     		movs	r3, #14
 1858 0070 FB18     		adds	r3, r7, r3
 1859 0072 1A78     		ldrb	r2, [r3]
 1860 0074 0E23     		movs	r3, #14
 1861 0076 FB18     		adds	r3, r7, r3
 1862 0078 0132     		adds	r2, r2, #1
 1863 007a 1A70     		strb	r2, [r3]
 1864              	.L93:
 932:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1865              		.loc 1 932 0 is_stmt 0 discriminator 2
 1866 007c 0E23     		movs	r3, #14
 1867 007e FB18     		adds	r3, r7, r3
 1868 0080 1B78     		ldrb	r3, [r3]
 1869 0082 072B     		cmp	r3, #7
 1870 0084 DCD9     		bls	.L96
 935:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 936:Generated_Source\PSoC4/cy_em_eeprom.c ****         cnt++;
 1871              		.loc 1 936 0 is_stmt 1
 1872 0086 0C23     		movs	r3, #12
 1873 0088 FB18     		adds	r3, r7, r3
 1874 008a 1A88     		ldrh	r2, [r3]
 1875 008c 0C23     		movs	r3, #12
 1876 008e FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 51


 1877 0090 0132     		adds	r2, r2, #1
 1878 0092 1A80     		strh	r2, [r3]
 1879              	.L92:
 929:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1880              		.loc 1 929 0
 1881 0094 0C23     		movs	r3, #12
 1882 0096 FB18     		adds	r3, r7, r3
 1883 0098 1A88     		ldrh	r2, [r3]
 1884 009a 3B68     		ldr	r3, [r7]
 1885 009c 9A42     		cmp	r2, r3
 1886 009e BDD1     		bne	.L97
 937:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 938:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 939:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (crc);
 1887              		.loc 1 939 0
 1888 00a0 0F23     		movs	r3, #15
 1889 00a2 FB18     		adds	r3, r7, r3
 1890 00a4 1B78     		ldrb	r3, [r3]
 940:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1891              		.loc 1 940 0
 1892 00a6 1800     		movs	r0, r3
 1893 00a8 BD46     		mov	sp, r7
 1894 00aa 04B0     		add	sp, sp, #16
 1895              		@ sp needed
 1896 00ac 80BD     		pop	{r7, pc}
 1897              		.cfi_endproc
 1898              	.LFE8:
 1899              		.size	CalcChecksum, .-CalcChecksum
 1900              		.section	.text.CheckRanges,"ax",%progbits
 1901              		.align	2
 1902              		.code	16
 1903              		.thumb_func
 1904              		.type	CheckRanges, %function
 1905              	CheckRanges:
 1906              	.LFB9:
 941:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 942:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 943:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 944:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CheckRanges
 945:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 946:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 947:Generated_Source\PSoC4/cy_em_eeprom.c **** * Checks if the EEPROM of the requested size can be placed in flash.
 948:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 949:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param config
 950:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a configuration structure. See \ref cy_stc_eeprom_config_t.
 951:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 952:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 953:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
 954:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 955:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 956:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckRanges(cy_stc_eeprom_config_t* config)
 957:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1907              		.loc 1 957 0
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 24
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 52


 1912              		.cfi_def_cfa_offset 8
 1913              		.cfi_offset 7, -8
 1914              		.cfi_offset 14, -4
 1915 0002 86B0     		sub	sp, sp, #24
 1916              		.cfi_def_cfa_offset 32
 1917 0004 00AF     		add	r7, sp, #0
 1918              		.cfi_def_cfa_register 7
 1919 0006 7860     		str	r0, [r7, #4]
 958:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_DATA;
 1920              		.loc 1 958 0
 1921 0008 1723     		movs	r3, #23
 1922 000a FB18     		adds	r3, r7, r3
 1923 000c 0322     		movs	r2, #3
 1924 000e 1A70     		strb	r2, [r3]
 959:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startAddr = config->userFlashStartAddr;
 1925              		.loc 1 959 0
 1926 0010 7B68     		ldr	r3, [r7, #4]
 1927 0012 DB68     		ldr	r3, [r3, #12]
 1928 0014 3B61     		str	r3, [r7, #16]
 960:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 endAddr = startAddr + CY_EM_EEPROM_GET_PHYSICAL_SIZE(config->eepromSize,
 1929              		.loc 1 960 0
 1930 0016 7B68     		ldr	r3, [r7, #4]
 1931 0018 1B68     		ldr	r3, [r3]
 1932 001a 9A09     		lsrs	r2, r3, #6
 1933 001c 7B68     		ldr	r3, [r7, #4]
 1934 001e 1B68     		ldr	r3, [r3]
 1935 0020 3F21     		movs	r1, #63
 1936 0022 0B40     		ands	r3, r1
 1937 0024 01D0     		beq	.L100
 1938              		.loc 1 960 0 is_stmt 0 discriminator 1
 1939 0026 0123     		movs	r3, #1
 1940 0028 00E0     		b	.L101
 1941              	.L100:
 1942              		.loc 1 960 0 discriminator 2
 1943 002a 0023     		movs	r3, #0
 1944              	.L101:
 1945              		.loc 1 960 0 discriminator 4
 1946 002c D218     		adds	r2, r2, r3
 1947 002e 7B68     		ldr	r3, [r7, #4]
 1948 0030 5B68     		ldr	r3, [r3, #4]
 1949 0032 5343     		muls	r3, r2
 1950 0034 7A68     		ldr	r2, [r7, #4]
 1951 0036 127A     		ldrb	r2, [r2, #8]
 1952 0038 0132     		adds	r2, r2, #1
 1953 003a 5343     		muls	r3, r2
 1954 003c DA01     		lsls	r2, r3, #7
 1955 003e 3B69     		ldr	r3, [r7, #16]
 1956 0040 D318     		adds	r3, r2, r3
 1957 0042 FB60     		str	r3, [r7, #12]
 961:Generated_Source\PSoC4/cy_em_eeprom.c ****             config->wearLevelingFactor, config->redundantCopy);
 962:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 963:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Range check if there is enough flash for EEPROM */
 964:Generated_Source\PSoC4/cy_em_eeprom.c ****     if (CY_EM_EEPROM_IS_IN_FLASH_RANGE(startAddr, endAddr))
 1958              		.loc 1 964 0 is_stmt 1 discriminator 4
 1959 0044 3B69     		ldr	r3, [r7, #16]
 1960 0046 002B     		cmp	r3, #0
 1961 0048 08D0     		beq	.L102
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 53


 1962              		.loc 1 964 0 is_stmt 0 discriminator 1
 1963 004a FA68     		ldr	r2, [r7, #12]
 1964 004c 8023     		movs	r3, #128
 1965 004e 1B02     		lsls	r3, r3, #8
 1966 0050 9A42     		cmp	r2, r3
 1967 0052 03D8     		bhi	.L102
 965:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 966:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 1968              		.loc 1 966 0 is_stmt 1
 1969 0054 1723     		movs	r3, #23
 1970 0056 FB18     		adds	r3, r7, r3
 1971 0058 0022     		movs	r2, #0
 1972 005a 1A70     		strb	r2, [r3]
 1973              	.L102:
 967:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 968:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (ret);
 1974              		.loc 1 968 0
 1975 005c 1723     		movs	r3, #23
 1976 005e FB18     		adds	r3, r7, r3
 1977 0060 1B78     		ldrb	r3, [r3]
 969:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1978              		.loc 1 969 0
 1979 0062 1800     		movs	r0, r3
 1980 0064 BD46     		mov	sp, r7
 1981 0066 06B0     		add	sp, sp, #24
 1982              		@ sp needed
 1983 0068 80BD     		pop	{r7, pc}
 1984              		.cfi_endproc
 1985              	.LFE9:
 1986              		.size	CheckRanges, .-CheckRanges
 1987 006a C046     		.section	.text.WriteRow,"ax",%progbits
 1988              		.align	2
 1989              		.code	16
 1990              		.thumb_func
 1991              		.type	WriteRow, %function
 1992              	WriteRow:
 1993              	.LFB10:
 970:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 971:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 972:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 973:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: WriteRow
 974:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 975:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 976:Generated_Source\PSoC4/cy_em_eeprom.c **** * Writes one flash row starting from the specified row address.
 977:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 978:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowAdd
 979:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the flash row.
 980:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 981:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowData
 982:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the data to be written to the row.
 983:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 984:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 985:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 986:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 987:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 988:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
 989:Generated_Source\PSoC4/cy_em_eeprom.c **** *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 54


 990:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 991:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t WriteRow(uint32 rowAddr,
 992:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         uint32 *rowData,
 993:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
 994:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1994              		.loc 1 994 0
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 32
 1997              		@ frame_needed = 1, uses_anonymous_args = 0
 1998 0000 80B5     		push	{r7, lr}
 1999              		.cfi_def_cfa_offset 8
 2000              		.cfi_offset 7, -8
 2001              		.cfi_offset 14, -4
 2002 0002 88B0     		sub	sp, sp, #32
 2003              		.cfi_def_cfa_offset 40
 2004 0004 00AF     		add	r7, sp, #0
 2005              		.cfi_def_cfa_register 7
 2006 0006 F860     		str	r0, [r7, #12]
 2007 0008 B960     		str	r1, [r7, #8]
 2008 000a 7A60     		str	r2, [r7, #4]
 995:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 2009              		.loc 1 995 0
 2010 000c 1F23     		movs	r3, #31
 2011 000e FB18     		adds	r3, r7, r3
 2012 0010 0422     		movs	r2, #4
 2013 0012 1A70     		strb	r2, [r3]
 996:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (!CY_PSOC6)
 997:Generated_Source\PSoC4/cy_em_eeprom.c ****     cystatus rc;
 998:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 rowId;
 999:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if ((CY_PSOC3) || (CY_PSOC5))
1000:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 arrayId;
1001:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC3) */
1002:Generated_Source\PSoC4/cy_em_eeprom.c ****     
1003:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC3)
1004:Generated_Source\PSoC4/cy_em_eeprom.c ****         rowAddr &= CY_EM_EEPROM_CODE_ADDR_MASK;
1005:Generated_Source\PSoC4/cy_em_eeprom.c ****         context = context;      /* To avoid compiler warning generation */
1006:Generated_Source\PSoC4/cy_em_eeprom.c ****     #else
1007:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)context;          /* To avoid compiler warning generation */
1008:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* ((CY_PSOC3) */
1009:Generated_Source\PSoC4/cy_em_eeprom.c ****     
1010:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* For non-PSoC 6 devices, the Array ID and Row ID needed to write the row */
1011:Generated_Source\PSoC4/cy_em_eeprom.c ****     rowId = (rowAddr / CY_EM_EEPROM_FLASH_SIZEOF_ROW) % CY_EM_EEPROM_ROWS_IN_ARRAY;
 2014              		.loc 1 1011 0
 2015 0014 FB68     		ldr	r3, [r7, #12]
 2016 0016 DB09     		lsrs	r3, r3, #7
 2017 0018 FF22     		movs	r2, #255
 2018 001a 1340     		ands	r3, r2
 2019 001c BB61     		str	r3, [r7, #24]
1012:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1013:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Write the flash row */
1014:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC4)
1015:Generated_Source\PSoC4/cy_em_eeprom.c ****         rc = CySysFlashWriteRow(rowId, (uint8 *)rowData);
 2020              		.loc 1 1015 0
 2021 001e BA68     		ldr	r2, [r7, #8]
 2022 0020 BB69     		ldr	r3, [r7, #24]
 2023 0022 1100     		movs	r1, r2
 2024 0024 1800     		movs	r0, r3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 55


 2025 0026 FFF7FEFF 		bl	CySysFlashWriteRow
 2026 002a 0300     		movs	r3, r0
 2027 002c 7B61     		str	r3, [r7, #20]
1016:Generated_Source\PSoC4/cy_em_eeprom.c ****     #else
1017:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1018:Generated_Source\PSoC4/cy_em_eeprom.c ****         #ifndef CY_EM_EEPROM_SKIP_TEMP_MEASUREMENT
1019:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)CySetTemp();
1020:Generated_Source\PSoC4/cy_em_eeprom.c ****         #endif /* (CY_EM_EEPROM_SKIP_TEMP_MEASUREMENT) */
1021:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1022:Generated_Source\PSoC4/cy_em_eeprom.c ****         arrayId = rowAddr / CY_FLASH_SIZEOF_ARRAY;
1023:Generated_Source\PSoC4/cy_em_eeprom.c ****         rc = CyWriteRowData((uint8)arrayId, (uint16)rowId, (uint8 *)rowData);
1024:Generated_Source\PSoC4/cy_em_eeprom.c ****         
1025:Generated_Source\PSoC4/cy_em_eeprom.c ****         #if (CY_PSOC5)
1026:Generated_Source\PSoC4/cy_em_eeprom.c ****             CyFlushCache();
1027:Generated_Source\PSoC4/cy_em_eeprom.c ****         #endif /* (CY_PSOC5) */
1028:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC4) */
1029:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1030:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CYRET_SUCCESS == rc)
 2028              		.loc 1 1030 0
 2029 002e 7B69     		ldr	r3, [r7, #20]
 2030 0030 002B     		cmp	r3, #0
 2031 0032 03D1     		bne	.L105
1031:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1032:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 2032              		.loc 1 1032 0
 2033 0034 1F23     		movs	r3, #31
 2034 0036 FB18     		adds	r3, r7, r3
 2035 0038 0022     		movs	r2, #0
 2036 003a 1A70     		strb	r2, [r3]
 2037              	.L105:
1033:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1034:Generated_Source\PSoC4/cy_em_eeprom.c **** #else /* PSoC 6 */
1035:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != context->blockingWrite)
1036:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1037:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Do blocking write */
1038:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_FLASH_DRV_SUCCESS == Cy_Flash_WriteRow(rowAddr, (const uint32 *)rowData))
1039:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1040:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = CY_EM_EEPROM_SUCCESS;
1041:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1042:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1043:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
1044:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1045:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Initiate write */
1046:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_FLASH_DRV_OPERATION_STARTED == Cy_Flash_StartWrite(rowAddr, (const uint32 *)rowData))
1047:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1048:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 countMs = CY_EM_EEPROM_MAX_WRITE_DURATION_MS;
1049:Generated_Source\PSoC4/cy_em_eeprom.c ****             cy_en_flashdrv_status_t rc;
1050:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1051:Generated_Source\PSoC4/cy_em_eeprom.c ****             do
1052:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1053:Generated_Source\PSoC4/cy_em_eeprom.c ****                 CyDelay(1u);                         /* Wait 1ms */
1054:Generated_Source\PSoC4/cy_em_eeprom.c ****                 rc = Cy_Flash_IsWriteComplete();     /* Check if write completed */
1055:Generated_Source\PSoC4/cy_em_eeprom.c ****                 countMs--;
1056:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1057:Generated_Source\PSoC4/cy_em_eeprom.c ****             while ((rc == CY_FLASH_DRV_OPCODE_BUSY) && (0u != countMs));
1058:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1059:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_SUCCESS == rc)
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 56


1060:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1061:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
1062:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1063:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1064:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1065:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CY_PSOC6) */
1066:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1067:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (ret);
 2038              		.loc 1 1067 0
 2039 003c 1F23     		movs	r3, #31
 2040 003e FB18     		adds	r3, r7, r3
 2041 0040 1B78     		ldrb	r3, [r3]
1068:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2042              		.loc 1 1068 0
 2043 0042 1800     		movs	r0, r3
 2044 0044 BD46     		mov	sp, r7
 2045 0046 08B0     		add	sp, sp, #32
 2046              		@ sp needed
 2047 0048 80BD     		pop	{r7, pc}
 2048              		.cfi_endproc
 2049              	.LFE10:
 2050              		.size	WriteRow, .-WriteRow
 2051 004a C046     		.section	.text.EraseRow,"ax",%progbits
 2052              		.align	2
 2053              		.code	16
 2054              		.thumb_func
 2055              		.type	EraseRow, %function
 2056              	EraseRow:
 2057              	.LFB11:
1069:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1070:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1071:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1072:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: EraseRow
1073:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1074:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1075:Generated_Source\PSoC4/cy_em_eeprom.c **** * Erases one flash row starting from the specified row address. If the redundant
1076:Generated_Source\PSoC4/cy_em_eeprom.c **** * copy option is enabled the corresponding row in the redundant copy will also
1077:Generated_Source\PSoC4/cy_em_eeprom.c **** * be erased.
1078:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1079:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowAdd
1080:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the flash row.
1081:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1082:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param ramBuffAddr
1083:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the RAM buffer that contains zeroed data (used only for
1084:Generated_Source\PSoC4/cy_em_eeprom.c **** * non-PSoC 6 devices).
1085:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1086:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
1087:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
1088:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1089:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1090:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1091:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1092:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1093:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t EraseRow(uint32 rowAddr,
1094:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         uint32 ramBuffAddr,
1095:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
1096:Generated_Source\PSoC4/cy_em_eeprom.c **** {
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 57


 2058              		.loc 1 1096 0
 2059              		.cfi_startproc
 2060              		@ args = 0, pretend = 0, frame = 24
 2061              		@ frame_needed = 1, uses_anonymous_args = 0
 2062 0000 90B5     		push	{r4, r7, lr}
 2063              		.cfi_def_cfa_offset 12
 2064              		.cfi_offset 4, -12
 2065              		.cfi_offset 7, -8
 2066              		.cfi_offset 14, -4
 2067 0002 87B0     		sub	sp, sp, #28
 2068              		.cfi_def_cfa_offset 40
 2069 0004 00AF     		add	r7, sp, #0
 2070              		.cfi_def_cfa_register 7
 2071 0006 F860     		str	r0, [r7, #12]
 2072 0008 B960     		str	r1, [r7, #8]
 2073 000a 7A60     		str	r2, [r7, #4]
1097:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = rowAddr;
 2074              		.loc 1 1097 0
 2075 000c FB68     		ldr	r3, [r7, #12]
 2076 000e 3B61     		str	r3, [r7, #16]
1098:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 2077              		.loc 1 1098 0
 2078 0010 1723     		movs	r3, #23
 2079 0012 FB18     		adds	r3, r7, r3
 2080 0014 0422     		movs	r2, #4
 2081 0016 1A70     		strb	r2, [r3]
1099:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CY_PSOC6)
1100:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i = 1u;
1101:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1102:Generated_Source\PSoC4/cy_em_eeprom.c ****     (void)ramBuffAddr; /* To avoid compiler warning */
1103:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1104:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != context->redundantCopy)
1105:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1106:Generated_Source\PSoC4/cy_em_eeprom.c ****         i++;
1107:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1108:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1109:Generated_Source\PSoC4/cy_em_eeprom.c ****     do
1110:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1111:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != context->blockingWrite)
1112:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1113:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Erase the flash row */
1114:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_SUCCESS == Cy_Flash_EraseRow(emEepromRowAddr))
1115:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1116:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
1117:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1118:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1119:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1120:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1121:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Initiate erase */
1122:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_OPERATION_STARTED == Cy_Flash_StartErase(emEepromRowAddr))
1123:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1124:Generated_Source\PSoC4/cy_em_eeprom.c ****                 uint32 countMs = CY_EM_EEPROM_MAX_WRITE_DURATION_MS;
1125:Generated_Source\PSoC4/cy_em_eeprom.c ****                 cy_en_flashdrv_status_t rc;
1126:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1127:Generated_Source\PSoC4/cy_em_eeprom.c ****                 do
1128:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
1129:Generated_Source\PSoC4/cy_em_eeprom.c ****                     CyDelay(1u);                         /* Wait 1ms */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 58


1130:Generated_Source\PSoC4/cy_em_eeprom.c ****                     rc = Cy_Flash_IsWriteComplete();     /* Check if erase completed */
1131:Generated_Source\PSoC4/cy_em_eeprom.c ****                     countMs--;
1132:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
1133:Generated_Source\PSoC4/cy_em_eeprom.c ****                 while ((rc == CY_FLASH_DRV_OPCODE_BUSY) && (0u != countMs));
1134:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1135:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(CY_FLASH_DRV_SUCCESS == rc)
1136:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
1137:Generated_Source\PSoC4/cy_em_eeprom.c ****                     ret = CY_EM_EEPROM_SUCCESS;
1138:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
1139:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1140:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1141:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1142:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
1143:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1144:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Update the address to point to the redundant copy row */
1145:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
1146:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1147:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1148:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1149:Generated_Source\PSoC4/cy_em_eeprom.c ****             break;
1150:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1151:Generated_Source\PSoC4/cy_em_eeprom.c ****         i--;
1152:Generated_Source\PSoC4/cy_em_eeprom.c ****     } while (0u != i);
1153:Generated_Source\PSoC4/cy_em_eeprom.c **** #else
1154:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Write the data to the specified flash row */
1155:Generated_Source\PSoC4/cy_em_eeprom.c ****     ret = WriteRow(emEepromRowAddr, (uint32 *)ramBuffAddr, context);
 2082              		.loc 1 1155 0
 2083 0018 B968     		ldr	r1, [r7, #8]
 2084 001a 1723     		movs	r3, #23
 2085 001c FC18     		adds	r4, r7, r3
 2086 001e 7A68     		ldr	r2, [r7, #4]
 2087 0020 3B69     		ldr	r3, [r7, #16]
 2088 0022 1800     		movs	r0, r3
 2089 0024 FFF7FEFF 		bl	WriteRow
 2090 0028 0300     		movs	r3, r0
 2091 002a 2370     		strb	r3, [r4]
1156:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1157:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((CY_EM_EEPROM_SUCCESS == ret) && (0u != context->redundantCopy))
 2092              		.loc 1 1157 0
 2093 002c 1723     		movs	r3, #23
 2094 002e FB18     		adds	r3, r7, r3
 2095 0030 1B78     		ldrb	r3, [r3]
 2096 0032 002B     		cmp	r3, #0
 2097 0034 15D1     		bne	.L108
 2098              		.loc 1 1157 0 is_stmt 0 discriminator 1
 2099 0036 7B68     		ldr	r3, [r7, #4]
 2100 0038 1B7D     		ldrb	r3, [r3, #20]
 2101 003a 002B     		cmp	r3, #0
 2102 003c 11D0     		beq	.L108
1158:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1159:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Update the address to point to the redundant copy row */
1160:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2103              		.loc 1 1160 0 is_stmt 1
 2104 003e 7B68     		ldr	r3, [r7, #4]
 2105 0040 9B69     		ldr	r3, [r3, #24]
 2106 0042 3A69     		ldr	r2, [r7, #16]
 2107 0044 D21A     		subs	r2, r2, r3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 59


 2108 0046 7B68     		ldr	r3, [r7, #4]
 2109 0048 1B68     		ldr	r3, [r3]
 2110 004a D318     		adds	r3, r2, r3
 2111 004c 3B61     		str	r3, [r7, #16]
1161:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(emEepromRowAddr, (uint32 *)ramBuffAddr, context);
 2112              		.loc 1 1161 0
 2113 004e B968     		ldr	r1, [r7, #8]
 2114 0050 1723     		movs	r3, #23
 2115 0052 FC18     		adds	r4, r7, r3
 2116 0054 7A68     		ldr	r2, [r7, #4]
 2117 0056 3B69     		ldr	r3, [r7, #16]
 2118 0058 1800     		movs	r0, r3
 2119 005a FFF7FEFF 		bl	WriteRow
 2120 005e 0300     		movs	r3, r0
 2121 0060 2370     		strb	r3, [r4]
 2122              	.L108:
1162:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1163:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1164:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CY_EM_EEPROM_SUCCESS == ret)
 2123              		.loc 1 1164 0
 2124 0062 1723     		movs	r3, #23
 2125 0064 FB18     		adds	r3, r7, r3
 2126 0066 1B78     		ldrb	r3, [r3]
 2127 0068 002B     		cmp	r3, #0
 2128 006a 02D1     		bne	.L109
1165:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1166:Generated_Source\PSoC4/cy_em_eeprom.c ****         context->lastWrRowAddr = rowAddr;
 2129              		.loc 1 1166 0
 2130 006c 7B68     		ldr	r3, [r7, #4]
 2131 006e FA68     		ldr	r2, [r7, #12]
 2132 0070 9A60     		str	r2, [r3, #8]
 2133              	.L109:
1167:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1168:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CY_PSOC6) */
1169:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1170:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 2134              		.loc 1 1170 0
 2135 0072 1723     		movs	r3, #23
 2136 0074 FB18     		adds	r3, r7, r3
 2137 0076 1B78     		ldrb	r3, [r3]
1171:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2138              		.loc 1 1171 0
 2139 0078 1800     		movs	r0, r3
 2140 007a BD46     		mov	sp, r7
 2141 007c 07B0     		add	sp, sp, #28
 2142              		@ sp needed
 2143 007e 90BD     		pop	{r4, r7, pc}
 2144              		.cfi_endproc
 2145              	.LFE11:
 2146              		.size	EraseRow, .-EraseRow
 2147              		.section	.text.CheckCrcAndCopy,"ax",%progbits
 2148              		.align	2
 2149              		.code	16
 2150              		.thumb_func
 2151              		.type	CheckCrcAndCopy, %function
 2152              	CheckCrcAndCopy:
 2153              	.LFB12:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 60


1172:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1173:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1174:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1175:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CheckCrcAndCopy
1176:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1177:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1178:Generated_Source\PSoC4/cy_em_eeprom.c **** * Checks the checksum of the specific row in EEPROM. If the CRC matches - copies
1179:Generated_Source\PSoC4/cy_em_eeprom.c **** * the data to the "datAddr" from EEPROM. f the CRC does not match checks the
1180:Generated_Source\PSoC4/cy_em_eeprom.c **** * CRC of the corresponding row in the EEPROM's redundant copy. If the CRC
1181:Generated_Source\PSoC4/cy_em_eeprom.c **** * matches - copies the data to the "datAddr" from EEPROM redundant copy. If the
1182:Generated_Source\PSoC4/cy_em_eeprom.c **** * CRC of the redundant copy does not match - returns bad checksum.
1183:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1184:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param startAddr
1185:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address that points to the start of the specified row.
1186:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1187:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param datAddr
1188:Generated_Source\PSoC4/cy_em_eeprom.c **** * The start address of where the row data will be copied if the CRC check
1189:Generated_Source\PSoC4/cy_em_eeprom.c **** * will succeed.
1190:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1191:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowOffset
1192:Generated_Source\PSoC4/cy_em_eeprom.c **** * The offset in the row from which the data should be copied.
1193:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1194:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param numBytes
1195:Generated_Source\PSoC4/cy_em_eeprom.c **** * The number of bytes to be copied.
1196:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1197:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
1198:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
1199:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1200:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1201:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1202:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1203:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
1204:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
1205:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
1206:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
1207:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1208:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1209:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckCrcAndCopy(uint32 startAddr,
1210:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 dstAddr,
1211:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 rowOffset,
1212:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 numBytes,
1213:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 cy_stc_eeprom_context_t * context)
1214:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2154              		.loc 1 1214 0
 2155              		.cfi_startproc
 2156              		@ args = 4, pretend = 0, frame = 152
 2157              		@ frame_needed = 1, uses_anonymous_args = 0
 2158 0000 90B5     		push	{r4, r7, lr}
 2159              		.cfi_def_cfa_offset 12
 2160              		.cfi_offset 4, -12
 2161              		.cfi_offset 7, -8
 2162              		.cfi_offset 14, -4
 2163 0002 A7B0     		sub	sp, sp, #156
 2164              		.cfi_def_cfa_offset 168
 2165 0004 00AF     		add	r7, sp, #0
 2166              		.cfi_def_cfa_register 7
 2167 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 61


 2168 0008 B960     		str	r1, [r7, #8]
 2169 000a 7A60     		str	r2, [r7, #4]
 2170 000c 3B60     		str	r3, [r7]
1215:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret;
1216:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
1217:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1218:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Calculate the row address in the EEPROM's redundant copy */
1219:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 rcStartRowAddr = (startAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2171              		.loc 1 1219 0
 2172 000e A823     		movs	r3, #168
 2173 0010 FB18     		adds	r3, r7, r3
 2174 0012 1B68     		ldr	r3, [r3]
 2175 0014 9B69     		ldr	r3, [r3, #24]
 2176 0016 FA68     		ldr	r2, [r7, #12]
 2177 0018 D21A     		subs	r2, r2, r3
 2178 001a A823     		movs	r3, #168
 2179 001c FB18     		adds	r3, r7, r3
 2180 001e 1B68     		ldr	r3, [r3]
 2181 0020 1B68     		ldr	r3, [r3]
 2182 0022 D318     		adds	r3, r2, r3
 2183 0024 9022     		movs	r2, #144
 2184 0026 BA18     		adds	r2, r7, r2
 2185 0028 1360     		str	r3, [r2]
1220:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1221:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check the row data CRC in the EEPROM */
1222:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((*(uint32 *)(startAddr + CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET)) ==
 2186              		.loc 1 1222 0
 2187 002a FB68     		ldr	r3, [r7, #12]
 2188 002c 3C33     		adds	r3, r3, #60
 2189 002e 1C68     		ldr	r4, [r3]
1223:Generated_Source\PSoC4/cy_em_eeprom.c ****         ((uint32) CalcChecksum((uint8 *)(startAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2190              		.loc 1 1223 0
 2191 0030 FB68     		ldr	r3, [r7, #12]
 2192 0032 4033     		adds	r3, r3, #64
 2193 0034 4021     		movs	r1, #64
 2194 0036 1800     		movs	r0, r3
 2195 0038 FFF7FEFF 		bl	CalcChecksum
 2196 003c 0300     		movs	r3, r0
1222:Generated_Source\PSoC4/cy_em_eeprom.c ****         ((uint32) CalcChecksum((uint8 *)(startAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2197              		.loc 1 1222 0
 2198 003e 9C42     		cmp	r4, r3
 2199 0040 0DD1     		bne	.L112
1224:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_EEPROM_DATA_LEN)))
1225:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1226:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)memcpy((void *)(dstAddr), (void *)(startAddr + rowOffset), numBytes);
 2200              		.loc 1 1226 0
 2201 0042 B868     		ldr	r0, [r7, #8]
 2202 0044 FA68     		ldr	r2, [r7, #12]
 2203 0046 7B68     		ldr	r3, [r7, #4]
 2204 0048 D318     		adds	r3, r2, r3
 2205 004a 1900     		movs	r1, r3
 2206 004c 3B68     		ldr	r3, [r7]
 2207 004e 1A00     		movs	r2, r3
 2208 0050 FFF7FEFF 		bl	memcpy
1227:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1228:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 2209              		.loc 1 1228 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 62


 2210 0054 9723     		movs	r3, #151
 2211 0056 FB18     		adds	r3, r7, r3
 2212 0058 0022     		movs	r2, #0
 2213 005a 1A70     		strb	r2, [r3]
 2214 005c 39E0     		b	.L113
 2215              	.L112:
1229:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1230:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check the row data CRC in the EEPROM's redundant copy */
1231:Generated_Source\PSoC4/cy_em_eeprom.c ****     else if((*(uint32 *)(rcStartRowAddr + CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET)) ==
 2216              		.loc 1 1231 0
 2217 005e 9023     		movs	r3, #144
 2218 0060 FB18     		adds	r3, r7, r3
 2219 0062 1B68     		ldr	r3, [r3]
 2220 0064 3C33     		adds	r3, r3, #60
 2221 0066 1C68     		ldr	r4, [r3]
1232:Generated_Source\PSoC4/cy_em_eeprom.c ****             ((uint32) CalcChecksum((uint8 *)(rcStartRowAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2222              		.loc 1 1232 0
 2223 0068 9023     		movs	r3, #144
 2224 006a FB18     		adds	r3, r7, r3
 2225 006c 1B68     		ldr	r3, [r3]
 2226 006e 4033     		adds	r3, r3, #64
 2227 0070 4021     		movs	r1, #64
 2228 0072 1800     		movs	r0, r3
 2229 0074 FFF7FEFF 		bl	CalcChecksum
 2230 0078 0300     		movs	r3, r0
1231:Generated_Source\PSoC4/cy_em_eeprom.c ****             ((uint32) CalcChecksum((uint8 *)(rcStartRowAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2231              		.loc 1 1231 0
 2232 007a 9C42     		cmp	r4, r3
 2233 007c 25D1     		bne	.L114
1233:Generated_Source\PSoC4/cy_em_eeprom.c ****                 CY_EM_EEPROM_EEPROM_DATA_LEN)))
1234:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1235:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Copy the redundant copy row to RAM buffer to avoid read while write (RWW)
1236:Generated_Source\PSoC4/cy_em_eeprom.c ****         * flash exception. The RWW occurs while trying to write and read the data from
1237:Generated_Source\PSoC4/cy_em_eeprom.c ****         * same flash macro.
1238:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
1239:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)memcpy((void *)(writeRamBuffer), (void *)(rcStartRowAddr), CY_EM_EEPROM_FLASH_SIZEOF_
 2234              		.loc 1 1239 0
 2235 007e 9023     		movs	r3, #144
 2236 0080 FB18     		adds	r3, r7, r3
 2237 0082 1968     		ldr	r1, [r3]
 2238 0084 1023     		movs	r3, #16
 2239 0086 FB18     		adds	r3, r7, r3
 2240 0088 8022     		movs	r2, #128
 2241 008a 1800     		movs	r0, r3
 2242 008c FFF7FEFF 		bl	memcpy
1240:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1241:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Restore bad row data from the RAM buffer */
1242:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(startAddr, (uint32 *)writeRamBuffer, context);
 2243              		.loc 1 1242 0
 2244 0090 9723     		movs	r3, #151
 2245 0092 FC18     		adds	r4, r7, r3
 2246 0094 A823     		movs	r3, #168
 2247 0096 FB18     		adds	r3, r7, r3
 2248 0098 1A68     		ldr	r2, [r3]
 2249 009a 1023     		movs	r3, #16
 2250 009c F918     		adds	r1, r7, r3
 2251 009e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 63


 2252 00a0 1800     		movs	r0, r3
 2253 00a2 FFF7FEFF 		bl	WriteRow
 2254 00a6 0300     		movs	r3, r0
 2255 00a8 2370     		strb	r3, [r4]
1243:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1244:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
 2256              		.loc 1 1244 0
 2257 00aa 9723     		movs	r3, #151
 2258 00ac FB18     		adds	r3, r7, r3
 2259 00ae 1B78     		ldrb	r3, [r3]
 2260 00b0 002B     		cmp	r3, #0
 2261 00b2 0ED1     		bne	.L113
1245:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1246:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memcpy((void *)(dstAddr), (void *)(writeRamBuffer + rowOffset), numBytes);
 2262              		.loc 1 1246 0
 2263 00b4 B868     		ldr	r0, [r7, #8]
 2264 00b6 7B68     		ldr	r3, [r7, #4]
 2265 00b8 9B00     		lsls	r3, r3, #2
 2266 00ba 1022     		movs	r2, #16
 2267 00bc BA18     		adds	r2, r7, r2
 2268 00be D318     		adds	r3, r2, r3
 2269 00c0 3A68     		ldr	r2, [r7]
 2270 00c2 1900     		movs	r1, r3
 2271 00c4 FFF7FEFF 		bl	memcpy
 2272 00c8 03E0     		b	.L113
 2273              	.L114:
1247:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1248:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1249:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
1250:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1251:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_BAD_CHECKSUM;
 2274              		.loc 1 1251 0
 2275 00ca 9723     		movs	r3, #151
 2276 00cc FB18     		adds	r3, r7, r3
 2277 00ce 0222     		movs	r2, #2
 2278 00d0 1A70     		strb	r2, [r3]
 2279              	.L113:
1252:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1253:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1254:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 2280              		.loc 1 1254 0
 2281 00d2 9723     		movs	r3, #151
 2282 00d4 FB18     		adds	r3, r7, r3
 2283 00d6 1B78     		ldrb	r3, [r3]
1255:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2284              		.loc 1 1255 0
 2285 00d8 1800     		movs	r0, r3
 2286 00da BD46     		mov	sp, r7
 2287 00dc 27B0     		add	sp, sp, #156
 2288              		@ sp needed
 2289 00de 90BD     		pop	{r4, r7, pc}
 2290              		.cfi_endproc
 2291              	.LFE12:
 2292              		.size	CheckCrcAndCopy, .-CheckCrcAndCopy
 2293              		.section	.text.GetAddresses,"ax",%progbits
 2294              		.align	2
 2295              		.code	16
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 64


 2296              		.thumb_func
 2297              		.type	GetAddresses, %function
 2298              	GetAddresses:
 2299              	.LFB13:
1256:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1257:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1258:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1259:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetAddresses
1260:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1261:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1262:Generated_Source\PSoC4/cy_em_eeprom.c **** * Calculates the start and end address of the row's EEPROM data to be updated.
1263:Generated_Source\PSoC4/cy_em_eeprom.c **** * The start and end are not absolute addresses but a relative addresses in a
1264:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row.
1265:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1266:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param startAddr
1267:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the EEPROM data start address will be returned.
1268:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1269:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param endAddr
1270:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the EEPROM data end address will be returned.
1271:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1272:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param offset
1273:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the calculated offset of the EEPROM header data
1274:Generated_Source\PSoC4/cy_em_eeprom.c **** * will be returned.
1275:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1276:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowNum
1277:Generated_Source\PSoC4/cy_em_eeprom.c **** * The row number that is about to be written.
1278:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1279:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
1280:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the EEPROM header data in the currently analyzed row that may
1281:Generated_Source\PSoC4/cy_em_eeprom.c **** * concern to the row about to be written.
1282:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1283:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param len
1284:Generated_Source\PSoC4/cy_em_eeprom.c **** * The length of the EEPROM header data in the currently analyzed row that may
1285:Generated_Source\PSoC4/cy_em_eeprom.c **** * concern to the row about to be written.
1286:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1287:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1288:Generated_Source\PSoC4/cy_em_eeprom.c **** * Zero indicates that the currently analyzed row has the data to be written to
1289:Generated_Source\PSoC4/cy_em_eeprom.c **** * the active EEPROM row data locations. Non zero value indicates that there is
1290:Generated_Source\PSoC4/cy_em_eeprom.c **** * no data to be written
1291:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1292:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1293:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetAddresses(uint32 *startAddr, 
1294:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 *endAddr, 
1295:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 *offset,
1296:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 rowNum,
1297:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 addr,
1298:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 len)
1299:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2300              		.loc 1 1299 0
 2301              		.cfi_startproc
 2302              		@ args = 8, pretend = 0, frame = 24
 2303              		@ frame_needed = 1, uses_anonymous_args = 0
 2304 0000 80B5     		push	{r7, lr}
 2305              		.cfi_def_cfa_offset 8
 2306              		.cfi_offset 7, -8
 2307              		.cfi_offset 14, -4
 2308 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 65


 2309              		.cfi_def_cfa_offset 32
 2310 0004 00AF     		add	r7, sp, #0
 2311              		.cfi_def_cfa_register 7
 2312 0006 F860     		str	r0, [r7, #12]
 2313 0008 B960     		str	r1, [r7, #8]
 2314 000a 7A60     		str	r2, [r7, #4]
 2315 000c 3B60     		str	r3, [r7]
1300:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 skip = 0u;
 2316              		.loc 1 1300 0
 2317 000e 0023     		movs	r3, #0
 2318 0010 7B61     		str	r3, [r7, #20]
1301:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1302:Generated_Source\PSoC4/cy_em_eeprom.c ****     *offset =0u;
 2319              		.loc 1 1302 0
 2320 0012 7B68     		ldr	r3, [r7, #4]
 2321 0014 0022     		movs	r2, #0
 2322 0016 1A60     		str	r2, [r3]
1303:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1304:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr, rowNum))
 2323              		.loc 1 1304 0
 2324 0018 3B68     		ldr	r3, [r7]
 2325 001a 9A01     		lsls	r2, r3, #6
 2326 001c 3B6A     		ldr	r3, [r7, #32]
 2327 001e 9A42     		cmp	r2, r3
 2328 0020 08D8     		bhi	.L118
 2329              		.loc 1 1304 0 is_stmt 0 discriminator 1
 2330 0022 3B68     		ldr	r3, [r7]
 2331 0024 0133     		adds	r3, r3, #1
 2332 0026 9B01     		lsls	r3, r3, #6
 2333 0028 5A1E     		subs	r2, r3, #1
 2334 002a 3B6A     		ldr	r3, [r7, #32]
 2335 002c 9A42     		cmp	r2, r3
 2336 002e 01D3     		bcc	.L118
 2337              		.loc 1 1304 0 discriminator 3
 2338 0030 0123     		movs	r3, #1
 2339 0032 00E0     		b	.L119
 2340              	.L118:
 2341              		.loc 1 1304 0 discriminator 4
 2342 0034 0023     		movs	r3, #0
 2343              	.L119:
 2344              		.loc 1 1304 0 discriminator 6
 2345 0036 002B     		cmp	r3, #0
 2346 0038 26D0     		beq	.L120
1305:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1306:Generated_Source\PSoC4/cy_em_eeprom.c ****         *startAddr = CY_EM_EEPROM_EEPROM_DATA_LEN + (addr % CY_EM_EEPROM_EEPROM_DATA_LEN);
 2347              		.loc 1 1306 0 is_stmt 1
 2348 003a 3B6A     		ldr	r3, [r7, #32]
 2349 003c 3F22     		movs	r2, #63
 2350 003e 1340     		ands	r3, r2
 2351 0040 4033     		adds	r3, r3, #64
 2352 0042 1A00     		movs	r2, r3
 2353 0044 FB68     		ldr	r3, [r7, #12]
 2354 0046 1A60     		str	r2, [r3]
1307:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1308:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr + len, rowNum))
 2355              		.loc 1 1308 0
 2356 0048 3A6A     		ldr	r2, [r7, #32]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 66


 2357 004a 7B6A     		ldr	r3, [r7, #36]
 2358 004c D218     		adds	r2, r2, r3
 2359 004e 3B68     		ldr	r3, [r7]
 2360 0050 9B01     		lsls	r3, r3, #6
 2361 0052 9A42     		cmp	r2, r3
 2362 0054 0AD3     		bcc	.L121
 2363              		.loc 1 1308 0 is_stmt 0 discriminator 1
 2364 0056 3A6A     		ldr	r2, [r7, #32]
 2365 0058 7B6A     		ldr	r3, [r7, #36]
 2366 005a D218     		adds	r2, r2, r3
 2367 005c 3B68     		ldr	r3, [r7]
 2368 005e 0133     		adds	r3, r3, #1
 2369 0060 9B01     		lsls	r3, r3, #6
 2370 0062 013B     		subs	r3, r3, #1
 2371 0064 9A42     		cmp	r2, r3
 2372 0066 01D8     		bhi	.L121
 2373              		.loc 1 1308 0 discriminator 3
 2374 0068 0123     		movs	r3, #1
 2375 006a 00E0     		b	.L122
 2376              	.L121:
 2377              		.loc 1 1308 0 discriminator 4
 2378 006c 0023     		movs	r3, #0
 2379              	.L122:
 2380              		.loc 1 1308 0 discriminator 6
 2381 006e 002B     		cmp	r3, #0
 2382 0070 06D0     		beq	.L123
1309:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1310:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = *startAddr + len;
 2383              		.loc 1 1310 0 is_stmt 1
 2384 0072 FB68     		ldr	r3, [r7, #12]
 2385 0074 1A68     		ldr	r2, [r3]
 2386 0076 7B6A     		ldr	r3, [r7, #36]
 2387 0078 D218     		adds	r2, r2, r3
 2388 007a BB68     		ldr	r3, [r7, #8]
 2389 007c 1A60     		str	r2, [r3]
 2390 007e 35E0     		b	.L125
 2391              	.L123:
1311:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1312:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1313:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1314:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 2392              		.loc 1 1314 0
 2393 0080 BB68     		ldr	r3, [r7, #8]
 2394 0082 8022     		movs	r2, #128
 2395 0084 1A60     		str	r2, [r3]
 2396 0086 31E0     		b	.L125
 2397              	.L120:
1315:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1316:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1317:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
1318:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1319:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1320:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr + len, rowNum))
 2398              		.loc 1 1320 0
 2399 0088 3A6A     		ldr	r2, [r7, #32]
 2400 008a 7B6A     		ldr	r3, [r7, #36]
 2401 008c D218     		adds	r2, r2, r3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 67


 2402 008e 3B68     		ldr	r3, [r7]
 2403 0090 9B01     		lsls	r3, r3, #6
 2404 0092 9A42     		cmp	r2, r3
 2405 0094 0AD3     		bcc	.L126
 2406              		.loc 1 1320 0 is_stmt 0 discriminator 1
 2407 0096 3A6A     		ldr	r2, [r7, #32]
 2408 0098 7B6A     		ldr	r3, [r7, #36]
 2409 009a D218     		adds	r2, r2, r3
 2410 009c 3B68     		ldr	r3, [r7]
 2411 009e 0133     		adds	r3, r3, #1
 2412 00a0 9B01     		lsls	r3, r3, #6
 2413 00a2 013B     		subs	r3, r3, #1
 2414 00a4 9A42     		cmp	r2, r3
 2415 00a6 01D8     		bhi	.L126
 2416              		.loc 1 1320 0 discriminator 3
 2417 00a8 0123     		movs	r3, #1
 2418 00aa 00E0     		b	.L127
 2419              	.L126:
 2420              		.loc 1 1320 0 discriminator 4
 2421 00ac 0023     		movs	r3, #0
 2422              	.L127:
 2423              		.loc 1 1320 0 discriminator 6
 2424 00ae 002B     		cmp	r3, #0
 2425 00b0 19D0     		beq	.L128
1321:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1322:Generated_Source\PSoC4/cy_em_eeprom.c ****             *startAddr = CY_EM_EEPROM_EEPROM_DATA_LEN;
 2426              		.loc 1 1322 0 is_stmt 1
 2427 00b2 FB68     		ldr	r3, [r7, #12]
 2428 00b4 4022     		movs	r2, #64
 2429 00b6 1A60     		str	r2, [r3]
1323:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = (*startAddr + len) - (*startAddr - (addr % CY_EM_EEPROM_EEPROM_DATA_LEN));
 2430              		.loc 1 1323 0
 2431 00b8 FB68     		ldr	r3, [r7, #12]
 2432 00ba 1A68     		ldr	r2, [r3]
 2433 00bc 7B6A     		ldr	r3, [r7, #36]
 2434 00be D218     		adds	r2, r2, r3
 2435 00c0 3B6A     		ldr	r3, [r7, #32]
 2436 00c2 3F21     		movs	r1, #63
 2437 00c4 1940     		ands	r1, r3
 2438 00c6 FB68     		ldr	r3, [r7, #12]
 2439 00c8 1B68     		ldr	r3, [r3]
 2440 00ca CB1A     		subs	r3, r1, r3
 2441 00cc D218     		adds	r2, r2, r3
 2442 00ce BB68     		ldr	r3, [r7, #8]
 2443 00d0 1A60     		str	r2, [r3]
1324:Generated_Source\PSoC4/cy_em_eeprom.c ****             *offset = len - (*endAddr - *startAddr);
 2444              		.loc 1 1324 0
 2445 00d2 FB68     		ldr	r3, [r7, #12]
 2446 00d4 1A68     		ldr	r2, [r3]
 2447 00d6 BB68     		ldr	r3, [r7, #8]
 2448 00d8 1B68     		ldr	r3, [r3]
 2449 00da D21A     		subs	r2, r2, r3
 2450 00dc 7B6A     		ldr	r3, [r7, #36]
 2451 00de D218     		adds	r2, r2, r3
 2452 00e0 7B68     		ldr	r3, [r7, #4]
 2453 00e2 1A60     		str	r2, [r3]
 2454 00e4 02E0     		b	.L125
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 68


 2455              	.L128:
1325:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1326:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1327:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1328:Generated_Source\PSoC4/cy_em_eeprom.c ****             skip++;
 2456              		.loc 1 1328 0
 2457 00e6 7B69     		ldr	r3, [r7, #20]
 2458 00e8 0133     		adds	r3, r3, #1
 2459 00ea 7B61     		str	r3, [r7, #20]
 2460              	.L125:
1329:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1330:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1331:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1332:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (skip);
 2461              		.loc 1 1332 0
 2462 00ec 7B69     		ldr	r3, [r7, #20]
1333:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2463              		.loc 1 1333 0
 2464 00ee 1800     		movs	r0, r3
 2465 00f0 BD46     		mov	sp, r7
 2466 00f2 06B0     		add	sp, sp, #24
 2467              		@ sp needed
 2468 00f4 80BD     		pop	{r7, pc}
 2469              		.cfi_endproc
 2470              	.LFE13:
 2471              		.size	GetAddresses, .-GetAddresses
 2472 00f6 C046     		.section	.text.FillChecksum,"ax",%progbits
 2473              		.align	2
 2474              		.code	16
 2475              		.thumb_func
 2476              		.type	FillChecksum, %function
 2477              	FillChecksum:
 2478              	.LFB14:
1334:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1335:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1336:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1337:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: FillChecksum
1338:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1339:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1340:Generated_Source\PSoC4/cy_em_eeprom.c **** * Performs calculation of the checksum on each row in the Em_EEPROM and fills
1341:Generated_Source\PSoC4/cy_em_eeprom.c **** * the Em_EEPROM headers checksum field with the calculated checksums.
1342:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1343:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
1344:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure.
1345:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1346:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1347:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1348:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1349:Generated_Source\PSoC4/cy_em_eeprom.c **** * \theory 
1350:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if redundant copy option is used the Em_EEPROM would return bad 
1351:Generated_Source\PSoC4/cy_em_eeprom.c **** * checksum while trying to read the EEPROM rows which were not yet written by 
1352:Generated_Source\PSoC4/cy_em_eeprom.c **** * the user. E.g. any read after device reprogramming without previous Write() 
1353:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation to the EEPROM would fail. This would happen because the Em_EEPROM 
1354:Generated_Source\PSoC4/cy_em_eeprom.c **** * headers checksum field values (which is zero at the moment) would not be 
1355:Generated_Source\PSoC4/cy_em_eeprom.c **** * equal to the actual data checksum. This function allows to avoid read failure
1356:Generated_Source\PSoC4/cy_em_eeprom.c **** * after device reprogramming. 
1357:Generated_Source\PSoC4/cy_em_eeprom.c **** *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 69


1358:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
1359:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
1360:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
1361:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
1362:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1363:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1364:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t FillChecksum(cy_stc_eeprom_context_t * context)
1365:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2479              		.loc 1 1365 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 160
 2482              		@ frame_needed = 1, uses_anonymous_args = 0
 2483 0000 90B5     		push	{r4, r7, lr}
 2484              		.cfi_def_cfa_offset 12
 2485              		.cfi_offset 4, -12
 2486              		.cfi_offset 7, -8
 2487              		.cfi_offset 14, -4
 2488 0002 A9B0     		sub	sp, sp, #164
 2489              		.cfi_def_cfa_offset 176
 2490 0004 00AF     		add	r7, sp, #0
 2491              		.cfi_def_cfa_register 7
 2492 0006 7860     		str	r0, [r7, #4]
1366:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
1367:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 rdAddr;
1368:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
1369:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 wrAddr = context->lastWrRowAddr;
 2493              		.loc 1 1369 0
 2494 0008 7B68     		ldr	r3, [r7, #4]
 2495 000a 9B68     		ldr	r3, [r3, #8]
 2496 000c BB60     		str	r3, [r7, #8]
1370:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 tmpRowAddr;
1371:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Get the sequence number (number of writes) */
1372:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(wrAddr);
 2497              		.loc 1 1372 0
 2498 000e BB68     		ldr	r3, [r7, #8]
 2499 0010 1B68     		ldr	r3, [r3]
 2500 0012 9822     		movs	r2, #152
 2501 0014 BA18     		adds	r2, r7, r2
 2502 0016 1360     		str	r3, [r2]
1373:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 2503              		.loc 1 1373 0
 2504 0018 9723     		movs	r3, #151
 2505 001a FB18     		adds	r3, r7, r3
 2506 001c 0122     		movs	r2, #1
 2507 001e 1A70     		strb	r2, [r3]
1374:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1375:Generated_Source\PSoC4/cy_em_eeprom.c ****     for(i = 0u; i < (context->numberOfRows * context->wearLevelingFactor); i++)
 2508              		.loc 1 1375 0
 2509 0020 0023     		movs	r3, #0
 2510 0022 9C22     		movs	r2, #156
 2511 0024 BA18     		adds	r2, r7, r2
 2512 0026 1360     		str	r3, [r2]
 2513 0028 53E0     		b	.L131
 2514              	.L132:
1376:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1377:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Copy the EEPROM row from Flash to RAM */
1378:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)memcpy((void *)&writeRamBuffer[0u], (void *)(wrAddr), CY_EM_EEPROM_FLASH_SIZEOF_ROW);
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 70


 2515              		.loc 1 1378 0 discriminator 3
 2516 002a BB68     		ldr	r3, [r7, #8]
 2517 002c 1900     		movs	r1, r3
 2518 002e 0C23     		movs	r3, #12
 2519 0030 FB18     		adds	r3, r7, r3
 2520 0032 8022     		movs	r2, #128
 2521 0034 1800     		movs	r0, r3
 2522 0036 FFF7FEFF 		bl	memcpy
1379:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1380:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Increment the sequence number */
1381:Generated_Source\PSoC4/cy_em_eeprom.c ****         seqNum++;
 2523              		.loc 1 1381 0 discriminator 3
 2524 003a 9823     		movs	r3, #152
 2525 003c FB18     		adds	r3, r7, r3
 2526 003e 1B68     		ldr	r3, [r3]
 2527 0040 0133     		adds	r3, r3, #1
 2528 0042 9822     		movs	r2, #152
 2529 0044 BA18     		adds	r2, r7, r2
 2530 0046 1360     		str	r3, [r2]
1382:Generated_Source\PSoC4/cy_em_eeprom.c ****         writeRamBuffer[CY_EM_EEPROM_HEADER_SEQ_NUM_OFFSET_U32] = seqNum;
 2531              		.loc 1 1382 0 discriminator 3
 2532 0048 0C23     		movs	r3, #12
 2533 004a FB18     		adds	r3, r7, r3
 2534 004c 9822     		movs	r2, #152
 2535 004e BA18     		adds	r2, r7, r2
 2536 0050 1268     		ldr	r2, [r2]
 2537 0052 1A60     		str	r2, [r3]
1383:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1384:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Calculate and fill the checksum to the Em_EEPROM header */
1385:Generated_Source\PSoC4/cy_em_eeprom.c ****         writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
1386:Generated_Source\PSoC4/cy_em_eeprom.c ****                     CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 2538              		.loc 1 1386 0 discriminator 3
 2539 0054 0C23     		movs	r3, #12
 2540 0056 FB18     		adds	r3, r7, r3
 2541 0058 4033     		adds	r3, r3, #64
 2542 005a 4021     		movs	r1, #64
 2543 005c 1800     		movs	r0, r3
 2544 005e FFF7FEFF 		bl	CalcChecksum
 2545 0062 0300     		movs	r3, r0
1385:Generated_Source\PSoC4/cy_em_eeprom.c ****                     CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 2546              		.loc 1 1385 0 discriminator 3
 2547 0064 1A00     		movs	r2, r3
 2548 0066 0C23     		movs	r3, #12
 2549 0068 FB18     		adds	r3, r7, r3
 2550 006a DA63     		str	r2, [r3, #60]
1387:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               CY_EM_EEPROM_EEPROM_DATA_LEN);
1388:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1389:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Write the data to the specified flash row */
1390:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(wrAddr, writeRamBuffer, context);
 2551              		.loc 1 1390 0 discriminator 3
 2552 006c BB68     		ldr	r3, [r7, #8]
 2553 006e 9722     		movs	r2, #151
 2554 0070 BC18     		adds	r4, r7, r2
 2555 0072 7A68     		ldr	r2, [r7, #4]
 2556 0074 0C21     		movs	r1, #12
 2557 0076 7918     		adds	r1, r7, r1
 2558 0078 1800     		movs	r0, r3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 71


 2559 007a FFF7FEFF 		bl	WriteRow
 2560 007e 0300     		movs	r3, r0
 2561 0080 2370     		strb	r3, [r4]
1391:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1392:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Update the row address to point to the relevant row in the redundant 
1393:Generated_Source\PSoC4/cy_em_eeprom.c ****         * EEPROM's copy.
1394:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
1395:Generated_Source\PSoC4/cy_em_eeprom.c ****         tmpRowAddr = (wrAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2562              		.loc 1 1395 0 discriminator 3
 2563 0082 BA68     		ldr	r2, [r7, #8]
 2564 0084 7B68     		ldr	r3, [r7, #4]
 2565 0086 9B69     		ldr	r3, [r3, #24]
 2566 0088 D21A     		subs	r2, r2, r3
 2567 008a 7B68     		ldr	r3, [r7, #4]
 2568 008c 1B68     		ldr	r3, [r3]
 2569 008e D318     		adds	r3, r2, r3
 2570 0090 9022     		movs	r2, #144
 2571 0092 BA18     		adds	r2, r7, r2
 2572 0094 1360     		str	r3, [r2]
1396:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1397:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Write the data to the specified flash row */
1398:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(tmpRowAddr, writeRamBuffer, context);
 2573              		.loc 1 1398 0 discriminator 3
 2574 0096 9723     		movs	r3, #151
 2575 0098 FC18     		adds	r4, r7, r3
 2576 009a 7A68     		ldr	r2, [r7, #4]
 2577 009c 0C23     		movs	r3, #12
 2578 009e F918     		adds	r1, r7, r3
 2579 00a0 9023     		movs	r3, #144
 2580 00a2 FB18     		adds	r3, r7, r3
 2581 00a4 1B68     		ldr	r3, [r3]
 2582 00a6 1800     		movs	r0, r3
 2583 00a8 FFF7FEFF 		bl	WriteRow
 2584 00ac 0300     		movs	r3, r0
 2585 00ae 2370     		strb	r3, [r4]
1399:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1400:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Get the address of the next row to be written. 
1401:Generated_Source\PSoC4/cy_em_eeprom.c ****         * "rdAddr" is not used in this function but provided to prevent NULL 
1402:Generated_Source\PSoC4/cy_em_eeprom.c ****         * pointer exception in GetNextRowToWrite().
1403:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
1404:Generated_Source\PSoC4/cy_em_eeprom.c ****         GetNextRowToWrite(seqNum, &wrAddr, &rdAddr, context);
 2586              		.loc 1 1404 0 discriminator 3
 2587 00b0 7B68     		ldr	r3, [r7, #4]
 2588 00b2 8C22     		movs	r2, #140
 2589 00b4 BA18     		adds	r2, r7, r2
 2590 00b6 0821     		movs	r1, #8
 2591 00b8 7918     		adds	r1, r7, r1
 2592 00ba 9820     		movs	r0, #152
 2593 00bc 3818     		adds	r0, r7, r0
 2594 00be 0068     		ldr	r0, [r0]
 2595 00c0 FFF7FEFF 		bl	GetNextRowToWrite
1375:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 2596              		.loc 1 1375 0 discriminator 3
 2597 00c4 9C23     		movs	r3, #156
 2598 00c6 FB18     		adds	r3, r7, r3
 2599 00c8 1B68     		ldr	r3, [r3]
 2600 00ca 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 72


 2601 00cc 9C22     		movs	r2, #156
 2602 00ce BA18     		adds	r2, r7, r2
 2603 00d0 1360     		str	r3, [r2]
 2604              	.L131:
1375:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 2605              		.loc 1 1375 0 is_stmt 0 discriminator 1
 2606 00d2 7B68     		ldr	r3, [r7, #4]
 2607 00d4 5A68     		ldr	r2, [r3, #4]
 2608 00d6 7B68     		ldr	r3, [r7, #4]
 2609 00d8 1B69     		ldr	r3, [r3, #16]
 2610 00da 5A43     		muls	r2, r3
 2611 00dc 9C23     		movs	r3, #156
 2612 00de FB18     		adds	r3, r7, r3
 2613 00e0 1B68     		ldr	r3, [r3]
 2614 00e2 9A42     		cmp	r2, r3
 2615 00e4 A1D8     		bhi	.L132
1405:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1406:Generated_Source\PSoC4/cy_em_eeprom.c ****     
1407:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 2616              		.loc 1 1407 0 is_stmt 1
 2617 00e6 9723     		movs	r3, #151
 2618 00e8 FB18     		adds	r3, r7, r3
 2619 00ea 1B78     		ldrb	r3, [r3]
1408:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2620              		.loc 1 1408 0
 2621 00ec 1800     		movs	r0, r3
 2622 00ee BD46     		mov	sp, r7
 2623 00f0 29B0     		add	sp, sp, #164
 2624              		@ sp needed
 2625 00f2 90BD     		pop	{r4, r7, pc}
 2626              		.cfi_endproc
 2627              	.LFE14:
 2628              		.size	FillChecksum, .-FillChecksum
 2629              		.text
 2630              	.Letext0:
 2631              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2632              		.file 3 "Generated_Source\\PSoC4\\cy_em_eeprom.h"
 2633              		.section	.debug_info,"",%progbits
 2634              	.Ldebug_info0:
 2635 0000 640A0000 		.4byte	0xa64
 2636 0004 0400     		.2byte	0x4
 2637 0006 00000000 		.4byte	.Ldebug_abbrev0
 2638 000a 04       		.byte	0x4
 2639 000b 01       		.uleb128 0x1
 2640 000c 86020000 		.4byte	.LASF101
 2641 0010 0C       		.byte	0xc
 2642 0011 C3000000 		.4byte	.LASF102
 2643 0015 14030000 		.4byte	.LASF103
 2644 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2645 001d 00000000 		.4byte	0
 2646 0021 00000000 		.4byte	.Ldebug_line0
 2647 0025 02       		.uleb128 0x2
 2648 0026 01       		.byte	0x1
 2649 0027 06       		.byte	0x6
 2650 0028 9B000000 		.4byte	.LASF0
 2651 002c 02       		.uleb128 0x2
 2652 002d 01       		.byte	0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 73


 2653 002e 08       		.byte	0x8
 2654 002f 9B040000 		.4byte	.LASF1
 2655 0033 02       		.uleb128 0x2
 2656 0034 02       		.byte	0x2
 2657 0035 05       		.byte	0x5
 2658 0036 B1040000 		.4byte	.LASF2
 2659 003a 02       		.uleb128 0x2
 2660 003b 02       		.byte	0x2
 2661 003c 07       		.byte	0x7
 2662 003d 2C020000 		.4byte	.LASF3
 2663 0041 02       		.uleb128 0x2
 2664 0042 04       		.byte	0x4
 2665 0043 05       		.byte	0x5
 2666 0044 18010000 		.4byte	.LASF4
 2667 0048 02       		.uleb128 0x2
 2668 0049 04       		.byte	0x4
 2669 004a 07       		.byte	0x7
 2670 004b DC010000 		.4byte	.LASF5
 2671 004f 02       		.uleb128 0x2
 2672 0050 08       		.byte	0x8
 2673 0051 05       		.byte	0x5
 2674 0052 8D000000 		.4byte	.LASF6
 2675 0056 02       		.uleb128 0x2
 2676 0057 08       		.byte	0x8
 2677 0058 07       		.byte	0x7
 2678 0059 66000000 		.4byte	.LASF7
 2679 005d 03       		.uleb128 0x3
 2680 005e 04       		.byte	0x4
 2681 005f 05       		.byte	0x5
 2682 0060 696E7400 		.ascii	"int\000"
 2683 0064 02       		.uleb128 0x2
 2684 0065 04       		.byte	0x4
 2685 0066 07       		.byte	0x7
 2686 0067 C6010000 		.4byte	.LASF8
 2687 006b 04       		.uleb128 0x4
 2688 006c 34010000 		.4byte	.LASF9
 2689 0070 02       		.byte	0x2
 2690 0071 D201     		.2byte	0x1d2
 2691 0073 2C000000 		.4byte	0x2c
 2692 0077 04       		.uleb128 0x4
 2693 0078 00000000 		.4byte	.LASF10
 2694 007c 02       		.byte	0x2
 2695 007d D301     		.2byte	0x1d3
 2696 007f 3A000000 		.4byte	0x3a
 2697 0083 04       		.uleb128 0x4
 2698 0084 4E010000 		.4byte	.LASF11
 2699 0088 02       		.byte	0x2
 2700 0089 D401     		.2byte	0x1d4
 2701 008b 48000000 		.4byte	0x48
 2702 008f 02       		.uleb128 0x2
 2703 0090 04       		.byte	0x4
 2704 0091 04       		.byte	0x4
 2705 0092 6D040000 		.4byte	.LASF12
 2706 0096 02       		.uleb128 0x2
 2707 0097 08       		.byte	0x8
 2708 0098 04       		.byte	0x4
 2709 0099 3A010000 		.4byte	.LASF13
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 74


 2710 009d 02       		.uleb128 0x2
 2711 009e 01       		.byte	0x1
 2712 009f 08       		.byte	0x8
 2713 00a0 24050000 		.4byte	.LASF14
 2714 00a4 04       		.uleb128 0x4
 2715 00a5 0D060000 		.4byte	.LASF15
 2716 00a9 02       		.byte	0x2
 2717 00aa 7402     		.2byte	0x274
 2718 00ac 48000000 		.4byte	0x48
 2719 00b0 02       		.uleb128 0x2
 2720 00b1 08       		.byte	0x8
 2721 00b2 04       		.byte	0x4
 2722 00b3 E4030000 		.4byte	.LASF16
 2723 00b7 02       		.uleb128 0x2
 2724 00b8 04       		.byte	0x4
 2725 00b9 07       		.byte	0x7
 2726 00ba DB030000 		.4byte	.LASF17
 2727 00be 05       		.uleb128 0x5
 2728 00bf 04       		.byte	0x4
 2729 00c0 06       		.uleb128 0x6
 2730 00c1 10       		.byte	0x10
 2731 00c2 03       		.byte	0x3
 2732 00c3 FB       		.byte	0xfb
 2733 00c4 09010000 		.4byte	0x109
 2734 00c8 07       		.uleb128 0x7
 2735 00c9 82000000 		.4byte	.LASF18
 2736 00cd 03       		.byte	0x3
 2737 00ce FE       		.byte	0xfe
 2738 00cf 83000000 		.4byte	0x83
 2739 00d3 00       		.byte	0
 2740 00d4 08       		.uleb128 0x8
 2741 00d5 A1050000 		.4byte	.LASF19
 2742 00d9 03       		.byte	0x3
 2743 00da 0301     		.2byte	0x103
 2744 00dc 83000000 		.4byte	0x83
 2745 00e0 04       		.byte	0x4
 2746 00e1 08       		.uleb128 0x8
 2747 00e2 AF010000 		.4byte	.LASF20
 2748 00e6 03       		.byte	0x3
 2749 00e7 0601     		.2byte	0x106
 2750 00e9 6B000000 		.4byte	0x6b
 2751 00ed 08       		.byte	0x8
 2752 00ee 08       		.uleb128 0x8
 2753 00ef ED050000 		.4byte	.LASF21
 2754 00f3 03       		.byte	0x3
 2755 00f4 0B01     		.2byte	0x10b
 2756 00f6 6B000000 		.4byte	0x6b
 2757 00fa 09       		.byte	0x9
 2758 00fb 08       		.uleb128 0x8
 2759 00fc 21010000 		.4byte	.LASF22
 2760 0100 03       		.byte	0x3
 2761 0101 0E01     		.2byte	0x10e
 2762 0103 83000000 		.4byte	0x83
 2763 0107 0C       		.byte	0xc
 2764 0108 00       		.byte	0
 2765 0109 04       		.uleb128 0x4
 2766 010a 83050000 		.4byte	.LASF23
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 75


 2767 010e 03       		.byte	0x3
 2768 010f 0F01     		.2byte	0x10f
 2769 0111 C0000000 		.4byte	0xc0
 2770 0115 09       		.uleb128 0x9
 2771 0116 1C       		.byte	0x1c
 2772 0117 03       		.byte	0x3
 2773 0118 1601     		.2byte	0x116
 2774 011a 87010000 		.4byte	0x187
 2775 011e 08       		.uleb128 0x8
 2776 011f 91040000 		.4byte	.LASF24
 2777 0123 03       		.byte	0x3
 2778 0124 1B01     		.2byte	0x11b
 2779 0126 83000000 		.4byte	0x83
 2780 012a 00       		.byte	0
 2781 012b 08       		.uleb128 0x8
 2782 012c 4F000000 		.4byte	.LASF25
 2783 0130 03       		.byte	0x3
 2784 0131 2001     		.2byte	0x120
 2785 0133 83000000 		.4byte	0x83
 2786 0137 04       		.byte	0x4
 2787 0138 08       		.uleb128 0x8
 2788 0139 5D050000 		.4byte	.LASF26
 2789 013d 03       		.byte	0x3
 2790 013e 2301     		.2byte	0x123
 2791 0140 83000000 		.4byte	0x83
 2792 0144 08       		.byte	0x8
 2793 0145 08       		.uleb128 0x8
 2794 0146 82000000 		.4byte	.LASF18
 2795 014a 03       		.byte	0x3
 2796 014b 2601     		.2byte	0x126
 2797 014d 83000000 		.4byte	0x83
 2798 0151 0C       		.byte	0xc
 2799 0152 08       		.uleb128 0x8
 2800 0153 A1050000 		.4byte	.LASF19
 2801 0157 03       		.byte	0x3
 2802 0158 2B01     		.2byte	0x12b
 2803 015a 83000000 		.4byte	0x83
 2804 015e 10       		.byte	0x10
 2805 015f 08       		.uleb128 0x8
 2806 0160 AF010000 		.4byte	.LASF20
 2807 0164 03       		.byte	0x3
 2808 0165 2E01     		.2byte	0x12e
 2809 0167 6B000000 		.4byte	0x6b
 2810 016b 14       		.byte	0x14
 2811 016c 08       		.uleb128 0x8
 2812 016d ED050000 		.4byte	.LASF21
 2813 0171 03       		.byte	0x3
 2814 0172 3301     		.2byte	0x133
 2815 0174 6B000000 		.4byte	0x6b
 2816 0178 15       		.byte	0x15
 2817 0179 08       		.uleb128 0x8
 2818 017a 21010000 		.4byte	.LASF22
 2819 017e 03       		.byte	0x3
 2820 017f 3601     		.2byte	0x136
 2821 0181 83000000 		.4byte	0x83
 2822 0185 18       		.byte	0x18
 2823 0186 00       		.byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 76


 2824 0187 04       		.uleb128 0x4
 2825 0188 1D040000 		.4byte	.LASF27
 2826 018c 03       		.byte	0x3
 2827 018d 3701     		.2byte	0x137
 2828 018f 15010000 		.4byte	0x115
 2829 0193 0A       		.uleb128 0xa
 2830 0194 01       		.byte	0x1
 2831 0195 2C000000 		.4byte	0x2c
 2832 0199 03       		.byte	0x3
 2833 019a 5401     		.2byte	0x154
 2834 019c BF010000 		.4byte	0x1bf
 2835 01a0 0B       		.uleb128 0xb
 2836 01a1 D8050000 		.4byte	.LASF28
 2837 01a5 00       		.byte	0
 2838 01a6 0B       		.uleb128 0xb
 2839 01a7 AA030000 		.4byte	.LASF29
 2840 01ab 01       		.byte	0x1
 2841 01ac 0B       		.uleb128 0xb
 2842 01ad C1030000 		.4byte	.LASF30
 2843 01b1 02       		.byte	0x2
 2844 01b2 0B       		.uleb128 0xb
 2845 01b3 7B040000 		.4byte	.LASF31
 2846 01b7 03       		.byte	0x3
 2847 01b8 0B       		.uleb128 0xb
 2848 01b9 E9000000 		.4byte	.LASF32
 2849 01bd 04       		.byte	0x4
 2850 01be 00       		.byte	0
 2851 01bf 04       		.uleb128 0x4
 2852 01c0 1A000000 		.4byte	.LASF33
 2853 01c4 03       		.byte	0x3
 2854 01c5 5A01     		.2byte	0x15a
 2855 01c7 93010000 		.4byte	0x193
 2856 01cb 0C       		.uleb128 0xc
 2857 01cc EA040000 		.4byte	.LASF36
 2858 01d0 01       		.byte	0x1
 2859 01d1 5F       		.byte	0x5f
 2860 01d2 BF010000 		.4byte	0x1bf
 2861 01d6 00000000 		.4byte	.LFB0
 2862 01da F6000000 		.4byte	.LFE0-.LFB0
 2863 01de 01       		.uleb128 0x1
 2864 01df 9C       		.byte	0x9c
 2865 01e0 0F020000 		.4byte	0x20f
 2866 01e4 0D       		.uleb128 0xd
 2867 01e5 29050000 		.4byte	.LASF34
 2868 01e9 01       		.byte	0x1
 2869 01ea 5F       		.byte	0x5f
 2870 01eb 0F020000 		.4byte	0x20f
 2871 01ef 02       		.uleb128 0x2
 2872 01f0 91       		.byte	0x91
 2873 01f1 64       		.sleb128 -28
 2874 01f2 0D       		.uleb128 0xd
 2875 01f3 55050000 		.4byte	.LASF35
 2876 01f7 01       		.byte	0x1
 2877 01f8 5F       		.byte	0x5f
 2878 01f9 15020000 		.4byte	0x215
 2879 01fd 02       		.uleb128 0x2
 2880 01fe 91       		.byte	0x91
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 77


 2881 01ff 60       		.sleb128 -32
 2882 0200 0E       		.uleb128 0xe
 2883 0201 72657400 		.ascii	"ret\000"
 2884 0205 01       		.byte	0x1
 2885 0206 61       		.byte	0x61
 2886 0207 BF010000 		.4byte	0x1bf
 2887 020b 02       		.uleb128 0x2
 2888 020c 91       		.byte	0x91
 2889 020d 6F       		.sleb128 -17
 2890 020e 00       		.byte	0
 2891 020f 0F       		.uleb128 0xf
 2892 0210 04       		.byte	0x4
 2893 0211 09010000 		.4byte	0x109
 2894 0215 0F       		.uleb128 0xf
 2895 0216 04       		.byte	0x4
 2896 0217 87010000 		.4byte	0x187
 2897 021b 0C       		.uleb128 0xc
 2898 021c FB010000 		.4byte	.LASF37
 2899 0220 01       		.byte	0x1
 2900 0221 A9       		.byte	0xa9
 2901 0222 BF010000 		.4byte	0x1bf
 2902 0226 00000000 		.4byte	.LFB1
 2903 022a 2A030000 		.4byte	.LFE1-.LFB1
 2904 022e 01       		.uleb128 0x1
 2905 022f 9C       		.byte	0x9c
 2906 0230 BF030000 		.4byte	0x3bf
 2907 0234 0D       		.uleb128 0xd
 2908 0235 7D000000 		.4byte	.LASF38
 2909 0239 01       		.byte	0x1
 2910 023a A9       		.byte	0xa9
 2911 023b 83000000 		.4byte	0x83
 2912 023f 03       		.uleb128 0x3
 2913 0240 91       		.byte	0x91
 2914 0241 9C7F     		.sleb128 -100
 2915 0243 0D       		.uleb128 0xd
 2916 0244 6E020000 		.4byte	.LASF39
 2917 0248 01       		.byte	0x1
 2918 0249 AA       		.byte	0xaa
 2919 024a BE000000 		.4byte	0xbe
 2920 024e 03       		.uleb128 0x3
 2921 024f 91       		.byte	0x91
 2922 0250 987F     		.sleb128 -104
 2923 0252 0D       		.uleb128 0xd
 2924 0253 27020000 		.4byte	.LASF40
 2925 0257 01       		.byte	0x1
 2926 0258 AB       		.byte	0xab
 2927 0259 83000000 		.4byte	0x83
 2928 025d 03       		.uleb128 0x3
 2929 025e 91       		.byte	0x91
 2930 025f 947F     		.sleb128 -108
 2931 0261 0D       		.uleb128 0xd
 2932 0262 55050000 		.4byte	.LASF35
 2933 0266 01       		.byte	0x1
 2934 0267 AC       		.byte	0xac
 2935 0268 15020000 		.4byte	0x215
 2936 026c 03       		.uleb128 0x3
 2937 026d 91       		.byte	0x91
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 78


 2938 026e 907F     		.sleb128 -112
 2939 0270 0E       		.uleb128 0xe
 2940 0271 72657400 		.ascii	"ret\000"
 2941 0275 01       		.byte	0x1
 2942 0276 AE       		.byte	0xae
 2943 0277 BF010000 		.4byte	0x1bf
 2944 027b 02       		.uleb128 0x2
 2945 027c 91       		.byte	0x91
 2946 027d 6F       		.sleb128 -17
 2947 027e 0E       		.uleb128 0xe
 2948 027f 6900     		.ascii	"i\000"
 2949 0281 01       		.byte	0x1
 2950 0282 AF       		.byte	0xaf
 2951 0283 83000000 		.4byte	0x83
 2952 0287 02       		.uleb128 0x2
 2953 0288 91       		.byte	0x91
 2954 0289 68       		.sleb128 -24
 2955 028a 10       		.uleb128 0x10
 2956 028b 30050000 		.4byte	.LASF41
 2957 028f 01       		.byte	0x1
 2958 0290 B0       		.byte	0xb0
 2959 0291 83000000 		.4byte	0x83
 2960 0295 02       		.uleb128 0x2
 2961 0296 91       		.byte	0x91
 2962 0297 64       		.sleb128 -28
 2963 0298 10       		.uleb128 0x10
 2964 0299 89030000 		.4byte	.LASF42
 2965 029d 01       		.byte	0x1
 2966 029e B1       		.byte	0xb1
 2967 029f 83000000 		.4byte	0x83
 2968 02a3 03       		.uleb128 0x3
 2969 02a4 91       		.byte	0x91
 2970 02a5 BC7F     		.sleb128 -68
 2971 02a7 10       		.uleb128 0x10
 2972 02a8 76050000 		.4byte	.LASF43
 2973 02ac 01       		.byte	0x1
 2974 02ad B2       		.byte	0xb2
 2975 02ae 83000000 		.4byte	0x83
 2976 02b2 03       		.uleb128 0x3
 2977 02b3 91       		.byte	0x91
 2978 02b4 B07F     		.sleb128 -80
 2979 02b6 10       		.uleb128 0x10
 2980 02b7 79020000 		.4byte	.LASF44
 2981 02bb 01       		.byte	0x1
 2982 02bc B3       		.byte	0xb3
 2983 02bd 83000000 		.4byte	0x83
 2984 02c1 02       		.uleb128 0x2
 2985 02c2 91       		.byte	0x91
 2986 02c3 60       		.sleb128 -32
 2987 02c4 10       		.uleb128 0x10
 2988 02c5 55010000 		.4byte	.LASF45
 2989 02c9 01       		.byte	0x1
 2990 02ca B4       		.byte	0xb4
 2991 02cb 83000000 		.4byte	0x83
 2992 02cf 03       		.uleb128 0x3
 2993 02d0 91       		.byte	0x91
 2994 02d1 B87F     		.sleb128 -72
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 79


 2995 02d3 10       		.uleb128 0x10
 2996 02d4 FB050000 		.4byte	.LASF46
 2997 02d8 01       		.byte	0x1
 2998 02d9 B5       		.byte	0xb5
 2999 02da 83000000 		.4byte	0x83
 3000 02de 02       		.uleb128 0x2
 3001 02df 91       		.byte	0x91
 3002 02e0 5C       		.sleb128 -36
 3003 02e1 10       		.uleb128 0x10
 3004 02e2 D4040000 		.4byte	.LASF47
 3005 02e6 01       		.byte	0x1
 3006 02e7 B6       		.byte	0xb6
 3007 02e8 83000000 		.4byte	0x83
 3008 02ec 02       		.uleb128 0x2
 3009 02ed 91       		.byte	0x91
 3010 02ee 58       		.sleb128 -40
 3011 02ef 10       		.uleb128 0x10
 3012 02f0 47060000 		.4byte	.LASF48
 3013 02f4 01       		.byte	0x1
 3014 02f5 B7       		.byte	0xb7
 3015 02f6 83000000 		.4byte	0x83
 3016 02fa 02       		.uleb128 0x2
 3017 02fb 91       		.byte	0x91
 3018 02fc 54       		.sleb128 -44
 3019 02fd 11       		.uleb128 0x11
 3020 02fe 42000000 		.4byte	.LBB2
 3021 0302 DA020000 		.4byte	.LBE2-.LBB2
 3022 0306 10       		.uleb128 0x10
 3023 0307 B4050000 		.4byte	.LASF49
 3024 030b 01       		.byte	0x1
 3025 030c BC       		.byte	0xbc
 3026 030d 83000000 		.4byte	0x83
 3027 0311 02       		.uleb128 0x2
 3028 0312 91       		.byte	0x91
 3029 0313 50       		.sleb128 -48
 3030 0314 10       		.uleb128 0x10
 3031 0315 9A050000 		.4byte	.LASF50
 3032 0319 01       		.byte	0x1
 3033 031a BD       		.byte	0xbd
 3034 031b 83000000 		.4byte	0x83
 3035 031f 02       		.uleb128 0x2
 3036 0320 91       		.byte	0x91
 3037 0321 4C       		.sleb128 -52
 3038 0322 10       		.uleb128 0x10
 3039 0323 16040000 		.4byte	.LASF51
 3040 0327 01       		.byte	0x1
 3041 0328 BF       		.byte	0xbf
 3042 0329 83000000 		.4byte	0x83
 3043 032d 02       		.uleb128 0x2
 3044 032e 91       		.byte	0x91
 3045 032f 44       		.sleb128 -60
 3046 0330 10       		.uleb128 0x10
 3047 0331 78010000 		.4byte	.LASF52
 3048 0335 01       		.byte	0x1
 3049 0336 C0       		.byte	0xc0
 3050 0337 83000000 		.4byte	0x83
 3051 033b 02       		.uleb128 0x2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 80


 3052 033c 91       		.byte	0x91
 3053 033d 48       		.sleb128 -56
 3054 033e 10       		.uleb128 0x10
 3055 033f 2B060000 		.4byte	.LASF53
 3056 0343 01       		.byte	0x1
 3057 0344 C5       		.byte	0xc5
 3058 0345 83000000 		.4byte	0x83
 3059 0349 02       		.uleb128 0x2
 3060 034a 91       		.byte	0x91
 3061 034b 40       		.sleb128 -64
 3062 034c 12       		.uleb128 0x12
 3063 034d EC000000 		.4byte	.LBB3
 3064 0351 26000000 		.4byte	.LBE3-.LBB3
 3065 0355 69030000 		.4byte	0x369
 3066 0359 10       		.uleb128 0x10
 3067 035a 8F010000 		.4byte	.LASF54
 3068 035e 01       		.byte	0x1
 3069 035f E2       		.byte	0xe2
 3070 0360 83000000 		.4byte	0x83
 3071 0364 03       		.uleb128 0x3
 3072 0365 91       		.byte	0x91
 3073 0366 B47F     		.sleb128 -76
 3074 0368 00       		.byte	0
 3075 0369 11       		.uleb128 0x11
 3076 036a 3A020000 		.4byte	.LBB4
 3077 036e D4000000 		.4byte	.LBE4-.LBB4
 3078 0372 13       		.uleb128 0x13
 3079 0373 3F050000 		.4byte	.LASF55
 3080 0377 01       		.byte	0x1
 3081 0378 3B01     		.2byte	0x13b
 3082 037a 83000000 		.4byte	0x83
 3083 037e 03       		.uleb128 0x3
 3084 037f 91       		.byte	0x91
 3085 0380 AC7F     		.sleb128 -84
 3086 0382 13       		.uleb128 0x13
 3087 0383 73040000 		.4byte	.LASF56
 3088 0387 01       		.byte	0x1
 3089 0388 3C01     		.2byte	0x13c
 3090 038a 83000000 		.4byte	0x83
 3091 038e 03       		.uleb128 0x3
 3092 038f 91       		.byte	0x91
 3093 0390 A87F     		.sleb128 -88
 3094 0392 11       		.uleb128 0x11
 3095 0393 78020000 		.4byte	.LBB5
 3096 0397 96000000 		.4byte	.LBE5-.LBB5
 3097 039b 13       		.uleb128 0x13
 3098 039c 1D020000 		.4byte	.LASF57
 3099 03a0 01       		.byte	0x1
 3100 03a1 4101     		.2byte	0x141
 3101 03a3 83000000 		.4byte	0x83
 3102 03a7 03       		.uleb128 0x3
 3103 03a8 91       		.byte	0x91
 3104 03a9 A47F     		.sleb128 -92
 3105 03ab 13       		.uleb128 0x13
 3106 03ac BB050000 		.4byte	.LASF58
 3107 03b0 01       		.byte	0x1
 3108 03b1 4201     		.2byte	0x142
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 81


 3109 03b3 83000000 		.4byte	0x83
 3110 03b7 03       		.uleb128 0x3
 3111 03b8 91       		.byte	0x91
 3112 03b9 A07F     		.sleb128 -96
 3113 03bb 00       		.byte	0
 3114 03bc 00       		.byte	0
 3115 03bd 00       		.byte	0
 3116 03be 00       		.byte	0
 3117 03bf 14       		.uleb128 0x14
 3118 03c0 03040000 		.4byte	.LASF59
 3119 03c4 01       		.byte	0x1
 3120 03c5 9B01     		.2byte	0x19b
 3121 03c7 BF010000 		.4byte	0x1bf
 3122 03cb 00000000 		.4byte	.LFB2
 3123 03cf 32030000 		.4byte	.LFE2-.LFB2
 3124 03d3 01       		.uleb128 0x1
 3125 03d4 9C       		.byte	0x9c
 3126 03d5 37050000 		.4byte	0x537
 3127 03d9 15       		.uleb128 0x15
 3128 03da 7D000000 		.4byte	.LASF38
 3129 03de 01       		.byte	0x1
 3130 03df 9B01     		.2byte	0x19b
 3131 03e1 83000000 		.4byte	0x83
 3132 03e5 03       		.uleb128 0x3
 3133 03e6 91       		.byte	0x91
 3134 03e7 AC7E     		.sleb128 -212
 3135 03e9 15       		.uleb128 0x15
 3136 03ea 6E020000 		.4byte	.LASF39
 3137 03ee 01       		.byte	0x1
 3138 03ef 9C01     		.2byte	0x19c
 3139 03f1 BE000000 		.4byte	0xbe
 3140 03f5 03       		.uleb128 0x3
 3141 03f6 91       		.byte	0x91
 3142 03f7 A87E     		.sleb128 -216
 3143 03f9 15       		.uleb128 0x15
 3144 03fa 27020000 		.4byte	.LASF40
 3145 03fe 01       		.byte	0x1
 3146 03ff 9D01     		.2byte	0x19d
 3147 0401 83000000 		.4byte	0x83
 3148 0405 03       		.uleb128 0x3
 3149 0406 91       		.byte	0x91
 3150 0407 A47E     		.sleb128 -220
 3151 0409 15       		.uleb128 0x15
 3152 040a 55050000 		.4byte	.LASF35
 3153 040e 01       		.byte	0x1
 3154 040f 9E01     		.2byte	0x19e
 3155 0411 15020000 		.4byte	0x215
 3156 0415 03       		.uleb128 0x3
 3157 0416 91       		.byte	0x91
 3158 0417 A07E     		.sleb128 -224
 3159 0419 16       		.uleb128 0x16
 3160 041a 72657400 		.ascii	"ret\000"
 3161 041e 01       		.byte	0x1
 3162 041f A001     		.2byte	0x1a0
 3163 0421 BF010000 		.4byte	0x1bf
 3164 0425 02       		.uleb128 0x2
 3165 0426 91       		.byte	0x91
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 82


 3166 0427 6F       		.sleb128 -17
 3167 0428 16       		.uleb128 0x16
 3168 0429 6900     		.ascii	"i\000"
 3169 042b 01       		.byte	0x1
 3170 042c A101     		.2byte	0x1a1
 3171 042e 83000000 		.4byte	0x83
 3172 0432 02       		.uleb128 0x2
 3173 0433 91       		.byte	0x91
 3174 0434 68       		.sleb128 -24
 3175 0435 13       		.uleb128 0x13
 3176 0436 67040000 		.4byte	.LASF60
 3177 043a 01       		.byte	0x1
 3178 043b A201     		.2byte	0x1a2
 3179 043d 83000000 		.4byte	0x83
 3180 0441 02       		.uleb128 0x2
 3181 0442 91       		.byte	0x91
 3182 0443 64       		.sleb128 -28
 3183 0444 13       		.uleb128 0x13
 3184 0445 3F020000 		.4byte	.LASF61
 3185 0449 01       		.byte	0x1
 3186 044a A301     		.2byte	0x1a3
 3187 044c 83000000 		.4byte	0x83
 3188 0450 02       		.uleb128 0x2
 3189 0451 91       		.byte	0x91
 3190 0452 48       		.sleb128 -56
 3191 0453 13       		.uleb128 0x13
 3192 0454 FC040000 		.4byte	.LASF62
 3193 0458 01       		.byte	0x1
 3194 0459 A401     		.2byte	0x1a4
 3195 045b 37050000 		.4byte	0x537
 3196 045f 03       		.uleb128 0x3
 3197 0460 91       		.byte	0x91
 3198 0461 C47E     		.sleb128 -188
 3199 0463 13       		.uleb128 0x13
 3200 0464 3F050000 		.4byte	.LASF55
 3201 0468 01       		.byte	0x1
 3202 0469 A501     		.2byte	0x1a5
 3203 046b 83000000 		.4byte	0x83
 3204 046f 03       		.uleb128 0x3
 3205 0470 91       		.byte	0x91
 3206 0471 C07E     		.sleb128 -192
 3207 0473 13       		.uleb128 0x13
 3208 0474 73040000 		.4byte	.LASF56
 3209 0478 01       		.byte	0x1
 3210 0479 A601     		.2byte	0x1a6
 3211 047b 83000000 		.4byte	0x83
 3212 047f 03       		.uleb128 0x3
 3213 0480 91       		.byte	0x91
 3214 0481 BC7E     		.sleb128 -196
 3215 0483 13       		.uleb128 0x13
 3216 0484 6B050000 		.4byte	.LASF63
 3217 0488 01       		.byte	0x1
 3218 0489 A701     		.2byte	0x1a7
 3219 048b 83000000 		.4byte	0x83
 3220 048f 02       		.uleb128 0x2
 3221 0490 91       		.byte	0x91
 3222 0491 60       		.sleb128 -32
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 83


 3223 0492 13       		.uleb128 0x13
 3224 0493 37060000 		.4byte	.LASF64
 3225 0497 01       		.byte	0x1
 3226 0498 A801     		.2byte	0x1a8
 3227 049a 83000000 		.4byte	0x83
 3228 049e 03       		.uleb128 0x3
 3229 049f 91       		.byte	0x91
 3230 04a0 B87E     		.sleb128 -200
 3231 04a2 13       		.uleb128 0x13
 3232 04a3 5C020000 		.4byte	.LASF65
 3233 04a7 01       		.byte	0x1
 3234 04a8 A901     		.2byte	0x1a9
 3235 04aa 83000000 		.4byte	0x83
 3236 04ae 03       		.uleb128 0x3
 3237 04af 91       		.byte	0x91
 3238 04b0 B47E     		.sleb128 -204
 3239 04b2 13       		.uleb128 0x13
 3240 04b3 12000000 		.4byte	.LASF66
 3241 04b7 01       		.byte	0x1
 3242 04b8 AA01     		.2byte	0x1aa
 3243 04ba BE000000 		.4byte	0xbe
 3244 04be 02       		.uleb128 0x2
 3245 04bf 91       		.byte	0x91
 3246 04c0 4C       		.sleb128 -52
 3247 04c1 13       		.uleb128 0x13
 3248 04c2 47060000 		.4byte	.LASF48
 3249 04c6 01       		.byte	0x1
 3250 04c7 AB01     		.2byte	0x1ab
 3251 04c9 83000000 		.4byte	0x83
 3252 04cd 02       		.uleb128 0x2
 3253 04ce 91       		.byte	0x91
 3254 04cf 5C       		.sleb128 -36
 3255 04d0 11       		.uleb128 0x11
 3256 04d1 4C000000 		.4byte	.LBB6
 3257 04d5 D8020000 		.4byte	.LBE6-.LBB6
 3258 04d9 13       		.uleb128 0x13
 3259 04da 5C000000 		.4byte	.LASF67
 3260 04de 01       		.byte	0x1
 3261 04df B001     		.2byte	0x1b0
 3262 04e1 83000000 		.4byte	0x83
 3263 04e5 02       		.uleb128 0x2
 3264 04e6 91       		.byte	0x91
 3265 04e7 54       		.sleb128 -44
 3266 04e8 13       		.uleb128 0x13
 3267 04e9 65010000 		.4byte	.LASF68
 3268 04ed 01       		.byte	0x1
 3269 04ee B101     		.2byte	0x1b1
 3270 04f0 83000000 		.4byte	0x83
 3271 04f4 03       		.uleb128 0x3
 3272 04f5 91       		.byte	0x91
 3273 04f6 B07E     		.sleb128 -208
 3274 04f8 17       		.uleb128 0x17
 3275 04f9 00000000 		.4byte	.Ldebug_ranges0+0
 3276 04fd 13       		.uleb128 0x13
 3277 04fe C6040000 		.4byte	.LASF69
 3278 0502 01       		.byte	0x1
 3279 0503 B501     		.2byte	0x1b5
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 84


 3280 0505 83000000 		.4byte	0x83
 3281 0509 02       		.uleb128 0x2
 3282 050a 91       		.byte	0x91
 3283 050b 58       		.sleb128 -40
 3284 050c 13       		.uleb128 0x13
 3285 050d 16040000 		.4byte	.LASF51
 3286 0511 01       		.byte	0x1
 3287 0512 B701     		.2byte	0x1b7
 3288 0514 83000000 		.4byte	0x83
 3289 0518 02       		.uleb128 0x2
 3290 0519 91       		.byte	0x91
 3291 051a 50       		.sleb128 -48
 3292 051b 11       		.uleb128 0x11
 3293 051c 1A020000 		.4byte	.LBB8
 3294 0520 38000000 		.4byte	.LBE8-.LBB8
 3295 0524 13       		.uleb128 0x13
 3296 0525 BD010000 		.4byte	.LASF70
 3297 0529 01       		.byte	0x1
 3298 052a 1702     		.2byte	0x217
 3299 052c 83000000 		.4byte	0x83
 3300 0530 02       		.uleb128 0x2
 3301 0531 91       		.byte	0x91
 3302 0532 44       		.sleb128 -60
 3303 0533 00       		.byte	0
 3304 0534 00       		.byte	0
 3305 0535 00       		.byte	0
 3306 0536 00       		.byte	0
 3307 0537 18       		.uleb128 0x18
 3308 0538 83000000 		.4byte	0x83
 3309 053c 47050000 		.4byte	0x547
 3310 0540 19       		.uleb128 0x19
 3311 0541 B7000000 		.4byte	0xb7
 3312 0545 1F       		.byte	0x1f
 3313 0546 00       		.byte	0
 3314 0547 14       		.uleb128 0x14
 3315 0548 F0030000 		.4byte	.LASF71
 3316 054c 01       		.byte	0x1
 3317 054d 7502     		.2byte	0x275
 3318 054f BF010000 		.4byte	0x1bf
 3319 0553 00000000 		.4byte	.LFB3
 3320 0557 FE000000 		.4byte	.LFE3-.LFB3
 3321 055b 01       		.uleb128 0x1
 3322 055c 9C       		.byte	0x9c
 3323 055d E4050000 		.4byte	0x5e4
 3324 0561 15       		.uleb128 0x15
 3325 0562 55050000 		.4byte	.LASF35
 3326 0566 01       		.byte	0x1
 3327 0567 7502     		.2byte	0x275
 3328 0569 15020000 		.4byte	0x215
 3329 056d 03       		.uleb128 0x3
 3330 056e 91       		.byte	0x91
 3331 056f D47E     		.sleb128 -172
 3332 0571 16       		.uleb128 0x16
 3333 0572 6900     		.ascii	"i\000"
 3334 0574 01       		.byte	0x1
 3335 0575 7702     		.2byte	0x277
 3336 0577 83000000 		.4byte	0x83
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 85


 3337 057b 02       		.uleb128 0x2
 3338 057c 91       		.byte	0x91
 3339 057d 6C       		.sleb128 -20
 3340 057e 13       		.uleb128 0x13
 3341 057f 16040000 		.4byte	.LASF51
 3342 0583 01       		.byte	0x1
 3343 0584 7802     		.2byte	0x278
 3344 0586 83000000 		.4byte	0x83
 3345 058a 02       		.uleb128 0x2
 3346 058b 91       		.byte	0x91
 3347 058c 64       		.sleb128 -28
 3348 058d 13       		.uleb128 0x13
 3349 058e 37060000 		.4byte	.LASF64
 3350 0592 01       		.byte	0x1
 3351 0593 7902     		.2byte	0x279
 3352 0595 83000000 		.4byte	0x83
 3353 0599 02       		.uleb128 0x2
 3354 059a 91       		.byte	0x91
 3355 059b 5C       		.sleb128 -36
 3356 059c 13       		.uleb128 0x13
 3357 059d 5C020000 		.4byte	.LASF65
 3358 05a1 01       		.byte	0x1
 3359 05a2 7A02     		.2byte	0x27a
 3360 05a4 83000000 		.4byte	0x83
 3361 05a8 02       		.uleb128 0x2
 3362 05a9 91       		.byte	0x91
 3363 05aa 58       		.sleb128 -40
 3364 05ab 16       		.uleb128 0x16
 3365 05ac 72657400 		.ascii	"ret\000"
 3366 05b0 01       		.byte	0x1
 3367 05b1 7B02     		.2byte	0x27b
 3368 05b3 BF010000 		.4byte	0x1bf
 3369 05b7 02       		.uleb128 0x2
 3370 05b8 91       		.byte	0x91
 3371 05b9 6B       		.sleb128 -21
 3372 05ba 13       		.uleb128 0x13
 3373 05bb FC040000 		.4byte	.LASF62
 3374 05bf 01       		.byte	0x1
 3375 05c0 7C02     		.2byte	0x27c
 3376 05c2 37050000 		.4byte	0x537
 3377 05c6 03       		.uleb128 0x3
 3378 05c7 91       		.byte	0x91
 3379 05c8 D87E     		.sleb128 -168
 3380 05ca 11       		.uleb128 0x11
 3381 05cb 42000000 		.4byte	.LBB10
 3382 05cf AE000000 		.4byte	.LBE10-.LBB10
 3383 05d3 13       		.uleb128 0x13
 3384 05d4 5C000000 		.4byte	.LASF67
 3385 05d8 01       		.byte	0x1
 3386 05d9 8902     		.2byte	0x289
 3387 05db 83000000 		.4byte	0x83
 3388 05df 02       		.uleb128 0x2
 3389 05e0 91       		.byte	0x91
 3390 05e1 60       		.sleb128 -32
 3391 05e2 00       		.byte	0
 3392 05e3 00       		.byte	0
 3393 05e4 1A       		.uleb128 0x1a
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 86


 3394 05e5 01010000 		.4byte	.LASF72
 3395 05e9 01       		.byte	0x1
 3396 05ea DC02     		.2byte	0x2dc
 3397 05ec 83000000 		.4byte	0x83
 3398 05f0 00000000 		.4byte	.LFB4
 3399 05f4 16000000 		.4byte	.LFE4-.LFB4
 3400 05f8 01       		.uleb128 0x1
 3401 05f9 9C       		.byte	0x9c
 3402 05fa 0E060000 		.4byte	0x60e
 3403 05fe 15       		.uleb128 0x15
 3404 05ff 55050000 		.4byte	.LASF35
 3405 0603 01       		.byte	0x1
 3406 0604 DC02     		.2byte	0x2dc
 3407 0606 15020000 		.4byte	0x215
 3408 060a 02       		.uleb128 0x2
 3409 060b 91       		.byte	0x91
 3410 060c 74       		.sleb128 -12
 3411 060d 00       		.byte	0
 3412 060e 1B       		.uleb128 0x1b
 3413 060f B0000000 		.4byte	.LASF77
 3414 0613 01       		.byte	0x1
 3415 0614 F602     		.2byte	0x2f6
 3416 0616 00000000 		.4byte	.LFB5
 3417 061a 66000000 		.4byte	.LFE5-.LFB5
 3418 061e 01       		.uleb128 0x1
 3419 061f 9C       		.byte	0x9c
 3420 0620 7F060000 		.4byte	0x67f
 3421 0624 15       		.uleb128 0x15
 3422 0625 41010000 		.4byte	.LASF73
 3423 0629 01       		.byte	0x1
 3424 062a F602     		.2byte	0x2f6
 3425 062c 7F060000 		.4byte	0x67f
 3426 0630 02       		.uleb128 0x2
 3427 0631 91       		.byte	0x91
 3428 0632 64       		.sleb128 -28
 3429 0633 15       		.uleb128 0x15
 3430 0634 55050000 		.4byte	.LASF35
 3431 0638 01       		.byte	0x1
 3432 0639 F602     		.2byte	0x2f6
 3433 063b 15020000 		.4byte	0x215
 3434 063f 02       		.uleb128 0x2
 3435 0640 91       		.byte	0x91
 3436 0641 60       		.sleb128 -32
 3437 0642 13       		.uleb128 0x13
 3438 0643 16040000 		.4byte	.LASF51
 3439 0647 01       		.byte	0x1
 3440 0648 F802     		.2byte	0x2f8
 3441 064a 83000000 		.4byte	0x83
 3442 064e 02       		.uleb128 0x2
 3443 064f 91       		.byte	0x91
 3444 0650 68       		.sleb128 -24
 3445 0651 13       		.uleb128 0x13
 3446 0652 BB040000 		.4byte	.LASF74
 3447 0656 01       		.byte	0x1
 3448 0657 F902     		.2byte	0x2f9
 3449 0659 83000000 		.4byte	0x83
 3450 065d 02       		.uleb128 0x2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 87


 3451 065e 91       		.byte	0x91
 3452 065f 74       		.sleb128 -12
 3453 0660 13       		.uleb128 0x13
 3454 0661 87010000 		.4byte	.LASF75
 3455 0665 01       		.byte	0x1
 3456 0666 FA02     		.2byte	0x2fa
 3457 0668 83000000 		.4byte	0x83
 3458 066c 02       		.uleb128 0x2
 3459 066d 91       		.byte	0x91
 3460 066e 70       		.sleb128 -16
 3461 066f 13       		.uleb128 0x13
 3462 0670 33000000 		.4byte	.LASF76
 3463 0674 01       		.byte	0x1
 3464 0675 FB02     		.2byte	0x2fb
 3465 0677 83000000 		.4byte	0x83
 3466 067b 02       		.uleb128 0x2
 3467 067c 91       		.byte	0x91
 3468 067d 6C       		.sleb128 -20
 3469 067e 00       		.byte	0
 3470 067f 0F       		.uleb128 0xf
 3471 0680 04       		.byte	0x4
 3472 0681 83000000 		.4byte	0x83
 3473 0685 1C       		.uleb128 0x1c
 3474 0686 C5050000 		.4byte	.LASF81
 3475 068a 01       		.byte	0x1
 3476 068b 2203     		.2byte	0x322
 3477 068d 83000000 		.4byte	0x83
 3478 0691 00000000 		.4byte	.LFB6
 3479 0695 3C000000 		.4byte	.LFE6-.LFB6
 3480 0699 01       		.uleb128 0x1
 3481 069a 9C       		.byte	0x9c
 3482 069b CD060000 		.4byte	0x6cd
 3483 069f 15       		.uleb128 0x15
 3484 06a0 16040000 		.4byte	.LASF51
 3485 06a4 01       		.byte	0x1
 3486 06a5 2203     		.2byte	0x322
 3487 06a7 83000000 		.4byte	0x83
 3488 06ab 02       		.uleb128 0x2
 3489 06ac 91       		.byte	0x91
 3490 06ad 6C       		.sleb128 -20
 3491 06ae 15       		.uleb128 0x15
 3492 06af 55050000 		.4byte	.LASF35
 3493 06b3 01       		.byte	0x1
 3494 06b4 2203     		.2byte	0x322
 3495 06b6 15020000 		.4byte	0x215
 3496 06ba 02       		.uleb128 0x2
 3497 06bb 91       		.byte	0x91
 3498 06bc 68       		.sleb128 -24
 3499 06bd 13       		.uleb128 0x13
 3500 06be 33000000 		.4byte	.LASF76
 3501 06c2 01       		.byte	0x1
 3502 06c3 2403     		.2byte	0x324
 3503 06c5 83000000 		.4byte	0x83
 3504 06c9 02       		.uleb128 0x2
 3505 06ca 91       		.byte	0x91
 3506 06cb 74       		.sleb128 -12
 3507 06cc 00       		.byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 88


 3508 06cd 1B       		.uleb128 0x1b
 3509 06ce 35040000 		.4byte	.LASF78
 3510 06d2 01       		.byte	0x1
 3511 06d3 4F03     		.2byte	0x34f
 3512 06d5 00000000 		.4byte	.LFB7
 3513 06d9 B0000000 		.4byte	.LFE7-.LFB7
 3514 06dd 01       		.uleb128 0x1
 3515 06de 9C       		.byte	0x9c
 3516 06df 20070000 		.4byte	0x720
 3517 06e3 15       		.uleb128 0x15
 3518 06e4 16040000 		.4byte	.LASF51
 3519 06e8 01       		.byte	0x1
 3520 06e9 4F03     		.2byte	0x34f
 3521 06eb 83000000 		.4byte	0x83
 3522 06ef 02       		.uleb128 0x2
 3523 06f0 91       		.byte	0x91
 3524 06f1 74       		.sleb128 -12
 3525 06f2 15       		.uleb128 0x15
 3526 06f3 07000000 		.4byte	.LASF79
 3527 06f7 01       		.byte	0x1
 3528 06f8 5003     		.2byte	0x350
 3529 06fa 7F060000 		.4byte	0x67f
 3530 06fe 02       		.uleb128 0x2
 3531 06ff 91       		.byte	0x91
 3532 0700 70       		.sleb128 -16
 3533 0701 15       		.uleb128 0x15
 3534 0702 51020000 		.4byte	.LASF80
 3535 0706 01       		.byte	0x1
 3536 0707 5103     		.2byte	0x351
 3537 0709 7F060000 		.4byte	0x67f
 3538 070d 02       		.uleb128 0x2
 3539 070e 91       		.byte	0x91
 3540 070f 6C       		.sleb128 -20
 3541 0710 15       		.uleb128 0x15
 3542 0711 55050000 		.4byte	.LASF35
 3543 0715 01       		.byte	0x1
 3544 0716 5203     		.2byte	0x352
 3545 0718 15020000 		.4byte	0x215
 3546 071c 02       		.uleb128 0x2
 3547 071d 91       		.byte	0x91
 3548 071e 68       		.sleb128 -24
 3549 071f 00       		.byte	0
 3550 0720 1C       		.uleb128 0x1c
 3551 0721 16060000 		.4byte	.LASF82
 3552 0725 01       		.byte	0x1
 3553 0726 9B03     		.2byte	0x39b
 3554 0728 6B000000 		.4byte	0x6b
 3555 072c 00000000 		.4byte	.LFB8
 3556 0730 AE000000 		.4byte	.LFE8-.LFB8
 3557 0734 01       		.uleb128 0x1
 3558 0735 9C       		.byte	0x9c
 3559 0736 84070000 		.4byte	0x784
 3560 073a 15       		.uleb128 0x15
 3561 073b 23060000 		.4byte	.LASF83
 3562 073f 01       		.byte	0x1
 3563 0740 9B03     		.2byte	0x39b
 3564 0742 84070000 		.4byte	0x784
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 89


 3565 0746 02       		.uleb128 0x2
 3566 0747 91       		.byte	0x91
 3567 0748 6C       		.sleb128 -20
 3568 0749 1D       		.uleb128 0x1d
 3569 074a 6C656E00 		.ascii	"len\000"
 3570 074e 01       		.byte	0x1
 3571 074f 9B03     		.2byte	0x39b
 3572 0751 83000000 		.4byte	0x83
 3573 0755 02       		.uleb128 0x2
 3574 0756 91       		.byte	0x91
 3575 0757 68       		.sleb128 -24
 3576 0758 16       		.uleb128 0x16
 3577 0759 63726300 		.ascii	"crc\000"
 3578 075d 01       		.byte	0x1
 3579 075e 9D03     		.2byte	0x39d
 3580 0760 6B000000 		.4byte	0x6b
 3581 0764 02       		.uleb128 0x2
 3582 0765 91       		.byte	0x91
 3583 0766 77       		.sleb128 -9
 3584 0767 16       		.uleb128 0x16
 3585 0768 6900     		.ascii	"i\000"
 3586 076a 01       		.byte	0x1
 3587 076b 9E03     		.2byte	0x39e
 3588 076d 6B000000 		.4byte	0x6b
 3589 0771 02       		.uleb128 0x2
 3590 0772 91       		.byte	0x91
 3591 0773 76       		.sleb128 -10
 3592 0774 16       		.uleb128 0x16
 3593 0775 636E7400 		.ascii	"cnt\000"
 3594 0779 01       		.byte	0x1
 3595 077a 9F03     		.2byte	0x39f
 3596 077c 77000000 		.4byte	0x77
 3597 0780 02       		.uleb128 0x2
 3598 0781 91       		.byte	0x91
 3599 0782 74       		.sleb128 -12
 3600 0783 00       		.byte	0
 3601 0784 0F       		.uleb128 0xf
 3602 0785 04       		.byte	0x4
 3603 0786 6B000000 		.4byte	0x6b
 3604 078a 1C       		.uleb128 0x1c
 3605 078b 54040000 		.4byte	.LASF84
 3606 078f 01       		.byte	0x1
 3607 0790 BC03     		.2byte	0x3bc
 3608 0792 BF010000 		.4byte	0x1bf
 3609 0796 00000000 		.4byte	.LFB9
 3610 079a 6A000000 		.4byte	.LFE9-.LFB9
 3611 079e 01       		.uleb128 0x1
 3612 079f 9C       		.byte	0x9c
 3613 07a0 E1070000 		.4byte	0x7e1
 3614 07a4 15       		.uleb128 0x15
 3615 07a5 29050000 		.4byte	.LASF34
 3616 07a9 01       		.byte	0x1
 3617 07aa BC03     		.2byte	0x3bc
 3618 07ac 0F020000 		.4byte	0x20f
 3619 07b0 02       		.uleb128 0x2
 3620 07b1 91       		.byte	0x91
 3621 07b2 64       		.sleb128 -28
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 90


 3622 07b3 16       		.uleb128 0x16
 3623 07b4 72657400 		.ascii	"ret\000"
 3624 07b8 01       		.byte	0x1
 3625 07b9 BE03     		.2byte	0x3be
 3626 07bb BF010000 		.4byte	0x1bf
 3627 07bf 02       		.uleb128 0x2
 3628 07c0 91       		.byte	0x91
 3629 07c1 77       		.sleb128 -9
 3630 07c2 13       		.uleb128 0x13
 3631 07c3 3F050000 		.4byte	.LASF55
 3632 07c7 01       		.byte	0x1
 3633 07c8 BF03     		.2byte	0x3bf
 3634 07ca 83000000 		.4byte	0x83
 3635 07ce 02       		.uleb128 0x2
 3636 07cf 91       		.byte	0x91
 3637 07d0 70       		.sleb128 -16
 3638 07d1 13       		.uleb128 0x13
 3639 07d2 73040000 		.4byte	.LASF56
 3640 07d6 01       		.byte	0x1
 3641 07d7 C003     		.2byte	0x3c0
 3642 07d9 83000000 		.4byte	0x83
 3643 07dd 02       		.uleb128 0x2
 3644 07de 91       		.byte	0x91
 3645 07df 6C       		.sleb128 -20
 3646 07e0 00       		.byte	0
 3647 07e1 1E       		.uleb128 0x1e
 3648 07e2 A7000000 		.4byte	.LASF85
 3649 07e6 01       		.byte	0x1
 3650 07e7 DF03     		.2byte	0x3df
 3651 07e9 BF010000 		.4byte	0x1bf
 3652 07ed 00000000 		.4byte	.LFB10
 3653 07f1 4A000000 		.4byte	.LFE10-.LFB10
 3654 07f5 01       		.uleb128 0x1
 3655 07f6 9C       		.byte	0x9c
 3656 07f7 55080000 		.4byte	0x855
 3657 07fb 15       		.uleb128 0x15
 3658 07fc A9040000 		.4byte	.LASF86
 3659 0800 01       		.byte	0x1
 3660 0801 DF03     		.2byte	0x3df
 3661 0803 83000000 		.4byte	0x83
 3662 0807 02       		.uleb128 0x2
 3663 0808 91       		.byte	0x91
 3664 0809 64       		.sleb128 -28
 3665 080a 15       		.uleb128 0x15
 3666 080b 23060000 		.4byte	.LASF83
 3667 080f 01       		.byte	0x1
 3668 0810 E003     		.2byte	0x3e0
 3669 0812 7F060000 		.4byte	0x67f
 3670 0816 02       		.uleb128 0x2
 3671 0817 91       		.byte	0x91
 3672 0818 60       		.sleb128 -32
 3673 0819 15       		.uleb128 0x15
 3674 081a 55050000 		.4byte	.LASF35
 3675 081e 01       		.byte	0x1
 3676 081f E103     		.2byte	0x3e1
 3677 0821 15020000 		.4byte	0x215
 3678 0825 02       		.uleb128 0x2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 91


 3679 0826 91       		.byte	0x91
 3680 0827 5C       		.sleb128 -36
 3681 0828 16       		.uleb128 0x16
 3682 0829 72657400 		.ascii	"ret\000"
 3683 082d 01       		.byte	0x1
 3684 082e E303     		.2byte	0x3e3
 3685 0830 BF010000 		.4byte	0x1bf
 3686 0834 02       		.uleb128 0x2
 3687 0835 91       		.byte	0x91
 3688 0836 77       		.sleb128 -9
 3689 0837 16       		.uleb128 0x16
 3690 0838 726300   		.ascii	"rc\000"
 3691 083b 01       		.byte	0x1
 3692 083c E503     		.2byte	0x3e5
 3693 083e A4000000 		.4byte	0xa4
 3694 0842 02       		.uleb128 0x2
 3695 0843 91       		.byte	0x91
 3696 0844 6C       		.sleb128 -20
 3697 0845 13       		.uleb128 0x13
 3698 0846 9B030000 		.4byte	.LASF87
 3699 084a 01       		.byte	0x1
 3700 084b E603     		.2byte	0x3e6
 3701 084d 83000000 		.4byte	0x83
 3702 0851 02       		.uleb128 0x2
 3703 0852 91       		.byte	0x91
 3704 0853 70       		.sleb128 -16
 3705 0854 00       		.byte	0
 3706 0855 1E       		.uleb128 0x1e
 3707 0856 A1030000 		.4byte	.LASF88
 3708 085a 01       		.byte	0x1
 3709 085b 4504     		.2byte	0x445
 3710 085d BF010000 		.4byte	0x1bf
 3711 0861 00000000 		.4byte	.LFB11
 3712 0865 80000000 		.4byte	.LFE11-.LFB11
 3713 0869 01       		.uleb128 0x1
 3714 086a 9C       		.byte	0x9c
 3715 086b BB080000 		.4byte	0x8bb
 3716 086f 15       		.uleb128 0x15
 3717 0870 A9040000 		.4byte	.LASF86
 3718 0874 01       		.byte	0x1
 3719 0875 4504     		.2byte	0x445
 3720 0877 83000000 		.4byte	0x83
 3721 087b 02       		.uleb128 0x2
 3722 087c 91       		.byte	0x91
 3723 087d 64       		.sleb128 -28
 3724 087e 15       		.uleb128 0x15
 3725 087f A3010000 		.4byte	.LASF89
 3726 0883 01       		.byte	0x1
 3727 0884 4604     		.2byte	0x446
 3728 0886 83000000 		.4byte	0x83
 3729 088a 02       		.uleb128 0x2
 3730 088b 91       		.byte	0x91
 3731 088c 60       		.sleb128 -32
 3732 088d 15       		.uleb128 0x15
 3733 088e 55050000 		.4byte	.LASF35
 3734 0892 01       		.byte	0x1
 3735 0893 4704     		.2byte	0x447
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 92


 3736 0895 15020000 		.4byte	0x215
 3737 0899 02       		.uleb128 0x2
 3738 089a 91       		.byte	0x91
 3739 089b 5C       		.sleb128 -36
 3740 089c 13       		.uleb128 0x13
 3741 089d 37060000 		.4byte	.LASF64
 3742 08a1 01       		.byte	0x1
 3743 08a2 4904     		.2byte	0x449
 3744 08a4 83000000 		.4byte	0x83
 3745 08a8 02       		.uleb128 0x2
 3746 08a9 91       		.byte	0x91
 3747 08aa 68       		.sleb128 -24
 3748 08ab 16       		.uleb128 0x16
 3749 08ac 72657400 		.ascii	"ret\000"
 3750 08b0 01       		.byte	0x1
 3751 08b1 4A04     		.2byte	0x44a
 3752 08b3 BF010000 		.4byte	0x1bf
 3753 08b7 02       		.uleb128 0x2
 3754 08b8 91       		.byte	0x91
 3755 08b9 6F       		.sleb128 -17
 3756 08ba 00       		.byte	0
 3757 08bb 1E       		.uleb128 0x1e
 3758 08bc 0D020000 		.4byte	.LASF90
 3759 08c0 01       		.byte	0x1
 3760 08c1 B904     		.2byte	0x4b9
 3761 08c3 BF010000 		.4byte	0x1bf
 3762 08c7 00000000 		.4byte	.LFB12
 3763 08cb E0000000 		.4byte	.LFE12-.LFB12
 3764 08cf 01       		.uleb128 0x1
 3765 08d0 9C       		.byte	0x9c
 3766 08d1 53090000 		.4byte	0x953
 3767 08d5 15       		.uleb128 0x15
 3768 08d6 3F050000 		.4byte	.LASF55
 3769 08da 01       		.byte	0x1
 3770 08db B904     		.2byte	0x4b9
 3771 08dd 83000000 		.4byte	0x83
 3772 08e1 03       		.uleb128 0x3
 3773 08e2 91       		.byte	0x91
 3774 08e3 E47E     		.sleb128 -156
 3775 08e5 15       		.uleb128 0x15
 3776 08e6 40000000 		.4byte	.LASF91
 3777 08ea 01       		.byte	0x1
 3778 08eb BA04     		.2byte	0x4ba
 3779 08ed 83000000 		.4byte	0x83
 3780 08f1 03       		.uleb128 0x3
 3781 08f2 91       		.byte	0x91
 3782 08f3 E07E     		.sleb128 -160
 3783 08f5 15       		.uleb128 0x15
 3784 08f6 0B050000 		.4byte	.LASF92
 3785 08fa 01       		.byte	0x1
 3786 08fb BB04     		.2byte	0x4bb
 3787 08fd 83000000 		.4byte	0x83
 3788 0901 03       		.uleb128 0x3
 3789 0902 91       		.byte	0x91
 3790 0903 DC7E     		.sleb128 -164
 3791 0905 15       		.uleb128 0x15
 3792 0906 D3010000 		.4byte	.LASF93
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 93


 3793 090a 01       		.byte	0x1
 3794 090b BC04     		.2byte	0x4bc
 3795 090d 83000000 		.4byte	0x83
 3796 0911 03       		.uleb128 0x3
 3797 0912 91       		.byte	0x91
 3798 0913 D87E     		.sleb128 -168
 3799 0915 15       		.uleb128 0x15
 3800 0916 55050000 		.4byte	.LASF35
 3801 091a 01       		.byte	0x1
 3802 091b BD04     		.2byte	0x4bd
 3803 091d 15020000 		.4byte	0x215
 3804 0921 02       		.uleb128 0x2
 3805 0922 91       		.byte	0x91
 3806 0923 00       		.sleb128 0
 3807 0924 16       		.uleb128 0x16
 3808 0925 72657400 		.ascii	"ret\000"
 3809 0929 01       		.byte	0x1
 3810 092a BF04     		.2byte	0x4bf
 3811 092c BF010000 		.4byte	0x1bf
 3812 0930 02       		.uleb128 0x2
 3813 0931 91       		.byte	0x91
 3814 0932 6F       		.sleb128 -17
 3815 0933 13       		.uleb128 0x13
 3816 0934 FC040000 		.4byte	.LASF62
 3817 0938 01       		.byte	0x1
 3818 0939 C004     		.2byte	0x4c0
 3819 093b 37050000 		.4byte	0x537
 3820 093f 03       		.uleb128 0x3
 3821 0940 91       		.byte	0x91
 3822 0941 E87E     		.sleb128 -152
 3823 0943 13       		.uleb128 0x13
 3824 0944 15050000 		.4byte	.LASF94
 3825 0948 01       		.byte	0x1
 3826 0949 C304     		.2byte	0x4c3
 3827 094b 83000000 		.4byte	0x83
 3828 094f 02       		.uleb128 0x2
 3829 0950 91       		.byte	0x91
 3830 0951 68       		.sleb128 -24
 3831 0952 00       		.byte	0
 3832 0953 1C       		.uleb128 0x1c
 3833 0954 EE010000 		.4byte	.LASF95
 3834 0958 01       		.byte	0x1
 3835 0959 0D05     		.2byte	0x50d
 3836 095b 83000000 		.4byte	0x83
 3837 095f 00000000 		.4byte	.LFB13
 3838 0963 F6000000 		.4byte	.LFE13-.LFB13
 3839 0967 01       		.uleb128 0x1
 3840 0968 9C       		.byte	0x9c
 3841 0969 D7090000 		.4byte	0x9d7
 3842 096d 15       		.uleb128 0x15
 3843 096e 3F050000 		.4byte	.LASF55
 3844 0972 01       		.byte	0x1
 3845 0973 0D05     		.2byte	0x50d
 3846 0975 7F060000 		.4byte	0x67f
 3847 0979 02       		.uleb128 0x2
 3848 097a 91       		.byte	0x91
 3849 097b 6C       		.sleb128 -20
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 94


 3850 097c 15       		.uleb128 0x15
 3851 097d 73040000 		.4byte	.LASF56
 3852 0981 01       		.byte	0x1
 3853 0982 0E05     		.2byte	0x50e
 3854 0984 7F060000 		.4byte	0x67f
 3855 0988 02       		.uleb128 0x2
 3856 0989 91       		.byte	0x91
 3857 098a 68       		.sleb128 -24
 3858 098b 15       		.uleb128 0x15
 3859 098c 4E050000 		.4byte	.LASF96
 3860 0990 01       		.byte	0x1
 3861 0991 0F05     		.2byte	0x50f
 3862 0993 7F060000 		.4byte	0x67f
 3863 0997 02       		.uleb128 0x2
 3864 0998 91       		.byte	0x91
 3865 0999 64       		.sleb128 -28
 3866 099a 15       		.uleb128 0x15
 3867 099b 48000000 		.4byte	.LASF97
 3868 099f 01       		.byte	0x1
 3869 09a0 1005     		.2byte	0x510
 3870 09a2 83000000 		.4byte	0x83
 3871 09a6 02       		.uleb128 0x2
 3872 09a7 91       		.byte	0x91
 3873 09a8 60       		.sleb128 -32
 3874 09a9 15       		.uleb128 0x15
 3875 09aa 7D000000 		.4byte	.LASF38
 3876 09ae 01       		.byte	0x1
 3877 09af 1105     		.2byte	0x511
 3878 09b1 83000000 		.4byte	0x83
 3879 09b5 02       		.uleb128 0x2
 3880 09b6 91       		.byte	0x91
 3881 09b7 00       		.sleb128 0
 3882 09b8 1D       		.uleb128 0x1d
 3883 09b9 6C656E00 		.ascii	"len\000"
 3884 09bd 01       		.byte	0x1
 3885 09be 1205     		.2byte	0x512
 3886 09c0 83000000 		.4byte	0x83
 3887 09c4 02       		.uleb128 0x2
 3888 09c5 91       		.byte	0x91
 3889 09c6 04       		.sleb128 4
 3890 09c7 13       		.uleb128 0x13
 3891 09c8 49050000 		.4byte	.LASF98
 3892 09cc 01       		.byte	0x1
 3893 09cd 1405     		.2byte	0x514
 3894 09cf 83000000 		.4byte	0x83
 3895 09d3 02       		.uleb128 0x2
 3896 09d4 91       		.byte	0x91
 3897 09d5 74       		.sleb128 -12
 3898 09d6 00       		.byte	0
 3899 09d7 1F       		.uleb128 0x1f
 3900 09d8 47040000 		.4byte	.LASF99
 3901 09dc 01       		.byte	0x1
 3902 09dd 5405     		.2byte	0x554
 3903 09df BF010000 		.4byte	0x1bf
 3904 09e3 00000000 		.4byte	.LFB14
 3905 09e7 F4000000 		.4byte	.LFE14-.LFB14
 3906 09eb 01       		.uleb128 0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 95


 3907 09ec 9C       		.byte	0x9c
 3908 09ed 15       		.uleb128 0x15
 3909 09ee 55050000 		.4byte	.LASF35
 3910 09f2 01       		.byte	0x1
 3911 09f3 5405     		.2byte	0x554
 3912 09f5 15020000 		.4byte	0x215
 3913 09f9 03       		.uleb128 0x3
 3914 09fa 91       		.byte	0x91
 3915 09fb D47E     		.sleb128 -172
 3916 09fd 16       		.uleb128 0x16
 3917 09fe 6900     		.ascii	"i\000"
 3918 0a00 01       		.byte	0x1
 3919 0a01 5605     		.2byte	0x556
 3920 0a03 83000000 		.4byte	0x83
 3921 0a07 02       		.uleb128 0x2
 3922 0a08 91       		.byte	0x91
 3923 0a09 6C       		.sleb128 -20
 3924 0a0a 13       		.uleb128 0x13
 3925 0a0b B4050000 		.4byte	.LASF49
 3926 0a0f 01       		.byte	0x1
 3927 0a10 5705     		.2byte	0x557
 3928 0a12 83000000 		.4byte	0x83
 3929 0a16 02       		.uleb128 0x2
 3930 0a17 91       		.byte	0x91
 3931 0a18 5C       		.sleb128 -36
 3932 0a19 13       		.uleb128 0x13
 3933 0a1a FC040000 		.4byte	.LASF62
 3934 0a1e 01       		.byte	0x1
 3935 0a1f 5805     		.2byte	0x558
 3936 0a21 37050000 		.4byte	0x537
 3937 0a25 03       		.uleb128 0x3
 3938 0a26 91       		.byte	0x91
 3939 0a27 DC7E     		.sleb128 -164
 3940 0a29 13       		.uleb128 0x13
 3941 0a2a 60040000 		.4byte	.LASF100
 3942 0a2e 01       		.byte	0x1
 3943 0a2f 5905     		.2byte	0x559
 3944 0a31 83000000 		.4byte	0x83
 3945 0a35 03       		.uleb128 0x3
 3946 0a36 91       		.byte	0x91
 3947 0a37 D87E     		.sleb128 -168
 3948 0a39 13       		.uleb128 0x13
 3949 0a3a 6B050000 		.4byte	.LASF63
 3950 0a3e 01       		.byte	0x1
 3951 0a3f 5A05     		.2byte	0x55a
 3952 0a41 83000000 		.4byte	0x83
 3953 0a45 02       		.uleb128 0x2
 3954 0a46 91       		.byte	0x91
 3955 0a47 60       		.sleb128 -32
 3956 0a48 13       		.uleb128 0x13
 3957 0a49 16040000 		.4byte	.LASF51
 3958 0a4d 01       		.byte	0x1
 3959 0a4e 5C05     		.2byte	0x55c
 3960 0a50 83000000 		.4byte	0x83
 3961 0a54 02       		.uleb128 0x2
 3962 0a55 91       		.byte	0x91
 3963 0a56 68       		.sleb128 -24
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 96


 3964 0a57 16       		.uleb128 0x16
 3965 0a58 72657400 		.ascii	"ret\000"
 3966 0a5c 01       		.byte	0x1
 3967 0a5d 5D05     		.2byte	0x55d
 3968 0a5f BF010000 		.4byte	0x1bf
 3969 0a63 02       		.uleb128 0x2
 3970 0a64 91       		.byte	0x91
 3971 0a65 67       		.sleb128 -25
 3972 0a66 00       		.byte	0
 3973 0a67 00       		.byte	0
 3974              		.section	.debug_abbrev,"",%progbits
 3975              	.Ldebug_abbrev0:
 3976 0000 01       		.uleb128 0x1
 3977 0001 11       		.uleb128 0x11
 3978 0002 01       		.byte	0x1
 3979 0003 25       		.uleb128 0x25
 3980 0004 0E       		.uleb128 0xe
 3981 0005 13       		.uleb128 0x13
 3982 0006 0B       		.uleb128 0xb
 3983 0007 03       		.uleb128 0x3
 3984 0008 0E       		.uleb128 0xe
 3985 0009 1B       		.uleb128 0x1b
 3986 000a 0E       		.uleb128 0xe
 3987 000b 55       		.uleb128 0x55
 3988 000c 17       		.uleb128 0x17
 3989 000d 11       		.uleb128 0x11
 3990 000e 01       		.uleb128 0x1
 3991 000f 10       		.uleb128 0x10
 3992 0010 17       		.uleb128 0x17
 3993 0011 00       		.byte	0
 3994 0012 00       		.byte	0
 3995 0013 02       		.uleb128 0x2
 3996 0014 24       		.uleb128 0x24
 3997 0015 00       		.byte	0
 3998 0016 0B       		.uleb128 0xb
 3999 0017 0B       		.uleb128 0xb
 4000 0018 3E       		.uleb128 0x3e
 4001 0019 0B       		.uleb128 0xb
 4002 001a 03       		.uleb128 0x3
 4003 001b 0E       		.uleb128 0xe
 4004 001c 00       		.byte	0
 4005 001d 00       		.byte	0
 4006 001e 03       		.uleb128 0x3
 4007 001f 24       		.uleb128 0x24
 4008 0020 00       		.byte	0
 4009 0021 0B       		.uleb128 0xb
 4010 0022 0B       		.uleb128 0xb
 4011 0023 3E       		.uleb128 0x3e
 4012 0024 0B       		.uleb128 0xb
 4013 0025 03       		.uleb128 0x3
 4014 0026 08       		.uleb128 0x8
 4015 0027 00       		.byte	0
 4016 0028 00       		.byte	0
 4017 0029 04       		.uleb128 0x4
 4018 002a 16       		.uleb128 0x16
 4019 002b 00       		.byte	0
 4020 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 97


 4021 002d 0E       		.uleb128 0xe
 4022 002e 3A       		.uleb128 0x3a
 4023 002f 0B       		.uleb128 0xb
 4024 0030 3B       		.uleb128 0x3b
 4025 0031 05       		.uleb128 0x5
 4026 0032 49       		.uleb128 0x49
 4027 0033 13       		.uleb128 0x13
 4028 0034 00       		.byte	0
 4029 0035 00       		.byte	0
 4030 0036 05       		.uleb128 0x5
 4031 0037 0F       		.uleb128 0xf
 4032 0038 00       		.byte	0
 4033 0039 0B       		.uleb128 0xb
 4034 003a 0B       		.uleb128 0xb
 4035 003b 00       		.byte	0
 4036 003c 00       		.byte	0
 4037 003d 06       		.uleb128 0x6
 4038 003e 13       		.uleb128 0x13
 4039 003f 01       		.byte	0x1
 4040 0040 0B       		.uleb128 0xb
 4041 0041 0B       		.uleb128 0xb
 4042 0042 3A       		.uleb128 0x3a
 4043 0043 0B       		.uleb128 0xb
 4044 0044 3B       		.uleb128 0x3b
 4045 0045 0B       		.uleb128 0xb
 4046 0046 01       		.uleb128 0x1
 4047 0047 13       		.uleb128 0x13
 4048 0048 00       		.byte	0
 4049 0049 00       		.byte	0
 4050 004a 07       		.uleb128 0x7
 4051 004b 0D       		.uleb128 0xd
 4052 004c 00       		.byte	0
 4053 004d 03       		.uleb128 0x3
 4054 004e 0E       		.uleb128 0xe
 4055 004f 3A       		.uleb128 0x3a
 4056 0050 0B       		.uleb128 0xb
 4057 0051 3B       		.uleb128 0x3b
 4058 0052 0B       		.uleb128 0xb
 4059 0053 49       		.uleb128 0x49
 4060 0054 13       		.uleb128 0x13
 4061 0055 38       		.uleb128 0x38
 4062 0056 0B       		.uleb128 0xb
 4063 0057 00       		.byte	0
 4064 0058 00       		.byte	0
 4065 0059 08       		.uleb128 0x8
 4066 005a 0D       		.uleb128 0xd
 4067 005b 00       		.byte	0
 4068 005c 03       		.uleb128 0x3
 4069 005d 0E       		.uleb128 0xe
 4070 005e 3A       		.uleb128 0x3a
 4071 005f 0B       		.uleb128 0xb
 4072 0060 3B       		.uleb128 0x3b
 4073 0061 05       		.uleb128 0x5
 4074 0062 49       		.uleb128 0x49
 4075 0063 13       		.uleb128 0x13
 4076 0064 38       		.uleb128 0x38
 4077 0065 0B       		.uleb128 0xb
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 98


 4078 0066 00       		.byte	0
 4079 0067 00       		.byte	0
 4080 0068 09       		.uleb128 0x9
 4081 0069 13       		.uleb128 0x13
 4082 006a 01       		.byte	0x1
 4083 006b 0B       		.uleb128 0xb
 4084 006c 0B       		.uleb128 0xb
 4085 006d 3A       		.uleb128 0x3a
 4086 006e 0B       		.uleb128 0xb
 4087 006f 3B       		.uleb128 0x3b
 4088 0070 05       		.uleb128 0x5
 4089 0071 01       		.uleb128 0x1
 4090 0072 13       		.uleb128 0x13
 4091 0073 00       		.byte	0
 4092 0074 00       		.byte	0
 4093 0075 0A       		.uleb128 0xa
 4094 0076 04       		.uleb128 0x4
 4095 0077 01       		.byte	0x1
 4096 0078 0B       		.uleb128 0xb
 4097 0079 0B       		.uleb128 0xb
 4098 007a 49       		.uleb128 0x49
 4099 007b 13       		.uleb128 0x13
 4100 007c 3A       		.uleb128 0x3a
 4101 007d 0B       		.uleb128 0xb
 4102 007e 3B       		.uleb128 0x3b
 4103 007f 05       		.uleb128 0x5
 4104 0080 01       		.uleb128 0x1
 4105 0081 13       		.uleb128 0x13
 4106 0082 00       		.byte	0
 4107 0083 00       		.byte	0
 4108 0084 0B       		.uleb128 0xb
 4109 0085 28       		.uleb128 0x28
 4110 0086 00       		.byte	0
 4111 0087 03       		.uleb128 0x3
 4112 0088 0E       		.uleb128 0xe
 4113 0089 1C       		.uleb128 0x1c
 4114 008a 0B       		.uleb128 0xb
 4115 008b 00       		.byte	0
 4116 008c 00       		.byte	0
 4117 008d 0C       		.uleb128 0xc
 4118 008e 2E       		.uleb128 0x2e
 4119 008f 01       		.byte	0x1
 4120 0090 3F       		.uleb128 0x3f
 4121 0091 19       		.uleb128 0x19
 4122 0092 03       		.uleb128 0x3
 4123 0093 0E       		.uleb128 0xe
 4124 0094 3A       		.uleb128 0x3a
 4125 0095 0B       		.uleb128 0xb
 4126 0096 3B       		.uleb128 0x3b
 4127 0097 0B       		.uleb128 0xb
 4128 0098 27       		.uleb128 0x27
 4129 0099 19       		.uleb128 0x19
 4130 009a 49       		.uleb128 0x49
 4131 009b 13       		.uleb128 0x13
 4132 009c 11       		.uleb128 0x11
 4133 009d 01       		.uleb128 0x1
 4134 009e 12       		.uleb128 0x12
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 99


 4135 009f 06       		.uleb128 0x6
 4136 00a0 40       		.uleb128 0x40
 4137 00a1 18       		.uleb128 0x18
 4138 00a2 9642     		.uleb128 0x2116
 4139 00a4 19       		.uleb128 0x19
 4140 00a5 01       		.uleb128 0x1
 4141 00a6 13       		.uleb128 0x13
 4142 00a7 00       		.byte	0
 4143 00a8 00       		.byte	0
 4144 00a9 0D       		.uleb128 0xd
 4145 00aa 05       		.uleb128 0x5
 4146 00ab 00       		.byte	0
 4147 00ac 03       		.uleb128 0x3
 4148 00ad 0E       		.uleb128 0xe
 4149 00ae 3A       		.uleb128 0x3a
 4150 00af 0B       		.uleb128 0xb
 4151 00b0 3B       		.uleb128 0x3b
 4152 00b1 0B       		.uleb128 0xb
 4153 00b2 49       		.uleb128 0x49
 4154 00b3 13       		.uleb128 0x13
 4155 00b4 02       		.uleb128 0x2
 4156 00b5 18       		.uleb128 0x18
 4157 00b6 00       		.byte	0
 4158 00b7 00       		.byte	0
 4159 00b8 0E       		.uleb128 0xe
 4160 00b9 34       		.uleb128 0x34
 4161 00ba 00       		.byte	0
 4162 00bb 03       		.uleb128 0x3
 4163 00bc 08       		.uleb128 0x8
 4164 00bd 3A       		.uleb128 0x3a
 4165 00be 0B       		.uleb128 0xb
 4166 00bf 3B       		.uleb128 0x3b
 4167 00c0 0B       		.uleb128 0xb
 4168 00c1 49       		.uleb128 0x49
 4169 00c2 13       		.uleb128 0x13
 4170 00c3 02       		.uleb128 0x2
 4171 00c4 18       		.uleb128 0x18
 4172 00c5 00       		.byte	0
 4173 00c6 00       		.byte	0
 4174 00c7 0F       		.uleb128 0xf
 4175 00c8 0F       		.uleb128 0xf
 4176 00c9 00       		.byte	0
 4177 00ca 0B       		.uleb128 0xb
 4178 00cb 0B       		.uleb128 0xb
 4179 00cc 49       		.uleb128 0x49
 4180 00cd 13       		.uleb128 0x13
 4181 00ce 00       		.byte	0
 4182 00cf 00       		.byte	0
 4183 00d0 10       		.uleb128 0x10
 4184 00d1 34       		.uleb128 0x34
 4185 00d2 00       		.byte	0
 4186 00d3 03       		.uleb128 0x3
 4187 00d4 0E       		.uleb128 0xe
 4188 00d5 3A       		.uleb128 0x3a
 4189 00d6 0B       		.uleb128 0xb
 4190 00d7 3B       		.uleb128 0x3b
 4191 00d8 0B       		.uleb128 0xb
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 100


 4192 00d9 49       		.uleb128 0x49
 4193 00da 13       		.uleb128 0x13
 4194 00db 02       		.uleb128 0x2
 4195 00dc 18       		.uleb128 0x18
 4196 00dd 00       		.byte	0
 4197 00de 00       		.byte	0
 4198 00df 11       		.uleb128 0x11
 4199 00e0 0B       		.uleb128 0xb
 4200 00e1 01       		.byte	0x1
 4201 00e2 11       		.uleb128 0x11
 4202 00e3 01       		.uleb128 0x1
 4203 00e4 12       		.uleb128 0x12
 4204 00e5 06       		.uleb128 0x6
 4205 00e6 00       		.byte	0
 4206 00e7 00       		.byte	0
 4207 00e8 12       		.uleb128 0x12
 4208 00e9 0B       		.uleb128 0xb
 4209 00ea 01       		.byte	0x1
 4210 00eb 11       		.uleb128 0x11
 4211 00ec 01       		.uleb128 0x1
 4212 00ed 12       		.uleb128 0x12
 4213 00ee 06       		.uleb128 0x6
 4214 00ef 01       		.uleb128 0x1
 4215 00f0 13       		.uleb128 0x13
 4216 00f1 00       		.byte	0
 4217 00f2 00       		.byte	0
 4218 00f3 13       		.uleb128 0x13
 4219 00f4 34       		.uleb128 0x34
 4220 00f5 00       		.byte	0
 4221 00f6 03       		.uleb128 0x3
 4222 00f7 0E       		.uleb128 0xe
 4223 00f8 3A       		.uleb128 0x3a
 4224 00f9 0B       		.uleb128 0xb
 4225 00fa 3B       		.uleb128 0x3b
 4226 00fb 05       		.uleb128 0x5
 4227 00fc 49       		.uleb128 0x49
 4228 00fd 13       		.uleb128 0x13
 4229 00fe 02       		.uleb128 0x2
 4230 00ff 18       		.uleb128 0x18
 4231 0100 00       		.byte	0
 4232 0101 00       		.byte	0
 4233 0102 14       		.uleb128 0x14
 4234 0103 2E       		.uleb128 0x2e
 4235 0104 01       		.byte	0x1
 4236 0105 3F       		.uleb128 0x3f
 4237 0106 19       		.uleb128 0x19
 4238 0107 03       		.uleb128 0x3
 4239 0108 0E       		.uleb128 0xe
 4240 0109 3A       		.uleb128 0x3a
 4241 010a 0B       		.uleb128 0xb
 4242 010b 3B       		.uleb128 0x3b
 4243 010c 05       		.uleb128 0x5
 4244 010d 27       		.uleb128 0x27
 4245 010e 19       		.uleb128 0x19
 4246 010f 49       		.uleb128 0x49
 4247 0110 13       		.uleb128 0x13
 4248 0111 11       		.uleb128 0x11
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 101


 4249 0112 01       		.uleb128 0x1
 4250 0113 12       		.uleb128 0x12
 4251 0114 06       		.uleb128 0x6
 4252 0115 40       		.uleb128 0x40
 4253 0116 18       		.uleb128 0x18
 4254 0117 9642     		.uleb128 0x2116
 4255 0119 19       		.uleb128 0x19
 4256 011a 01       		.uleb128 0x1
 4257 011b 13       		.uleb128 0x13
 4258 011c 00       		.byte	0
 4259 011d 00       		.byte	0
 4260 011e 15       		.uleb128 0x15
 4261 011f 05       		.uleb128 0x5
 4262 0120 00       		.byte	0
 4263 0121 03       		.uleb128 0x3
 4264 0122 0E       		.uleb128 0xe
 4265 0123 3A       		.uleb128 0x3a
 4266 0124 0B       		.uleb128 0xb
 4267 0125 3B       		.uleb128 0x3b
 4268 0126 05       		.uleb128 0x5
 4269 0127 49       		.uleb128 0x49
 4270 0128 13       		.uleb128 0x13
 4271 0129 02       		.uleb128 0x2
 4272 012a 18       		.uleb128 0x18
 4273 012b 00       		.byte	0
 4274 012c 00       		.byte	0
 4275 012d 16       		.uleb128 0x16
 4276 012e 34       		.uleb128 0x34
 4277 012f 00       		.byte	0
 4278 0130 03       		.uleb128 0x3
 4279 0131 08       		.uleb128 0x8
 4280 0132 3A       		.uleb128 0x3a
 4281 0133 0B       		.uleb128 0xb
 4282 0134 3B       		.uleb128 0x3b
 4283 0135 05       		.uleb128 0x5
 4284 0136 49       		.uleb128 0x49
 4285 0137 13       		.uleb128 0x13
 4286 0138 02       		.uleb128 0x2
 4287 0139 18       		.uleb128 0x18
 4288 013a 00       		.byte	0
 4289 013b 00       		.byte	0
 4290 013c 17       		.uleb128 0x17
 4291 013d 0B       		.uleb128 0xb
 4292 013e 01       		.byte	0x1
 4293 013f 55       		.uleb128 0x55
 4294 0140 17       		.uleb128 0x17
 4295 0141 00       		.byte	0
 4296 0142 00       		.byte	0
 4297 0143 18       		.uleb128 0x18
 4298 0144 01       		.uleb128 0x1
 4299 0145 01       		.byte	0x1
 4300 0146 49       		.uleb128 0x49
 4301 0147 13       		.uleb128 0x13
 4302 0148 01       		.uleb128 0x1
 4303 0149 13       		.uleb128 0x13
 4304 014a 00       		.byte	0
 4305 014b 00       		.byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 102


 4306 014c 19       		.uleb128 0x19
 4307 014d 21       		.uleb128 0x21
 4308 014e 00       		.byte	0
 4309 014f 49       		.uleb128 0x49
 4310 0150 13       		.uleb128 0x13
 4311 0151 2F       		.uleb128 0x2f
 4312 0152 0B       		.uleb128 0xb
 4313 0153 00       		.byte	0
 4314 0154 00       		.byte	0
 4315 0155 1A       		.uleb128 0x1a
 4316 0156 2E       		.uleb128 0x2e
 4317 0157 01       		.byte	0x1
 4318 0158 3F       		.uleb128 0x3f
 4319 0159 19       		.uleb128 0x19
 4320 015a 03       		.uleb128 0x3
 4321 015b 0E       		.uleb128 0xe
 4322 015c 3A       		.uleb128 0x3a
 4323 015d 0B       		.uleb128 0xb
 4324 015e 3B       		.uleb128 0x3b
 4325 015f 05       		.uleb128 0x5
 4326 0160 27       		.uleb128 0x27
 4327 0161 19       		.uleb128 0x19
 4328 0162 49       		.uleb128 0x49
 4329 0163 13       		.uleb128 0x13
 4330 0164 11       		.uleb128 0x11
 4331 0165 01       		.uleb128 0x1
 4332 0166 12       		.uleb128 0x12
 4333 0167 06       		.uleb128 0x6
 4334 0168 40       		.uleb128 0x40
 4335 0169 18       		.uleb128 0x18
 4336 016a 9742     		.uleb128 0x2117
 4337 016c 19       		.uleb128 0x19
 4338 016d 01       		.uleb128 0x1
 4339 016e 13       		.uleb128 0x13
 4340 016f 00       		.byte	0
 4341 0170 00       		.byte	0
 4342 0171 1B       		.uleb128 0x1b
 4343 0172 2E       		.uleb128 0x2e
 4344 0173 01       		.byte	0x1
 4345 0174 03       		.uleb128 0x3
 4346 0175 0E       		.uleb128 0xe
 4347 0176 3A       		.uleb128 0x3a
 4348 0177 0B       		.uleb128 0xb
 4349 0178 3B       		.uleb128 0x3b
 4350 0179 05       		.uleb128 0x5
 4351 017a 27       		.uleb128 0x27
 4352 017b 19       		.uleb128 0x19
 4353 017c 11       		.uleb128 0x11
 4354 017d 01       		.uleb128 0x1
 4355 017e 12       		.uleb128 0x12
 4356 017f 06       		.uleb128 0x6
 4357 0180 40       		.uleb128 0x40
 4358 0181 18       		.uleb128 0x18
 4359 0182 9742     		.uleb128 0x2117
 4360 0184 19       		.uleb128 0x19
 4361 0185 01       		.uleb128 0x1
 4362 0186 13       		.uleb128 0x13
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 103


 4363 0187 00       		.byte	0
 4364 0188 00       		.byte	0
 4365 0189 1C       		.uleb128 0x1c
 4366 018a 2E       		.uleb128 0x2e
 4367 018b 01       		.byte	0x1
 4368 018c 03       		.uleb128 0x3
 4369 018d 0E       		.uleb128 0xe
 4370 018e 3A       		.uleb128 0x3a
 4371 018f 0B       		.uleb128 0xb
 4372 0190 3B       		.uleb128 0x3b
 4373 0191 05       		.uleb128 0x5
 4374 0192 27       		.uleb128 0x27
 4375 0193 19       		.uleb128 0x19
 4376 0194 49       		.uleb128 0x49
 4377 0195 13       		.uleb128 0x13
 4378 0196 11       		.uleb128 0x11
 4379 0197 01       		.uleb128 0x1
 4380 0198 12       		.uleb128 0x12
 4381 0199 06       		.uleb128 0x6
 4382 019a 40       		.uleb128 0x40
 4383 019b 18       		.uleb128 0x18
 4384 019c 9742     		.uleb128 0x2117
 4385 019e 19       		.uleb128 0x19
 4386 019f 01       		.uleb128 0x1
 4387 01a0 13       		.uleb128 0x13
 4388 01a1 00       		.byte	0
 4389 01a2 00       		.byte	0
 4390 01a3 1D       		.uleb128 0x1d
 4391 01a4 05       		.uleb128 0x5
 4392 01a5 00       		.byte	0
 4393 01a6 03       		.uleb128 0x3
 4394 01a7 08       		.uleb128 0x8
 4395 01a8 3A       		.uleb128 0x3a
 4396 01a9 0B       		.uleb128 0xb
 4397 01aa 3B       		.uleb128 0x3b
 4398 01ab 05       		.uleb128 0x5
 4399 01ac 49       		.uleb128 0x49
 4400 01ad 13       		.uleb128 0x13
 4401 01ae 02       		.uleb128 0x2
 4402 01af 18       		.uleb128 0x18
 4403 01b0 00       		.byte	0
 4404 01b1 00       		.byte	0
 4405 01b2 1E       		.uleb128 0x1e
 4406 01b3 2E       		.uleb128 0x2e
 4407 01b4 01       		.byte	0x1
 4408 01b5 03       		.uleb128 0x3
 4409 01b6 0E       		.uleb128 0xe
 4410 01b7 3A       		.uleb128 0x3a
 4411 01b8 0B       		.uleb128 0xb
 4412 01b9 3B       		.uleb128 0x3b
 4413 01ba 05       		.uleb128 0x5
 4414 01bb 27       		.uleb128 0x27
 4415 01bc 19       		.uleb128 0x19
 4416 01bd 49       		.uleb128 0x49
 4417 01be 13       		.uleb128 0x13
 4418 01bf 11       		.uleb128 0x11
 4419 01c0 01       		.uleb128 0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 104


 4420 01c1 12       		.uleb128 0x12
 4421 01c2 06       		.uleb128 0x6
 4422 01c3 40       		.uleb128 0x40
 4423 01c4 18       		.uleb128 0x18
 4424 01c5 9642     		.uleb128 0x2116
 4425 01c7 19       		.uleb128 0x19
 4426 01c8 01       		.uleb128 0x1
 4427 01c9 13       		.uleb128 0x13
 4428 01ca 00       		.byte	0
 4429 01cb 00       		.byte	0
 4430 01cc 1F       		.uleb128 0x1f
 4431 01cd 2E       		.uleb128 0x2e
 4432 01ce 01       		.byte	0x1
 4433 01cf 03       		.uleb128 0x3
 4434 01d0 0E       		.uleb128 0xe
 4435 01d1 3A       		.uleb128 0x3a
 4436 01d2 0B       		.uleb128 0xb
 4437 01d3 3B       		.uleb128 0x3b
 4438 01d4 05       		.uleb128 0x5
 4439 01d5 27       		.uleb128 0x27
 4440 01d6 19       		.uleb128 0x19
 4441 01d7 49       		.uleb128 0x49
 4442 01d8 13       		.uleb128 0x13
 4443 01d9 11       		.uleb128 0x11
 4444 01da 01       		.uleb128 0x1
 4445 01db 12       		.uleb128 0x12
 4446 01dc 06       		.uleb128 0x6
 4447 01dd 40       		.uleb128 0x40
 4448 01de 18       		.uleb128 0x18
 4449 01df 9642     		.uleb128 0x2116
 4450 01e1 19       		.uleb128 0x19
 4451 01e2 00       		.byte	0
 4452 01e3 00       		.byte	0
 4453 01e4 00       		.byte	0
 4454              		.section	.debug_aranges,"",%progbits
 4455 0000 8C000000 		.4byte	0x8c
 4456 0004 0200     		.2byte	0x2
 4457 0006 00000000 		.4byte	.Ldebug_info0
 4458 000a 04       		.byte	0x4
 4459 000b 00       		.byte	0
 4460 000c 0000     		.2byte	0
 4461 000e 0000     		.2byte	0
 4462 0010 00000000 		.4byte	.LFB0
 4463 0014 F6000000 		.4byte	.LFE0-.LFB0
 4464 0018 00000000 		.4byte	.LFB1
 4465 001c 2A030000 		.4byte	.LFE1-.LFB1
 4466 0020 00000000 		.4byte	.LFB2
 4467 0024 32030000 		.4byte	.LFE2-.LFB2
 4468 0028 00000000 		.4byte	.LFB3
 4469 002c FE000000 		.4byte	.LFE3-.LFB3
 4470 0030 00000000 		.4byte	.LFB4
 4471 0034 16000000 		.4byte	.LFE4-.LFB4
 4472 0038 00000000 		.4byte	.LFB5
 4473 003c 66000000 		.4byte	.LFE5-.LFB5
 4474 0040 00000000 		.4byte	.LFB6
 4475 0044 3C000000 		.4byte	.LFE6-.LFB6
 4476 0048 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 105


 4477 004c B0000000 		.4byte	.LFE7-.LFB7
 4478 0050 00000000 		.4byte	.LFB8
 4479 0054 AE000000 		.4byte	.LFE8-.LFB8
 4480 0058 00000000 		.4byte	.LFB9
 4481 005c 6A000000 		.4byte	.LFE9-.LFB9
 4482 0060 00000000 		.4byte	.LFB10
 4483 0064 4A000000 		.4byte	.LFE10-.LFB10
 4484 0068 00000000 		.4byte	.LFB11
 4485 006c 80000000 		.4byte	.LFE11-.LFB11
 4486 0070 00000000 		.4byte	.LFB12
 4487 0074 E0000000 		.4byte	.LFE12-.LFB12
 4488 0078 00000000 		.4byte	.LFB13
 4489 007c F6000000 		.4byte	.LFE13-.LFB13
 4490 0080 00000000 		.4byte	.LFB14
 4491 0084 F4000000 		.4byte	.LFE14-.LFB14
 4492 0088 00000000 		.4byte	0
 4493 008c 00000000 		.4byte	0
 4494              		.section	.debug_ranges,"",%progbits
 4495              	.Ldebug_ranges0:
 4496 0000 70000000 		.4byte	.LBB7
 4497 0004 00030000 		.4byte	.LBE7
 4498 0008 22030000 		.4byte	.LBB9
 4499 000c 24030000 		.4byte	.LBE9
 4500 0010 00000000 		.4byte	0
 4501 0014 00000000 		.4byte	0
 4502 0018 00000000 		.4byte	.LFB0
 4503 001c F6000000 		.4byte	.LFE0
 4504 0020 00000000 		.4byte	.LFB1
 4505 0024 2A030000 		.4byte	.LFE1
 4506 0028 00000000 		.4byte	.LFB2
 4507 002c 32030000 		.4byte	.LFE2
 4508 0030 00000000 		.4byte	.LFB3
 4509 0034 FE000000 		.4byte	.LFE3
 4510 0038 00000000 		.4byte	.LFB4
 4511 003c 16000000 		.4byte	.LFE4
 4512 0040 00000000 		.4byte	.LFB5
 4513 0044 66000000 		.4byte	.LFE5
 4514 0048 00000000 		.4byte	.LFB6
 4515 004c 3C000000 		.4byte	.LFE6
 4516 0050 00000000 		.4byte	.LFB7
 4517 0054 B0000000 		.4byte	.LFE7
 4518 0058 00000000 		.4byte	.LFB8
 4519 005c AE000000 		.4byte	.LFE8
 4520 0060 00000000 		.4byte	.LFB9
 4521 0064 6A000000 		.4byte	.LFE9
 4522 0068 00000000 		.4byte	.LFB10
 4523 006c 4A000000 		.4byte	.LFE10
 4524 0070 00000000 		.4byte	.LFB11
 4525 0074 80000000 		.4byte	.LFE11
 4526 0078 00000000 		.4byte	.LFB12
 4527 007c E0000000 		.4byte	.LFE12
 4528 0080 00000000 		.4byte	.LFB13
 4529 0084 F6000000 		.4byte	.LFE13
 4530 0088 00000000 		.4byte	.LFB14
 4531 008c F4000000 		.4byte	.LFE14
 4532 0090 00000000 		.4byte	0
 4533 0094 00000000 		.4byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 106


 4534              		.section	.debug_line,"",%progbits
 4535              	.Ldebug_line0:
 4536 0000 E3040000 		.section	.debug_str,"MS",%progbits,1
 4536      02005B00 
 4536      00000201 
 4536      FB0E0D00 
 4536      01010101 
 4537              	.LASF10:
 4538 0000 75696E74 		.ascii	"uint16\000"
 4538      313600
 4539              	.LASF79:
 4540 0007 726F7754 		.ascii	"rowToWrPtr\000"
 4540      6F577250 
 4540      747200
 4541              	.LASF66:
 4542 0012 746D7044 		.ascii	"tmpData\000"
 4542      61746100 
 4543              	.LASF33:
 4544 001a 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 4544      6E5F656D 
 4544      5F656570 
 4544      726F6D5F 
 4544      73746174 
 4545              	.LASF76:
 4546 0033 656D4565 		.ascii	"emEepromAddr\000"
 4546      70726F6D 
 4546      41646472 
 4546      00
 4547              	.LASF91:
 4548 0040 64737441 		.ascii	"dstAddr\000"
 4548      64647200 
 4549              	.LASF97:
 4550 0048 726F774E 		.ascii	"rowNum\000"
 4550      756D00
 4551              	.LASF25:
 4552 004f 6E756D62 		.ascii	"numberOfRows\000"
 4552      65724F66 
 4552      526F7773 
 4552      00
 4553              	.LASF67:
 4554 005c 6E756D57 		.ascii	"numWrites\000"
 4554      72697465 
 4554      7300
 4555              	.LASF7:
 4556 0066 6C6F6E67 		.ascii	"long long unsigned int\000"
 4556      206C6F6E 
 4556      6720756E 
 4556      7369676E 
 4556      65642069 
 4557              	.LASF38:
 4558 007d 61646472 		.ascii	"addr\000"
 4558      00
 4559              	.LASF18:
 4560 0082 65657072 		.ascii	"eepromSize\000"
 4560      6F6D5369 
 4560      7A6500
 4561              	.LASF6:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 107


 4562 008d 6C6F6E67 		.ascii	"long long int\000"
 4562      206C6F6E 
 4562      6720696E 
 4562      7400
 4563              	.LASF0:
 4564 009b 7369676E 		.ascii	"signed char\000"
 4564      65642063 
 4564      68617200 
 4565              	.LASF85:
 4566 00a7 57726974 		.ascii	"WriteRow\000"
 4566      65526F77 
 4566      00
 4567              	.LASF77:
 4568 00b0 46696E64 		.ascii	"FindLastWrittenRow\000"
 4568      4C617374 
 4568      57726974 
 4568      74656E52 
 4568      6F7700
 4569              	.LASF102:
 4570 00c3 47656E65 		.ascii	"Generated_Source\\PSoC4\\cy_em_eeprom.c\000"
 4570      72617465 
 4570      645F536F 
 4570      75726365 
 4570      5C50536F 
 4571              	.LASF32:
 4572 00e9 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 4572      4D5F4545 
 4572      50524F4D 
 4572      5F575249 
 4572      54455F46 
 4573              	.LASF72:
 4574 0101 43795F45 		.ascii	"Cy_Em_EEPROM_NumWrites\000"
 4574      6D5F4545 
 4574      50524F4D 
 4574      5F4E756D 
 4574      57726974 
 4575              	.LASF4:
 4576 0118 6C6F6E67 		.ascii	"long int\000"
 4576      20696E74 
 4576      00
 4577              	.LASF22:
 4578 0121 75736572 		.ascii	"userFlashStartAddr\000"
 4578      466C6173 
 4578      68537461 
 4578      72744164 
 4578      647200
 4579              	.LASF9:
 4580 0134 75696E74 		.ascii	"uint8\000"
 4580      3800
 4581              	.LASF13:
 4582 013a 646F7562 		.ascii	"double\000"
 4582      6C6500
 4583              	.LASF73:
 4584 0141 6C617374 		.ascii	"lastWrRowPtr\000"
 4584      5772526F 
 4584      77507472 
 4584      00
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 108


 4585              	.LASF11:
 4586 014e 75696E74 		.ascii	"uint32\000"
 4586      333200
 4587              	.LASF45:
 4588 0155 61637445 		.ascii	"actEepromRowNum\000"
 4588      6570726F 
 4588      6D526F77 
 4588      4E756D00 
 4589              	.LASF68:
 4590 0165 65654865 		.ascii	"eeHeaderDataOffset\000"
 4590      61646572 
 4590      44617461 
 4590      4F666673 
 4590      657400
 4591              	.LASF52:
 4592 0178 75706461 		.ascii	"updateAddrFlag\000"
 4592      74654164 
 4592      6472466C 
 4592      616700
 4593              	.LASF75:
 4594 0187 6E756D52 		.ascii	"numRows\000"
 4594      6F777300 
 4595              	.LASF54:
 4596 018f 64617461 		.ascii	"dataEndEepromRowNum\000"
 4596      456E6445 
 4596      6570726F 
 4596      6D526F77 
 4596      4E756D00 
 4597              	.LASF89:
 4598 01a3 72616D42 		.ascii	"ramBuffAddr\000"
 4598      75666641 
 4598      64647200 
 4599              	.LASF20:
 4600 01af 72656475 		.ascii	"redundantCopy\000"
 4600      6E64616E 
 4600      74436F70 
 4600      7900
 4601              	.LASF70:
 4602 01bd 64617461 		.ascii	"dataAddr\000"
 4602      41646472 
 4602      00
 4603              	.LASF8:
 4604 01c6 756E7369 		.ascii	"unsigned int\000"
 4604      676E6564 
 4604      20696E74 
 4604      00
 4605              	.LASF93:
 4606 01d3 6E756D42 		.ascii	"numBytes\000"
 4606      79746573 
 4606      00
 4607              	.LASF5:
 4608 01dc 6C6F6E67 		.ascii	"long unsigned int\000"
 4608      20756E73 
 4608      69676E65 
 4608      6420696E 
 4608      7400
 4609              	.LASF95:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 109


 4610 01ee 47657441 		.ascii	"GetAddresses\000"
 4610      64647265 
 4610      73736573 
 4610      00
 4611              	.LASF37:
 4612 01fb 43795F45 		.ascii	"Cy_Em_EEPROM_Read\000"
 4612      6D5F4545 
 4612      50524F4D 
 4612      5F526561 
 4612      6400
 4613              	.LASF90:
 4614 020d 43686563 		.ascii	"CheckCrcAndCopy\000"
 4614      6B437263 
 4614      416E6443 
 4614      6F707900 
 4615              	.LASF57:
 4616 021d 7372634F 		.ascii	"srcOffset\000"
 4616      66667365 
 4616      7400
 4617              	.LASF40:
 4618 0227 73697A65 		.ascii	"size\000"
 4618      00
 4619              	.LASF3:
 4620 022c 73686F72 		.ascii	"short unsigned int\000"
 4620      7420756E 
 4620      7369676E 
 4620      65642069 
 4620      6E7400
 4621              	.LASF61:
 4622 023f 61637445 		.ascii	"actEmEepromRowNum\000"
 4622      6D456570 
 4622      726F6D52 
 4622      6F774E75 
 4622      6D00
 4623              	.LASF80:
 4624 0251 726F7754 		.ascii	"rowToRdPtr\000"
 4624      6F526450 
 4624      747200
 4625              	.LASF65:
 4626 025c 656D4565 		.ascii	"emEepromRowRdAddr\000"
 4626      70726F6D 
 4626      526F7752 
 4626      64416464 
 4626      7200
 4627              	.LASF39:
 4628 026e 65657072 		.ascii	"eepromData\000"
 4628      6F6D4461 
 4628      746100
 4629              	.LASF44:
 4630 0279 73746172 		.ascii	"startRowAddr\000"
 4630      74526F77 
 4630      41646472 
 4630      00
 4631              	.LASF101:
 4632 0286 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4632      43313120 
 4632      352E342E 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 110


 4632      31203230 
 4632      31363036 
 4633 02b9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4633      20726576 
 4633      6973696F 
 4633      6E203233 
 4633      37373135 
 4634 02ec 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4634      66756E63 
 4634      74696F6E 
 4634      2D736563 
 4634      74696F6E 
 4635              	.LASF103:
 4636 0314 433A5C53 		.ascii	"C:\\SVN\\apps\\trunk\\Cypress Academy\\PSoC-101\\Pr"
 4636      564E5C61 
 4636      7070735C 
 4636      7472756E 
 4636      6B5C4379 
 4637 0341 6F6A6563 		.ascii	"ojects\\Team_Project\\Simon\\Simon_Slave_Pioneer\\S"
 4637      74735C54 
 4637      65616D5F 
 4637      50726F6A 
 4637      6563745C 
 4638 0370 696D6F6E 		.ascii	"imon_Slave_Pioneer.cydsn\000"
 4638      5F536C61 
 4638      76655F50 
 4638      696F6E65 
 4638      65722E63 
 4639              	.LASF42:
 4640 0389 63757245 		.ascii	"curEepromBaseAddr\000"
 4640      6570726F 
 4640      6D426173 
 4640      65416464 
 4640      7200
 4641              	.LASF87:
 4642 039b 726F7749 		.ascii	"rowId\000"
 4642      6400
 4643              	.LASF88:
 4644 03a1 45726173 		.ascii	"EraseRow\000"
 4644      65526F77 
 4644      00
 4645              	.LASF29:
 4646 03aa 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 4646      4D5F4545 
 4646      50524F4D 
 4646      5F424144 
 4646      5F504152 
 4647              	.LASF30:
 4648 03c1 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 4648      4D5F4545 
 4648      50524F4D 
 4648      5F424144 
 4648      5F434845 
 4649              	.LASF17:
 4650 03db 73697A65 		.ascii	"sizetype\000"
 4650      74797065 
 4650      00
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 111


 4651              	.LASF16:
 4652 03e4 6C6F6E67 		.ascii	"long double\000"
 4652      20646F75 
 4652      626C6500 
 4653              	.LASF71:
 4654 03f0 43795F45 		.ascii	"Cy_Em_EEPROM_Erase\000"
 4654      6D5F4545 
 4654      50524F4D 
 4654      5F457261 
 4654      736500
 4655              	.LASF59:
 4656 0403 43795F45 		.ascii	"Cy_Em_EEPROM_Write\000"
 4656      6D5F4545 
 4656      50524F4D 
 4656      5F577269 
 4656      746500
 4657              	.LASF51:
 4658 0416 7365714E 		.ascii	"seqNum\000"
 4658      756D00
 4659              	.LASF27:
 4660 041d 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 4660      74635F65 
 4660      6570726F 
 4660      6D5F636F 
 4660      6E746578 
 4661              	.LASF78:
 4662 0435 4765744E 		.ascii	"GetNextRowToWrite\000"
 4662      65787452 
 4662      6F77546F 
 4662      57726974 
 4662      6500
 4663              	.LASF99:
 4664 0447 46696C6C 		.ascii	"FillChecksum\000"
 4664      43686563 
 4664      6B73756D 
 4664      00
 4665              	.LASF84:
 4666 0454 43686563 		.ascii	"CheckRanges\000"
 4666      6B52616E 
 4666      67657300 
 4667              	.LASF100:
 4668 0460 77724164 		.ascii	"wrAddr\000"
 4668      647200
 4669              	.LASF60:
 4670 0467 7772436E 		.ascii	"wrCnt\000"
 4670      7400
 4671              	.LASF12:
 4672 046d 666C6F61 		.ascii	"float\000"
 4672      7400
 4673              	.LASF56:
 4674 0473 656E6441 		.ascii	"endAddr\000"
 4674      64647200 
 4675              	.LASF31:
 4676 047b 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 4676      4D5F4545 
 4676      50524F4D 
 4676      5F424144 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 112


 4676      5F444154 
 4677              	.LASF24:
 4678 0491 776C456E 		.ascii	"wlEndAddr\000"
 4678      64416464 
 4678      7200
 4679              	.LASF1:
 4680 049b 756E7369 		.ascii	"unsigned char\000"
 4680      676E6564 
 4680      20636861 
 4680      7200
 4681              	.LASF86:
 4682 04a9 726F7741 		.ascii	"rowAddr\000"
 4682      64647200 
 4683              	.LASF2:
 4684 04b1 73686F72 		.ascii	"short int\000"
 4684      7420696E 
 4684      7400
 4685              	.LASF74:
 4686 04bb 70726576 		.ascii	"prevSeqNum\000"
 4686      5365714E 
 4686      756D00
 4687              	.LASF69:
 4688 04c6 736B6970 		.ascii	"skipOperation\000"
 4688      4F706572 
 4688      6174696F 
 4688      6E00
 4689              	.LASF47:
 4690 04d4 64617461 		.ascii	"dataStartEepromRowNum\000"
 4690      53746172 
 4690      74456570 
 4690      726F6D52 
 4690      6F774E75 
 4691              	.LASF36:
 4692 04ea 43795F45 		.ascii	"Cy_Em_EEPROM_Init\000"
 4692      6D5F4545 
 4692      50524F4D 
 4692      5F496E69 
 4692      7400
 4693              	.LASF62:
 4694 04fc 77726974 		.ascii	"writeRamBuffer\000"
 4694      6552616D 
 4694      42756666 
 4694      657200
 4695              	.LASF92:
 4696 050b 726F774F 		.ascii	"rowOffset\000"
 4696      66667365 
 4696      7400
 4697              	.LASF94:
 4698 0515 72635374 		.ascii	"rcStartRowAddr\000"
 4698      61727452 
 4698      6F774164 
 4698      647200
 4699              	.LASF14:
 4700 0524 63686172 		.ascii	"char\000"
 4700      00
 4701              	.LASF34:
 4702 0529 636F6E66 		.ascii	"config\000"
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 113


 4702      696700
 4703              	.LASF41:
 4704 0530 6E756D42 		.ascii	"numBytesToRead\000"
 4704      79746573 
 4704      546F5265 
 4704      616400
 4705              	.LASF55:
 4706 053f 73746172 		.ascii	"startAddr\000"
 4706      74416464 
 4706      7200
 4707              	.LASF98:
 4708 0549 736B6970 		.ascii	"skip\000"
 4708      00
 4709              	.LASF96:
 4710 054e 6F666673 		.ascii	"offset\000"
 4710      657400
 4711              	.LASF35:
 4712 0555 636F6E74 		.ascii	"context\000"
 4712      65787400 
 4713              	.LASF26:
 4714 055d 6C617374 		.ascii	"lastWrRowAddr\000"
 4714      5772526F 
 4714      77416464 
 4714      7200
 4715              	.LASF63:
 4716 056b 746D7052 		.ascii	"tmpRowAddr\000"
 4716      6F774164 
 4716      647200
 4717              	.LASF43:
 4718 0576 63757252 		.ascii	"curRowOffset\000"
 4718      6F774F66 
 4718      66736574 
 4718      00
 4719              	.LASF23:
 4720 0583 63795F73 		.ascii	"cy_stc_eeprom_config_t\000"
 4720      74635F65 
 4720      6570726F 
 4720      6D5F636F 
 4720      6E666967 
 4721              	.LASF50:
 4722 059a 72645369 		.ascii	"rdSize\000"
 4722      7A6500
 4723              	.LASF19:
 4724 05a1 77656172 		.ascii	"wearLevelingFactor\000"
 4724      4C657665 
 4724      6C696E67 
 4724      46616374 
 4724      6F7200
 4725              	.LASF49:
 4726 05b4 72644164 		.ascii	"rdAddr\000"
 4726      647200
 4727              	.LASF58:
 4728 05bb 6473744F 		.ascii	"dstOffset\000"
 4728      66667365 
 4728      7400
 4729              	.LASF81:
 4730 05c5 47657452 		.ascii	"GetRowAddrBySeqNum\000"
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cccdZwZn.s 			page 114


 4730      6F774164 
 4730      64724279 
 4730      5365714E 
 4730      756D00
 4731              	.LASF28:
 4732 05d8 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 4732      4D5F4545 
 4732      50524F4D 
 4732      5F535543 
 4732      43455353 
 4733              	.LASF21:
 4734 05ed 626C6F63 		.ascii	"blockingWrite\000"
 4734      6B696E67 
 4734      57726974 
 4734      6500
 4735              	.LASF46:
 4736 05fb 63757252 		.ascii	"curRdEepromRowNum\000"
 4736      64456570 
 4736      726F6D52 
 4736      6F774E75 
 4736      6D00
 4737              	.LASF15:
 4738 060d 63797374 		.ascii	"cystatus\000"
 4738      61747573 
 4738      00
 4739              	.LASF82:
 4740 0616 43616C63 		.ascii	"CalcChecksum\000"
 4740      43686563 
 4740      6B73756D 
 4740      00
 4741              	.LASF83:
 4742 0623 726F7744 		.ascii	"rowData\000"
 4742      61746100 
 4743              	.LASF53:
 4744 062b 6E756D52 		.ascii	"numRowReads\000"
 4744      6F775265 
 4744      61647300 
 4745              	.LASF64:
 4746 0637 656D4565 		.ascii	"emEepromRowAddr\000"
 4746      70726F6D 
 4746      526F7741 
 4746      64647200 
 4747              	.LASF48:
 4748 0647 65654461 		.ascii	"eeData\000"
 4748      746100
 4749              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
