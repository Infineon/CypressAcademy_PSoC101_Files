ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_initVar
  20              		.bss
  21              		.type	ADC_initVar, %object
  22              		.size	ADC_initVar, 1
  23              	ADC_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_offset,2,4
  26              		.comm	ADC_countsPer10Volt,4,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	ADC_channelsConfig, %object
  30              		.size	ADC_channelsConfig, 4
  31              	ADC_channelsConfig:
  32 0000 00020000 		.word	512
  33              		.section	.text.ADC_Start,"ax",%progbits
  34              		.align	2
  35              		.global	ADC_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	ADC_Start, %function
  39              	ADC_Start:
  40              	.LFB0:
  41              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 2


  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000200u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 3


  51              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  52              		.loc 1 66 0
  53 0004 064B     		ldr	r3, .L3
  54 0006 1B78     		ldrb	r3, [r3]
  55 0008 002B     		cmp	r3, #0
  56 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  57              		.loc 1 68 0
  58 000c FFF7FEFF 		bl	ADC_Init
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  59              		.loc 1 69 0
  60 0010 034B     		ldr	r3, .L3
  61 0012 0122     		movs	r2, #1
  62 0014 1A70     		strb	r2, [r3]
  63              	.L2:
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  64              		.loc 1 71 0
  65 0016 FFF7FEFF 		bl	ADC_Enable
  72:Generated_Source\PSoC4/ADC.c **** }
  66              		.loc 1 72 0
  67 001a C046     		nop
  68 001c BD46     		mov	sp, r7
  69              		@ sp needed
  70 001e 80BD     		pop	{r7, pc}
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0020 00000000 		.word	ADC_initVar
  75              		.cfi_endproc
  76              	.LFE0:
  77              		.size	ADC_Start, .-ADC_Start
  78              		.global	__aeabi_idiv
  79              		.section	.text.ADC_Init,"ax",%progbits
  80              		.align	2
  81              		.global	ADC_Init
  82              		.code	16
  83              		.thumb_func
  84              		.type	ADC_Init, %function
  85              	ADC_Init:
  86              	.LFB1:
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 4


  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  87              		.loc 1 95 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 16
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 84B0     		sub	sp, sp, #16
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 5


 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  99              		.loc 1 172 0
 100 0006 0221     		movs	r1, #2
 101 0008 0E20     		movs	r0, #14
 102 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 103              		.loc 1 173 0
 104 000e 544B     		ldr	r3, .L16
 105 0010 1900     		movs	r1, r3
 106 0012 0E20     		movs	r0, #14
 107 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 108              		.loc 1 177 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 6


 109 0018 524B     		ldr	r3, .L16+4
 110 001a 0122     		movs	r2, #1
 111 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 112              		.loc 1 180 0
 113 001e 524B     		ldr	r3, .L16+8
 114 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0
 116 0022 002B     		cmp	r3, #0
 117 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 is_stmt 0 discriminator 1
 119 0026 5149     		ldr	r1, .L16+12
 120 0028 00E0     		b	.L7
 121              	.L6:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 122              		.loc 1 178 0 discriminator 2
 123 002a 5149     		ldr	r1, .L16+16
 124              	.L7:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 125              		.loc 1 178 0 discriminator 4
 126 002c 514B     		ldr	r3, .L16+20
 127 002e 514A     		ldr	r2, .L16+20
 128 0030 1268     		ldr	r2, [r2]
 129 0032 0A43     		orrs	r2, r1
 130 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 131              		.loc 1 182 0 is_stmt 1 discriminator 4
 132 0036 504B     		ldr	r3, .L16+24
 133 0038 504A     		ldr	r2, .L16+28
 134 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 135              		.loc 1 183 0 discriminator 4
 136 003c 504B     		ldr	r3, .L16+32
 137 003e 514A     		ldr	r2, .L16+36
 138 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 139              		.loc 1 184 0 discriminator 4
 140 0042 514B     		ldr	r3, .L16+40
 141 0044 0022     		movs	r2, #0
 142 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 143              		.loc 1 185 0 discriminator 4
 144 0048 504B     		ldr	r3, .L16+44
 145 004a 514A     		ldr	r2, .L16+48
 146 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 147              		.loc 1 186 0 discriminator 4
 148 004e 514B     		ldr	r3, .L16+52
 149 0050 4F4A     		ldr	r2, .L16+48
 150 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 7


 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 151              		.loc 1 197 0 discriminator 4
 152 0054 504B     		ldr	r3, .L16+56
 153 0056 0022     		movs	r2, #0
 154 0058 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 155              		.loc 1 198 0 discriminator 4
 156 005a 504B     		ldr	r3, .L16+60
 157 005c 0022     		movs	r2, #0
 158 005e 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 159              		.loc 1 199 0 discriminator 4
 160 0060 4F4B     		ldr	r3, .L16+64
 161 0062 0122     		movs	r2, #1
 162 0064 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 163              		.loc 1 202 0 discriminator 4
 164 0066 4F4B     		ldr	r3, .L16+68
 165 0068 0222     		movs	r2, #2
 166 006a 1A60     		str	r2, [r3]
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 167              		.loc 1 206 0 discriminator 4
 168 006c 4E4B     		ldr	r3, .L16+72
 169 006e 1B68     		ldr	r3, [r3]
 170 0070 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 171              		.loc 1 207 0 discriminator 4
 172 0072 7B68     		ldr	r3, [r7, #4]
 173 0074 4D4A     		ldr	r2, .L16+76
 174 0076 1340     		ands	r3, r2
 175 0078 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 176              		.loc 1 213 0 discriminator 4
 177 007a 7B68     		ldr	r3, [r7, #4]
 178 007c 0122     		movs	r2, #1
 179 007e 1343     		orrs	r3, r2
 180 0080 7B60     		str	r3, [r7, #4]
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 8


 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 181              		.loc 1 226 0 discriminator 4
 182 0082 494B     		ldr	r3, .L16+72
 183 0084 7A68     		ldr	r2, [r7, #4]
 184 0086 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 185              		.loc 1 229 0 discriminator 4
 186 0088 494B     		ldr	r3, .L16+80
 187 008a 0222     		movs	r2, #2
 188 008c 1A60     		str	r2, [r3]
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 189              		.loc 1 232 0 discriminator 4
 190 008e 0023     		movs	r3, #0
 191 0090 FB60     		str	r3, [r7, #12]
 192 0092 5EE0     		b	.L8
 193              	.L15:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 194              		.loc 1 234 0
 195 0094 8023     		movs	r3, #128
 196 0096 9A00     		lsls	r2, r3, #2
 197 0098 DC23     		movs	r3, #220
 198 009a 9B01     		lsls	r3, r3, #6
 199 009c 1340     		ands	r3, r2
 200 009e 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 9


 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 201              		.loc 1 253 0
 202 00a0 FB68     		ldr	r3, [r7, #12]
 203 00a2 9B00     		lsls	r3, r3, #2
 204 00a4 434A     		ldr	r2, .L16+84
 205 00a6 9446     		mov	ip, r2
 206 00a8 6344     		add	r3, r3, ip
 207 00aa 7A68     		ldr	r2, [r7, #4]
 208 00ac 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 209              		.loc 1 255 0
 210 00ae 8023     		movs	r3, #128
 211 00b0 9B00     		lsls	r3, r3, #2
 212 00b2 0122     		movs	r2, #1
 213 00b4 1340     		ands	r3, r2
 214 00b6 0AD0     		beq	.L9
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 215              		.loc 1 257 0
 216 00b8 374B     		ldr	r3, .L16+56
 217 00ba 374A     		ldr	r2, .L16+56
 218 00bc 1168     		ldr	r1, [r2]
 219 00be 0120     		movs	r0, #1
 220 00c0 FA68     		ldr	r2, [r7, #12]
 221 00c2 9040     		lsls	r0, r0, r2
 222 00c4 0200     		movs	r2, r0
 223 00c6 1204     		lsls	r2, r2, #16
 224 00c8 120C     		lsrs	r2, r2, #16
 225 00ca 0A43     		orrs	r2, r1
 226 00cc 1A60     		str	r2, [r3]
 227              	.L9:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 228              		.loc 1 260 0
 229 00ce 8023     		movs	r3, #128
 230 00d0 9B00     		lsls	r3, r3, #2
 231 00d2 0222     		movs	r2, #2
 232 00d4 1340     		ands	r3, r2
 233 00d6 0AD0     		beq	.L10
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 234              		.loc 1 262 0
 235 00d8 304B     		ldr	r3, .L16+60
 236 00da 304A     		ldr	r2, .L16+60
 237 00dc 1168     		ldr	r1, [r2]
 238 00de 0120     		movs	r0, #1
 239 00e0 FA68     		ldr	r2, [r7, #12]
 240 00e2 9040     		lsls	r0, r0, r2
 241 00e4 0200     		movs	r2, r0
 242 00e6 1204     		lsls	r2, r2, #16
 243 00e8 120C     		lsrs	r2, r2, #16
 244 00ea 0A43     		orrs	r2, r1
 245 00ec 1A60     		str	r2, [r3]
 246              	.L10:
 263:Generated_Source\PSoC4/ADC.c ****             }
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 10


 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 247              		.loc 1 282 0
 248 00ee 8023     		movs	r3, #128
 249 00f0 9A00     		lsls	r2, r3, #2
 250 00f2 8023     		movs	r3, #128
 251 00f4 9B00     		lsls	r3, r3, #2
 252 00f6 1340     		ands	r3, r2
 253 00f8 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 254              		.loc 1 284 0
 255 00fa 8023     		movs	r3, #128
 256 00fc 5B00     		lsls	r3, r3, #1
 257 00fe BB60     		str	r3, [r7, #8]
 258 0100 02E0     		b	.L12
 259              	.L11:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 260              		.loc 1 288 0
 261 0102 8023     		movs	r3, #128
 262 0104 5B01     		lsls	r3, r3, #5
 263 0106 BB60     		str	r3, [r7, #8]
 264              	.L12:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 265              		.loc 1 291 0
 266 0108 8023     		movs	r3, #128
 267 010a 9A00     		lsls	r2, r3, #2
 268 010c 8023     		movs	r3, #128
 269 010e 5B00     		lsls	r3, r3, #1
 270 0110 1340     		ands	r3, r2
 271 0112 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 11


 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 272              		.loc 1 298 0
 273 0114 284B     		ldr	r3, .L16+88
 274 0116 FA68     		ldr	r2, [r7, #12]
 275 0118 5200     		lsls	r2, r2, #1
 276 011a 0021     		movs	r1, #0
 277 011c D152     		strh	r1, [r2, r3]
 278 011e 04E0     		b	.L14
 279              	.L13:
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 280              		.loc 1 307 0
 281 0120 254B     		ldr	r3, .L16+88
 282 0122 FA68     		ldr	r2, [r7, #12]
 283 0124 5200     		lsls	r2, r2, #1
 284 0126 0021     		movs	r1, #0
 285 0128 D152     		strh	r1, [r2, r3]
 286              	.L14:
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 287              		.loc 1 311 0 discriminator 2
 288 012a BB68     		ldr	r3, [r7, #8]
 289 012c 234A     		ldr	r2, .L16+92
 290 012e 5343     		muls	r3, r2
 291 0130 234A     		ldr	r2, .L16+96
 292 0132 9446     		mov	ip, r2
 293 0134 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 294              		.loc 1 312 0 discriminator 2
 295 0136 2349     		ldr	r1, .L16+100
 296 0138 1800     		movs	r0, r3
 297 013a FFF7FEFF 		bl	__aeabi_idiv
 298 013e 0300     		movs	r3, r0
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 299              		.loc 1 311 0 discriminator 2
 300 0140 1BB2     		sxth	r3, r3
 301 0142 1900     		movs	r1, r3
 302 0144 204B     		ldr	r3, .L16+104
 303 0146 FA68     		ldr	r2, [r7, #12]
 304 0148 9200     		lsls	r2, r2, #2
 305 014a D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC.c ****     {
 306              		.loc 1 232 0 discriminator 2
 307 014c FB68     		ldr	r3, [r7, #12]
 308 014e 0133     		adds	r3, r3, #1
 309 0150 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 12


 310              	.L8:
 232:Generated_Source\PSoC4/ADC.c ****     {
 311              		.loc 1 232 0 is_stmt 0 discriminator 1
 312 0152 FB68     		ldr	r3, [r7, #12]
 313 0154 002B     		cmp	r3, #0
 314 0156 9DD0     		beq	.L15
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 315              		.loc 1 314 0 is_stmt 1
 316 0158 C046     		nop
 317 015a BD46     		mov	sp, r7
 318 015c 04B0     		add	sp, sp, #16
 319              		@ sp needed
 320 015e 80BD     		pop	{r7, pc}
 321              	.L17:
 322              		.align	2
 323              	.L16:
 324 0160 00000000 		.word	ADC_ISR
 325 0164 20001A40 		.word	1075445792
 326 0168 80031A40 		.word	1075446656
 327 016c 600E1053 		.word	1393561184
 328 0170 600E0053 		.word	1392512608
 329 0174 00001A40 		.word	1075445760
 330 0178 04001A40 		.word	1075445764
 331 017c 88000080 		.word	-2147483512
 332 0180 18001A40 		.word	1075445784
 333 0184 0000FF07 		.word	134152192
 334 0188 1C001A40 		.word	1075445788
 335 018c 10001A40 		.word	1075445776
 336 0190 04000400 		.word	262148
 337 0194 14001A40 		.word	1075445780
 338 0198 28021A40 		.word	1075446312
 339 019c 38021A40 		.word	1075446328
 340 01a0 18021A40 		.word	1075446296
 341 01a4 000F1A40 		.word	1075449600
 342 01a8 30001A40 		.word	1075445808
 343 01ac FFFFFFDF 		.word	-536870913
 344 01b0 040F1A40 		.word	1075449604
 345 01b4 80001A40 		.word	1075445888
 346 01b8 00000000 		.word	ADC_offset
 347 01bc 10270000 		.word	10000
 348 01c0 72060000 		.word	1650
 349 01c4 E40C0000 		.word	3300
 350 01c8 00000000 		.word	ADC_countsPer10Volt
 351              		.cfi_endproc
 352              	.LFE1:
 353              		.size	ADC_Init, .-ADC_Init
 354              		.section	.text.ADC_Enable,"ax",%progbits
 355              		.align	2
 356              		.global	ADC_Enable
 357              		.code	16
 358              		.thumb_func
 359              		.type	ADC_Enable, %function
 360              	ADC_Enable:
 361              	.LFB2:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 13


 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 362              		.loc 1 331 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366 0000 80B5     		push	{r7, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 7, -8
 369              		.cfi_offset 14, -4
 370 0002 00AF     		add	r7, sp, #0
 371              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 372              		.loc 1 332 0
 373 0004 084B     		ldr	r3, .L21
 374 0006 1B68     		ldr	r3, [r3]
 375 0008 002B     		cmp	r3, #0
 376 000a 09DB     		blt	.L20
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 377              		.loc 1 342 0
 378 000c 064B     		ldr	r3, .L21
 379 000e 064A     		ldr	r2, .L21
 380 0010 1268     		ldr	r2, [r2]
 381 0012 8021     		movs	r1, #128
 382 0014 0906     		lsls	r1, r1, #24
 383 0016 0A43     		orrs	r2, r1
 384 0018 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 385              		.loc 1 345 0
 386 001a 0A20     		movs	r0, #10
 387 001c FFF7FEFF 		bl	CyDelayUs
 388              	.L20:
 346:Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 14


 347:Generated_Source\PSoC4/ADC.c **** }
 389              		.loc 1 347 0
 390 0020 C046     		nop
 391 0022 BD46     		mov	sp, r7
 392              		@ sp needed
 393 0024 80BD     		pop	{r7, pc}
 394              	.L22:
 395 0026 C046     		.align	2
 396              	.L21:
 397 0028 00001A40 		.word	1075445760
 398              		.cfi_endproc
 399              	.LFE2:
 400              		.size	ADC_Enable, .-ADC_Enable
 401              		.section	.text.ADC_Stop,"ax",%progbits
 402              		.align	2
 403              		.global	ADC_Stop
 404              		.code	16
 405              		.thumb_func
 406              		.type	ADC_Stop, %function
 407              	ADC_Stop:
 408              	.LFB3:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 409              		.loc 1 366 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 419              		.loc 1 367 0
 420 0004 044B     		ldr	r3, .L24
 421 0006 044A     		ldr	r2, .L24
 422 0008 1268     		ldr	r2, [r2]
 423 000a 5200     		lsls	r2, r2, #1
 424 000c 5208     		lsrs	r2, r2, #1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 15


 425 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC.c **** }
 426              		.loc 1 368 0
 427 0010 C046     		nop
 428 0012 BD46     		mov	sp, r7
 429              		@ sp needed
 430 0014 80BD     		pop	{r7, pc}
 431              	.L25:
 432 0016 C046     		.align	2
 433              	.L24:
 434 0018 00001A40 		.word	1075445760
 435              		.cfi_endproc
 436              	.LFE3:
 437              		.size	ADC_Stop, .-ADC_Stop
 438              		.section	.text.ADC_StartConvert,"ax",%progbits
 439              		.align	2
 440              		.global	ADC_StartConvert
 441              		.code	16
 442              		.thumb_func
 443              		.type	ADC_StartConvert, %function
 444              	ADC_StartConvert:
 445              	.LFB4:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 446              		.loc 1 392 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450 0000 80B5     		push	{r7, lr}
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 16


 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 456              		.loc 1 394 0
 457 0004 044B     		ldr	r3, .L27
 458 0006 044A     		ldr	r2, .L27
 459 0008 1268     		ldr	r2, [r2]
 460 000a 8021     		movs	r1, #128
 461 000c 4902     		lsls	r1, r1, #9
 462 000e 0A43     		orrs	r2, r1
 463 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 464              		.loc 1 399 0
 465 0012 C046     		nop
 466 0014 BD46     		mov	sp, r7
 467              		@ sp needed
 468 0016 80BD     		pop	{r7, pc}
 469              	.L28:
 470              		.align	2
 471              	.L27:
 472 0018 04001A40 		.word	1075445764
 473              		.cfi_endproc
 474              	.LFE4:
 475              		.size	ADC_StartConvert, .-ADC_StartConvert
 476              		.section	.text.ADC_StopConvert,"ax",%progbits
 477              		.align	2
 478              		.global	ADC_StopConvert
 479              		.code	16
 480              		.thumb_func
 481              		.type	ADC_StopConvert, %function
 482              	ADC_StopConvert:
 483              	.LFB5:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 484              		.loc 1 417 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 17


 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 7, -8
 491              		.cfi_offset 14, -4
 492 0002 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 494              		.loc 1 419 0
 495 0004 044B     		ldr	r3, .L30
 496 0006 044A     		ldr	r2, .L30
 497 0008 1268     		ldr	r2, [r2]
 498 000a 0449     		ldr	r1, .L30+4
 499 000c 0A40     		ands	r2, r1
 500 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 501              		.loc 1 421 0
 502 0010 C046     		nop
 503 0012 BD46     		mov	sp, r7
 504              		@ sp needed
 505 0014 80BD     		pop	{r7, pc}
 506              	.L31:
 507 0016 C046     		.align	2
 508              	.L30:
 509 0018 04001A40 		.word	1075445764
 510 001c FFFFFEFF 		.word	-65537
 511              		.cfi_endproc
 512              	.LFE5:
 513              		.size	ADC_StopConvert, .-ADC_StopConvert
 514              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 515              		.align	2
 516              		.global	ADC_IsEndConversion
 517              		.code	16
 518              		.thumb_func
 519              		.type	ADC_IsEndConversion, %function
 520              	ADC_IsEndConversion:
 521              	.LFB6:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 18


 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 522              		.loc 1 451 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 16
 525              		@ frame_needed = 1, uses_anonymous_args = 0
 526 0000 80B5     		push	{r7, lr}
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 7, -8
 529              		.cfi_offset 14, -4
 530 0002 84B0     		sub	sp, sp, #16
 531              		.cfi_def_cfa_offset 24
 532 0004 00AF     		add	r7, sp, #0
 533              		.cfi_def_cfa_register 7
 534 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 535              		.loc 1 452 0
 536 0008 0023     		movs	r3, #0
 537 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 538              		.loc 1 454 0
 539 000c 7B68     		ldr	r3, [r7, #4]
 540 000e 0322     		movs	r2, #3
 541 0010 1340     		ands	r3, r2
 542 0012 11D0     		beq	.L33
 543              	.L35:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 544              		.loc 1 458 0 discriminator 2
 545 0014 0B4B     		ldr	r3, .L37
 546 0016 1B68     		ldr	r3, [r3]
 547 0018 0122     		movs	r2, #1
 548 001a 1340     		ands	r3, r2
 549 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 550              		.loc 1 459 0 discriminator 2
 551 001e FB68     		ldr	r3, [r7, #12]
 552 0020 002B     		cmp	r3, #0
 553 0022 03D1     		bne	.L34
 554              		.loc 1 459 0 is_stmt 0 discriminator 1
 555 0024 7B68     		ldr	r3, [r7, #4]
 556 0026 0222     		movs	r2, #2
 557 0028 1340     		ands	r3, r2
 558 002a F3D1     		bne	.L35
 559              	.L34:
 460:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 19


 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 560              		.loc 1 461 0 is_stmt 1
 561 002c FB68     		ldr	r3, [r7, #12]
 562 002e 002B     		cmp	r3, #0
 563 0030 02D0     		beq	.L33
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 564              		.loc 1 464 0
 565 0032 044B     		ldr	r3, .L37
 566 0034 0122     		movs	r2, #1
 567 0036 1A60     		str	r2, [r3]
 568              	.L33:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 569              		.loc 1 485 0
 570 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC.c **** }
 571              		.loc 1 486 0
 572 003a 1800     		movs	r0, r3
 573 003c BD46     		mov	sp, r7
 574 003e 04B0     		add	sp, sp, #16
 575              		@ sp needed
 576 0040 80BD     		pop	{r7, pc}
 577              	.L38:
 578 0042 C046     		.align	2
 579              	.L37:
 580 0044 10021A40 		.word	1075446288
 581              		.cfi_endproc
 582              	.LFE6:
 583              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 584              		.section	.text.ADC_GetResult16,"ax",%progbits
 585              		.align	2
 586              		.global	ADC_GetResult16
 587              		.code	16
 588              		.thumb_func
 589              		.type	ADC_GetResult16, %function
 590              	ADC_GetResult16:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 20


 591              	.LFB7:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 592              		.loc 1 505 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 16
 595              		@ frame_needed = 1, uses_anonymous_args = 0
 596 0000 80B5     		push	{r7, lr}
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 7, -8
 599              		.cfi_offset 14, -4
 600 0002 84B0     		sub	sp, sp, #16
 601              		.cfi_def_cfa_offset 24
 602 0004 00AF     		add	r7, sp, #0
 603              		.cfi_def_cfa_register 7
 604 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 605              		.loc 1 509 0
 606 0008 7B68     		ldr	r3, [r7, #4]
 607 000a 002B     		cmp	r3, #0
 608 000c 02D0     		beq	.L40
 609              		.loc 1 509 0 is_stmt 0 discriminator 1
 610 000e 0020     		movs	r0, #0
 611 0010 FFF7FEFF 		bl	CyHalt
 612              	.L40:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 613              		.loc 1 511 0 is_stmt 1
 614 0014 7B68     		ldr	r3, [r7, #4]
 615 0016 002B     		cmp	r3, #0
 616 0018 09D1     		bne	.L41
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 617              		.loc 1 513 0
 618 001a 7B68     		ldr	r3, [r7, #4]
 619 001c 9B00     		lsls	r3, r3, #2
 620 001e 084A     		ldr	r2, .L44
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 21


 621 0020 9446     		mov	ip, r2
 622 0022 6344     		add	r3, r3, ip
 623 0024 1B68     		ldr	r3, [r3]
 624 0026 1B04     		lsls	r3, r3, #16
 625 0028 1B0C     		lsrs	r3, r3, #16
 626 002a FB60     		str	r3, [r7, #12]
 627 002c 01E0     		b	.L42
 628              	.L41:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 629              		.loc 1 521 0
 630 002e 0023     		movs	r3, #0
 631 0030 FB60     		str	r3, [r7, #12]
 632              	.L42:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 633              		.loc 1 525 0
 634 0032 FB68     		ldr	r3, [r7, #12]
 635 0034 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC.c **** }
 636              		.loc 1 526 0
 637 0036 1800     		movs	r0, r3
 638 0038 BD46     		mov	sp, r7
 639 003a 04B0     		add	sp, sp, #16
 640              		@ sp needed
 641 003c 80BD     		pop	{r7, pc}
 642              	.L45:
 643 003e C046     		.align	2
 644              	.L44:
 645 0040 80011A40 		.word	1075446144
 646              		.cfi_endproc
 647              	.LFE7:
 648              		.size	ADC_GetResult16, .-ADC_GetResult16
 649              		.section	.text.ADC_SetChanMask,"ax",%progbits
 650              		.align	2
 651              		.global	ADC_SetChanMask
 652              		.code	16
 653              		.thumb_func
 654              		.type	ADC_SetChanMask, %function
 655              	ADC_SetChanMask:
 656              	.LFB8:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 22


 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 657              		.loc 1 550 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 8
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661 0000 80B5     		push	{r7, lr}
 662              		.cfi_def_cfa_offset 8
 663              		.cfi_offset 7, -8
 664              		.cfi_offset 14, -4
 665 0002 82B0     		sub	sp, sp, #8
 666              		.cfi_def_cfa_offset 16
 667 0004 00AF     		add	r7, sp, #0
 668              		.cfi_def_cfa_register 7
 669 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 670              		.loc 1 551 0
 671 0008 044B     		ldr	r3, .L47
 672 000a 7A68     		ldr	r2, [r7, #4]
 673 000c 0121     		movs	r1, #1
 674 000e 0A40     		ands	r2, r1
 675 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 676              		.loc 1 552 0
 677 0012 C046     		nop
 678 0014 BD46     		mov	sp, r7
 679 0016 02B0     		add	sp, sp, #8
 680              		@ sp needed
 681 0018 80BD     		pop	{r7, pc}
 682              	.L48:
 683 001a C046     		.align	2
 684              	.L47:
 685 001c 20001A40 		.word	1075445792
 686              		.cfi_endproc
 687              	.LFE8:
 688              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 689              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 690              		.align	2
 691              		.global	ADC_SetLowLimit
 692              		.code	16
 693              		.thumb_func
 694              		.type	ADC_SetLowLimit, %function
 695              	ADC_SetLowLimit:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 23


 696              	.LFB9:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 697              		.loc 1 594 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 8
 700              		@ frame_needed = 1, uses_anonymous_args = 0
 701 0000 80B5     		push	{r7, lr}
 702              		.cfi_def_cfa_offset 8
 703              		.cfi_offset 7, -8
 704              		.cfi_offset 14, -4
 705 0002 82B0     		sub	sp, sp, #8
 706              		.cfi_def_cfa_offset 16
 707 0004 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 709 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 24


 710              		.loc 1 595 0
 711 0008 084B     		ldr	r3, .L50
 712 000a 084A     		ldr	r2, .L50
 713 000c 1268     		ldr	r2, [r2]
 714 000e 120C     		lsrs	r2, r2, #16
 715 0010 1204     		lsls	r2, r2, #16
 716 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 717              		.loc 1 596 0
 718 0014 054B     		ldr	r3, .L50
 719 0016 054A     		ldr	r2, .L50
 720 0018 1168     		ldr	r1, [r2]
 721 001a 7A68     		ldr	r2, [r7, #4]
 722 001c 1204     		lsls	r2, r2, #16
 723 001e 120C     		lsrs	r2, r2, #16
 724 0020 0A43     		orrs	r2, r1
 725 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC.c **** }
 726              		.loc 1 597 0
 727 0024 C046     		nop
 728 0026 BD46     		mov	sp, r7
 729 0028 02B0     		add	sp, sp, #8
 730              		@ sp needed
 731 002a 80BD     		pop	{r7, pc}
 732              	.L51:
 733              		.align	2
 734              	.L50:
 735 002c 18001A40 		.word	1075445784
 736              		.cfi_endproc
 737              	.LFE9:
 738              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 739              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 740              		.align	2
 741              		.global	ADC_SetHighLimit
 742              		.code	16
 743              		.thumb_func
 744              		.type	ADC_SetHighLimit, %function
 745              	ADC_SetHighLimit:
 746              	.LFB10:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 25


 747              		.loc 1 615 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 8
 750              		@ frame_needed = 1, uses_anonymous_args = 0
 751 0000 80B5     		push	{r7, lr}
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 7, -8
 754              		.cfi_offset 14, -4
 755 0002 82B0     		sub	sp, sp, #8
 756              		.cfi_def_cfa_offset 16
 757 0004 00AF     		add	r7, sp, #0
 758              		.cfi_def_cfa_register 7
 759 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 760              		.loc 1 616 0
 761 0008 084B     		ldr	r3, .L53
 762 000a 084A     		ldr	r2, .L53
 763 000c 1268     		ldr	r2, [r2]
 764 000e 1204     		lsls	r2, r2, #16
 765 0010 120C     		lsrs	r2, r2, #16
 766 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 767              		.loc 1 617 0
 768 0014 054B     		ldr	r3, .L53
 769 0016 054A     		ldr	r2, .L53
 770 0018 1168     		ldr	r1, [r2]
 771 001a 7A68     		ldr	r2, [r7, #4]
 772 001c 1204     		lsls	r2, r2, #16
 773 001e 0A43     		orrs	r2, r1
 774 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC.c **** }
 775              		.loc 1 618 0
 776 0022 C046     		nop
 777 0024 BD46     		mov	sp, r7
 778 0026 02B0     		add	sp, sp, #8
 779              		@ sp needed
 780 0028 80BD     		pop	{r7, pc}
 781              	.L54:
 782 002a C046     		.align	2
 783              	.L53:
 784 002c 18001A40 		.word	1075445784
 785              		.cfi_endproc
 786              	.LFE10:
 787              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 788              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 789              		.align	2
 790              		.global	ADC_SetLimitMask
 791              		.code	16
 792              		.thumb_func
 793              		.type	ADC_SetLimitMask, %function
 794              	ADC_SetLimitMask:
 795              	.LFB11:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 26


 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 796              		.loc 1 639 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 8
 799              		@ frame_needed = 1, uses_anonymous_args = 0
 800 0000 80B5     		push	{r7, lr}
 801              		.cfi_def_cfa_offset 8
 802              		.cfi_offset 7, -8
 803              		.cfi_offset 14, -4
 804 0002 82B0     		sub	sp, sp, #8
 805              		.cfi_def_cfa_offset 16
 806 0004 00AF     		add	r7, sp, #0
 807              		.cfi_def_cfa_register 7
 808 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 809              		.loc 1 640 0
 810 0008 044B     		ldr	r3, .L56
 811 000a 7A68     		ldr	r2, [r7, #4]
 812 000c 0121     		movs	r1, #1
 813 000e 0A40     		ands	r2, r1
 814 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 815              		.loc 1 641 0
 816 0012 C046     		nop
 817 0014 BD46     		mov	sp, r7
 818 0016 02B0     		add	sp, sp, #8
 819              		@ sp needed
 820 0018 80BD     		pop	{r7, pc}
 821              	.L57:
 822 001a C046     		.align	2
 823              	.L56:
 824 001c 38021A40 		.word	1075446328
 825              		.cfi_endproc
 826              	.LFE11:
 827              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 828              		.section	.text.ADC_SetSatMask,"ax",%progbits
 829              		.align	2
 830              		.global	ADC_SetSatMask
 831              		.code	16
 832              		.thumb_func
 833              		.type	ADC_SetSatMask, %function
 834              	ADC_SetSatMask:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 27


 835              	.LFB12:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 836              		.loc 1 662 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 8
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840 0000 80B5     		push	{r7, lr}
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 7, -8
 843              		.cfi_offset 14, -4
 844 0002 82B0     		sub	sp, sp, #8
 845              		.cfi_def_cfa_offset 16
 846 0004 00AF     		add	r7, sp, #0
 847              		.cfi_def_cfa_register 7
 848 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 849              		.loc 1 663 0
 850 0008 044B     		ldr	r3, .L59
 851 000a 7A68     		ldr	r2, [r7, #4]
 852 000c 0121     		movs	r1, #1
 853 000e 0A40     		ands	r2, r1
 854 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 855              		.loc 1 664 0
 856 0012 C046     		nop
 857 0014 BD46     		mov	sp, r7
 858 0016 02B0     		add	sp, sp, #8
 859              		@ sp needed
 860 0018 80BD     		pop	{r7, pc}
 861              	.L60:
 862 001a C046     		.align	2
 863              	.L59:
 864 001c 28021A40 		.word	1075446312
 865              		.cfi_endproc
 866              	.LFE12:
 867              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 868              		.section	.text.ADC_SetOffset,"ax",%progbits
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 28


 869              		.align	2
 870              		.global	ADC_SetOffset
 871              		.code	16
 872              		.thumb_func
 873              		.type	ADC_SetOffset, %function
 874              	ADC_SetOffset:
 875              	.LFB13:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 876              		.loc 1 690 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 8
 879              		@ frame_needed = 1, uses_anonymous_args = 0
 880 0000 80B5     		push	{r7, lr}
 881              		.cfi_def_cfa_offset 8
 882              		.cfi_offset 7, -8
 883              		.cfi_offset 14, -4
 884 0002 82B0     		sub	sp, sp, #8
 885              		.cfi_def_cfa_offset 16
 886 0004 00AF     		add	r7, sp, #0
 887              		.cfi_def_cfa_register 7
 888 0006 7860     		str	r0, [r7, #4]
 889 0008 0A00     		movs	r2, r1
 890 000a BB1C     		adds	r3, r7, #2
 891 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 892              		.loc 1 692 0
 893 000e 7B68     		ldr	r3, [r7, #4]
 894 0010 002B     		cmp	r3, #0
 895 0012 02D0     		beq	.L62
 896              		.loc 1 692 0 is_stmt 0 discriminator 1
 897 0014 0020     		movs	r0, #0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 29


 898 0016 FFF7FEFF 		bl	CyHalt
 899              	.L62:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 900              		.loc 1 694 0 is_stmt 1
 901 001a 054B     		ldr	r3, .L63
 902 001c 7A68     		ldr	r2, [r7, #4]
 903 001e 5200     		lsls	r2, r2, #1
 904 0020 B91C     		adds	r1, r7, #2
 905 0022 0988     		ldrh	r1, [r1]
 906 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 907              		.loc 1 695 0
 908 0026 C046     		nop
 909 0028 BD46     		mov	sp, r7
 910 002a 02B0     		add	sp, sp, #8
 911              		@ sp needed
 912 002c 80BD     		pop	{r7, pc}
 913              	.L64:
 914 002e C046     		.align	2
 915              	.L63:
 916 0030 00000000 		.word	ADC_offset
 917              		.cfi_endproc
 918              	.LFE13:
 919              		.size	ADC_SetOffset, .-ADC_SetOffset
 920              		.section	.text.ADC_SetGain,"ax",%progbits
 921              		.align	2
 922              		.global	ADC_SetGain
 923              		.code	16
 924              		.thumb_func
 925              		.type	ADC_SetGain, %function
 926              	ADC_SetGain:
 927              	.LFB14:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 30


 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 928              		.loc 1 724 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 8
 931              		@ frame_needed = 1, uses_anonymous_args = 0
 932 0000 80B5     		push	{r7, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 82B0     		sub	sp, sp, #8
 937              		.cfi_def_cfa_offset 16
 938 0004 00AF     		add	r7, sp, #0
 939              		.cfi_def_cfa_register 7
 940 0006 7860     		str	r0, [r7, #4]
 941 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 942              		.loc 1 726 0
 943 000a 7B68     		ldr	r3, [r7, #4]
 944 000c 002B     		cmp	r3, #0
 945 000e 02D0     		beq	.L66
 946              		.loc 1 726 0 is_stmt 0 discriminator 1
 947 0010 0020     		movs	r0, #0
 948 0012 FFF7FEFF 		bl	CyHalt
 949              	.L66:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 950              		.loc 1 728 0 is_stmt 1
 951 0016 044B     		ldr	r3, .L67
 952 0018 7A68     		ldr	r2, [r7, #4]
 953 001a 9200     		lsls	r2, r2, #2
 954 001c 3968     		ldr	r1, [r7]
 955 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 956              		.loc 1 729 0
 957 0020 C046     		nop
 958 0022 BD46     		mov	sp, r7
 959 0024 02B0     		add	sp, sp, #8
 960              		@ sp needed
 961 0026 80BD     		pop	{r7, pc}
 962              	.L68:
 963              		.align	2
 964              	.L67:
 965 0028 00000000 		.word	ADC_countsPer10Volt
 966              		.cfi_endproc
 967              	.LFE14:
 968              		.size	ADC_SetGain, .-ADC_SetGain
 969              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 970              		.align	2
 971              		.global	ADC_CountsTo_mVolts
 972              		.code	16
 973              		.thumb_func
 974              		.type	ADC_CountsTo_mVolts, %function
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 31


 975              	ADC_CountsTo_mVolts:
 976              	.LFB15:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 977              		.loc 1 757 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 16
 980              		@ frame_needed = 1, uses_anonymous_args = 0
 981 0000 80B5     		push	{r7, lr}
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 7, -8
 984              		.cfi_offset 14, -4
 985 0002 84B0     		sub	sp, sp, #16
 986              		.cfi_def_cfa_offset 24
 987 0004 00AF     		add	r7, sp, #0
 988              		.cfi_def_cfa_register 7
 989 0006 7860     		str	r0, [r7, #4]
 990 0008 0A00     		movs	r2, r1
 991 000a BB1C     		adds	r3, r7, #2
 992 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 993              		.loc 1 761 0
 994 000e 7B68     		ldr	r3, [r7, #4]
 995 0010 002B     		cmp	r3, #0
 996 0012 02D0     		beq	.L70
 997              		.loc 1 761 0 is_stmt 0 discriminator 1
 998 0014 0020     		movs	r0, #0
 999 0016 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 32


 1000              	.L70:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1001              		.loc 1 772 0 is_stmt 1
 1002 001a 1E4B     		ldr	r3, .L76
 1003 001c 7A68     		ldr	r2, [r7, #4]
 1004 001e 5200     		lsls	r2, r2, #1
 1005 0020 D35A     		ldrh	r3, [r2, r3]
 1006 0022 19B2     		sxth	r1, r3
 1007 0024 BB1C     		adds	r3, r7, #2
 1008 0026 1A88     		ldrh	r2, [r3]
 1009 0028 8BB2     		uxth	r3, r1
 1010 002a D31A     		subs	r3, r2, r3
 1011 002c 9AB2     		uxth	r2, r3
 1012 002e BB1C     		adds	r3, r7, #2
 1013 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1014              		.loc 1 774 0
 1015 0032 BB1C     		adds	r3, r7, #2
 1016 0034 0022     		movs	r2, #0
 1017 0036 9B5E     		ldrsh	r3, [r3, r2]
 1018 0038 174A     		ldr	r2, .L76+4
 1019 003a 5A43     		muls	r2, r3
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1020              		.loc 1 775 0
 1021 003c BB1C     		adds	r3, r7, #2
 1022 003e 0021     		movs	r1, #0
 1023 0040 5B5E     		ldrsh	r3, [r3, r1]
 1024 0042 002B     		cmp	r3, #0
 1025 0044 08DD     		ble	.L71
 1026              		.loc 1 775 0 is_stmt 0 discriminator 1
 1027 0046 154B     		ldr	r3, .L76+8
 1028 0048 7968     		ldr	r1, [r7, #4]
 1029 004a 8900     		lsls	r1, r1, #2
 1030 004c CB58     		ldr	r3, [r1, r3]
 1031 004e 002B     		cmp	r3, #0
 1032 0050 00DA     		bge	.L72
 1033 0052 0133     		adds	r3, r3, #1
 1034              	.L72:
 1035 0054 5B10     		asrs	r3, r3, #1
 1036 0056 08E0     		b	.L73
 1037              	.L71:
 1038              		.loc 1 775 0 discriminator 2
 1039 0058 104B     		ldr	r3, .L76+8
 1040 005a 7968     		ldr	r1, [r7, #4]
 1041 005c 8900     		lsls	r1, r1, #2
 1042 005e CB58     		ldr	r3, [r1, r3]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 33


 1043 0060 002B     		cmp	r3, #0
 1044 0062 00DA     		bge	.L74
 1045 0064 0133     		adds	r3, r3, #1
 1046              	.L74:
 1047 0066 5B10     		asrs	r3, r3, #1
 1048 0068 5B42     		rsbs	r3, r3, #0
 1049              	.L73:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1050              		.loc 1 774 0 is_stmt 1
 1051 006a D018     		adds	r0, r2, r3
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1052              		.loc 1 776 0
 1053 006c 0B4B     		ldr	r3, .L76+8
 1054 006e 7A68     		ldr	r2, [r7, #4]
 1055 0070 9200     		lsls	r2, r2, #2
 1056 0072 D358     		ldr	r3, [r2, r3]
 1057 0074 1900     		movs	r1, r3
 1058 0076 FFF7FEFF 		bl	__aeabi_idiv
 1059 007a 0300     		movs	r3, r0
 1060 007c 1A00     		movs	r2, r3
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1061              		.loc 1 774 0
 1062 007e 0E23     		movs	r3, #14
 1063 0080 FB18     		adds	r3, r7, r3
 1064 0082 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1065              		.loc 1 778 0
 1066 0084 0E23     		movs	r3, #14
 1067 0086 FB18     		adds	r3, r7, r3
 1068 0088 0022     		movs	r2, #0
 1069 008a 9B5E     		ldrsh	r3, [r3, r2]
 779:Generated_Source\PSoC4/ADC.c ****     }
 1070              		.loc 1 779 0
 1071 008c 1800     		movs	r0, r3
 1072 008e BD46     		mov	sp, r7
 1073 0090 04B0     		add	sp, sp, #16
 1074              		@ sp needed
 1075 0092 80BD     		pop	{r7, pc}
 1076              	.L77:
 1077              		.align	2
 1078              	.L76:
 1079 0094 00000000 		.word	ADC_offset
 1080 0098 10270000 		.word	10000
 1081 009c 00000000 		.word	ADC_countsPer10Volt
 1082              		.cfi_endproc
 1083              	.LFE15:
 1084              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1085              		.global	__aeabi_lmul
 1086              		.global	__aeabi_ldivmod
 1087              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1088              		.align	2
 1089              		.global	ADC_CountsTo_uVolts
 1090              		.code	16
 1091              		.thumb_func
 1092              		.type	ADC_CountsTo_uVolts, %function
 1093              	ADC_CountsTo_uVolts:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 34


 1094              	.LFB16:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 1095              		.loc 1 811 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 24
 1098              		@ frame_needed = 1, uses_anonymous_args = 0
 1099 0000 B0B5     		push	{r4, r5, r7, lr}
 1100              		.cfi_def_cfa_offset 16
 1101              		.cfi_offset 4, -16
 1102              		.cfi_offset 5, -12
 1103              		.cfi_offset 7, -8
 1104              		.cfi_offset 14, -4
 1105 0002 86B0     		sub	sp, sp, #24
 1106              		.cfi_def_cfa_offset 40
 1107 0004 00AF     		add	r7, sp, #0
 1108              		.cfi_def_cfa_register 7
 1109 0006 F860     		str	r0, [r7, #12]
 1110 0008 0A00     		movs	r2, r1
 1111 000a 0A23     		movs	r3, #10
 1112 000c FB18     		adds	r3, r7, r3
 1113 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1114              		.loc 1 815 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 35


 1115 0010 FB68     		ldr	r3, [r7, #12]
 1116 0012 002B     		cmp	r3, #0
 1117 0014 02D0     		beq	.L79
 1118              		.loc 1 815 0 is_stmt 0 discriminator 1
 1119 0016 0020     		movs	r0, #0
 1120 0018 FFF7FEFF 		bl	CyHalt
 1121              	.L79:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1122              		.loc 1 826 0 is_stmt 1
 1123 001c 194B     		ldr	r3, .L81
 1124 001e FA68     		ldr	r2, [r7, #12]
 1125 0020 5200     		lsls	r2, r2, #1
 1126 0022 D35A     		ldrh	r3, [r2, r3]
 1127 0024 19B2     		sxth	r1, r3
 1128 0026 0A23     		movs	r3, #10
 1129 0028 FB18     		adds	r3, r7, r3
 1130 002a 1A88     		ldrh	r2, [r3]
 1131 002c 8BB2     		uxth	r3, r1
 1132 002e D31A     		subs	r3, r2, r3
 1133 0030 9AB2     		uxth	r2, r3
 1134 0032 0A23     		movs	r3, #10
 1135 0034 FB18     		adds	r3, r7, r3
 1136 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1137              		.loc 1 828 0
 1138 0038 0A23     		movs	r3, #10
 1139 003a FB18     		adds	r3, r7, r3
 1140 003c 1B88     		ldrh	r3, [r3]
 1141 003e 1BB2     		sxth	r3, r3
 1142 0040 3B60     		str	r3, [r7]
 1143 0042 DB17     		asrs	r3, r3, #31
 1144 0044 7B60     		str	r3, [r7, #4]
 1145 0046 104A     		ldr	r2, .L81+4
 1146 0048 0023     		movs	r3, #0
 1147 004a 3868     		ldr	r0, [r7]
 1148 004c 7968     		ldr	r1, [r7, #4]
 1149 004e FFF7FEFF 		bl	__aeabi_lmul
 1150 0052 0200     		movs	r2, r0
 1151 0054 0B00     		movs	r3, r1
 1152 0056 1000     		movs	r0, r2
 1153 0058 1900     		movs	r1, r3
 1154 005a 0C4B     		ldr	r3, .L81+8
 1155 005c FA68     		ldr	r2, [r7, #12]
 1156 005e 9200     		lsls	r2, r2, #2
 1157 0060 D358     		ldr	r3, [r2, r3]
 1158 0062 1C00     		movs	r4, r3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 36


 1159 0064 DB17     		asrs	r3, r3, #31
 1160 0066 1D00     		movs	r5, r3
 1161 0068 2200     		movs	r2, r4
 1162 006a 2B00     		movs	r3, r5
 1163 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1164 0070 0300     		movs	r3, r0
 1165 0072 0C00     		movs	r4, r1
 1166 0074 3B61     		str	r3, [r7, #16]
 1167 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1168              		.loc 1 830 0
 1169 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC.c ****     }
 1170              		.loc 1 831 0
 1171 007a 1800     		movs	r0, r3
 1172 007c BD46     		mov	sp, r7
 1173 007e 06B0     		add	sp, sp, #24
 1174              		@ sp needed
 1175 0080 B0BD     		pop	{r4, r5, r7, pc}
 1176              	.L82:
 1177 0082 C046     		.align	2
 1178              	.L81:
 1179 0084 00000000 		.word	ADC_offset
 1180 0088 80969800 		.word	10000000
 1181 008c 00000000 		.word	ADC_countsPer10Volt
 1182              		.cfi_endproc
 1183              	.LFE16:
 1184              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1185              		.global	__aeabi_i2f
 1186              		.global	__aeabi_fmul
 1187              		.global	__aeabi_fdiv
 1188              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1189              		.align	2
 1190              		.global	ADC_CountsTo_Volts
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	ADC_CountsTo_Volts, %function
 1194              	ADC_CountsTo_Volts:
 1195              	.LFB17:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 37


 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 1196              		.loc 1 856 0
 1197              		.cfi_startproc
 1198              		@ args = 0, pretend = 0, frame = 16
 1199              		@ frame_needed = 1, uses_anonymous_args = 0
 1200 0000 90B5     		push	{r4, r7, lr}
 1201              		.cfi_def_cfa_offset 12
 1202              		.cfi_offset 4, -12
 1203              		.cfi_offset 7, -8
 1204              		.cfi_offset 14, -4
 1205 0002 85B0     		sub	sp, sp, #20
 1206              		.cfi_def_cfa_offset 32
 1207 0004 00AF     		add	r7, sp, #0
 1208              		.cfi_def_cfa_register 7
 1209 0006 7860     		str	r0, [r7, #4]
 1210 0008 0A00     		movs	r2, r1
 1211 000a BB1C     		adds	r3, r7, #2
 1212 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1213              		.loc 1 860 0
 1214 000e 7B68     		ldr	r3, [r7, #4]
 1215 0010 002B     		cmp	r3, #0
 1216 0012 02D0     		beq	.L84
 1217              		.loc 1 860 0 is_stmt 0 discriminator 1
 1218 0014 0020     		movs	r0, #0
 1219 0016 FFF7FEFF 		bl	CyHalt
 1220              	.L84:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1221              		.loc 1 871 0 is_stmt 1
 1222 001a 164B     		ldr	r3, .L86
 1223 001c 7A68     		ldr	r2, [r7, #4]
 1224 001e 5200     		lsls	r2, r2, #1
 1225 0020 D35A     		ldrh	r3, [r2, r3]
 1226 0022 19B2     		sxth	r1, r3
 1227 0024 BB1C     		adds	r3, r7, #2
 1228 0026 1A88     		ldrh	r2, [r3]
 1229 0028 8BB2     		uxth	r3, r1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 38


 1230 002a D31A     		subs	r3, r2, r3
 1231 002c 9AB2     		uxth	r2, r3
 1232 002e BB1C     		adds	r3, r7, #2
 1233 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1234              		.loc 1 873 0
 1235 0032 BB1C     		adds	r3, r7, #2
 1236 0034 0022     		movs	r2, #0
 1237 0036 9B5E     		ldrsh	r3, [r3, r2]
 1238 0038 1800     		movs	r0, r3
 1239 003a FFF7FEFF 		bl	__aeabi_i2f
 1240 003e 031C     		adds	r3, r0, #0
 1241 0040 0D49     		ldr	r1, .L86+4
 1242 0042 181C     		adds	r0, r3, #0
 1243 0044 FFF7FEFF 		bl	__aeabi_fmul
 1244 0048 031C     		adds	r3, r0, #0
 1245 004a 1C1C     		adds	r4, r3, #0
 1246 004c 0B4B     		ldr	r3, .L86+8
 1247 004e 7A68     		ldr	r2, [r7, #4]
 1248 0050 9200     		lsls	r2, r2, #2
 1249 0052 D358     		ldr	r3, [r2, r3]
 1250 0054 1800     		movs	r0, r3
 1251 0056 FFF7FEFF 		bl	__aeabi_i2f
 1252 005a 031C     		adds	r3, r0, #0
 1253 005c 191C     		adds	r1, r3, #0
 1254 005e 201C     		adds	r0, r4, #0
 1255 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1256 0064 031C     		adds	r3, r0, #0
 1257 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 1258              		.loc 1 875 0
 1259 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC.c ****     }
 1260              		.loc 1 876 0
 1261 006a 181C     		adds	r0, r3, #0
 1262 006c BD46     		mov	sp, r7
 1263 006e 05B0     		add	sp, sp, #20
 1264              		@ sp needed
 1265 0070 90BD     		pop	{r4, r7, pc}
 1266              	.L87:
 1267 0072 C046     		.align	2
 1268              	.L86:
 1269 0074 00000000 		.word	ADC_offset
 1270 0078 00002041 		.word	1092616192
 1271 007c 00000000 		.word	ADC_countsPer10Volt
 1272              		.cfi_endproc
 1273              	.LFE17:
 1274              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1275              		.text
 1276              	.Letext0:
 1277              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1278              		.section	.debug_info,"",%progbits
 1279              	.Ldebug_info0:
 1280 0000 8D040000 		.4byte	0x48d
 1281 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 39


 1282 0006 00000000 		.4byte	.Ldebug_abbrev0
 1283 000a 04       		.byte	0x4
 1284 000b 01       		.uleb128 0x1
 1285 000c 62010000 		.4byte	.LASF60
 1286 0010 0C       		.byte	0xc
 1287 0011 D3020000 		.4byte	.LASF61
 1288 0015 F7010000 		.4byte	.LASF62
 1289 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1290 001d 00000000 		.4byte	0
 1291 0021 00000000 		.4byte	.Ldebug_line0
 1292 0025 02       		.uleb128 0x2
 1293 0026 01       		.byte	0x1
 1294 0027 06       		.byte	0x6
 1295 0028 68000000 		.4byte	.LASF0
 1296 002c 02       		.uleb128 0x2
 1297 002d 01       		.byte	0x1
 1298 002e 08       		.byte	0x8
 1299 002f 30030000 		.4byte	.LASF1
 1300 0033 02       		.uleb128 0x2
 1301 0034 02       		.byte	0x2
 1302 0035 05       		.byte	0x5
 1303 0036 49030000 		.4byte	.LASF2
 1304 003a 02       		.uleb128 0x2
 1305 003b 02       		.byte	0x2
 1306 003c 07       		.byte	0x7
 1307 003d 3F010000 		.4byte	.LASF3
 1308 0041 02       		.uleb128 0x2
 1309 0042 04       		.byte	0x4
 1310 0043 05       		.byte	0x5
 1311 0044 8B000000 		.4byte	.LASF4
 1312 0048 02       		.uleb128 0x2
 1313 0049 04       		.byte	0x4
 1314 004a 07       		.byte	0x7
 1315 004b 0E010000 		.4byte	.LASF5
 1316 004f 02       		.uleb128 0x2
 1317 0050 08       		.byte	0x8
 1318 0051 05       		.byte	0x5
 1319 0052 5A000000 		.4byte	.LASF6
 1320 0056 02       		.uleb128 0x2
 1321 0057 08       		.byte	0x8
 1322 0058 07       		.byte	0x7
 1323 0059 32000000 		.4byte	.LASF7
 1324 005d 03       		.uleb128 0x3
 1325 005e 04       		.byte	0x4
 1326 005f 05       		.byte	0x5
 1327 0060 696E7400 		.ascii	"int\000"
 1328 0064 02       		.uleb128 0x2
 1329 0065 04       		.byte	0x4
 1330 0066 07       		.byte	0x7
 1331 0067 FA000000 		.4byte	.LASF8
 1332 006b 04       		.uleb128 0x4
 1333 006c BC000000 		.4byte	.LASF9
 1334 0070 02       		.byte	0x2
 1335 0071 D201     		.2byte	0x1d2
 1336 0073 2C000000 		.4byte	0x2c
 1337 0077 04       		.uleb128 0x4
 1338 0078 00000000 		.4byte	.LASF10
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 40


 1339 007c 02       		.byte	0x2
 1340 007d D301     		.2byte	0x1d3
 1341 007f 3A000000 		.4byte	0x3a
 1342 0083 04       		.uleb128 0x4
 1343 0084 C9000000 		.4byte	.LASF11
 1344 0088 02       		.byte	0x2
 1345 0089 D401     		.2byte	0x1d4
 1346 008b 48000000 		.4byte	0x48
 1347 008f 04       		.uleb128 0x4
 1348 0090 9B030000 		.4byte	.LASF12
 1349 0094 02       		.byte	0x2
 1350 0095 D601     		.2byte	0x1d6
 1351 0097 33000000 		.4byte	0x33
 1352 009b 04       		.uleb128 0x4
 1353 009c 7B000000 		.4byte	.LASF13
 1354 00a0 02       		.byte	0x2
 1355 00a1 D701     		.2byte	0x1d7
 1356 00a3 41000000 		.4byte	0x41
 1357 00a7 04       		.uleb128 0x4
 1358 00a8 72020000 		.4byte	.LASF14
 1359 00ac 02       		.byte	0x2
 1360 00ad D801     		.2byte	0x1d8
 1361 00af B3000000 		.4byte	0xb3
 1362 00b3 02       		.uleb128 0x2
 1363 00b4 04       		.byte	0x4
 1364 00b5 04       		.byte	0x4
 1365 00b6 FC020000 		.4byte	.LASF15
 1366 00ba 02       		.uleb128 0x2
 1367 00bb 08       		.byte	0x8
 1368 00bc 04       		.byte	0x4
 1369 00bd C2000000 		.4byte	.LASF16
 1370 00c1 04       		.uleb128 0x4
 1371 00c2 BD020000 		.4byte	.LASF17
 1372 00c6 02       		.byte	0x2
 1373 00c7 DD01     		.2byte	0x1dd
 1374 00c9 4F000000 		.4byte	0x4f
 1375 00cd 02       		.uleb128 0x2
 1376 00ce 01       		.byte	0x1
 1377 00cf 08       		.byte	0x8
 1378 00d0 67030000 		.4byte	.LASF18
 1379 00d4 04       		.uleb128 0x4
 1380 00d5 6C020000 		.4byte	.LASF19
 1381 00d9 02       		.byte	0x2
 1382 00da 7E02     		.2byte	0x27e
 1383 00dc E0000000 		.4byte	0xe0
 1384 00e0 05       		.uleb128 0x5
 1385 00e1 83000000 		.4byte	0x83
 1386 00e5 02       		.uleb128 0x2
 1387 00e6 08       		.byte	0x8
 1388 00e7 04       		.byte	0x4
 1389 00e8 8C020000 		.4byte	.LASF20
 1390 00ec 02       		.uleb128 0x2
 1391 00ed 04       		.byte	0x4
 1392 00ee 07       		.byte	0x7
 1393 00ef 7A020000 		.4byte	.LASF21
 1394 00f3 06       		.uleb128 0x6
 1395 00f4 81000000 		.4byte	.LASF25
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 41


 1396 00f8 01       		.byte	0x1
 1397 00f9 3F       		.byte	0x3f
 1398 00fa 00000000 		.4byte	.LFB0
 1399 00fe 24000000 		.4byte	.LFE0-.LFB0
 1400 0102 01       		.uleb128 0x1
 1401 0103 9C       		.byte	0x9c
 1402 0104 07       		.uleb128 0x7
 1403 0105 29000000 		.4byte	.LASF36
 1404 0109 01       		.byte	0x1
 1405 010a 5E       		.byte	0x5e
 1406 010b 00000000 		.4byte	.LFB1
 1407 010f CC010000 		.4byte	.LFE1-.LFB1
 1408 0113 01       		.uleb128 0x1
 1409 0114 9C       		.byte	0x9c
 1410 0115 44010000 		.4byte	0x144
 1411 0119 08       		.uleb128 0x8
 1412 011a 5C030000 		.4byte	.LASF22
 1413 011e 01       		.byte	0x1
 1414 011f 60       		.byte	0x60
 1415 0120 83000000 		.4byte	0x83
 1416 0124 02       		.uleb128 0x2
 1417 0125 91       		.byte	0x91
 1418 0126 74       		.sleb128 -12
 1419 0127 08       		.uleb128 0x8
 1420 0128 35010000 		.4byte	.LASF23
 1421 012c 01       		.byte	0x1
 1422 012d 61       		.byte	0x61
 1423 012e 83000000 		.4byte	0x83
 1424 0132 02       		.uleb128 0x2
 1425 0133 91       		.byte	0x91
 1426 0134 6C       		.sleb128 -20
 1427 0135 08       		.uleb128 0x8
 1428 0136 0F000000 		.4byte	.LASF24
 1429 013a 01       		.byte	0x1
 1430 013b 62       		.byte	0x62
 1431 013c 9B000000 		.4byte	0x9b
 1432 0140 02       		.uleb128 0x2
 1433 0141 91       		.byte	0x91
 1434 0142 70       		.sleb128 -16
 1435 0143 00       		.byte	0
 1436 0144 09       		.uleb128 0x9
 1437 0145 90030000 		.4byte	.LASF26
 1438 0149 01       		.byte	0x1
 1439 014a 4A01     		.2byte	0x14a
 1440 014c 00000000 		.4byte	.LFB2
 1441 0150 2C000000 		.4byte	.LFE2-.LFB2
 1442 0154 01       		.uleb128 0x1
 1443 0155 9C       		.byte	0x9c
 1444 0156 0A       		.uleb128 0xa
 1445 0157 53030000 		.4byte	.LASF27
 1446 015b 01       		.byte	0x1
 1447 015c 6D01     		.2byte	0x16d
 1448 015e 00000000 		.4byte	.LFB3
 1449 0162 1C000000 		.4byte	.LFE3-.LFB3
 1450 0166 01       		.uleb128 0x1
 1451 0167 9C       		.byte	0x9c
 1452 0168 0A       		.uleb128 0xa
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 42


 1453 0169 49000000 		.4byte	.LASF28
 1454 016d 01       		.byte	0x1
 1455 016e 8701     		.2byte	0x187
 1456 0170 00000000 		.4byte	.LFB4
 1457 0174 1C000000 		.4byte	.LFE4-.LFB4
 1458 0178 01       		.uleb128 0x1
 1459 0179 9C       		.byte	0x9c
 1460 017a 0A       		.uleb128 0xa
 1461 017b 52010000 		.4byte	.LASF29
 1462 017f 01       		.byte	0x1
 1463 0180 A001     		.2byte	0x1a0
 1464 0182 00000000 		.4byte	.LFB5
 1465 0186 20000000 		.4byte	.LFE5-.LFB5
 1466 018a 01       		.uleb128 0x1
 1467 018b 9C       		.byte	0x9c
 1468 018c 0B       		.uleb128 0xb
 1469 018d A9020000 		.4byte	.LASF31
 1470 0191 01       		.byte	0x1
 1471 0192 C201     		.2byte	0x1c2
 1472 0194 83000000 		.4byte	0x83
 1473 0198 00000000 		.4byte	.LFB6
 1474 019c 48000000 		.4byte	.LFE6-.LFB6
 1475 01a0 01       		.uleb128 0x1
 1476 01a1 9C       		.byte	0x9c
 1477 01a2 C5010000 		.4byte	0x1c5
 1478 01a6 0C       		.uleb128 0xc
 1479 01a7 E1000000 		.4byte	.LASF33
 1480 01ab 01       		.byte	0x1
 1481 01ac C201     		.2byte	0x1c2
 1482 01ae 83000000 		.4byte	0x83
 1483 01b2 02       		.uleb128 0x2
 1484 01b3 91       		.byte	0x91
 1485 01b4 6C       		.sleb128 -20
 1486 01b5 0D       		.uleb128 0xd
 1487 01b6 74000000 		.4byte	.LASF30
 1488 01ba 01       		.byte	0x1
 1489 01bb C401     		.2byte	0x1c4
 1490 01bd 83000000 		.4byte	0x83
 1491 01c1 02       		.uleb128 0x2
 1492 01c2 91       		.byte	0x91
 1493 01c3 74       		.sleb128 -12
 1494 01c4 00       		.byte	0
 1495 01c5 0E       		.uleb128 0xe
 1496 01c6 B6030000 		.4byte	.LASF32
 1497 01ca 01       		.byte	0x1
 1498 01cb F801     		.2byte	0x1f8
 1499 01cd 8F000000 		.4byte	0x8f
 1500 01d1 00000000 		.4byte	.LFB7
 1501 01d5 44000000 		.4byte	.LFE7-.LFB7
 1502 01d9 01       		.uleb128 0x1
 1503 01da 9C       		.byte	0x9c
 1504 01db FE010000 		.4byte	0x1fe
 1505 01df 0C       		.uleb128 0xc
 1506 01e0 62030000 		.4byte	.LASF34
 1507 01e4 01       		.byte	0x1
 1508 01e5 F801     		.2byte	0x1f8
 1509 01e7 83000000 		.4byte	0x83
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 43


 1510 01eb 02       		.uleb128 0x2
 1511 01ec 91       		.byte	0x91
 1512 01ed 6C       		.sleb128 -20
 1513 01ee 0D       		.uleb128 0xd
 1514 01ef AF030000 		.4byte	.LASF35
 1515 01f3 01       		.byte	0x1
 1516 01f4 FA01     		.2byte	0x1fa
 1517 01f6 83000000 		.4byte	0x83
 1518 01fa 02       		.uleb128 0x2
 1519 01fb 91       		.byte	0x91
 1520 01fc 74       		.sleb128 -12
 1521 01fd 00       		.byte	0
 1522 01fe 0F       		.uleb128 0xf
 1523 01ff C3020000 		.4byte	.LASF37
 1524 0203 01       		.byte	0x1
 1525 0204 2502     		.2byte	0x225
 1526 0206 00000000 		.4byte	.LFB8
 1527 020a 20000000 		.4byte	.LFE8-.LFB8
 1528 020e 01       		.uleb128 0x1
 1529 020f 9C       		.byte	0x9c
 1530 0210 24020000 		.4byte	0x224
 1531 0214 0C       		.uleb128 0xc
 1532 0215 D0000000 		.4byte	.LASF38
 1533 0219 01       		.byte	0x1
 1534 021a 2502     		.2byte	0x225
 1535 021c 83000000 		.4byte	0x83
 1536 0220 02       		.uleb128 0x2
 1537 0221 91       		.byte	0x91
 1538 0222 74       		.sleb128 -12
 1539 0223 00       		.byte	0
 1540 0224 0F       		.uleb128 0xf
 1541 0225 20030000 		.4byte	.LASF39
 1542 0229 01       		.byte	0x1
 1543 022a 5102     		.2byte	0x251
 1544 022c 00000000 		.4byte	.LFB9
 1545 0230 30000000 		.4byte	.LFE9-.LFB9
 1546 0234 01       		.uleb128 0x1
 1547 0235 9C       		.byte	0x9c
 1548 0236 4A020000 		.4byte	0x24a
 1549 023a 0C       		.uleb128 0xc
 1550 023b 83020000 		.4byte	.LASF40
 1551 023f 01       		.byte	0x1
 1552 0240 5102     		.2byte	0x251
 1553 0242 83000000 		.4byte	0x83
 1554 0246 02       		.uleb128 0x2
 1555 0247 91       		.byte	0x91
 1556 0248 74       		.sleb128 -12
 1557 0249 00       		.byte	0
 1558 024a 0F       		.uleb128 0xf
 1559 024b 98020000 		.4byte	.LASF41
 1560 024f 01       		.byte	0x1
 1561 0250 6602     		.2byte	0x266
 1562 0252 00000000 		.4byte	.LFB10
 1563 0256 30000000 		.4byte	.LFE10-.LFB10
 1564 025a 01       		.uleb128 0x1
 1565 025b 9C       		.byte	0x9c
 1566 025c 70020000 		.4byte	0x270
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 44


 1567 0260 0C       		.uleb128 0xc
 1568 0261 02030000 		.4byte	.LASF42
 1569 0265 01       		.byte	0x1
 1570 0266 6602     		.2byte	0x266
 1571 0268 83000000 		.4byte	0x83
 1572 026c 02       		.uleb128 0x2
 1573 026d 91       		.byte	0x91
 1574 026e 74       		.sleb128 -12
 1575 026f 00       		.byte	0
 1576 0270 0F       		.uleb128 0xf
 1577 0271 E9000000 		.4byte	.LASF43
 1578 0275 01       		.byte	0x1
 1579 0276 7E02     		.2byte	0x27e
 1580 0278 00000000 		.4byte	.LFB11
 1581 027c 20000000 		.4byte	.LFE11-.LFB11
 1582 0280 01       		.uleb128 0x1
 1583 0281 9C       		.byte	0x9c
 1584 0282 96020000 		.4byte	0x296
 1585 0286 0C       		.uleb128 0xc
 1586 0287 D0000000 		.4byte	.LASF38
 1587 028b 01       		.byte	0x1
 1588 028c 7E02     		.2byte	0x27e
 1589 028e 83000000 		.4byte	0x83
 1590 0292 02       		.uleb128 0x2
 1591 0293 91       		.byte	0x91
 1592 0294 74       		.sleb128 -12
 1593 0295 00       		.byte	0
 1594 0296 0F       		.uleb128 0xf
 1595 0297 20010000 		.4byte	.LASF44
 1596 029b 01       		.byte	0x1
 1597 029c 9502     		.2byte	0x295
 1598 029e 00000000 		.4byte	.LFB12
 1599 02a2 20000000 		.4byte	.LFE12-.LFB12
 1600 02a6 01       		.uleb128 0x1
 1601 02a7 9C       		.byte	0x9c
 1602 02a8 BC020000 		.4byte	0x2bc
 1603 02ac 0C       		.uleb128 0xc
 1604 02ad D0000000 		.4byte	.LASF38
 1605 02b1 01       		.byte	0x1
 1606 02b2 9502     		.2byte	0x295
 1607 02b4 83000000 		.4byte	0x83
 1608 02b8 02       		.uleb128 0x2
 1609 02b9 91       		.byte	0x91
 1610 02ba 74       		.sleb128 -12
 1611 02bb 00       		.byte	0
 1612 02bc 10       		.uleb128 0x10
 1613 02bd A1030000 		.4byte	.LASF45
 1614 02c1 01       		.byte	0x1
 1615 02c2 B102     		.2byte	0x2b1
 1616 02c4 00000000 		.4byte	.LFB13
 1617 02c8 34000000 		.4byte	.LFE13-.LFB13
 1618 02cc 01       		.uleb128 0x1
 1619 02cd 9C       		.byte	0x9c
 1620 02ce F1020000 		.4byte	0x2f1
 1621 02d2 0C       		.uleb128 0xc
 1622 02d3 62030000 		.4byte	.LASF34
 1623 02d7 01       		.byte	0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 45


 1624 02d8 B102     		.2byte	0x2b1
 1625 02da 83000000 		.4byte	0x83
 1626 02de 02       		.uleb128 0x2
 1627 02df 91       		.byte	0x91
 1628 02e0 74       		.sleb128 -12
 1629 02e1 0C       		.uleb128 0xc
 1630 02e2 7F030000 		.4byte	.LASF46
 1631 02e6 01       		.byte	0x1
 1632 02e7 B102     		.2byte	0x2b1
 1633 02e9 8F000000 		.4byte	0x8f
 1634 02ed 02       		.uleb128 0x2
 1635 02ee 91       		.byte	0x91
 1636 02ef 72       		.sleb128 -14
 1637 02f0 00       		.byte	0
 1638 02f1 10       		.uleb128 0x10
 1639 02f2 F0020000 		.4byte	.LASF47
 1640 02f6 01       		.byte	0x1
 1641 02f7 D302     		.2byte	0x2d3
 1642 02f9 00000000 		.4byte	.LFB14
 1643 02fd 2C000000 		.4byte	.LFE14-.LFB14
 1644 0301 01       		.uleb128 0x1
 1645 0302 9C       		.byte	0x9c
 1646 0303 26030000 		.4byte	0x326
 1647 0307 0C       		.uleb128 0xc
 1648 0308 62030000 		.4byte	.LASF34
 1649 030c 01       		.byte	0x1
 1650 030d D302     		.2byte	0x2d3
 1651 030f 83000000 		.4byte	0x83
 1652 0313 02       		.uleb128 0x2
 1653 0314 91       		.byte	0x91
 1654 0315 74       		.sleb128 -12
 1655 0316 0C       		.uleb128 0xc
 1656 0317 07000000 		.4byte	.LASF48
 1657 031b 01       		.byte	0x1
 1658 031c D302     		.2byte	0x2d3
 1659 031e 9B000000 		.4byte	0x9b
 1660 0322 02       		.uleb128 0x2
 1661 0323 91       		.byte	0x91
 1662 0324 70       		.sleb128 -16
 1663 0325 00       		.byte	0
 1664 0326 0E       		.uleb128 0xe
 1665 0327 0C030000 		.4byte	.LASF49
 1666 032b 01       		.byte	0x1
 1667 032c F402     		.2byte	0x2f4
 1668 032e 8F000000 		.4byte	0x8f
 1669 0332 00000000 		.4byte	.LFB15
 1670 0336 A0000000 		.4byte	.LFE15-.LFB15
 1671 033a 01       		.uleb128 0x1
 1672 033b 9C       		.byte	0x9c
 1673 033c 6E030000 		.4byte	0x36e
 1674 0340 0C       		.uleb128 0xc
 1675 0341 62030000 		.4byte	.LASF34
 1676 0345 01       		.byte	0x1
 1677 0346 F402     		.2byte	0x2f4
 1678 0348 83000000 		.4byte	0x83
 1679 034c 02       		.uleb128 0x2
 1680 034d 91       		.byte	0x91
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 46


 1681 034e 6C       		.sleb128 -20
 1682 034f 0C       		.uleb128 0xc
 1683 0350 86030000 		.4byte	.LASF50
 1684 0354 01       		.byte	0x1
 1685 0355 F402     		.2byte	0x2f4
 1686 0357 8F000000 		.4byte	0x8f
 1687 035b 02       		.uleb128 0x2
 1688 035c 91       		.byte	0x91
 1689 035d 6A       		.sleb128 -22
 1690 035e 0D       		.uleb128 0xd
 1691 035f F0010000 		.4byte	.LASF51
 1692 0363 01       		.byte	0x1
 1693 0364 F602     		.2byte	0x2f6
 1694 0366 8F000000 		.4byte	0x8f
 1695 036a 02       		.uleb128 0x2
 1696 036b 91       		.byte	0x91
 1697 036c 76       		.sleb128 -10
 1698 036d 00       		.byte	0
 1699 036e 0E       		.uleb128 0xe
 1700 036f 94000000 		.4byte	.LASF52
 1701 0373 01       		.byte	0x1
 1702 0374 2A03     		.2byte	0x32a
 1703 0376 9B000000 		.4byte	0x9b
 1704 037a 00000000 		.4byte	.LFB16
 1705 037e 90000000 		.4byte	.LFE16-.LFB16
 1706 0382 01       		.uleb128 0x1
 1707 0383 9C       		.byte	0x9c
 1708 0384 B6030000 		.4byte	0x3b6
 1709 0388 0C       		.uleb128 0xc
 1710 0389 62030000 		.4byte	.LASF34
 1711 038d 01       		.byte	0x1
 1712 038e 2A03     		.2byte	0x32a
 1713 0390 83000000 		.4byte	0x83
 1714 0394 02       		.uleb128 0x2
 1715 0395 91       		.byte	0x91
 1716 0396 64       		.sleb128 -28
 1717 0397 0C       		.uleb128 0xc
 1718 0398 86030000 		.4byte	.LASF50
 1719 039c 01       		.byte	0x1
 1720 039d 2A03     		.2byte	0x32a
 1721 039f 8F000000 		.4byte	0x8f
 1722 03a3 02       		.uleb128 0x2
 1723 03a4 91       		.byte	0x91
 1724 03a5 62       		.sleb128 -30
 1725 03a6 0D       		.uleb128 0xd
 1726 03a7 07010000 		.4byte	.LASF53
 1727 03ab 01       		.byte	0x1
 1728 03ac 2C03     		.2byte	0x32c
 1729 03ae C1000000 		.4byte	0xc1
 1730 03b2 02       		.uleb128 0x2
 1731 03b3 91       		.byte	0x91
 1732 03b4 68       		.sleb128 -24
 1733 03b5 00       		.byte	0
 1734 03b6 0E       		.uleb128 0xe
 1735 03b7 16000000 		.4byte	.LASF54
 1736 03bb 01       		.byte	0x1
 1737 03bc 5703     		.2byte	0x357
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 47


 1738 03be A7000000 		.4byte	0xa7
 1739 03c2 00000000 		.4byte	.LFB17
 1740 03c6 80000000 		.4byte	.LFE17-.LFB17
 1741 03ca 01       		.uleb128 0x1
 1742 03cb 9C       		.byte	0x9c
 1743 03cc FE030000 		.4byte	0x3fe
 1744 03d0 0C       		.uleb128 0xc
 1745 03d1 62030000 		.4byte	.LASF34
 1746 03d5 01       		.byte	0x1
 1747 03d6 5703     		.2byte	0x357
 1748 03d8 83000000 		.4byte	0x83
 1749 03dc 02       		.uleb128 0x2
 1750 03dd 91       		.byte	0x91
 1751 03de 64       		.sleb128 -28
 1752 03df 0C       		.uleb128 0xc
 1753 03e0 86030000 		.4byte	.LASF50
 1754 03e4 01       		.byte	0x1
 1755 03e5 5703     		.2byte	0x357
 1756 03e7 8F000000 		.4byte	0x8f
 1757 03eb 02       		.uleb128 0x2
 1758 03ec 91       		.byte	0x91
 1759 03ed 62       		.sleb128 -30
 1760 03ee 0D       		.uleb128 0xd
 1761 03ef 2F010000 		.4byte	.LASF55
 1762 03f3 01       		.byte	0x1
 1763 03f4 5903     		.2byte	0x359
 1764 03f6 A7000000 		.4byte	0xa7
 1765 03fa 02       		.uleb128 0x2
 1766 03fb 91       		.byte	0x91
 1767 03fc 6C       		.sleb128 -20
 1768 03fd 00       		.byte	0
 1769 03fe 11       		.uleb128 0x11
 1770 03ff 0E040000 		.4byte	0x40e
 1771 0403 0E040000 		.4byte	0x40e
 1772 0407 12       		.uleb128 0x12
 1773 0408 EC000000 		.4byte	0xec
 1774 040c 00       		.byte	0
 1775 040d 00       		.byte	0
 1776 040e 13       		.uleb128 0x13
 1777 040f 83000000 		.4byte	0x83
 1778 0413 08       		.uleb128 0x8
 1779 0414 6C030000 		.4byte	.LASF56
 1780 0418 01       		.byte	0x1
 1781 0419 21       		.byte	0x21
 1782 041a 24040000 		.4byte	0x424
 1783 041e 05       		.uleb128 0x5
 1784 041f 03       		.byte	0x3
 1785 0420 00000000 		.4byte	ADC_channelsConfig
 1786 0424 13       		.uleb128 0x13
 1787 0425 FE030000 		.4byte	0x3fe
 1788 0429 14       		.uleb128 0x14
 1789 042a D5000000 		.4byte	.LASF57
 1790 042e 01       		.byte	0x1
 1791 042f 18       		.byte	0x18
 1792 0430 6B000000 		.4byte	0x6b
 1793 0434 05       		.uleb128 0x5
 1794 0435 03       		.byte	0x3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 48


 1795 0436 00000000 		.4byte	ADC_initVar
 1796 043a 11       		.uleb128 0x11
 1797 043b 4A040000 		.4byte	0x44a
 1798 043f 4A040000 		.4byte	0x44a
 1799 0443 12       		.uleb128 0x12
 1800 0444 EC000000 		.4byte	0xec
 1801 0448 00       		.byte	0
 1802 0449 00       		.byte	0
 1803 044a 05       		.uleb128 0x5
 1804 044b 8F000000 		.4byte	0x8f
 1805 044f 14       		.uleb128 0x14
 1806 0450 3E030000 		.4byte	.LASF58
 1807 0454 01       		.byte	0x1
 1808 0455 19       		.byte	0x19
 1809 0456 60040000 		.4byte	0x460
 1810 045a 05       		.uleb128 0x5
 1811 045b 03       		.byte	0x3
 1812 045c 00000000 		.4byte	ADC_offset
 1813 0460 05       		.uleb128 0x5
 1814 0461 3A040000 		.4byte	0x43a
 1815 0465 11       		.uleb128 0x11
 1816 0466 75040000 		.4byte	0x475
 1817 046a 75040000 		.4byte	0x475
 1818 046e 12       		.uleb128 0x12
 1819 046f EC000000 		.4byte	0xec
 1820 0473 00       		.byte	0
 1821 0474 00       		.byte	0
 1822 0475 05       		.uleb128 0x5
 1823 0476 9B000000 		.4byte	0x9b
 1824 047a 14       		.uleb128 0x14
 1825 047b A8000000 		.4byte	.LASF59
 1826 047f 01       		.byte	0x1
 1827 0480 1A       		.byte	0x1a
 1828 0481 8B040000 		.4byte	0x48b
 1829 0485 05       		.uleb128 0x5
 1830 0486 03       		.byte	0x3
 1831 0487 00000000 		.4byte	ADC_countsPer10Volt
 1832 048b 05       		.uleb128 0x5
 1833 048c 65040000 		.4byte	0x465
 1834 0490 00       		.byte	0
 1835              		.section	.debug_abbrev,"",%progbits
 1836              	.Ldebug_abbrev0:
 1837 0000 01       		.uleb128 0x1
 1838 0001 11       		.uleb128 0x11
 1839 0002 01       		.byte	0x1
 1840 0003 25       		.uleb128 0x25
 1841 0004 0E       		.uleb128 0xe
 1842 0005 13       		.uleb128 0x13
 1843 0006 0B       		.uleb128 0xb
 1844 0007 03       		.uleb128 0x3
 1845 0008 0E       		.uleb128 0xe
 1846 0009 1B       		.uleb128 0x1b
 1847 000a 0E       		.uleb128 0xe
 1848 000b 55       		.uleb128 0x55
 1849 000c 17       		.uleb128 0x17
 1850 000d 11       		.uleb128 0x11
 1851 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 49


 1852 000f 10       		.uleb128 0x10
 1853 0010 17       		.uleb128 0x17
 1854 0011 00       		.byte	0
 1855 0012 00       		.byte	0
 1856 0013 02       		.uleb128 0x2
 1857 0014 24       		.uleb128 0x24
 1858 0015 00       		.byte	0
 1859 0016 0B       		.uleb128 0xb
 1860 0017 0B       		.uleb128 0xb
 1861 0018 3E       		.uleb128 0x3e
 1862 0019 0B       		.uleb128 0xb
 1863 001a 03       		.uleb128 0x3
 1864 001b 0E       		.uleb128 0xe
 1865 001c 00       		.byte	0
 1866 001d 00       		.byte	0
 1867 001e 03       		.uleb128 0x3
 1868 001f 24       		.uleb128 0x24
 1869 0020 00       		.byte	0
 1870 0021 0B       		.uleb128 0xb
 1871 0022 0B       		.uleb128 0xb
 1872 0023 3E       		.uleb128 0x3e
 1873 0024 0B       		.uleb128 0xb
 1874 0025 03       		.uleb128 0x3
 1875 0026 08       		.uleb128 0x8
 1876 0027 00       		.byte	0
 1877 0028 00       		.byte	0
 1878 0029 04       		.uleb128 0x4
 1879 002a 16       		.uleb128 0x16
 1880 002b 00       		.byte	0
 1881 002c 03       		.uleb128 0x3
 1882 002d 0E       		.uleb128 0xe
 1883 002e 3A       		.uleb128 0x3a
 1884 002f 0B       		.uleb128 0xb
 1885 0030 3B       		.uleb128 0x3b
 1886 0031 05       		.uleb128 0x5
 1887 0032 49       		.uleb128 0x49
 1888 0033 13       		.uleb128 0x13
 1889 0034 00       		.byte	0
 1890 0035 00       		.byte	0
 1891 0036 05       		.uleb128 0x5
 1892 0037 35       		.uleb128 0x35
 1893 0038 00       		.byte	0
 1894 0039 49       		.uleb128 0x49
 1895 003a 13       		.uleb128 0x13
 1896 003b 00       		.byte	0
 1897 003c 00       		.byte	0
 1898 003d 06       		.uleb128 0x6
 1899 003e 2E       		.uleb128 0x2e
 1900 003f 00       		.byte	0
 1901 0040 3F       		.uleb128 0x3f
 1902 0041 19       		.uleb128 0x19
 1903 0042 03       		.uleb128 0x3
 1904 0043 0E       		.uleb128 0xe
 1905 0044 3A       		.uleb128 0x3a
 1906 0045 0B       		.uleb128 0xb
 1907 0046 3B       		.uleb128 0x3b
 1908 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 50


 1909 0048 27       		.uleb128 0x27
 1910 0049 19       		.uleb128 0x19
 1911 004a 11       		.uleb128 0x11
 1912 004b 01       		.uleb128 0x1
 1913 004c 12       		.uleb128 0x12
 1914 004d 06       		.uleb128 0x6
 1915 004e 40       		.uleb128 0x40
 1916 004f 18       		.uleb128 0x18
 1917 0050 9642     		.uleb128 0x2116
 1918 0052 19       		.uleb128 0x19
 1919 0053 00       		.byte	0
 1920 0054 00       		.byte	0
 1921 0055 07       		.uleb128 0x7
 1922 0056 2E       		.uleb128 0x2e
 1923 0057 01       		.byte	0x1
 1924 0058 3F       		.uleb128 0x3f
 1925 0059 19       		.uleb128 0x19
 1926 005a 03       		.uleb128 0x3
 1927 005b 0E       		.uleb128 0xe
 1928 005c 3A       		.uleb128 0x3a
 1929 005d 0B       		.uleb128 0xb
 1930 005e 3B       		.uleb128 0x3b
 1931 005f 0B       		.uleb128 0xb
 1932 0060 27       		.uleb128 0x27
 1933 0061 19       		.uleb128 0x19
 1934 0062 11       		.uleb128 0x11
 1935 0063 01       		.uleb128 0x1
 1936 0064 12       		.uleb128 0x12
 1937 0065 06       		.uleb128 0x6
 1938 0066 40       		.uleb128 0x40
 1939 0067 18       		.uleb128 0x18
 1940 0068 9642     		.uleb128 0x2116
 1941 006a 19       		.uleb128 0x19
 1942 006b 01       		.uleb128 0x1
 1943 006c 13       		.uleb128 0x13
 1944 006d 00       		.byte	0
 1945 006e 00       		.byte	0
 1946 006f 08       		.uleb128 0x8
 1947 0070 34       		.uleb128 0x34
 1948 0071 00       		.byte	0
 1949 0072 03       		.uleb128 0x3
 1950 0073 0E       		.uleb128 0xe
 1951 0074 3A       		.uleb128 0x3a
 1952 0075 0B       		.uleb128 0xb
 1953 0076 3B       		.uleb128 0x3b
 1954 0077 0B       		.uleb128 0xb
 1955 0078 49       		.uleb128 0x49
 1956 0079 13       		.uleb128 0x13
 1957 007a 02       		.uleb128 0x2
 1958 007b 18       		.uleb128 0x18
 1959 007c 00       		.byte	0
 1960 007d 00       		.byte	0
 1961 007e 09       		.uleb128 0x9
 1962 007f 2E       		.uleb128 0x2e
 1963 0080 00       		.byte	0
 1964 0081 3F       		.uleb128 0x3f
 1965 0082 19       		.uleb128 0x19
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 51


 1966 0083 03       		.uleb128 0x3
 1967 0084 0E       		.uleb128 0xe
 1968 0085 3A       		.uleb128 0x3a
 1969 0086 0B       		.uleb128 0xb
 1970 0087 3B       		.uleb128 0x3b
 1971 0088 05       		.uleb128 0x5
 1972 0089 27       		.uleb128 0x27
 1973 008a 19       		.uleb128 0x19
 1974 008b 11       		.uleb128 0x11
 1975 008c 01       		.uleb128 0x1
 1976 008d 12       		.uleb128 0x12
 1977 008e 06       		.uleb128 0x6
 1978 008f 40       		.uleb128 0x40
 1979 0090 18       		.uleb128 0x18
 1980 0091 9642     		.uleb128 0x2116
 1981 0093 19       		.uleb128 0x19
 1982 0094 00       		.byte	0
 1983 0095 00       		.byte	0
 1984 0096 0A       		.uleb128 0xa
 1985 0097 2E       		.uleb128 0x2e
 1986 0098 00       		.byte	0
 1987 0099 3F       		.uleb128 0x3f
 1988 009a 19       		.uleb128 0x19
 1989 009b 03       		.uleb128 0x3
 1990 009c 0E       		.uleb128 0xe
 1991 009d 3A       		.uleb128 0x3a
 1992 009e 0B       		.uleb128 0xb
 1993 009f 3B       		.uleb128 0x3b
 1994 00a0 05       		.uleb128 0x5
 1995 00a1 27       		.uleb128 0x27
 1996 00a2 19       		.uleb128 0x19
 1997 00a3 11       		.uleb128 0x11
 1998 00a4 01       		.uleb128 0x1
 1999 00a5 12       		.uleb128 0x12
 2000 00a6 06       		.uleb128 0x6
 2001 00a7 40       		.uleb128 0x40
 2002 00a8 18       		.uleb128 0x18
 2003 00a9 9742     		.uleb128 0x2117
 2004 00ab 19       		.uleb128 0x19
 2005 00ac 00       		.byte	0
 2006 00ad 00       		.byte	0
 2007 00ae 0B       		.uleb128 0xb
 2008 00af 2E       		.uleb128 0x2e
 2009 00b0 01       		.byte	0x1
 2010 00b1 3F       		.uleb128 0x3f
 2011 00b2 19       		.uleb128 0x19
 2012 00b3 03       		.uleb128 0x3
 2013 00b4 0E       		.uleb128 0xe
 2014 00b5 3A       		.uleb128 0x3a
 2015 00b6 0B       		.uleb128 0xb
 2016 00b7 3B       		.uleb128 0x3b
 2017 00b8 05       		.uleb128 0x5
 2018 00b9 27       		.uleb128 0x27
 2019 00ba 19       		.uleb128 0x19
 2020 00bb 49       		.uleb128 0x49
 2021 00bc 13       		.uleb128 0x13
 2022 00bd 11       		.uleb128 0x11
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 52


 2023 00be 01       		.uleb128 0x1
 2024 00bf 12       		.uleb128 0x12
 2025 00c0 06       		.uleb128 0x6
 2026 00c1 40       		.uleb128 0x40
 2027 00c2 18       		.uleb128 0x18
 2028 00c3 9742     		.uleb128 0x2117
 2029 00c5 19       		.uleb128 0x19
 2030 00c6 01       		.uleb128 0x1
 2031 00c7 13       		.uleb128 0x13
 2032 00c8 00       		.byte	0
 2033 00c9 00       		.byte	0
 2034 00ca 0C       		.uleb128 0xc
 2035 00cb 05       		.uleb128 0x5
 2036 00cc 00       		.byte	0
 2037 00cd 03       		.uleb128 0x3
 2038 00ce 0E       		.uleb128 0xe
 2039 00cf 3A       		.uleb128 0x3a
 2040 00d0 0B       		.uleb128 0xb
 2041 00d1 3B       		.uleb128 0x3b
 2042 00d2 05       		.uleb128 0x5
 2043 00d3 49       		.uleb128 0x49
 2044 00d4 13       		.uleb128 0x13
 2045 00d5 02       		.uleb128 0x2
 2046 00d6 18       		.uleb128 0x18
 2047 00d7 00       		.byte	0
 2048 00d8 00       		.byte	0
 2049 00d9 0D       		.uleb128 0xd
 2050 00da 34       		.uleb128 0x34
 2051 00db 00       		.byte	0
 2052 00dc 03       		.uleb128 0x3
 2053 00dd 0E       		.uleb128 0xe
 2054 00de 3A       		.uleb128 0x3a
 2055 00df 0B       		.uleb128 0xb
 2056 00e0 3B       		.uleb128 0x3b
 2057 00e1 05       		.uleb128 0x5
 2058 00e2 49       		.uleb128 0x49
 2059 00e3 13       		.uleb128 0x13
 2060 00e4 02       		.uleb128 0x2
 2061 00e5 18       		.uleb128 0x18
 2062 00e6 00       		.byte	0
 2063 00e7 00       		.byte	0
 2064 00e8 0E       		.uleb128 0xe
 2065 00e9 2E       		.uleb128 0x2e
 2066 00ea 01       		.byte	0x1
 2067 00eb 3F       		.uleb128 0x3f
 2068 00ec 19       		.uleb128 0x19
 2069 00ed 03       		.uleb128 0x3
 2070 00ee 0E       		.uleb128 0xe
 2071 00ef 3A       		.uleb128 0x3a
 2072 00f0 0B       		.uleb128 0xb
 2073 00f1 3B       		.uleb128 0x3b
 2074 00f2 05       		.uleb128 0x5
 2075 00f3 27       		.uleb128 0x27
 2076 00f4 19       		.uleb128 0x19
 2077 00f5 49       		.uleb128 0x49
 2078 00f6 13       		.uleb128 0x13
 2079 00f7 11       		.uleb128 0x11
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 53


 2080 00f8 01       		.uleb128 0x1
 2081 00f9 12       		.uleb128 0x12
 2082 00fa 06       		.uleb128 0x6
 2083 00fb 40       		.uleb128 0x40
 2084 00fc 18       		.uleb128 0x18
 2085 00fd 9642     		.uleb128 0x2116
 2086 00ff 19       		.uleb128 0x19
 2087 0100 01       		.uleb128 0x1
 2088 0101 13       		.uleb128 0x13
 2089 0102 00       		.byte	0
 2090 0103 00       		.byte	0
 2091 0104 0F       		.uleb128 0xf
 2092 0105 2E       		.uleb128 0x2e
 2093 0106 01       		.byte	0x1
 2094 0107 3F       		.uleb128 0x3f
 2095 0108 19       		.uleb128 0x19
 2096 0109 03       		.uleb128 0x3
 2097 010a 0E       		.uleb128 0xe
 2098 010b 3A       		.uleb128 0x3a
 2099 010c 0B       		.uleb128 0xb
 2100 010d 3B       		.uleb128 0x3b
 2101 010e 05       		.uleb128 0x5
 2102 010f 27       		.uleb128 0x27
 2103 0110 19       		.uleb128 0x19
 2104 0111 11       		.uleb128 0x11
 2105 0112 01       		.uleb128 0x1
 2106 0113 12       		.uleb128 0x12
 2107 0114 06       		.uleb128 0x6
 2108 0115 40       		.uleb128 0x40
 2109 0116 18       		.uleb128 0x18
 2110 0117 9742     		.uleb128 0x2117
 2111 0119 19       		.uleb128 0x19
 2112 011a 01       		.uleb128 0x1
 2113 011b 13       		.uleb128 0x13
 2114 011c 00       		.byte	0
 2115 011d 00       		.byte	0
 2116 011e 10       		.uleb128 0x10
 2117 011f 2E       		.uleb128 0x2e
 2118 0120 01       		.byte	0x1
 2119 0121 3F       		.uleb128 0x3f
 2120 0122 19       		.uleb128 0x19
 2121 0123 03       		.uleb128 0x3
 2122 0124 0E       		.uleb128 0xe
 2123 0125 3A       		.uleb128 0x3a
 2124 0126 0B       		.uleb128 0xb
 2125 0127 3B       		.uleb128 0x3b
 2126 0128 05       		.uleb128 0x5
 2127 0129 27       		.uleb128 0x27
 2128 012a 19       		.uleb128 0x19
 2129 012b 11       		.uleb128 0x11
 2130 012c 01       		.uleb128 0x1
 2131 012d 12       		.uleb128 0x12
 2132 012e 06       		.uleb128 0x6
 2133 012f 40       		.uleb128 0x40
 2134 0130 18       		.uleb128 0x18
 2135 0131 9642     		.uleb128 0x2116
 2136 0133 19       		.uleb128 0x19
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 54


 2137 0134 01       		.uleb128 0x1
 2138 0135 13       		.uleb128 0x13
 2139 0136 00       		.byte	0
 2140 0137 00       		.byte	0
 2141 0138 11       		.uleb128 0x11
 2142 0139 01       		.uleb128 0x1
 2143 013a 01       		.byte	0x1
 2144 013b 49       		.uleb128 0x49
 2145 013c 13       		.uleb128 0x13
 2146 013d 01       		.uleb128 0x1
 2147 013e 13       		.uleb128 0x13
 2148 013f 00       		.byte	0
 2149 0140 00       		.byte	0
 2150 0141 12       		.uleb128 0x12
 2151 0142 21       		.uleb128 0x21
 2152 0143 00       		.byte	0
 2153 0144 49       		.uleb128 0x49
 2154 0145 13       		.uleb128 0x13
 2155 0146 2F       		.uleb128 0x2f
 2156 0147 0B       		.uleb128 0xb
 2157 0148 00       		.byte	0
 2158 0149 00       		.byte	0
 2159 014a 13       		.uleb128 0x13
 2160 014b 26       		.uleb128 0x26
 2161 014c 00       		.byte	0
 2162 014d 49       		.uleb128 0x49
 2163 014e 13       		.uleb128 0x13
 2164 014f 00       		.byte	0
 2165 0150 00       		.byte	0
 2166 0151 14       		.uleb128 0x14
 2167 0152 34       		.uleb128 0x34
 2168 0153 00       		.byte	0
 2169 0154 03       		.uleb128 0x3
 2170 0155 0E       		.uleb128 0xe
 2171 0156 3A       		.uleb128 0x3a
 2172 0157 0B       		.uleb128 0xb
 2173 0158 3B       		.uleb128 0x3b
 2174 0159 0B       		.uleb128 0xb
 2175 015a 49       		.uleb128 0x49
 2176 015b 13       		.uleb128 0x13
 2177 015c 3F       		.uleb128 0x3f
 2178 015d 19       		.uleb128 0x19
 2179 015e 02       		.uleb128 0x2
 2180 015f 18       		.uleb128 0x18
 2181 0160 00       		.byte	0
 2182 0161 00       		.byte	0
 2183 0162 00       		.byte	0
 2184              		.section	.debug_aranges,"",%progbits
 2185 0000 A4000000 		.4byte	0xa4
 2186 0004 0200     		.2byte	0x2
 2187 0006 00000000 		.4byte	.Ldebug_info0
 2188 000a 04       		.byte	0x4
 2189 000b 00       		.byte	0
 2190 000c 0000     		.2byte	0
 2191 000e 0000     		.2byte	0
 2192 0010 00000000 		.4byte	.LFB0
 2193 0014 24000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 55


 2194 0018 00000000 		.4byte	.LFB1
 2195 001c CC010000 		.4byte	.LFE1-.LFB1
 2196 0020 00000000 		.4byte	.LFB2
 2197 0024 2C000000 		.4byte	.LFE2-.LFB2
 2198 0028 00000000 		.4byte	.LFB3
 2199 002c 1C000000 		.4byte	.LFE3-.LFB3
 2200 0030 00000000 		.4byte	.LFB4
 2201 0034 1C000000 		.4byte	.LFE4-.LFB4
 2202 0038 00000000 		.4byte	.LFB5
 2203 003c 20000000 		.4byte	.LFE5-.LFB5
 2204 0040 00000000 		.4byte	.LFB6
 2205 0044 48000000 		.4byte	.LFE6-.LFB6
 2206 0048 00000000 		.4byte	.LFB7
 2207 004c 44000000 		.4byte	.LFE7-.LFB7
 2208 0050 00000000 		.4byte	.LFB8
 2209 0054 20000000 		.4byte	.LFE8-.LFB8
 2210 0058 00000000 		.4byte	.LFB9
 2211 005c 30000000 		.4byte	.LFE9-.LFB9
 2212 0060 00000000 		.4byte	.LFB10
 2213 0064 30000000 		.4byte	.LFE10-.LFB10
 2214 0068 00000000 		.4byte	.LFB11
 2215 006c 20000000 		.4byte	.LFE11-.LFB11
 2216 0070 00000000 		.4byte	.LFB12
 2217 0074 20000000 		.4byte	.LFE12-.LFB12
 2218 0078 00000000 		.4byte	.LFB13
 2219 007c 34000000 		.4byte	.LFE13-.LFB13
 2220 0080 00000000 		.4byte	.LFB14
 2221 0084 2C000000 		.4byte	.LFE14-.LFB14
 2222 0088 00000000 		.4byte	.LFB15
 2223 008c A0000000 		.4byte	.LFE15-.LFB15
 2224 0090 00000000 		.4byte	.LFB16
 2225 0094 90000000 		.4byte	.LFE16-.LFB16
 2226 0098 00000000 		.4byte	.LFB17
 2227 009c 80000000 		.4byte	.LFE17-.LFB17
 2228 00a0 00000000 		.4byte	0
 2229 00a4 00000000 		.4byte	0
 2230              		.section	.debug_ranges,"",%progbits
 2231              	.Ldebug_ranges0:
 2232 0000 00000000 		.4byte	.LFB0
 2233 0004 24000000 		.4byte	.LFE0
 2234 0008 00000000 		.4byte	.LFB1
 2235 000c CC010000 		.4byte	.LFE1
 2236 0010 00000000 		.4byte	.LFB2
 2237 0014 2C000000 		.4byte	.LFE2
 2238 0018 00000000 		.4byte	.LFB3
 2239 001c 1C000000 		.4byte	.LFE3
 2240 0020 00000000 		.4byte	.LFB4
 2241 0024 1C000000 		.4byte	.LFE4
 2242 0028 00000000 		.4byte	.LFB5
 2243 002c 20000000 		.4byte	.LFE5
 2244 0030 00000000 		.4byte	.LFB6
 2245 0034 48000000 		.4byte	.LFE6
 2246 0038 00000000 		.4byte	.LFB7
 2247 003c 44000000 		.4byte	.LFE7
 2248 0040 00000000 		.4byte	.LFB8
 2249 0044 20000000 		.4byte	.LFE8
 2250 0048 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 56


 2251 004c 30000000 		.4byte	.LFE9
 2252 0050 00000000 		.4byte	.LFB10
 2253 0054 30000000 		.4byte	.LFE10
 2254 0058 00000000 		.4byte	.LFB11
 2255 005c 20000000 		.4byte	.LFE11
 2256 0060 00000000 		.4byte	.LFB12
 2257 0064 20000000 		.4byte	.LFE12
 2258 0068 00000000 		.4byte	.LFB13
 2259 006c 34000000 		.4byte	.LFE13
 2260 0070 00000000 		.4byte	.LFB14
 2261 0074 2C000000 		.4byte	.LFE14
 2262 0078 00000000 		.4byte	.LFB15
 2263 007c A0000000 		.4byte	.LFE15
 2264 0080 00000000 		.4byte	.LFB16
 2265 0084 90000000 		.4byte	.LFE16
 2266 0088 00000000 		.4byte	.LFB17
 2267 008c 80000000 		.4byte	.LFE17
 2268 0090 00000000 		.4byte	0
 2269 0094 00000000 		.4byte	0
 2270              		.section	.debug_line,"",%progbits
 2271              	.Ldebug_line0:
 2272 0000 94020000 		.section	.debug_str,"MS",%progbits,1
 2272      02004000 
 2272      00000201 
 2272      FB0E0D00 
 2272      01010101 
 2273              	.LASF10:
 2274 0000 75696E74 		.ascii	"uint16\000"
 2274      313600
 2275              	.LASF48:
 2276 0007 61646347 		.ascii	"adcGain\000"
 2276      61696E00 
 2277              	.LASF24:
 2278 000f 636F756E 		.ascii	"counts\000"
 2278      747300
 2279              	.LASF54:
 2280 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2280      436F756E 
 2280      7473546F 
 2280      5F566F6C 
 2280      747300
 2281              	.LASF36:
 2282 0029 4144435F 		.ascii	"ADC_Init\000"
 2282      496E6974 
 2282      00
 2283              	.LASF7:
 2284 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2284      206C6F6E 
 2284      6720756E 
 2284      7369676E 
 2284      65642069 
 2285              	.LASF28:
 2286 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2286      53746172 
 2286      74436F6E 
 2286      76657274 
 2286      00
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 57


 2287              	.LASF6:
 2288 005a 6C6F6E67 		.ascii	"long long int\000"
 2288      206C6F6E 
 2288      6720696E 
 2288      7400
 2289              	.LASF0:
 2290 0068 7369676E 		.ascii	"signed char\000"
 2290      65642063 
 2290      68617200 
 2291              	.LASF30:
 2292 0074 73746174 		.ascii	"status\000"
 2292      757300
 2293              	.LASF13:
 2294 007b 696E7433 		.ascii	"int32\000"
 2294      3200
 2295              	.LASF25:
 2296 0081 4144435F 		.ascii	"ADC_Start\000"
 2296      53746172 
 2296      7400
 2297              	.LASF4:
 2298 008b 6C6F6E67 		.ascii	"long int\000"
 2298      20696E74 
 2298      00
 2299              	.LASF52:
 2300 0094 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2300      436F756E 
 2300      7473546F 
 2300      5F75566F 
 2300      6C747300 
 2301              	.LASF59:
 2302 00a8 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2302      636F756E 
 2302      74735065 
 2302      72313056 
 2302      6F6C7400 
 2303              	.LASF9:
 2304 00bc 75696E74 		.ascii	"uint8\000"
 2304      3800
 2305              	.LASF16:
 2306 00c2 646F7562 		.ascii	"double\000"
 2306      6C6500
 2307              	.LASF11:
 2308 00c9 75696E74 		.ascii	"uint32\000"
 2308      333200
 2309              	.LASF38:
 2310 00d0 6D61736B 		.ascii	"mask\000"
 2310      00
 2311              	.LASF57:
 2312 00d5 4144435F 		.ascii	"ADC_initVar\000"
 2312      696E6974 
 2312      56617200 
 2313              	.LASF33:
 2314 00e1 7265744D 		.ascii	"retMode\000"
 2314      6F646500 
 2315              	.LASF43:
 2316 00e9 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2316      5365744C 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 58


 2316      696D6974 
 2316      4D61736B 
 2316      00
 2317              	.LASF8:
 2318 00fa 756E7369 		.ascii	"unsigned int\000"
 2318      676E6564 
 2318      20696E74 
 2318      00
 2319              	.LASF53:
 2320 0107 75566F6C 		.ascii	"uVolts\000"
 2320      747300
 2321              	.LASF5:
 2322 010e 6C6F6E67 		.ascii	"long unsigned int\000"
 2322      20756E73 
 2322      69676E65 
 2322      6420696E 
 2322      7400
 2323              	.LASF44:
 2324 0120 4144435F 		.ascii	"ADC_SetSatMask\000"
 2324      53657453 
 2324      61744D61 
 2324      736B00
 2325              	.LASF55:
 2326 012f 766F6C74 		.ascii	"volts\000"
 2326      7300
 2327              	.LASF23:
 2328 0135 746D7052 		.ascii	"tmpRegVal\000"
 2328      65675661 
 2328      6C00
 2329              	.LASF3:
 2330 013f 73686F72 		.ascii	"short unsigned int\000"
 2330      7420756E 
 2330      7369676E 
 2330      65642069 
 2330      6E7400
 2331              	.LASF29:
 2332 0152 4144435F 		.ascii	"ADC_StopConvert\000"
 2332      53746F70 
 2332      436F6E76 
 2332      65727400 
 2333              	.LASF60:
 2334 0162 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2334      43313120 
 2334      352E342E 
 2334      31203230 
 2334      31363036 
 2335 0195 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2335      20726576 
 2335      6973696F 
 2335      6E203233 
 2335      37373135 
 2336 01c8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2336      66756E63 
 2336      74696F6E 
 2336      2D736563 
 2336      74696F6E 
 2337              	.LASF51:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 59


 2338 01f0 6D566F6C 		.ascii	"mVolts\000"
 2338      747300
 2339              	.LASF62:
 2340 01f7 433A5C53 		.ascii	"C:\\SVN\\apps\\trunk\\Cypress Academy\\PSoC-101\\Pr"
 2340      564E5C61 
 2340      7070735C 
 2340      7472756E 
 2340      6B5C4379 
 2341 0224 6F6A6563 		.ascii	"ojects\\Team_Project\\Simon\\Simon_Slave_Pioneer\\S"
 2341      74735C54 
 2341      65616D5F 
 2341      50726F6A 
 2341      6563745C 
 2342 0253 696D6F6E 		.ascii	"imon_Slave_Pioneer.cydsn\000"
 2342      5F536C61 
 2342      76655F50 
 2342      696F6E65 
 2342      65722E63 
 2343              	.LASF19:
 2344 026c 72656733 		.ascii	"reg32\000"
 2344      3200
 2345              	.LASF14:
 2346 0272 666C6F61 		.ascii	"float32\000"
 2346      74333200 
 2347              	.LASF21:
 2348 027a 73697A65 		.ascii	"sizetype\000"
 2348      74797065 
 2348      00
 2349              	.LASF40:
 2350 0283 6C6F774C 		.ascii	"lowLimit\000"
 2350      696D6974 
 2350      00
 2351              	.LASF20:
 2352 028c 6C6F6E67 		.ascii	"long double\000"
 2352      20646F75 
 2352      626C6500 
 2353              	.LASF41:
 2354 0298 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2354      53657448 
 2354      6967684C 
 2354      696D6974 
 2354      00
 2355              	.LASF31:
 2356 02a9 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2356      4973456E 
 2356      64436F6E 
 2356      76657273 
 2356      696F6E00 
 2357              	.LASF17:
 2358 02bd 696E7436 		.ascii	"int64\000"
 2358      3400
 2359              	.LASF37:
 2360 02c3 4144435F 		.ascii	"ADC_SetChanMask\000"
 2360      53657443 
 2360      68616E4D 
 2360      61736B00 
 2361              	.LASF61:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 60


 2362 02d3 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2362      72617465 
 2362      645F536F 
 2362      75726365 
 2362      5C50536F 
 2363              	.LASF47:
 2364 02f0 4144435F 		.ascii	"ADC_SetGain\000"
 2364      53657447 
 2364      61696E00 
 2365              	.LASF15:
 2366 02fc 666C6F61 		.ascii	"float\000"
 2366      7400
 2367              	.LASF42:
 2368 0302 68696768 		.ascii	"highLimit\000"
 2368      4C696D69 
 2368      7400
 2369              	.LASF49:
 2370 030c 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2370      436F756E 
 2370      7473546F 
 2370      5F6D566F 
 2370      6C747300 
 2371              	.LASF39:
 2372 0320 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2372      5365744C 
 2372      6F774C69 
 2372      6D697400 
 2373              	.LASF1:
 2374 0330 756E7369 		.ascii	"unsigned char\000"
 2374      676E6564 
 2374      20636861 
 2374      7200
 2375              	.LASF58:
 2376 033e 4144435F 		.ascii	"ADC_offset\000"
 2376      6F666673 
 2376      657400
 2377              	.LASF2:
 2378 0349 73686F72 		.ascii	"short int\000"
 2378      7420696E 
 2378      7400
 2379              	.LASF27:
 2380 0353 4144435F 		.ascii	"ADC_Stop\000"
 2380      53746F70 
 2380      00
 2381              	.LASF22:
 2382 035c 63684E75 		.ascii	"chNum\000"
 2382      6D00
 2383              	.LASF34:
 2384 0362 6368616E 		.ascii	"chan\000"
 2384      00
 2385              	.LASF18:
 2386 0367 63686172 		.ascii	"char\000"
 2386      00
 2387              	.LASF56:
 2388 036c 4144435F 		.ascii	"ADC_channelsConfig\000"
 2388      6368616E 
 2388      6E656C73 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cceTPQeY.s 			page 61


 2388      436F6E66 
 2388      696700
 2389              	.LASF46:
 2390 037f 6F666673 		.ascii	"offset\000"
 2390      657400
 2391              	.LASF50:
 2392 0386 61646343 		.ascii	"adcCounts\000"
 2392      6F756E74 
 2392      7300
 2393              	.LASF26:
 2394 0390 4144435F 		.ascii	"ADC_Enable\000"
 2394      456E6162 
 2394      6C6500
 2395              	.LASF12:
 2396 039b 696E7431 		.ascii	"int16\000"
 2396      3600
 2397              	.LASF45:
 2398 03a1 4144435F 		.ascii	"ADC_SetOffset\000"
 2398      5365744F 
 2398      66667365 
 2398      7400
 2399              	.LASF35:
 2400 03af 72657375 		.ascii	"result\000"
 2400      6C7400
 2401              	.LASF32:
 2402 03b6 4144435F 		.ascii	"ADC_GetResult16\000"
 2402      47657452 
 2402      6573756C 
 2402      74313600 
 2403              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
