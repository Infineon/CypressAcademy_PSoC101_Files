ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyFlash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              		.align	2
  21              	cySysFlashBackup:
  22 0000 00000000 		.space	4
  23              		.section	.text.CySysFlashWriteRow,"ax",%progbits
  24              		.align	2
  25              		.global	CySysFlashWriteRow
  26              		.code	16
  27              		.thumb_func
  28              		.type	CySysFlashWriteRow, %function
  29              	CySysFlashWriteRow:
  30              	.LFB0:
  31              		.file 1 "Generated_Source\\PSoC4\\CyFlash.c"
   1:Generated_Source\PSoC4/CyFlash.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyFlash.c **** * \file CyFlash.c
   3:Generated_Source\PSoC4/CyFlash.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyFlash.c **** *
   5:Generated_Source\PSoC4/CyFlash.c **** * \brief Provides an API for the FLASH.
   6:Generated_Source\PSoC4/CyFlash.c **** *
   7:Generated_Source\PSoC4/CyFlash.c **** * \note This code is endian agnostic.
   8:Generated_Source\PSoC4/CyFlash.c **** *
   9:Generated_Source\PSoC4/CyFlash.c **** * \note Documentation of the API's in this file is located in the System
  10:Generated_Source\PSoC4/CyFlash.c **** * Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/CyFlash.c **** *
  12:Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  13:Generated_Source\PSoC4/CyFlash.c **** * \copyright
  14:Generated_Source\PSoC4/CyFlash.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  15:Generated_Source\PSoC4/CyFlash.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:Generated_Source\PSoC4/CyFlash.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:Generated_Source\PSoC4/CyFlash.c **** * the software package with which this file was provided.
  18:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  19:Generated_Source\PSoC4/CyFlash.c **** 
  20:Generated_Source\PSoC4/CyFlash.c **** #include "CyFlash.h"
  21:Generated_Source\PSoC4/CyFlash.c **** 
  22:Generated_Source\PSoC4/CyFlash.c **** 
  23:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/CyFlash.c **** * Cypress identified a defect with the Flash write functionality of the
  25:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4000, PSoC 4000U, PSoC 4100, and PSoC 4200 devices. The 
  26:Generated_Source\PSoC4/CyFlash.c **** * CySysFlashWriteRow() function now checks the data to be written and, if 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 2


  27:Generated_Source\PSoC4/CyFlash.c **** * necessary, modifies it to have a non-zero checksum. After writing to Flash, 
  28:Generated_Source\PSoC4/CyFlash.c **** * the modified data is replaced (Flash program) with 
  29:Generated_Source\PSoC4/CyFlash.c **** * the correct (original) data.
  30:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  31:Generated_Source\PSoC4/CyFlash.c **** #define CY_FLASH_CHECKSUM_WORKAROUND    (CY_PSOC4_4000 || CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC
  32:Generated_Source\PSoC4/CyFlash.c **** 
  33:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_4000)
  34:Generated_Source\PSoC4/CyFlash.c ****     static CY_SYS_FLASH_CLOCK_BACKUP_STRUCT cySysFlashBackup;
  35:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_400
  36:Generated_Source\PSoC4/CyFlash.c **** 
  37:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void);
  38:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void);
  39:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
  40:Generated_Source\PSoC4/CyFlash.c ****     static cystatus CySysFlashClockConfig(void);
  41:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
  42:Generated_Source\PSoC4/CyFlash.c **** 
  43:Generated_Source\PSoC4/CyFlash.c **** 
  44:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  45:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashWriteRow
  46:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
  47:Generated_Source\PSoC4/CyFlash.c **** *
  48:Generated_Source\PSoC4/CyFlash.c **** * Erases a row of Flash and programs it with the new data.
  49:Generated_Source\PSoC4/CyFlash.c **** *
  50:Generated_Source\PSoC4/CyFlash.c **** * The IMO must be enabled before calling this function. The operation of the
  51:Generated_Source\PSoC4/CyFlash.c **** * flash writing hardware is dependent on the IMO.
  52:Generated_Source\PSoC4/CyFlash.c **** *
  53:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000, PSoC 4100 BLE and PSoC 4200 BLE devices (PSoC 4100 BLE and
  54:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200 BLE devices with 256K of Flash memory are not affected), this API
  55:Generated_Source\PSoC4/CyFlash.c **** * will automatically modify the clock settings for the device. Writing to
  56:Generated_Source\PSoC4/CyFlash.c **** * flash requires that changes be made to the IMO and HFCLK settings. The
  57:Generated_Source\PSoC4/CyFlash.c **** * configuration is restored before returning. This will impact the operation
  58:Generated_Source\PSoC4/CyFlash.c **** * of most of the hardware in the device.
  59:Generated_Source\PSoC4/CyFlash.c **** *
  60:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000 devices this API will automatically modify the clock settings
  61:Generated_Source\PSoC4/CyFlash.c **** * for the device. Writing to flash requires that changes be made to the IMO
  62:Generated_Source\PSoC4/CyFlash.c **** * and HFCLK settings. The configuration is restored before returning. HFCLK
  63:Generated_Source\PSoC4/CyFlash.c **** * will have several frequency changes during the operation of this API between
  64:Generated_Source\PSoC4/CyFlash.c **** * a minimum frequency of the current IMO frequency divided by 8 and a maximum
  65:Generated_Source\PSoC4/CyFlash.c **** * frequency of 12 MHz. This will impact the operation of most of the hardware
  66:Generated_Source\PSoC4/CyFlash.c **** * in the device.
  67:Generated_Source\PSoC4/CyFlash.c **** *
  68:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
  69:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
  70:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
  71:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
  72:Generated_Source\PSoC4/CyFlash.c **** *
  73:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
  74:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
  75:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
  76:Generated_Source\PSoC4/CyFlash.c **** * details.
  77:Generated_Source\PSoC4/CyFlash.c **** *
  78:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
  79:Generated_Source\PSoC4/CyFlash.c **** *
  80:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  81:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashWriteRow(uint32 rowNum, const uint8 rowData[])
  82:Generated_Source\PSoC4/CyFlash.c **** {
  32              		.loc 1 82 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 3


  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 184
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 90B5     		push	{r4, r7, lr}
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 AFB0     		sub	sp, sp, #188
  42              		.cfi_def_cfa_offset 200
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
  46 0008 3960     		str	r1, [r7]
  83:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
  47              		.loc 1 83 0
  48 000a 0023     		movs	r3, #0
  49 000c 9422     		movs	r2, #148
  50 000e BA18     		adds	r2, r7, r2
  51 0010 1360     		str	r3, [r2]
  84:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
  52              		.loc 1 84 0
  53 0012 0023     		movs	r3, #0
  54 0014 9022     		movs	r2, #144
  55 0016 BA18     		adds	r2, r7, r2
  56 0018 1360     		str	r3, [r2]
  85:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
  86:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
  87:Generated_Source\PSoC4/CyFlash.c **** 
  88:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_FLASH_CHECKSUM_WORKAROUND)
  89:Generated_Source\PSoC4/CyFlash.c ****         uint32 needChecksumWorkaround = 0u;
  57              		.loc 1 89 0
  58 001a 0023     		movs	r3, #0
  59 001c A022     		movs	r2, #160
  60 001e BA18     		adds	r2, r7, r2
  61 0020 1360     		str	r3, [r2]
  90:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedIndex = 0u;
  62              		.loc 1 90 0
  63 0022 0023     		movs	r3, #0
  64 0024 B422     		movs	r2, #180
  65 0026 BA18     		adds	r2, r7, r2
  66 0028 1360     		str	r3, [r2]
  91:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedValue = 0u;
  67              		.loc 1 91 0
  68 002a 0023     		movs	r3, #0
  69 002c B022     		movs	r2, #176
  70 002e BA18     		adds	r2, r7, r2
  71 0030 1360     		str	r3, [r2]
  92:Generated_Source\PSoC4/CyFlash.c ****         uint32 checksum = 0u;
  72              		.loc 1 92 0
  73 0032 0023     		movs	r3, #0
  74 0034 AC22     		movs	r2, #172
  75 0036 BA18     		adds	r2, r7, r2
  76 0038 1360     		str	r3, [r2]
  93:Generated_Source\PSoC4/CyFlash.c ****         uint32 bits = 0u;
  77              		.loc 1 93 0
  78 003a 0023     		movs	r3, #0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 4


  79 003c A822     		movs	r2, #168
  80 003e BA18     		adds	r2, r7, r2
  81 0040 1360     		str	r3, [r2]
  94:Generated_Source\PSoC4/CyFlash.c ****         uint32 i;
  95:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
  96:Generated_Source\PSoC4/CyFlash.c **** 
  97:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
  82              		.loc 1 97 0
  83 0042 7B68     		ldr	r3, [r7, #4]
  84 0044 FF2B     		cmp	r3, #255
  85 0046 00D9     		bls	.LCB45
  86 0048 85E1     		b	.L2	@long jump
  87              	.LCB45:
  88              		.loc 1 97 0 is_stmt 0 discriminator 1
  89 004a 3B68     		ldr	r3, [r7]
  90 004c 002B     		cmp	r3, #0
  91 004e 00D1     		bne	.LCB48
  92 0050 81E1     		b	.L2	@long jump
  93              	.LCB48:
  98:Generated_Source\PSoC4/CyFlash.c ****     {
  99:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
 100:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
  94              		.loc 1 100 0 is_stmt 1
  95 0052 3968     		ldr	r1, [r7]
  96 0054 0823     		movs	r3, #8
  97 0056 FB18     		adds	r3, r7, r3
  98 0058 0833     		adds	r3, r3, #8
  99 005a 8022     		movs	r2, #128
 100 005c 1800     		movs	r0, r3
 101 005e FFF7FEFF 		bl	memcpy
 101:Generated_Source\PSoC4/CyFlash.c **** 
 102:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_FLASH_CHECKSUM_WORKAROUND)
 103:Generated_Source\PSoC4/CyFlash.c **** 
 104:Generated_Source\PSoC4/CyFlash.c ****             for (i = 2u; i < ((CY_FLASH_SIZEOF_ROW / sizeof(uint32)) + 2u); i++)
 102              		.loc 1 104 0
 103 0062 0223     		movs	r3, #2
 104 0064 A422     		movs	r2, #164
 105 0066 BA18     		adds	r2, r7, r2
 106 0068 1360     		str	r3, [r2]
 107 006a 2FE0     		b	.L3
 108              	.L5:
 109              	.LBB2:
 105:Generated_Source\PSoC4/CyFlash.c ****             {
 106:Generated_Source\PSoC4/CyFlash.c ****                 uint32 tmp = parameters[i];
 110              		.loc 1 106 0
 111 006c 0823     		movs	r3, #8
 112 006e FB18     		adds	r3, r7, r3
 113 0070 A422     		movs	r2, #164
 114 0072 BA18     		adds	r2, r7, r2
 115 0074 1268     		ldr	r2, [r2]
 116 0076 9200     		lsls	r2, r2, #2
 117 0078 D358     		ldr	r3, [r2, r3]
 118 007a 9C22     		movs	r2, #156
 119 007c BA18     		adds	r2, r7, r2
 120 007e 1360     		str	r3, [r2]
 107:Generated_Source\PSoC4/CyFlash.c ****                 if (tmp != 0u)
 121              		.loc 1 107 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 5


 122 0080 9C23     		movs	r3, #156
 123 0082 FB18     		adds	r3, r7, r3
 124 0084 1B68     		ldr	r3, [r3]
 125 0086 002B     		cmp	r3, #0
 126 0088 19D0     		beq	.L4
 108:Generated_Source\PSoC4/CyFlash.c ****                 {
 109:Generated_Source\PSoC4/CyFlash.c ****                     checksum += tmp;
 127              		.loc 1 109 0
 128 008a AC23     		movs	r3, #172
 129 008c FB18     		adds	r3, r7, r3
 130 008e 1A68     		ldr	r2, [r3]
 131 0090 9C23     		movs	r3, #156
 132 0092 FB18     		adds	r3, r7, r3
 133 0094 1B68     		ldr	r3, [r3]
 134 0096 D318     		adds	r3, r2, r3
 135 0098 AC22     		movs	r2, #172
 136 009a BA18     		adds	r2, r7, r2
 137 009c 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyFlash.c ****                     bits |= tmp;
 138              		.loc 1 110 0
 139 009e A823     		movs	r3, #168
 140 00a0 FB18     		adds	r3, r7, r3
 141 00a2 1A68     		ldr	r2, [r3]
 142 00a4 9C23     		movs	r3, #156
 143 00a6 FB18     		adds	r3, r7, r3
 144 00a8 1B68     		ldr	r3, [r3]
 145 00aa 1343     		orrs	r3, r2
 146 00ac A822     		movs	r2, #168
 147 00ae BA18     		adds	r2, r7, r2
 148 00b0 1360     		str	r3, [r2]
 111:Generated_Source\PSoC4/CyFlash.c ****                     savedIndex = i;
 149              		.loc 1 111 0
 150 00b2 A423     		movs	r3, #164
 151 00b4 FB18     		adds	r3, r7, r3
 152 00b6 1B68     		ldr	r3, [r3]
 153 00b8 B422     		movs	r2, #180
 154 00ba BA18     		adds	r2, r7, r2
 155 00bc 1360     		str	r3, [r2]
 156              	.L4:
 157              	.LBE2:
 104:Generated_Source\PSoC4/CyFlash.c ****             {
 158              		.loc 1 104 0 discriminator 2
 159 00be A423     		movs	r3, #164
 160 00c0 FB18     		adds	r3, r7, r3
 161 00c2 1B68     		ldr	r3, [r3]
 162 00c4 0133     		adds	r3, r3, #1
 163 00c6 A422     		movs	r2, #164
 164 00c8 BA18     		adds	r2, r7, r2
 165 00ca 1360     		str	r3, [r2]
 166              	.L3:
 104:Generated_Source\PSoC4/CyFlash.c ****             {
 167              		.loc 1 104 0 is_stmt 0 discriminator 1
 168 00cc A423     		movs	r3, #164
 169 00ce FB18     		adds	r3, r7, r3
 170 00d0 1B68     		ldr	r3, [r3]
 171 00d2 212B     		cmp	r3, #33
 172 00d4 CAD9     		bls	.L5
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 6


 112:Generated_Source\PSoC4/CyFlash.c ****                 }
 113:Generated_Source\PSoC4/CyFlash.c ****             }
 114:Generated_Source\PSoC4/CyFlash.c **** 
 115:Generated_Source\PSoC4/CyFlash.c ****             needChecksumWorkaround = ((checksum == 0u) && (bits != 0u)) ? 1u : 0u;
 173              		.loc 1 115 0 is_stmt 1
 174 00d6 AC23     		movs	r3, #172
 175 00d8 FB18     		adds	r3, r7, r3
 176 00da 1B68     		ldr	r3, [r3]
 177 00dc 002B     		cmp	r3, #0
 178 00de 06D1     		bne	.L6
 179              		.loc 1 115 0 is_stmt 0 discriminator 1
 180 00e0 A823     		movs	r3, #168
 181 00e2 FB18     		adds	r3, r7, r3
 182 00e4 1B68     		ldr	r3, [r3]
 183 00e6 002B     		cmp	r3, #0
 184 00e8 01D0     		beq	.L6
 185              		.loc 1 115 0 discriminator 3
 186 00ea 0123     		movs	r3, #1
 187 00ec 00E0     		b	.L7
 188              	.L6:
 189              		.loc 1 115 0 discriminator 4
 190 00ee 0023     		movs	r3, #0
 191              	.L7:
 192              		.loc 1 115 0 discriminator 6
 193 00f0 A022     		movs	r2, #160
 194 00f2 BA18     		adds	r2, r7, r2
 195 00f4 1360     		str	r3, [r2]
 116:Generated_Source\PSoC4/CyFlash.c ****             if (needChecksumWorkaround != 0u)
 196              		.loc 1 116 0 is_stmt 1 discriminator 6
 197 00f6 A023     		movs	r3, #160
 198 00f8 FB18     		adds	r3, r7, r3
 199 00fa 1B68     		ldr	r3, [r3]
 200 00fc 002B     		cmp	r3, #0
 201 00fe 11D0     		beq	.L8
 117:Generated_Source\PSoC4/CyFlash.c ****             {
 118:Generated_Source\PSoC4/CyFlash.c ****                 savedValue = parameters[savedIndex];
 202              		.loc 1 118 0
 203 0100 0823     		movs	r3, #8
 204 0102 FB18     		adds	r3, r7, r3
 205 0104 B422     		movs	r2, #180
 206 0106 BA18     		adds	r2, r7, r2
 207 0108 1268     		ldr	r2, [r2]
 208 010a 9200     		lsls	r2, r2, #2
 209 010c D358     		ldr	r3, [r2, r3]
 210 010e B022     		movs	r2, #176
 211 0110 BA18     		adds	r2, r7, r2
 212 0112 1360     		str	r3, [r2]
 119:Generated_Source\PSoC4/CyFlash.c ****                 parameters[savedIndex] = 0u;
 213              		.loc 1 119 0
 214 0114 0823     		movs	r3, #8
 215 0116 FB18     		adds	r3, r7, r3
 216 0118 B422     		movs	r2, #180
 217 011a BA18     		adds	r2, r7, r2
 218 011c 1268     		ldr	r2, [r2]
 219 011e 9200     		lsls	r2, r2, #2
 220 0120 0021     		movs	r1, #0
 221 0122 D150     		str	r1, [r2, r3]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 7


 222              	.L8:
 120:Generated_Source\PSoC4/CyFlash.c ****             }
 121:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 122:Generated_Source\PSoC4/CyFlash.c **** 
 123:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 124:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 223              		.loc 1 124 0
 224 0124 0823     		movs	r3, #8
 225 0126 FB18     		adds	r3, r7, r3
 226 0128 904A     		ldr	r2, .L31
 227 012a 1A60     		str	r2, [r3]
 125:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 126:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 127:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 128:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 228              		.loc 1 128 0
 229 012c 0823     		movs	r3, #8
 230 012e FB18     		adds	r3, r7, r3
 231 0130 7F22     		movs	r2, #127
 232 0132 5A60     		str	r2, [r3, #4]
 129:Generated_Source\PSoC4/CyFlash.c **** 
 130:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 233              		.loc 1 130 0
 234 0134 8E4B     		ldr	r3, .L31+4
 235 0136 0822     		movs	r2, #8
 236 0138 BA18     		adds	r2, r7, r2
 237 013a 1A60     		str	r2, [r3]
 131:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 238              		.loc 1 131 0
 239 013c 8D4B     		ldr	r3, .L31+8
 240 013e 8E4A     		ldr	r2, .L31+12
 241 0140 1A60     		str	r2, [r3]
 132:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 242              		.loc 1 132 0
 243              		.syntax divided
 244              	@ 132 "Generated_Source\PSoC4\CyFlash.c" 1
 245 0142 C046     		NOP
 246              	
 247              	@ 0 "" 2
 133:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 248              		.loc 1 133 0
 249              		.thumb
 250              		.syntax unified
 251 0144 8A4B     		ldr	r3, .L31+4
 252 0146 1B68     		ldr	r3, [r3]
 253 0148 1B0F     		lsrs	r3, r3, #28
 254 014a 1A07     		lsls	r2, r3, #28
 255 014c F023     		movs	r3, #240
 256 014e 1B06     		lsls	r3, r3, #24
 257 0150 9A42     		cmp	r2, r3
 258 0152 04D1     		bne	.L9
 259              		.loc 1 133 0 is_stmt 0 discriminator 1
 260 0154 864B     		ldr	r3, .L31+4
 261 0156 1B68     		ldr	r3, [r3]
 262 0158 FF22     		movs	r2, #255
 263 015a 1340     		ands	r3, r2
 264 015c 0DE0     		b	.L10
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 8


 265              	.L9:
 266              		.loc 1 133 0 discriminator 2
 267 015e 844B     		ldr	r3, .L31+4
 268 0160 1B68     		ldr	r3, [r3]
 269 0162 1B0F     		lsrs	r3, r3, #28
 270 0164 1A07     		lsls	r2, r3, #28
 271 0166 A023     		movs	r3, #160
 272 0168 1B06     		lsls	r3, r3, #24
 273 016a 9A42     		cmp	r2, r3
 274 016c 04D0     		beq	.L11
 275              		.loc 1 133 0 discriminator 4
 276 016e 804B     		ldr	r3, .L31+4
 277 0170 1B68     		ldr	r3, [r3]
 278 0172 FF22     		movs	r2, #255
 279 0174 1340     		ands	r3, r2
 280 0176 00E0     		b	.L10
 281              	.L11:
 282              		.loc 1 133 0 discriminator 5
 283 0178 0023     		movs	r3, #0
 284              	.L10:
 285              		.loc 1 133 0 discriminator 8
 286 017a 9422     		movs	r2, #148
 287 017c BA18     		adds	r2, r7, r2
 288 017e 1360     		str	r3, [r2]
 134:Generated_Source\PSoC4/CyFlash.c **** 
 135:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 289              		.loc 1 135 0 is_stmt 1 discriminator 8
 290 0180 9423     		movs	r3, #148
 291 0182 FB18     		adds	r3, r7, r3
 292 0184 1B68     		ldr	r3, [r3]
 293 0186 002B     		cmp	r3, #0
 294 0188 00D0     		beq	.LCB227
 295 018a E8E0     		b	.L29	@long jump
 296              	.LCB227:
 136:Generated_Source\PSoC4/CyFlash.c ****         {
 137:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 138:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 139:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 140:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 141:Generated_Source\PSoC4/CyFlash.c ****             * context.
 142:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 143:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 297              		.loc 1 143 0
 298 018c 9B23     		movs	r3, #155
 299 018e FC18     		adds	r4, r7, r3
 300 0190 FFF7FEFF 		bl	CyEnterCriticalSection
 301 0194 0300     		movs	r3, r0
 302 0196 2370     		strb	r3, [r4]
 144:Generated_Source\PSoC4/CyFlash.c **** 
 145:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 303              		.loc 1 145 0
 304 0198 FFF7FEFF 		bl	CySysFlashClockBackup
 305 019c 0300     		movs	r3, r0
 306 019e 9022     		movs	r2, #144
 307 01a0 BA18     		adds	r2, r7, r2
 308 01a2 1360     		str	r3, [r2]
 146:Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 9


 147:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 148:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 149:Generated_Source\PSoC4/CyFlash.c ****             {
 150:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 151:Generated_Source\PSoC4/CyFlash.c ****             }
 152:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 153:Generated_Source\PSoC4/CyFlash.c **** 
 154:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 309              		.loc 1 154 0
 310 01a4 9423     		movs	r3, #148
 311 01a6 FB18     		adds	r3, r7, r3
 312 01a8 1B68     		ldr	r3, [r3]
 313 01aa 002B     		cmp	r3, #0
 314 01ac 32D1     		bne	.L14
 155:Generated_Source\PSoC4/CyFlash.c ****             {
 156:Generated_Source\PSoC4/CyFlash.c ****                 /* Write Row */
 157:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_RO
 315              		.loc 1 157 0
 316 01ae 0823     		movs	r3, #8
 317 01b0 FB18     		adds	r3, r7, r3
 318 01b2 724A     		ldr	r2, .L31+16
 319 01b4 1A60     		str	r2, [r3]
 158:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 320              		.loc 1 158 0
 321 01b6 0823     		movs	r3, #8
 322 01b8 FB18     		adds	r3, r7, r3
 323 01ba 1A68     		ldr	r2, [r3]
 324 01bc 7B68     		ldr	r3, [r7, #4]
 325 01be 1B04     		lsls	r3, r3, #16
 326 01c0 1A43     		orrs	r2, r3
 327 01c2 0823     		movs	r3, #8
 328 01c4 FB18     		adds	r3, r7, r3
 329 01c6 1A60     		str	r2, [r3]
 159:Generated_Source\PSoC4/CyFlash.c **** 
 160:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 330              		.loc 1 160 0
 331 01c8 694B     		ldr	r3, .L31+4
 332 01ca 0822     		movs	r2, #8
 333 01cc BA18     		adds	r2, r7, r2
 334 01ce 1A60     		str	r2, [r3]
 161:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_RO
 335              		.loc 1 161 0
 336 01d0 684B     		ldr	r3, .L31+8
 337 01d2 6B4A     		ldr	r2, .L31+20
 338 01d4 1A60     		str	r2, [r3]
 162:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 339              		.loc 1 162 0
 340              		.syntax divided
 341              	@ 162 "Generated_Source\PSoC4\CyFlash.c" 1
 342 01d6 C046     		NOP
 343              	
 344              	@ 0 "" 2
 163:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 345              		.loc 1 163 0
 346              		.thumb
 347              		.syntax unified
 348 01d8 654B     		ldr	r3, .L31+4
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 10


 349 01da 1B68     		ldr	r3, [r3]
 350 01dc 1B0F     		lsrs	r3, r3, #28
 351 01de 1A07     		lsls	r2, r3, #28
 352 01e0 F023     		movs	r3, #240
 353 01e2 1B06     		lsls	r3, r3, #24
 354 01e4 9A42     		cmp	r2, r3
 355 01e6 04D1     		bne	.L15
 356              		.loc 1 163 0 is_stmt 0 discriminator 1
 357 01e8 614B     		ldr	r3, .L31+4
 358 01ea 1B68     		ldr	r3, [r3]
 359 01ec FF22     		movs	r2, #255
 360 01ee 1340     		ands	r3, r2
 361 01f0 0DE0     		b	.L16
 362              	.L15:
 363              		.loc 1 163 0 discriminator 2
 364 01f2 5F4B     		ldr	r3, .L31+4
 365 01f4 1B68     		ldr	r3, [r3]
 366 01f6 1B0F     		lsrs	r3, r3, #28
 367 01f8 1A07     		lsls	r2, r3, #28
 368 01fa A023     		movs	r3, #160
 369 01fc 1B06     		lsls	r3, r3, #24
 370 01fe 9A42     		cmp	r2, r3
 371 0200 04D0     		beq	.L17
 372              		.loc 1 163 0 discriminator 4
 373 0202 5B4B     		ldr	r3, .L31+4
 374 0204 1B68     		ldr	r3, [r3]
 375 0206 FF22     		movs	r2, #255
 376 0208 1340     		ands	r3, r2
 377 020a 00E0     		b	.L16
 378              	.L17:
 379              		.loc 1 163 0 discriminator 5
 380 020c 0023     		movs	r3, #0
 381              	.L16:
 382              		.loc 1 163 0 discriminator 8
 383 020e 9422     		movs	r2, #148
 384 0210 BA18     		adds	r2, r7, r2
 385 0212 1360     		str	r3, [r2]
 386              	.L14:
 164:Generated_Source\PSoC4/CyFlash.c ****             }
 165:Generated_Source\PSoC4/CyFlash.c **** 
 166:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_FLASH_CHECKSUM_WORKAROUND)
 167:Generated_Source\PSoC4/CyFlash.c **** 
 168:Generated_Source\PSoC4/CyFlash.c ****                 if ((retValue == CYRET_SUCCESS) && (needChecksumWorkaround != 0u))
 387              		.loc 1 168 0 is_stmt 1
 388 0214 9423     		movs	r3, #148
 389 0216 FB18     		adds	r3, r7, r3
 390 0218 1B68     		ldr	r3, [r3]
 391 021a 002B     		cmp	r3, #0
 392 021c 00D0     		beq	.LCB308
 393 021e 7DE0     		b	.L19	@long jump
 394              	.LCB308:
 395              		.loc 1 168 0 is_stmt 0 discriminator 1
 396 0220 A023     		movs	r3, #160
 397 0222 FB18     		adds	r3, r7, r3
 398 0224 1B68     		ldr	r3, [r3]
 399 0226 002B     		cmp	r3, #0
 400 0228 00D1     		bne	.LCB313
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 11


 401 022a 77E0     		b	.L19	@long jump
 402              	.LCB313:
 169:Generated_Source\PSoC4/CyFlash.c ****                 {
 170:Generated_Source\PSoC4/CyFlash.c ****                     (void)memset((void *)&parameters[2u], 0, CY_FLASH_SIZEOF_ROW);
 403              		.loc 1 170 0 is_stmt 1
 404 022c 0823     		movs	r3, #8
 405 022e FB18     		adds	r3, r7, r3
 406 0230 0833     		adds	r3, r3, #8
 407 0232 8022     		movs	r2, #128
 408 0234 0021     		movs	r1, #0
 409 0236 1800     		movs	r0, r3
 410 0238 FFF7FEFF 		bl	memset
 171:Generated_Source\PSoC4/CyFlash.c ****                     parameters[savedIndex] = savedValue;
 411              		.loc 1 171 0
 412 023c 0823     		movs	r3, #8
 413 023e FB18     		adds	r3, r7, r3
 414 0240 B422     		movs	r2, #180
 415 0242 BA18     		adds	r2, r7, r2
 416 0244 1268     		ldr	r2, [r2]
 417 0246 9200     		lsls	r2, r2, #2
 418 0248 B021     		movs	r1, #176
 419 024a 7918     		adds	r1, r7, r1
 420 024c 0968     		ldr	r1, [r1]
 421 024e D150     		str	r1, [r2, r3]
 172:Generated_Source\PSoC4/CyFlash.c **** 
 173:Generated_Source\PSoC4/CyFlash.c ****                     /* Load Flash Bytes */
 174:Generated_Source\PSoC4/CyFlash.c ****                     parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLA
 422              		.loc 1 174 0
 423 0250 0823     		movs	r3, #8
 424 0252 FB18     		adds	r3, r7, r3
 425 0254 454A     		ldr	r2, .L31
 426 0256 1A60     		str	r2, [r3]
 175:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLA
 176:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLA
 177:Generated_Source\PSoC4/CyFlash.c ****                                      CY_FLASH_KEY_ONE;
 178:Generated_Source\PSoC4/CyFlash.c ****                     parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 427              		.loc 1 178 0
 428 0258 0823     		movs	r3, #8
 429 025a FB18     		adds	r3, r7, r3
 430 025c 7F22     		movs	r2, #127
 431 025e 5A60     		str	r2, [r3, #4]
 179:Generated_Source\PSoC4/CyFlash.c **** 
 180:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 432              		.loc 1 180 0
 433 0260 434B     		ldr	r3, .L31+4
 434 0262 0822     		movs	r2, #8
 435 0264 BA18     		adds	r2, r7, r2
 436 0266 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD
 437              		.loc 1 181 0
 438 0268 424B     		ldr	r3, .L31+8
 439 026a 434A     		ldr	r2, .L31+12
 440 026c 1A60     		str	r2, [r3]
 182:Generated_Source\PSoC4/CyFlash.c ****                     CY_NOP;
 441              		.loc 1 182 0
 442              		.syntax divided
 443              	@ 182 "Generated_Source\PSoC4\CyFlash.c" 1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 12


 444 026e C046     		NOP
 445              	
 446              	@ 0 "" 2
 183:Generated_Source\PSoC4/CyFlash.c ****                     retValue = CY_FLASH_API_RETURN;
 447              		.loc 1 183 0
 448              		.thumb
 449              		.syntax unified
 450 0270 3F4B     		ldr	r3, .L31+4
 451 0272 1B68     		ldr	r3, [r3]
 452 0274 1B0F     		lsrs	r3, r3, #28
 453 0276 1A07     		lsls	r2, r3, #28
 454 0278 F023     		movs	r3, #240
 455 027a 1B06     		lsls	r3, r3, #24
 456 027c 9A42     		cmp	r2, r3
 457 027e 04D1     		bne	.L20
 458              		.loc 1 183 0 is_stmt 0 discriminator 1
 459 0280 3B4B     		ldr	r3, .L31+4
 460 0282 1B68     		ldr	r3, [r3]
 461 0284 FF22     		movs	r2, #255
 462 0286 1340     		ands	r3, r2
 463 0288 0DE0     		b	.L21
 464              	.L20:
 465              		.loc 1 183 0 discriminator 2
 466 028a 394B     		ldr	r3, .L31+4
 467 028c 1B68     		ldr	r3, [r3]
 468 028e 1B0F     		lsrs	r3, r3, #28
 469 0290 1A07     		lsls	r2, r3, #28
 470 0292 A023     		movs	r3, #160
 471 0294 1B06     		lsls	r3, r3, #24
 472 0296 9A42     		cmp	r2, r3
 473 0298 04D0     		beq	.L22
 474              		.loc 1 183 0 discriminator 4
 475 029a 354B     		ldr	r3, .L31+4
 476 029c 1B68     		ldr	r3, [r3]
 477 029e FF22     		movs	r2, #255
 478 02a0 1340     		ands	r3, r2
 479 02a2 00E0     		b	.L21
 480              	.L22:
 481              		.loc 1 183 0 discriminator 5
 482 02a4 0023     		movs	r3, #0
 483              	.L21:
 484              		.loc 1 183 0 discriminator 8
 485 02a6 9422     		movs	r2, #148
 486 02a8 BA18     		adds	r2, r7, r2
 487 02aa 1360     		str	r3, [r2]
 184:Generated_Source\PSoC4/CyFlash.c **** 
 185:Generated_Source\PSoC4/CyFlash.c **** 
 186:Generated_Source\PSoC4/CyFlash.c ****                     if(retValue == CY_SYS_FLASH_SUCCESS)
 488              		.loc 1 186 0 is_stmt 1 discriminator 8
 489 02ac 9423     		movs	r3, #148
 490 02ae FB18     		adds	r3, r7, r3
 491 02b0 1B68     		ldr	r3, [r3]
 492 02b2 002B     		cmp	r3, #0
 493 02b4 32D1     		bne	.L19
 187:Generated_Source\PSoC4/CyFlash.c ****                     {
 188:Generated_Source\PSoC4/CyFlash.c ****                         /* Program Row */
 189:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u]  =
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 13


 494              		.loc 1 189 0
 495 02b6 0823     		movs	r3, #8
 496 02b8 FB18     		adds	r3, r7, r3
 497 02ba 324A     		ldr	r2, .L31+24
 498 02bc 1A60     		str	r2, [r3]
 190:Generated_Source\PSoC4/CyFlash.c ****                             (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_PROGRAM_ROW) <
 191:Generated_Source\PSoC4/CyFlash.c ****                                                     CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_O
 192:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u] |= (uint32)(rowNum << 16u);
 499              		.loc 1 192 0
 500 02be 0823     		movs	r3, #8
 501 02c0 FB18     		adds	r3, r7, r3
 502 02c2 1A68     		ldr	r2, [r3]
 503 02c4 7B68     		ldr	r3, [r7, #4]
 504 02c6 1B04     		lsls	r3, r3, #16
 505 02c8 1A43     		orrs	r2, r3
 506 02ca 0823     		movs	r3, #8
 507 02cc FB18     		adds	r3, r7, r3
 508 02ce 1A60     		str	r2, [r3]
 193:Generated_Source\PSoC4/CyFlash.c **** 
 194:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 509              		.loc 1 194 0
 510 02d0 274B     		ldr	r3, .L31+4
 511 02d2 0822     		movs	r2, #8
 512 02d4 BA18     		adds	r2, r7, r2
 513 02d6 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_
 514              		.loc 1 195 0
 515 02d8 264B     		ldr	r3, .L31+8
 516 02da 2B4A     		ldr	r2, .L31+28
 517 02dc 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/CyFlash.c ****                         CY_NOP;
 518              		.loc 1 196 0
 519              		.syntax divided
 520              	@ 196 "Generated_Source\PSoC4\CyFlash.c" 1
 521 02de C046     		NOP
 522              	
 523              	@ 0 "" 2
 197:Generated_Source\PSoC4/CyFlash.c ****                         retValue = CY_FLASH_API_RETURN;
 524              		.loc 1 197 0
 525              		.thumb
 526              		.syntax unified
 527 02e0 234B     		ldr	r3, .L31+4
 528 02e2 1B68     		ldr	r3, [r3]
 529 02e4 1B0F     		lsrs	r3, r3, #28
 530 02e6 1A07     		lsls	r2, r3, #28
 531 02e8 F023     		movs	r3, #240
 532 02ea 1B06     		lsls	r3, r3, #24
 533 02ec 9A42     		cmp	r2, r3
 534 02ee 04D1     		bne	.L24
 535              		.loc 1 197 0 is_stmt 0 discriminator 1
 536 02f0 1F4B     		ldr	r3, .L31+4
 537 02f2 1B68     		ldr	r3, [r3]
 538 02f4 FF22     		movs	r2, #255
 539 02f6 1340     		ands	r3, r2
 540 02f8 0DE0     		b	.L25
 541              	.L24:
 542              		.loc 1 197 0 discriminator 2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 14


 543 02fa 1D4B     		ldr	r3, .L31+4
 544 02fc 1B68     		ldr	r3, [r3]
 545 02fe 1B0F     		lsrs	r3, r3, #28
 546 0300 1A07     		lsls	r2, r3, #28
 547 0302 A023     		movs	r3, #160
 548 0304 1B06     		lsls	r3, r3, #24
 549 0306 9A42     		cmp	r2, r3
 550 0308 04D0     		beq	.L26
 551              		.loc 1 197 0 discriminator 4
 552 030a 194B     		ldr	r3, .L31+4
 553 030c 1B68     		ldr	r3, [r3]
 554 030e FF22     		movs	r2, #255
 555 0310 1340     		ands	r3, r2
 556 0312 00E0     		b	.L25
 557              	.L26:
 558              		.loc 1 197 0 discriminator 5
 559 0314 0023     		movs	r3, #0
 560              	.L25:
 561              		.loc 1 197 0 discriminator 8
 562 0316 9422     		movs	r2, #148
 563 0318 BA18     		adds	r2, r7, r2
 564 031a 1360     		str	r3, [r2]
 565              	.L19:
 198:Generated_Source\PSoC4/CyFlash.c ****                     }
 199:Generated_Source\PSoC4/CyFlash.c ****                 }
 200:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 201:Generated_Source\PSoC4/CyFlash.c **** 
 202:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 566              		.loc 1 202 0 is_stmt 1
 567 031c 9023     		movs	r3, #144
 568 031e FB18     		adds	r3, r7, r3
 569 0320 1B68     		ldr	r3, [r3]
 570 0322 002B     		cmp	r3, #0
 571 0324 10D1     		bne	.L28
 203:Generated_Source\PSoC4/CyFlash.c ****             {
 204:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 572              		.loc 1 204 0
 573 0326 FFF7FEFF 		bl	CySysFlashClockRestore
 574 032a 0300     		movs	r3, r0
 575 032c 9022     		movs	r2, #144
 576 032e BA18     		adds	r2, r7, r2
 577 0330 1360     		str	r3, [r2]
 205:Generated_Source\PSoC4/CyFlash.c **** 
 206:Generated_Source\PSoC4/CyFlash.c ****                 if(clkCnfRetValue != CY_SYS_FLASH_SUCCESS)
 578              		.loc 1 206 0
 579 0332 9023     		movs	r3, #144
 580 0334 FB18     		adds	r3, r7, r3
 581 0336 1B68     		ldr	r3, [r3]
 582 0338 002B     		cmp	r3, #0
 583 033a 05D0     		beq	.L28
 207:Generated_Source\PSoC4/CyFlash.c ****                 {
 208:Generated_Source\PSoC4/CyFlash.c ****                     retValue = clkCnfRetValue;
 584              		.loc 1 208 0
 585 033c 9023     		movs	r3, #144
 586 033e FB18     		adds	r3, r7, r3
 587 0340 1B68     		ldr	r3, [r3]
 588 0342 9422     		movs	r2, #148
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 15


 589 0344 BA18     		adds	r2, r7, r2
 590 0346 1360     		str	r3, [r2]
 591              	.L28:
 209:Generated_Source\PSoC4/CyFlash.c ****                 }
 210:Generated_Source\PSoC4/CyFlash.c ****             }
 211:Generated_Source\PSoC4/CyFlash.c **** 
 212:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 592              		.loc 1 212 0
 593 0348 9B23     		movs	r3, #155
 594 034a FB18     		adds	r3, r7, r3
 595 034c 1B78     		ldrb	r3, [r3]
 596 034e 1800     		movs	r0, r3
 597 0350 FFF7FEFF 		bl	CyExitCriticalSection
 135:Generated_Source\PSoC4/CyFlash.c ****         {
 598              		.loc 1 135 0
 599 0354 03E0     		b	.L29
 600              	.L2:
 213:Generated_Source\PSoC4/CyFlash.c ****         }
 214:Generated_Source\PSoC4/CyFlash.c ****     }
 215:Generated_Source\PSoC4/CyFlash.c ****     else
 216:Generated_Source\PSoC4/CyFlash.c ****     {
 217:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 601              		.loc 1 217 0
 602 0356 0423     		movs	r3, #4
 603 0358 9422     		movs	r2, #148
 604 035a BA18     		adds	r2, r7, r2
 605 035c 1360     		str	r3, [r2]
 606              	.L29:
 218:Generated_Source\PSoC4/CyFlash.c ****     }
 219:Generated_Source\PSoC4/CyFlash.c **** 
 220:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 607              		.loc 1 220 0
 608 035e 9423     		movs	r3, #148
 609 0360 FB18     		adds	r3, r7, r3
 610 0362 1B68     		ldr	r3, [r3]
 221:Generated_Source\PSoC4/CyFlash.c **** }
 611              		.loc 1 221 0
 612 0364 1800     		movs	r0, r3
 613 0366 BD46     		mov	sp, r7
 614 0368 2FB0     		add	sp, sp, #188
 615              		@ sp needed
 616 036a 90BD     		pop	{r4, r7, pc}
 617              	.L32:
 618              		.align	2
 619              	.L31:
 620 036c B6D70000 		.word	55222
 621 0370 08000040 		.word	1073741832
 622 0374 04000040 		.word	1073741828
 623 0378 04000080 		.word	-2147483644
 624 037c B6D80000 		.word	55478
 625 0380 05000080 		.word	-2147483643
 626 0384 B6D90000 		.word	55734
 627 0388 06000080 		.word	-2147483642
 628              		.cfi_endproc
 629              	.LFE0:
 630              		.size	CySysFlashWriteRow, .-CySysFlashWriteRow
 631              		.section	.text.CySysFlashSetWaitCycles,"ax",%progbits
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 16


 632              		.align	2
 633              		.global	CySysFlashSetWaitCycles
 634              		.code	16
 635              		.thumb_func
 636              		.type	CySysFlashSetWaitCycles, %function
 637              	CySysFlashSetWaitCycles:
 638              	.LFB1:
 222:Generated_Source\PSoC4/CyFlash.c **** 
 223:Generated_Source\PSoC4/CyFlash.c **** 
 224:Generated_Source\PSoC4/CyFlash.c **** 
 225:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u))
 226:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashStartWriteRow
 228:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 229:Generated_Source\PSoC4/CyFlash.c **** *
 230:Generated_Source\PSoC4/CyFlash.c **** * Initiates a write to a row of Flash. A call to this API is non-blocking. 
 231:Generated_Source\PSoC4/CyFlash.c **** * Use CySysFlashResumeWriteRow() to resume flash writes and 
 232:Generated_Source\PSoC4/CyFlash.c **** * CySysFlashGetWriteRowStatus() to ascertain status of the write operation.
 233:Generated_Source\PSoC4/CyFlash.c **** *
 234:Generated_Source\PSoC4/CyFlash.c **** * The devices require HFCLK to be sourced by 48 MHz IMO during flash write.
 235:Generated_Source\PSoC4/CyFlash.c **** * This API will modify IMO configuration; it can be later restored to original
 236:Generated_Source\PSoC4/CyFlash.c **** * configuration by calling \ref CySysFlashGetWriteRowStatus().
 237:Generated_Source\PSoC4/CyFlash.c **** *
 238:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 239:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 240:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 241:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 242:Generated_Source\PSoC4/CyFlash.c **** *    
 243:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
 244:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
 245:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
 246:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
 247:Generated_Source\PSoC4/CyFlash.c **** *
 248:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 249:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 250:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
 251:Generated_Source\PSoC4/CyFlash.c **** * details.
 252:Generated_Source\PSoC4/CyFlash.c **** *
 253:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 254:Generated_Source\PSoC4/CyFlash.c **** *
 255:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashStartWriteRow(uint32 rowNum, const uint8 rowData[])
 257:Generated_Source\PSoC4/CyFlash.c **** {
 258:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 259:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
 260:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 261:Generated_Source\PSoC4/CyFlash.c **** 
 262:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
 263:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 264:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */    
 265:Generated_Source\PSoC4/CyFlash.c **** 
 266:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
 267:Generated_Source\PSoC4/CyFlash.c ****     {
 268:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
 269:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 270:Generated_Source\PSoC4/CyFlash.c **** 
 271:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 17


 272:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 273:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 274:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 275:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 276:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 277:Generated_Source\PSoC4/CyFlash.c **** 
 278:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 279:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 280:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 281:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 282:Generated_Source\PSoC4/CyFlash.c **** 
 283:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 284:Generated_Source\PSoC4/CyFlash.c ****         {
 285:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 286:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 287:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 288:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 289:Generated_Source\PSoC4/CyFlash.c ****             * context.
 290:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 291:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 292:Generated_Source\PSoC4/CyFlash.c **** 
 293:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 294:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 295:Generated_Source\PSoC4/CyFlash.c ****             
 296:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 297:Generated_Source\PSoC4/CyFlash.c ****             {
 298:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 299:Generated_Source\PSoC4/CyFlash.c ****             }
 300:Generated_Source\PSoC4/CyFlash.c ****         #else
 301:Generated_Source\PSoC4/CyFlash.c ****             (void)CySysFlashClockBackup();
 302:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 303:Generated_Source\PSoC4/CyFlash.c **** 
 304:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 305:Generated_Source\PSoC4/CyFlash.c ****             {
 306:Generated_Source\PSoC4/CyFlash.c ****                 /* Non-blocking Write Row */
 307:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_NON_BLOC
 308:Generated_Source\PSoC4/CyFlash.c ****                                                         CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_K
 309:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 310:Generated_Source\PSoC4/CyFlash.c **** 
 311:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 312:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_NON_BLOC
 313:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 314:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 315:Generated_Source\PSoC4/CyFlash.c ****             }
 316:Generated_Source\PSoC4/CyFlash.c **** 
 317:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 318:Generated_Source\PSoC4/CyFlash.c ****         }
 319:Generated_Source\PSoC4/CyFlash.c ****     }
 320:Generated_Source\PSoC4/CyFlash.c ****     else
 321:Generated_Source\PSoC4/CyFlash.c ****     {
 322:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 323:Generated_Source\PSoC4/CyFlash.c ****     }
 324:Generated_Source\PSoC4/CyFlash.c **** 
 325:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 326:Generated_Source\PSoC4/CyFlash.c **** }
 327:Generated_Source\PSoC4/CyFlash.c **** 
 328:Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 18


 329:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 330:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashGetWriteRowStatus
 331:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 332:Generated_Source\PSoC4/CyFlash.c **** *
 333:Generated_Source\PSoC4/CyFlash.c **** * Returns the current status of the flash write operation.
 334:Generated_Source\PSoC4/CyFlash.c **** *
 335:Generated_Source\PSoC4/CyFlash.c **** ** \note The non-blocking operation does not return success status 
 336:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 337:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 338:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 339:Generated_Source\PSoC4/CyFlash.c **** * Calling this API before starting a non-blocking write row operation 
 340:Generated_Source\PSoC4/CyFlash.c **** * using the \ref CySysFlashStartWriteRow() API will cause improper operation.
 341:Generated_Source\PSoC4/CyFlash.c **** *
 342:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 343:Generated_Source\PSoC4/CyFlash.c **** *
 344:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 345:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashGetWriteRowStatus(void)
 346:Generated_Source\PSoC4/CyFlash.c **** {
 347:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 348:Generated_Source\PSoC4/CyFlash.c **** 
 349:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 350:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 351:Generated_Source\PSoC4/CyFlash.c **** 
 352:Generated_Source\PSoC4/CyFlash.c ****     (void) CySysFlashClockRestore();
 353:Generated_Source\PSoC4/CyFlash.c **** 
 354:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 355:Generated_Source\PSoC4/CyFlash.c **** }
 356:Generated_Source\PSoC4/CyFlash.c **** 
 357:Generated_Source\PSoC4/CyFlash.c **** 
 358:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashResumeWriteRow
 360:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 361:Generated_Source\PSoC4/CyFlash.c **** *
 362:Generated_Source\PSoC4/CyFlash.c **** * This API must be called, once the SPC interrupt is triggered to complete the
 363:Generated_Source\PSoC4/CyFlash.c **** * non-blocking operation. It is advised not to prolong calling this API for
 364:Generated_Source\PSoC4/CyFlash.c **** * more than 25 ms.
 365:Generated_Source\PSoC4/CyFlash.c **** *
 366:Generated_Source\PSoC4/CyFlash.c **** * The non-blocking write row API \ref CySysFlashStartWriteRow() requires that
 367:Generated_Source\PSoC4/CyFlash.c **** * this API be called 3 times to complete the write. This can be done by
 368:Generated_Source\PSoC4/CyFlash.c **** * configuring SPCIF interrupt and placing a call to this API.
 369:Generated_Source\PSoC4/CyFlash.c **** *
 370:Generated_Source\PSoC4/CyFlash.c **** * For CM0 based device, a non-blocking call to program a row of macro 0
 371:Generated_Source\PSoC4/CyFlash.c **** * requires the user to set the CPUSS_CONFIG.VECS_IN_RAM bit so that the
 372:Generated_Source\PSoC4/CyFlash.c **** * interrupt vector for the SPC is fetched from the SRAM rather than the FLASH.
 373:Generated_Source\PSoC4/CyFlash.c **** *
 374:Generated_Source\PSoC4/CyFlash.c **** * For CM0+ based device, if the user wants to keep the vector table in flash
 375:Generated_Source\PSoC4/CyFlash.c **** * when performing non-blocking flash write then they need to make sure the
 376:Generated_Source\PSoC4/CyFlash.c **** * vector table is placed in the flash macro which is not getting programmed by
 377:Generated_Source\PSoC4/CyFlash.c **** * configuring the VTOR register.
 378:Generated_Source\PSoC4/CyFlash.c **** *
 379:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 380:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last Resume API is complete. 
 381:Generated_Source\PSoC4/CyFlash.c **** * The CPUSS_SYSARG register will be reflecting the SRAM address during an 
 382:Generated_Source\PSoC4/CyFlash.c **** * ongoing non-blocking operation.
 383:Generated_Source\PSoC4/CyFlash.c **** *
 384:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 385:Generated_Source\PSoC4/CyFlash.c **** *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 19


 386:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 387:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashResumeWriteRow(void)
 388:Generated_Source\PSoC4/CyFlash.c **** {
 389:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 390:Generated_Source\PSoC4/CyFlash.c ****     static volatile uint32 parameters[1u];
 391:Generated_Source\PSoC4/CyFlash.c **** 
 392:Generated_Source\PSoC4/CyFlash.c ****     /* Resume */
 393:Generated_Source\PSoC4/CyFlash.c ****     parameters[0u] = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING) 
 394:Generated_Source\PSoC4/CyFlash.c ****                                          CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_ONE);
 395:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 396:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING;
 397:Generated_Source\PSoC4/CyFlash.c ****     
 398:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 399:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 400:Generated_Source\PSoC4/CyFlash.c ****     
 401:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 402:Generated_Source\PSoC4/CyFlash.c **** }
 403:Generated_Source\PSoC4/CyFlash.c **** 
 404:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u)) */
 405:Generated_Source\PSoC4/CyFlash.c **** 
 406:Generated_Source\PSoC4/CyFlash.c **** 
 407:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 408:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashSetWaitCycles
 409:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 410:Generated_Source\PSoC4/CyFlash.c **** *
 411:Generated_Source\PSoC4/CyFlash.c **** * Sets the number of clock cycles the cache will wait before it samples data
 412:Generated_Source\PSoC4/CyFlash.c **** * coming back from Flash. This function must be called before increasing the
 413:Generated_Source\PSoC4/CyFlash.c **** * SYSCLK clock frequency. It can optionally be called after lowering SYSCLK
 414:Generated_Source\PSoC4/CyFlash.c **** * clock frequency in order to improve the CPU performance.
 415:Generated_Source\PSoC4/CyFlash.c **** *
 416:Generated_Source\PSoC4/CyFlash.c **** * \param freq The System clock frequency in MHz.
 417:Generated_Source\PSoC4/CyFlash.c **** *
 418:Generated_Source\PSoC4/CyFlash.c **** * \note Invalid frequency will be ignored in Release mode and the CPU will be
 419:Generated_Source\PSoC4/CyFlash.c **** * halted if project is compiled in Debug mode.
 420:Generated_Source\PSoC4/CyFlash.c **** *
 421:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 422:Generated_Source\PSoC4/CyFlash.c **** void CySysFlashSetWaitCycles(uint32 freq)
 423:Generated_Source\PSoC4/CyFlash.c **** {
 639              		.loc 1 423 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 16
 642              		@ frame_needed = 1, uses_anonymous_args = 0
 643 0000 90B5     		push	{r4, r7, lr}
 644              		.cfi_def_cfa_offset 12
 645              		.cfi_offset 4, -12
 646              		.cfi_offset 7, -8
 647              		.cfi_offset 14, -4
 648 0002 85B0     		sub	sp, sp, #20
 649              		.cfi_def_cfa_offset 32
 650 0004 00AF     		add	r7, sp, #0
 651              		.cfi_def_cfa_register 7
 652 0006 7860     		str	r0, [r7, #4]
 424:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 425:Generated_Source\PSoC4/CyFlash.c **** 
 426:Generated_Source\PSoC4/CyFlash.c ****     interruptState = CyEnterCriticalSection();
 653              		.loc 1 426 0
 654 0008 0F23     		movs	r3, #15
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 20


 655 000a FC18     		adds	r4, r7, r3
 656 000c FFF7FEFF 		bl	CyEnterCriticalSection
 657 0010 0300     		movs	r3, r0
 658 0012 2370     		strb	r3, [r4]
 427:Generated_Source\PSoC4/CyFlash.c **** 
 428:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_IP_CPUSS)
 429:Generated_Source\PSoC4/CyFlash.c **** 
 430:Generated_Source\PSoC4/CyFlash.c ****         if ( freq <= CY_FLASH_SYSCLK_BOUNDARY_MHZ )
 659              		.loc 1 430 0
 660 0014 7B68     		ldr	r3, [r7, #4]
 661 0016 182B     		cmp	r3, #24
 662 0018 06D8     		bhi	.L34
 431:Generated_Source\PSoC4/CyFlash.c ****         {
 432:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_FLASH_WAIT_STATE_EN);
 663              		.loc 1 432 0
 664 001a 0C4B     		ldr	r3, .L36
 665 001c 0B4A     		ldr	r2, .L36
 666 001e 1268     		ldr	r2, [r2]
 667 0020 0B49     		ldr	r1, .L36+4
 668 0022 0A40     		ands	r2, r1
 669 0024 1A60     		str	r2, [r3]
 670 0026 06E0     		b	.L35
 671              	.L34:
 433:Generated_Source\PSoC4/CyFlash.c ****         }
 434:Generated_Source\PSoC4/CyFlash.c ****         else
 435:Generated_Source\PSoC4/CyFlash.c ****         {
 436:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG |= CY_FLASH_WAIT_STATE_EN;
 672              		.loc 1 436 0
 673 0028 084B     		ldr	r3, .L36
 674 002a 084A     		ldr	r2, .L36
 675 002c 1268     		ldr	r2, [r2]
 676 002e 8021     		movs	r1, #128
 677 0030 C902     		lsls	r1, r1, #11
 678 0032 0A43     		orrs	r2, r1
 679 0034 1A60     		str	r2, [r3]
 680              	.L35:
 437:Generated_Source\PSoC4/CyFlash.c ****         }
 438:Generated_Source\PSoC4/CyFlash.c ****     #else
 439:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_CPUSS_FLASHC_PRESENT)
 440:Generated_Source\PSoC4/CyFlash.c ****             /* CY_IP_FM and CY_IP_FS */
 441:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_0_FREQ_MAX)
 442:Generated_Source\PSoC4/CyFlash.c ****             {
 443:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_0_V
 444:Generated_Source\PSoC4/CyFlash.c ****             } else
 445:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_1_FREQ_MAX)
 446:Generated_Source\PSoC4/CyFlash.c ****             {
 447:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_1_V
 448:Generated_Source\PSoC4/CyFlash.c ****             } else
 449:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_IP_FMLT || CY_IP_FSLT)
 450:Generated_Source\PSoC4/CyFlash.c ****                 if (freq <= CY_FLASH_CTL_WS_2_FREQ_MAX)
 451:Generated_Source\PSoC4/CyFlash.c ****                 {
 452:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS
 453:Generated_Source\PSoC4/CyFlash.c ****                 }
 454:Generated_Source\PSoC4/CyFlash.c ****                 else
 455:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_IP_FMLT || CY_IP_FSLT) */
 456:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_CPUSS_FLASHC_PRESENT) */
 457:Generated_Source\PSoC4/CyFlash.c ****         {
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 21


 458:Generated_Source\PSoC4/CyFlash.c ****             /* Halt CPU in debug mode if frequency is invalid */
 459:Generated_Source\PSoC4/CyFlash.c ****             CYASSERT(0u != 0u);
 460:Generated_Source\PSoC4/CyFlash.c ****         }
 461:Generated_Source\PSoC4/CyFlash.c **** 
 462:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_IP_CPUSS) */
 463:Generated_Source\PSoC4/CyFlash.c **** 
 464:Generated_Source\PSoC4/CyFlash.c ****     CyExitCriticalSection(interruptState);
 681              		.loc 1 464 0
 682 0036 0F23     		movs	r3, #15
 683 0038 FB18     		adds	r3, r7, r3
 684 003a 1B78     		ldrb	r3, [r3]
 685 003c 1800     		movs	r0, r3
 686 003e FFF7FEFF 		bl	CyExitCriticalSection
 465:Generated_Source\PSoC4/CyFlash.c **** }
 687              		.loc 1 465 0
 688 0042 C046     		nop
 689 0044 BD46     		mov	sp, r7
 690 0046 05B0     		add	sp, sp, #20
 691              		@ sp needed
 692 0048 90BD     		pop	{r4, r7, pc}
 693              	.L37:
 694 004a C046     		.align	2
 695              	.L36:
 696 004c 00010B40 		.word	1074462976
 697 0050 FFFFFBFF 		.word	-262145
 698              		.cfi_endproc
 699              	.LFE1:
 700              		.size	CySysFlashSetWaitCycles, .-CySysFlashSetWaitCycles
 701              		.section	.text.CySysFlashClockBackup,"ax",%progbits
 702              		.align	2
 703              		.code	16
 704              		.thumb_func
 705              		.type	CySysFlashClockBackup, %function
 706              	CySysFlashClockBackup:
 707              	.LFB2:
 466:Generated_Source\PSoC4/CyFlash.c **** 
 467:Generated_Source\PSoC4/CyFlash.c **** 
 468:Generated_Source\PSoC4/CyFlash.c **** #if (CY_SFLASH_XTRA_ROWS)
 469:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 470:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysSFlashWriteUserRow
 471:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 472:Generated_Source\PSoC4/CyFlash.c **** *
 473:Generated_Source\PSoC4/CyFlash.c **** * Writes data to a row of SFlash user configurable area.
 474:Generated_Source\PSoC4/CyFlash.c **** *
 475:Generated_Source\PSoC4/CyFlash.c **** * This API is applicable for PSoC 4100 BLE, PSoC 4200 BLE, PSoC 4100M,
 476:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200M, and PSoC 4200L family of devices.
 477:Generated_Source\PSoC4/CyFlash.c **** *
 478:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The flash row number. The number of the
 479:Generated_Source\PSoC4/CyFlash.c **** * flash rows is defined by the CY_SFLASH_NUMBER_USERROWS macro for the selected
 480:Generated_Source\PSoC4/CyFlash.c **** * device. Valid range is 0-3. Refer to the device TRM for details.
 481:Generated_Source\PSoC4/CyFlash.c **** *
 482:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 483:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 484:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_SFLASH_SIZEOF_USERROW macro. Refer to the device TRM for the
 485:Generated_Source\PSoC4/CyFlash.c **** * details.
 486:Generated_Source\PSoC4/CyFlash.c **** *
 487:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 22


 488:Generated_Source\PSoC4/CyFlash.c **** *
 489:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 490:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysSFlashWriteUserRow(uint32 rowNum, const uint8 rowData[])
 491:Generated_Source\PSoC4/CyFlash.c **** {
 492:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 493:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 494:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA)/4u];
 495:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 496:Generated_Source\PSoC4/CyFlash.c **** 
 497:Generated_Source\PSoC4/CyFlash.c **** 
 498:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_SFLASH_NUMBER_USERROWS) && (rowData != 0u))
 499:Generated_Source\PSoC4/CyFlash.c ****     {
 500:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 501:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 502:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 503:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 504:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 505:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 506:Generated_Source\PSoC4/CyFlash.c **** 
 507:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 508:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 509:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 510:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 511:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 512:Generated_Source\PSoC4/CyFlash.c **** 
 513:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 514:Generated_Source\PSoC4/CyFlash.c ****         {
 515:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 516:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 517:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 518:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 519:Generated_Source\PSoC4/CyFlash.c ****             * context.
 520:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 521:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 522:Generated_Source\PSoC4/CyFlash.c **** 
 523:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 524:Generated_Source\PSoC4/CyFlash.c **** 
 525:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 526:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 527:Generated_Source\PSoC4/CyFlash.c ****             {
 528:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 529:Generated_Source\PSoC4/CyFlash.c ****             }
 530:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 531:Generated_Source\PSoC4/CyFlash.c **** 
 532:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 533:Generated_Source\PSoC4/CyFlash.c ****             {
 534:Generated_Source\PSoC4/CyFlash.c ****                 /* Write User Sflash Row */
 535:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_SF
 536:Generated_Source\PSoC4/CyFlash.c ****                 parameters[1u] = (uint32) rowNum;
 537:Generated_Source\PSoC4/CyFlash.c **** 
 538:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 539:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_SF
 540:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 541:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 542:Generated_Source\PSoC4/CyFlash.c ****             }
 543:Generated_Source\PSoC4/CyFlash.c **** 
 544:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 23


 545:Generated_Source\PSoC4/CyFlash.c ****             {
 546:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 547:Generated_Source\PSoC4/CyFlash.c ****             }
 548:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 549:Generated_Source\PSoC4/CyFlash.c ****         }
 550:Generated_Source\PSoC4/CyFlash.c ****     }
 551:Generated_Source\PSoC4/CyFlash.c ****     else
 552:Generated_Source\PSoC4/CyFlash.c ****     {
 553:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 554:Generated_Source\PSoC4/CyFlash.c ****     }
 555:Generated_Source\PSoC4/CyFlash.c **** 
 556:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 557:Generated_Source\PSoC4/CyFlash.c **** }
 558:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_SFLASH_XTRA_ROWS) */
 559:Generated_Source\PSoC4/CyFlash.c **** 
 560:Generated_Source\PSoC4/CyFlash.c **** 
 561:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 562:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockBackup
 563:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 564:Generated_Source\PSoC4/CyFlash.c **** *
 565:Generated_Source\PSoC4/CyFlash.c **** * Backups the device clock configuration.
 566:Generated_Source\PSoC4/CyFlash.c **** *
 567:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 568:Generated_Source\PSoC4/CyFlash.c **** *
 569:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 570:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void)
 571:Generated_Source\PSoC4/CyFlash.c **** {
 708              		.loc 1 571 0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 8
 711              		@ frame_needed = 1, uses_anonymous_args = 0
 712 0000 80B5     		push	{r7, lr}
 713              		.cfi_def_cfa_offset 8
 714              		.cfi_offset 7, -8
 715              		.cfi_offset 14, -4
 716 0002 82B0     		sub	sp, sp, #8
 717              		.cfi_def_cfa_offset 16
 718 0004 00AF     		add	r7, sp, #0
 719              		.cfi_def_cfa_register 7
 572:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 720              		.loc 1 572 0
 721 0006 0023     		movs	r3, #0
 722 0008 7B60     		str	r3, [r7, #4]
 573:Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
 574:Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
 575:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 576:Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 577:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 578:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 579:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 580:Generated_Source\PSoC4/CyFlash.c **** 
 581:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 582:Generated_Source\PSoC4/CyFlash.c **** 
 583:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 584:Generated_Source\PSoC4/CyFlash.c ****     * Preserve IMO configuration that could be changed during
 585:Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 586:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 24


 587:Generated_Source\PSoC4/CyFlash.c ****     cySysFlashBackup.imoConfigReg = CY_SYS_CLK_IMO_CONFIG_REG;
 723              		.loc 1 587 0
 724 000a 044B     		ldr	r3, .L40
 725 000c 1A68     		ldr	r2, [r3]
 726 000e 044B     		ldr	r3, .L40+4
 727 0010 1A60     		str	r2, [r3]
 588:Generated_Source\PSoC4/CyFlash.c **** 
 589:Generated_Source\PSoC4/CyFlash.c **** #else   /* (CY_IP_FMLT) */
 590:Generated_Source\PSoC4/CyFlash.c **** 
 591:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 592:Generated_Source\PSoC4/CyFlash.c **** 
 593:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 594:Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings backup for the PSOC4 4000 devices (the
 595:Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 596:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 597:Generated_Source\PSoC4/CyFlash.c **** 
 598:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 599:Generated_Source\PSoC4/CyFlash.c ****         * The registers listed below are modified by CySysFlashClockConfig().
 600:Generated_Source\PSoC4/CyFlash.c ****         *
 601:Generated_Source\PSoC4/CyFlash.c ****         * The registers to be saved:
 602:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_CONFIG_REG - IMO enable state.
 603:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_SELECT_REG     - HFCLK source, divider, pump source. Save
 604:Generated_Source\PSoC4/CyFlash.c ****         *                               entire register as it can be directly
 605:Generated_Source\PSoC4/CyFlash.c ****         *                               written on restore (no special
 606:Generated_Source\PSoC4/CyFlash.c ****         *                               requirements).
 607:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_SELECT_REG - Save IMO frequency.
 608:Generated_Source\PSoC4/CyFlash.c ****         *
 609:Generated_Source\PSoC4/CyFlash.c ****         * The registers not to be saved:
 610:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM1_REG  - No need to save. Function of frequency.
 611:Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 612:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM3_REG  - No need to save. Function of frequency.
 613:Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 614:Generated_Source\PSoC4/CyFlash.c ****         * - REG_CPUSS_FLASH_CTL       - Flash wait cycles. Unmodified due to system
 615:Generated_Source\PSoC4/CyFlash.c ****         *                               clock 16 MHz limit.
 616:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 617:Generated_Source\PSoC4/CyFlash.c **** 
 618:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkSelectReg = CY_SYS_CLK_SELECT_REG;
 619:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoEna    = CY_SYS_CLK_IMO_CONFIG_REG & CY_SYS_CLK_IMO_CONFIG_ENABLE;
 620:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoFreq   = CY_SYS_CLK_IMO_MIN_FREQ_MHZ + (CY_SYS_CLK_IMO_SELECT_REG <<
 621:Generated_Source\PSoC4/CyFlash.c **** 
 622:Generated_Source\PSoC4/CyFlash.c ****     #else
 623:Generated_Source\PSoC4/CyFlash.c **** 
 624:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 625:Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Backup System Call */
 626:Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
 627:Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_BACKUP) <<  CY_FLASH_PARAM_KEY_
 628:Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 629:Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
 630:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 631:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_BACKUP;
 632:Generated_Source\PSoC4/CyFlash.c ****             CY_NOP;
 633:Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
 634:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 635:Generated_Source\PSoC4/CyFlash.c **** 
 636:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 637:Generated_Source\PSoC4/CyFlash.c **** 
 638:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 25


 639:Generated_Source\PSoC4/CyFlash.c **** 
 640:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 728              		.loc 1 640 0
 729 0012 7B68     		ldr	r3, [r7, #4]
 641:Generated_Source\PSoC4/CyFlash.c **** }
 730              		.loc 1 641 0
 731 0014 1800     		movs	r0, r3
 732 0016 BD46     		mov	sp, r7
 733 0018 02B0     		add	sp, sp, #8
 734              		@ sp needed
 735 001a 80BD     		pop	{r7, pc}
 736              	.L41:
 737              		.align	2
 738              	.L40:
 739 001c 08010B40 		.word	1074462984
 740 0020 00000000 		.word	cySysFlashBackup
 741              		.cfi_endproc
 742              	.LFE2:
 743              		.size	CySysFlashClockBackup, .-CySysFlashClockBackup
 744              		.section	.text.CySysFlashClockRestore,"ax",%progbits
 745              		.align	2
 746              		.code	16
 747              		.thumb_func
 748              		.type	CySysFlashClockRestore, %function
 749              	CySysFlashClockRestore:
 750              	.LFB3:
 642:Generated_Source\PSoC4/CyFlash.c **** 
 643:Generated_Source\PSoC4/CyFlash.c **** 
 644:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
 645:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockConfig
 647:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyFlash.c **** *
 649:Generated_Source\PSoC4/CyFlash.c **** * Configures the device clocks for the flash writing.
 650:Generated_Source\PSoC4/CyFlash.c **** *
 651:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 652:Generated_Source\PSoC4/CyFlash.c **** *
 653:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 654:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockConfig(void)
 655:Generated_Source\PSoC4/CyFlash.c **** {
 656:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 657:Generated_Source\PSoC4/CyFlash.c **** 
 658:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 659:Generated_Source\PSoC4/CyFlash.c ****     * The FM-Lite IP uses the IMO at 48MHz for the pump clock and SPC timer
 660:Generated_Source\PSoC4/CyFlash.c ****     * clock. The PUMP_SEL and HF clock must be set to IMO before calling Flash
 661:Generated_Source\PSoC4/CyFlash.c ****     * write or erase operation.
 662:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 663:Generated_Source\PSoC4/CyFlash.c **** #if (CY_PSOC4_4000)
 664:Generated_Source\PSoC4/CyFlash.c **** 
 665:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 666:Generated_Source\PSoC4/CyFlash.c ****     * Perform firmware clock settings setup for the PSOC4 4000 devices (the
 667:Generated_Source\PSoC4/CyFlash.c ****     * corresponding system call is not reliable):
 668:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO frequency should be 48 MHz
 669:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be source for the HFCLK
 670:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be the source for the charge pump clock
 671:Generated_Source\PSoC4/CyFlash.c ****     *
 672:Generated_Source\PSoC4/CyFlash.c ****     * Note The structure members used below are initialized by
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 26


 673:Generated_Source\PSoC4/CyFlash.c ****     * the CySysFlashClockBackup() function.
 674:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 675:Generated_Source\PSoC4/CyFlash.c ****     if ((cySysFlashBackup.clkImoFreq != 48u) ||
 676:Generated_Source\PSoC4/CyFlash.c ****         ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCLK_IM
 677:Generated_Source\PSoC4/CyFlash.c ****         (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELECT_P
 678:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 679:Generated_Source\PSoC4/CyFlash.c ****     {
 680:Generated_Source\PSoC4/CyFlash.c ****         /***********************************************************************
 681:Generated_Source\PSoC4/CyFlash.c ****          Set HFCLK divider to divide-by-4 to ensure that System clock frequency
 682:Generated_Source\PSoC4/CyFlash.c ****         * is within the valid limit (16 MHz for the PSoC4 4000).
 683:Generated_Source\PSoC4/CyFlash.c ****         ***********************************************************************/
 684:Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDiv(CY_SYS_CLK_HFCLK_DIV_4);
 685:Generated_Source\PSoC4/CyFlash.c **** 
 686:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO frequency should be 48 MHz */
 687:Generated_Source\PSoC4/CyFlash.c ****         if (cySysFlashBackup.clkImoFreq != 48u)
 688:Generated_Source\PSoC4/CyFlash.c ****         {
 689:Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteImoFreq(48u);
 690:Generated_Source\PSoC4/CyFlash.c ****         }
 691:Generated_Source\PSoC4/CyFlash.c ****         CySysClkImoStart();
 692:Generated_Source\PSoC4/CyFlash.c **** 
 693:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be source for the HFCLK */
 694:Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO);
 695:Generated_Source\PSoC4/CyFlash.c **** 
 696:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be the source for the charge pump clock */
 697:Generated_Source\PSoC4/CyFlash.c ****         CY_SYS_CLK_SELECT_REG =  (CY_SYS_CLK_SELECT_REG &
 698:Generated_Source\PSoC4/CyFlash.c ****             ((uint32)~(uint32)(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT)
 699:Generated_Source\PSoC4/CyFlash.c ****             ((uint32)((uint32)1u << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT));
 700:Generated_Source\PSoC4/CyFlash.c ****     }
 701:Generated_Source\PSoC4/CyFlash.c **** 
 702:Generated_Source\PSoC4/CyFlash.c **** #else
 703:Generated_Source\PSoC4/CyFlash.c **** 
 704:Generated_Source\PSoC4/CyFlash.c ****     /* FM-Lite Clock Configuration */
 705:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSARG_REG =
 706:Generated_Source\PSoC4/CyFlash.c ****         (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_CONFIG) <<  CY_FLASH_PARAM_KEY_TWO_OFFS
 707:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_KEY_ONE);
 708:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_CONFIG;
 709:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 710:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 711:Generated_Source\PSoC4/CyFlash.c **** 
 712:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_PSOC4_4000) */
 713:Generated_Source\PSoC4/CyFlash.c **** 
 714:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 715:Generated_Source\PSoC4/CyFlash.c **** }
 716:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 717:Generated_Source\PSoC4/CyFlash.c **** 
 718:Generated_Source\PSoC4/CyFlash.c **** 
 719:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockRestore
 721:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 722:Generated_Source\PSoC4/CyFlash.c **** *
 723:Generated_Source\PSoC4/CyFlash.c **** * Restores the device clock configuration.
 724:Generated_Source\PSoC4/CyFlash.c **** *
 725:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 726:Generated_Source\PSoC4/CyFlash.c **** *
 727:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 728:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void)
 729:Generated_Source\PSoC4/CyFlash.c **** {
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 27


 751              		.loc 1 729 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 1, uses_anonymous_args = 0
 755 0000 80B5     		push	{r7, lr}
 756              		.cfi_def_cfa_offset 8
 757              		.cfi_offset 7, -8
 758              		.cfi_offset 14, -4
 759 0002 82B0     		sub	sp, sp, #8
 760              		.cfi_def_cfa_offset 16
 761 0004 00AF     		add	r7, sp, #0
 762              		.cfi_def_cfa_register 7
 730:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 763              		.loc 1 730 0
 764 0006 0023     		movs	r3, #0
 765 0008 7B60     		str	r3, [r7, #4]
 731:Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
 732:Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
 733:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 734:Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 735:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 736:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 737:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 738:Generated_Source\PSoC4/CyFlash.c **** 
 739:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 740:Generated_Source\PSoC4/CyFlash.c **** 
 741:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 742:Generated_Source\PSoC4/CyFlash.c ****     * Restore IMO configuration that could be changed during
 743:Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 744:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
 745:Generated_Source\PSoC4/CyFlash.c ****     CY_SYS_CLK_IMO_CONFIG_REG = cySysFlashBackup.imoConfigReg;
 766              		.loc 1 745 0
 767 000a 044A     		ldr	r2, .L44
 768 000c 044B     		ldr	r3, .L44+4
 769 000e 1B68     		ldr	r3, [r3]
 770 0010 1360     		str	r3, [r2]
 746:Generated_Source\PSoC4/CyFlash.c **** 
 747:Generated_Source\PSoC4/CyFlash.c **** #else
 748:Generated_Source\PSoC4/CyFlash.c **** 
 749:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 750:Generated_Source\PSoC4/CyFlash.c **** 
 751:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 752:Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings restore for the PSOC4 4000 devices (the
 753:Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 754:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 755:Generated_Source\PSoC4/CyFlash.c **** 
 756:Generated_Source\PSoC4/CyFlash.c ****         /* Restore clock settings */
 757:Generated_Source\PSoC4/CyFlash.c ****         if ((cySysFlashBackup.clkImoFreq != 48u) ||
 758:Generated_Source\PSoC4/CyFlash.c ****             ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCL
 759:Generated_Source\PSoC4/CyFlash.c ****             (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELE
 760:Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 761:Generated_Source\PSoC4/CyFlash.c ****         {
 762:Generated_Source\PSoC4/CyFlash.c ****             /* Restore IMO frequency if needed */
 763:Generated_Source\PSoC4/CyFlash.c ****             if (cySysFlashBackup.clkImoFreq != 48u)
 764:Generated_Source\PSoC4/CyFlash.c ****             {
 765:Generated_Source\PSoC4/CyFlash.c ****                 CySysClkWriteImoFreq(cySysFlashBackup.clkImoFreq);
 766:Generated_Source\PSoC4/CyFlash.c ****             }
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 28


 767:Generated_Source\PSoC4/CyFlash.c **** 
 768:Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK clock source */
 769:Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteHfclkDirect(cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_M
 770:Generated_Source\PSoC4/CyFlash.c **** 
 771:Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK divider and source for pump  */
 772:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG = cySysFlashBackup.clkSelectReg;
 773:Generated_Source\PSoC4/CyFlash.c **** 
 774:Generated_Source\PSoC4/CyFlash.c ****             /* Stop IMO if needed */
 775:Generated_Source\PSoC4/CyFlash.c ****             if (0u == cySysFlashBackup.clkImoEna)
 776:Generated_Source\PSoC4/CyFlash.c ****             {
 777:Generated_Source\PSoC4/CyFlash.c ****                 CySysClkImoStop();
 778:Generated_Source\PSoC4/CyFlash.c ****             }
 779:Generated_Source\PSoC4/CyFlash.c ****         }
 780:Generated_Source\PSoC4/CyFlash.c **** 
 781:Generated_Source\PSoC4/CyFlash.c ****     #else
 782:Generated_Source\PSoC4/CyFlash.c **** 
 783:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 784:Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Restore */
 785:Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
 786:Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 787:Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 788:Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
 789:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 790:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 791:Generated_Source\PSoC4/CyFlash.c ****             CY_NOP;
 792:Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
 793:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 794:Generated_Source\PSoC4/CyFlash.c **** 
 795:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 796:Generated_Source\PSoC4/CyFlash.c **** 
 797:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
 798:Generated_Source\PSoC4/CyFlash.c **** 
 799:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 771              		.loc 1 799 0
 772 0012 7B68     		ldr	r3, [r7, #4]
 800:Generated_Source\PSoC4/CyFlash.c **** }
 773              		.loc 1 800 0
 774 0014 1800     		movs	r0, r3
 775 0016 BD46     		mov	sp, r7
 776 0018 02B0     		add	sp, sp, #8
 777              		@ sp needed
 778 001a 80BD     		pop	{r7, pc}
 779              	.L45:
 780              		.align	2
 781              	.L44:
 782 001c 08010B40 		.word	1074462984
 783 0020 00000000 		.word	cySysFlashBackup
 784              		.cfi_endproc
 785              	.LFE3:
 786              		.size	CySysFlashClockRestore, .-CySysFlashClockRestore
 787              		.text
 788              	.Letext0:
 789              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 790              		.file 3 "Generated_Source\\PSoC4\\CyFlash.h"
 791              		.section	.debug_info,"",%progbits
 792              	.Ldebug_info0:
 793 0000 85020000 		.4byte	0x285
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 29


 794 0004 0400     		.2byte	0x4
 795 0006 00000000 		.4byte	.Ldebug_abbrev0
 796 000a 04       		.byte	0x4
 797 000b 01       		.uleb128 0x1
 798 000c BF000000 		.4byte	.LASF35
 799 0010 0C       		.byte	0xc
 800 0011 F8010000 		.4byte	.LASF36
 801 0015 4D010000 		.4byte	.LASF37
 802 0019 00000000 		.4byte	.Ldebug_ranges0+0
 803 001d 00000000 		.4byte	0
 804 0021 00000000 		.4byte	.Ldebug_line0
 805 0025 02       		.uleb128 0x2
 806 0026 01       		.byte	0x1
 807 0027 06       		.byte	0x6
 808 0028 EF020000 		.4byte	.LASF0
 809 002c 02       		.uleb128 0x2
 810 002d 01       		.byte	0x1
 811 002e 08       		.byte	0x8
 812 002f 86000000 		.4byte	.LASF1
 813 0033 02       		.uleb128 0x2
 814 0034 02       		.byte	0x2
 815 0035 05       		.byte	0x5
 816 0036 C9010000 		.4byte	.LASF2
 817 003a 02       		.uleb128 0x2
 818 003b 02       		.byte	0x2
 819 003c 07       		.byte	0x7
 820 003d 57000000 		.4byte	.LASF3
 821 0041 02       		.uleb128 0x2
 822 0042 04       		.byte	0x4
 823 0043 05       		.byte	0x5
 824 0044 DA020000 		.4byte	.LASF4
 825 0048 02       		.uleb128 0x2
 826 0049 04       		.byte	0x4
 827 004a 07       		.byte	0x7
 828 004b A7000000 		.4byte	.LASF5
 829 004f 02       		.uleb128 0x2
 830 0050 08       		.byte	0x8
 831 0051 05       		.byte	0x5
 832 0052 5F020000 		.4byte	.LASF6
 833 0056 02       		.uleb128 0x2
 834 0057 08       		.byte	0x8
 835 0058 07       		.byte	0x7
 836 0059 19020000 		.4byte	.LASF7
 837 005d 03       		.uleb128 0x3
 838 005e 04       		.byte	0x4
 839 005f 05       		.byte	0x5
 840 0060 696E7400 		.ascii	"int\000"
 841 0064 02       		.uleb128 0x2
 842 0065 04       		.byte	0x4
 843 0066 07       		.byte	0x7
 844 0067 6A000000 		.4byte	.LASF8
 845 006b 04       		.uleb128 0x4
 846 006c B9000000 		.4byte	.LASF9
 847 0070 02       		.byte	0x2
 848 0071 D201     		.2byte	0x1d2
 849 0073 2C000000 		.4byte	0x2c
 850 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 30


 851 0078 EA010000 		.4byte	.LASF10
 852 007c 02       		.byte	0x2
 853 007d D301     		.2byte	0x1d3
 854 007f 3A000000 		.4byte	0x3a
 855 0083 04       		.uleb128 0x4
 856 0084 F1010000 		.4byte	.LASF11
 857 0088 02       		.byte	0x2
 858 0089 D401     		.2byte	0x1d4
 859 008b 48000000 		.4byte	0x48
 860 008f 02       		.uleb128 0x2
 861 0090 04       		.byte	0x4
 862 0091 04       		.byte	0x4
 863 0092 77000000 		.4byte	.LASF12
 864 0096 02       		.uleb128 0x2
 865 0097 08       		.byte	0x8
 866 0098 04       		.byte	0x4
 867 0099 C2010000 		.4byte	.LASF13
 868 009d 02       		.uleb128 0x2
 869 009e 01       		.byte	0x1
 870 009f 08       		.byte	0x8
 871 00a0 7A020000 		.4byte	.LASF14
 872 00a4 04       		.uleb128 0x4
 873 00a5 00000000 		.4byte	.LASF15
 874 00a9 02       		.byte	0x2
 875 00aa 7402     		.2byte	0x274
 876 00ac 48000000 		.4byte	0x48
 877 00b0 04       		.uleb128 0x4
 878 00b1 09000000 		.4byte	.LASF16
 879 00b5 02       		.byte	0x2
 880 00b6 7E02     		.2byte	0x27e
 881 00b8 BC000000 		.4byte	0xbc
 882 00bc 05       		.uleb128 0x5
 883 00bd 83000000 		.4byte	0x83
 884 00c1 02       		.uleb128 0x2
 885 00c2 08       		.byte	0x8
 886 00c3 04       		.byte	0x4
 887 00c4 E3020000 		.4byte	.LASF17
 888 00c8 02       		.uleb128 0x2
 889 00c9 04       		.byte	0x4
 890 00ca 07       		.byte	0x7
 891 00cb 56020000 		.4byte	.LASF18
 892 00cf 06       		.uleb128 0x6
 893 00d0 2A000000 		.4byte	.LASF38
 894 00d4 04       		.byte	0x4
 895 00d5 03       		.byte	0x3
 896 00d6 D7       		.byte	0xd7
 897 00d7 E8000000 		.4byte	0xe8
 898 00db 07       		.uleb128 0x7
 899 00dc 6D020000 		.4byte	.LASF39
 900 00e0 03       		.byte	0x3
 901 00e1 DA       		.byte	0xda
 902 00e2 83000000 		.4byte	0x83
 903 00e6 00       		.byte	0
 904 00e7 00       		.byte	0
 905 00e8 08       		.uleb128 0x8
 906 00e9 B9020000 		.4byte	.LASF19
 907 00ed 03       		.byte	0x3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 31


 908 00ee ED       		.byte	0xed
 909 00ef CF000000 		.4byte	0xcf
 910 00f3 09       		.uleb128 0x9
 911 00f4 FB020000 		.4byte	.LASF40
 912 00f8 01       		.byte	0x1
 913 00f9 51       		.byte	0x51
 914 00fa 83000000 		.4byte	0x83
 915 00fe 00000000 		.4byte	.LFB0
 916 0102 8C030000 		.4byte	.LFE0-.LFB0
 917 0106 01       		.uleb128 0x1
 918 0107 9C       		.byte	0x9c
 919 0108 CE010000 		.4byte	0x1ce
 920 010c 0A       		.uleb128 0xa
 921 010d 23000000 		.4byte	.LASF20
 922 0111 01       		.byte	0x1
 923 0112 51       		.byte	0x51
 924 0113 83000000 		.4byte	0x83
 925 0117 03       		.uleb128 0x3
 926 0118 91       		.byte	0x91
 927 0119 BC7E     		.sleb128 -196
 928 011b 0A       		.uleb128 0xa
 929 011c 94000000 		.4byte	.LASF21
 930 0120 01       		.byte	0x1
 931 0121 51       		.byte	0x51
 932 0122 CE010000 		.4byte	0x1ce
 933 0126 03       		.uleb128 0x3
 934 0127 91       		.byte	0x91
 935 0128 B87E     		.sleb128 -200
 936 012a 0B       		.uleb128 0xb
 937 012b 1A000000 		.4byte	.LASF22
 938 012f 01       		.byte	0x1
 939 0130 53       		.byte	0x53
 940 0131 BC000000 		.4byte	0xbc
 941 0135 02       		.uleb128 0x2
 942 0136 91       		.byte	0x91
 943 0137 4C       		.sleb128 -52
 944 0138 0B       		.uleb128 0xb
 945 0139 89020000 		.4byte	.LASF23
 946 013d 01       		.byte	0x1
 947 013e 54       		.byte	0x54
 948 013f BC000000 		.4byte	0xbc
 949 0143 02       		.uleb128 0x2
 950 0144 91       		.byte	0x91
 951 0145 48       		.sleb128 -56
 952 0146 0B       		.uleb128 0xb
 953 0147 9C000000 		.4byte	.LASF24
 954 014b 01       		.byte	0x1
 955 014c 55       		.byte	0x55
 956 014d E9010000 		.4byte	0x1e9
 957 0151 03       		.uleb128 0x3
 958 0152 91       		.byte	0x91
 959 0153 C07E     		.sleb128 -192
 960 0155 0B       		.uleb128 0xb
 961 0156 47020000 		.4byte	.LASF25
 962 015a 01       		.byte	0x1
 963 015b 56       		.byte	0x56
 964 015c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 32


 965 0160 02       		.uleb128 0x2
 966 0161 91       		.byte	0x91
 967 0162 53       		.sleb128 -45
 968 0163 0B       		.uleb128 0xb
 969 0164 30020000 		.4byte	.LASF26
 970 0168 01       		.byte	0x1
 971 0169 59       		.byte	0x59
 972 016a 83000000 		.4byte	0x83
 973 016e 02       		.uleb128 0x2
 974 016f 91       		.byte	0x91
 975 0170 58       		.sleb128 -40
 976 0171 0B       		.uleb128 0xb
 977 0172 0F000000 		.4byte	.LASF27
 978 0176 01       		.byte	0x1
 979 0177 5A       		.byte	0x5a
 980 0178 83000000 		.4byte	0x83
 981 017c 02       		.uleb128 0x2
 982 017d 91       		.byte	0x91
 983 017e 6C       		.sleb128 -20
 984 017f 0B       		.uleb128 0xb
 985 0180 98020000 		.4byte	.LASF28
 986 0184 01       		.byte	0x1
 987 0185 5B       		.byte	0x5b
 988 0186 83000000 		.4byte	0x83
 989 018a 02       		.uleb128 0x2
 990 018b 91       		.byte	0x91
 991 018c 68       		.sleb128 -24
 992 018d 0B       		.uleb128 0xb
 993 018e 7D000000 		.4byte	.LASF29
 994 0192 01       		.byte	0x1
 995 0193 5C       		.byte	0x5c
 996 0194 83000000 		.4byte	0x83
 997 0198 02       		.uleb128 0x2
 998 0199 91       		.byte	0x91
 999 019a 64       		.sleb128 -28
 1000 019b 0B       		.uleb128 0xb
 1001 019c 7F020000 		.4byte	.LASF30
 1002 01a0 01       		.byte	0x1
 1003 01a1 5D       		.byte	0x5d
 1004 01a2 83000000 		.4byte	0x83
 1005 01a6 02       		.uleb128 0x2
 1006 01a7 91       		.byte	0x91
 1007 01a8 60       		.sleb128 -32
 1008 01a9 0C       		.uleb128 0xc
 1009 01aa 6900     		.ascii	"i\000"
 1010 01ac 01       		.byte	0x1
 1011 01ad 5E       		.byte	0x5e
 1012 01ae 83000000 		.4byte	0x83
 1013 01b2 02       		.uleb128 0x2
 1014 01b3 91       		.byte	0x91
 1015 01b4 5C       		.sleb128 -36
 1016 01b5 0D       		.uleb128 0xd
 1017 01b6 6C000000 		.4byte	.LBB2
 1018 01ba 52000000 		.4byte	.LBE2-.LBB2
 1019 01be 0C       		.uleb128 0xc
 1020 01bf 746D7000 		.ascii	"tmp\000"
 1021 01c3 01       		.byte	0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 33


 1022 01c4 6A       		.byte	0x6a
 1023 01c5 83000000 		.4byte	0x83
 1024 01c9 02       		.uleb128 0x2
 1025 01ca 91       		.byte	0x91
 1026 01cb 54       		.sleb128 -44
 1027 01cc 00       		.byte	0
 1028 01cd 00       		.byte	0
 1029 01ce 0E       		.uleb128 0xe
 1030 01cf 04       		.byte	0x4
 1031 01d0 D4010000 		.4byte	0x1d4
 1032 01d4 0F       		.uleb128 0xf
 1033 01d5 6B000000 		.4byte	0x6b
 1034 01d9 10       		.uleb128 0x10
 1035 01da BC000000 		.4byte	0xbc
 1036 01de E9010000 		.4byte	0x1e9
 1037 01e2 11       		.uleb128 0x11
 1038 01e3 C8000000 		.4byte	0xc8
 1039 01e7 21       		.byte	0x21
 1040 01e8 00       		.byte	0
 1041 01e9 05       		.uleb128 0x5
 1042 01ea D9010000 		.4byte	0x1d9
 1043 01ee 12       		.uleb128 0x12
 1044 01ef 0E030000 		.4byte	.LASF41
 1045 01f3 01       		.byte	0x1
 1046 01f4 A601     		.2byte	0x1a6
 1047 01f6 00000000 		.4byte	.LFB1
 1048 01fa 54000000 		.4byte	.LFE1-.LFB1
 1049 01fe 01       		.uleb128 0x1
 1050 01ff 9C       		.byte	0x9c
 1051 0200 23020000 		.4byte	0x223
 1052 0204 13       		.uleb128 0x13
 1053 0205 84020000 		.4byte	.LASF31
 1054 0209 01       		.byte	0x1
 1055 020a A601     		.2byte	0x1a6
 1056 020c 83000000 		.4byte	0x83
 1057 0210 02       		.uleb128 0x2
 1058 0211 91       		.byte	0x91
 1059 0212 64       		.sleb128 -28
 1060 0213 14       		.uleb128 0x14
 1061 0214 47020000 		.4byte	.LASF25
 1062 0218 01       		.byte	0x1
 1063 0219 A801     		.2byte	0x1a8
 1064 021b 6B000000 		.4byte	0x6b
 1065 021f 02       		.uleb128 0x2
 1066 0220 91       		.byte	0x91
 1067 0221 6F       		.sleb128 -17
 1068 0222 00       		.byte	0
 1069 0223 15       		.uleb128 0x15
 1070 0224 A3020000 		.4byte	.LASF32
 1071 0228 01       		.byte	0x1
 1072 0229 3A02     		.2byte	0x23a
 1073 022b A4000000 		.4byte	0xa4
 1074 022f 00000000 		.4byte	.LFB2
 1075 0233 24000000 		.4byte	.LFE2-.LFB2
 1076 0237 01       		.uleb128 0x1
 1077 0238 9C       		.byte	0x9c
 1078 0239 4D020000 		.4byte	0x24d
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 34


 1079 023d 14       		.uleb128 0x14
 1080 023e 1A000000 		.4byte	.LASF22
 1081 0242 01       		.byte	0x1
 1082 0243 3C02     		.2byte	0x23c
 1083 0245 A4000000 		.4byte	0xa4
 1084 0249 02       		.uleb128 0x2
 1085 024a 91       		.byte	0x91
 1086 024b 74       		.sleb128 -12
 1087 024c 00       		.byte	0
 1088 024d 15       		.uleb128 0x15
 1089 024e D3010000 		.4byte	.LASF33
 1090 0252 01       		.byte	0x1
 1091 0253 D802     		.2byte	0x2d8
 1092 0255 A4000000 		.4byte	0xa4
 1093 0259 00000000 		.4byte	.LFB3
 1094 025d 24000000 		.4byte	.LFE3-.LFB3
 1095 0261 01       		.uleb128 0x1
 1096 0262 9C       		.byte	0x9c
 1097 0263 77020000 		.4byte	0x277
 1098 0267 14       		.uleb128 0x14
 1099 0268 1A000000 		.4byte	.LASF22
 1100 026c 01       		.byte	0x1
 1101 026d DA02     		.2byte	0x2da
 1102 026f A4000000 		.4byte	0xa4
 1103 0273 02       		.uleb128 0x2
 1104 0274 91       		.byte	0x91
 1105 0275 74       		.sleb128 -12
 1106 0276 00       		.byte	0
 1107 0277 0B       		.uleb128 0xb
 1108 0278 46000000 		.4byte	.LASF34
 1109 027c 01       		.byte	0x1
 1110 027d 22       		.byte	0x22
 1111 027e E8000000 		.4byte	0xe8
 1112 0282 05       		.uleb128 0x5
 1113 0283 03       		.byte	0x3
 1114 0284 00000000 		.4byte	cySysFlashBackup
 1115 0288 00       		.byte	0
 1116              		.section	.debug_abbrev,"",%progbits
 1117              	.Ldebug_abbrev0:
 1118 0000 01       		.uleb128 0x1
 1119 0001 11       		.uleb128 0x11
 1120 0002 01       		.byte	0x1
 1121 0003 25       		.uleb128 0x25
 1122 0004 0E       		.uleb128 0xe
 1123 0005 13       		.uleb128 0x13
 1124 0006 0B       		.uleb128 0xb
 1125 0007 03       		.uleb128 0x3
 1126 0008 0E       		.uleb128 0xe
 1127 0009 1B       		.uleb128 0x1b
 1128 000a 0E       		.uleb128 0xe
 1129 000b 55       		.uleb128 0x55
 1130 000c 17       		.uleb128 0x17
 1131 000d 11       		.uleb128 0x11
 1132 000e 01       		.uleb128 0x1
 1133 000f 10       		.uleb128 0x10
 1134 0010 17       		.uleb128 0x17
 1135 0011 00       		.byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 35


 1136 0012 00       		.byte	0
 1137 0013 02       		.uleb128 0x2
 1138 0014 24       		.uleb128 0x24
 1139 0015 00       		.byte	0
 1140 0016 0B       		.uleb128 0xb
 1141 0017 0B       		.uleb128 0xb
 1142 0018 3E       		.uleb128 0x3e
 1143 0019 0B       		.uleb128 0xb
 1144 001a 03       		.uleb128 0x3
 1145 001b 0E       		.uleb128 0xe
 1146 001c 00       		.byte	0
 1147 001d 00       		.byte	0
 1148 001e 03       		.uleb128 0x3
 1149 001f 24       		.uleb128 0x24
 1150 0020 00       		.byte	0
 1151 0021 0B       		.uleb128 0xb
 1152 0022 0B       		.uleb128 0xb
 1153 0023 3E       		.uleb128 0x3e
 1154 0024 0B       		.uleb128 0xb
 1155 0025 03       		.uleb128 0x3
 1156 0026 08       		.uleb128 0x8
 1157 0027 00       		.byte	0
 1158 0028 00       		.byte	0
 1159 0029 04       		.uleb128 0x4
 1160 002a 16       		.uleb128 0x16
 1161 002b 00       		.byte	0
 1162 002c 03       		.uleb128 0x3
 1163 002d 0E       		.uleb128 0xe
 1164 002e 3A       		.uleb128 0x3a
 1165 002f 0B       		.uleb128 0xb
 1166 0030 3B       		.uleb128 0x3b
 1167 0031 05       		.uleb128 0x5
 1168 0032 49       		.uleb128 0x49
 1169 0033 13       		.uleb128 0x13
 1170 0034 00       		.byte	0
 1171 0035 00       		.byte	0
 1172 0036 05       		.uleb128 0x5
 1173 0037 35       		.uleb128 0x35
 1174 0038 00       		.byte	0
 1175 0039 49       		.uleb128 0x49
 1176 003a 13       		.uleb128 0x13
 1177 003b 00       		.byte	0
 1178 003c 00       		.byte	0
 1179 003d 06       		.uleb128 0x6
 1180 003e 13       		.uleb128 0x13
 1181 003f 01       		.byte	0x1
 1182 0040 03       		.uleb128 0x3
 1183 0041 0E       		.uleb128 0xe
 1184 0042 0B       		.uleb128 0xb
 1185 0043 0B       		.uleb128 0xb
 1186 0044 3A       		.uleb128 0x3a
 1187 0045 0B       		.uleb128 0xb
 1188 0046 3B       		.uleb128 0x3b
 1189 0047 0B       		.uleb128 0xb
 1190 0048 01       		.uleb128 0x1
 1191 0049 13       		.uleb128 0x13
 1192 004a 00       		.byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 36


 1193 004b 00       		.byte	0
 1194 004c 07       		.uleb128 0x7
 1195 004d 0D       		.uleb128 0xd
 1196 004e 00       		.byte	0
 1197 004f 03       		.uleb128 0x3
 1198 0050 0E       		.uleb128 0xe
 1199 0051 3A       		.uleb128 0x3a
 1200 0052 0B       		.uleb128 0xb
 1201 0053 3B       		.uleb128 0x3b
 1202 0054 0B       		.uleb128 0xb
 1203 0055 49       		.uleb128 0x49
 1204 0056 13       		.uleb128 0x13
 1205 0057 38       		.uleb128 0x38
 1206 0058 0B       		.uleb128 0xb
 1207 0059 00       		.byte	0
 1208 005a 00       		.byte	0
 1209 005b 08       		.uleb128 0x8
 1210 005c 16       		.uleb128 0x16
 1211 005d 00       		.byte	0
 1212 005e 03       		.uleb128 0x3
 1213 005f 0E       		.uleb128 0xe
 1214 0060 3A       		.uleb128 0x3a
 1215 0061 0B       		.uleb128 0xb
 1216 0062 3B       		.uleb128 0x3b
 1217 0063 0B       		.uleb128 0xb
 1218 0064 49       		.uleb128 0x49
 1219 0065 13       		.uleb128 0x13
 1220 0066 00       		.byte	0
 1221 0067 00       		.byte	0
 1222 0068 09       		.uleb128 0x9
 1223 0069 2E       		.uleb128 0x2e
 1224 006a 01       		.byte	0x1
 1225 006b 3F       		.uleb128 0x3f
 1226 006c 19       		.uleb128 0x19
 1227 006d 03       		.uleb128 0x3
 1228 006e 0E       		.uleb128 0xe
 1229 006f 3A       		.uleb128 0x3a
 1230 0070 0B       		.uleb128 0xb
 1231 0071 3B       		.uleb128 0x3b
 1232 0072 0B       		.uleb128 0xb
 1233 0073 27       		.uleb128 0x27
 1234 0074 19       		.uleb128 0x19
 1235 0075 49       		.uleb128 0x49
 1236 0076 13       		.uleb128 0x13
 1237 0077 11       		.uleb128 0x11
 1238 0078 01       		.uleb128 0x1
 1239 0079 12       		.uleb128 0x12
 1240 007a 06       		.uleb128 0x6
 1241 007b 40       		.uleb128 0x40
 1242 007c 18       		.uleb128 0x18
 1243 007d 9642     		.uleb128 0x2116
 1244 007f 19       		.uleb128 0x19
 1245 0080 01       		.uleb128 0x1
 1246 0081 13       		.uleb128 0x13
 1247 0082 00       		.byte	0
 1248 0083 00       		.byte	0
 1249 0084 0A       		.uleb128 0xa
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 37


 1250 0085 05       		.uleb128 0x5
 1251 0086 00       		.byte	0
 1252 0087 03       		.uleb128 0x3
 1253 0088 0E       		.uleb128 0xe
 1254 0089 3A       		.uleb128 0x3a
 1255 008a 0B       		.uleb128 0xb
 1256 008b 3B       		.uleb128 0x3b
 1257 008c 0B       		.uleb128 0xb
 1258 008d 49       		.uleb128 0x49
 1259 008e 13       		.uleb128 0x13
 1260 008f 02       		.uleb128 0x2
 1261 0090 18       		.uleb128 0x18
 1262 0091 00       		.byte	0
 1263 0092 00       		.byte	0
 1264 0093 0B       		.uleb128 0xb
 1265 0094 34       		.uleb128 0x34
 1266 0095 00       		.byte	0
 1267 0096 03       		.uleb128 0x3
 1268 0097 0E       		.uleb128 0xe
 1269 0098 3A       		.uleb128 0x3a
 1270 0099 0B       		.uleb128 0xb
 1271 009a 3B       		.uleb128 0x3b
 1272 009b 0B       		.uleb128 0xb
 1273 009c 49       		.uleb128 0x49
 1274 009d 13       		.uleb128 0x13
 1275 009e 02       		.uleb128 0x2
 1276 009f 18       		.uleb128 0x18
 1277 00a0 00       		.byte	0
 1278 00a1 00       		.byte	0
 1279 00a2 0C       		.uleb128 0xc
 1280 00a3 34       		.uleb128 0x34
 1281 00a4 00       		.byte	0
 1282 00a5 03       		.uleb128 0x3
 1283 00a6 08       		.uleb128 0x8
 1284 00a7 3A       		.uleb128 0x3a
 1285 00a8 0B       		.uleb128 0xb
 1286 00a9 3B       		.uleb128 0x3b
 1287 00aa 0B       		.uleb128 0xb
 1288 00ab 49       		.uleb128 0x49
 1289 00ac 13       		.uleb128 0x13
 1290 00ad 02       		.uleb128 0x2
 1291 00ae 18       		.uleb128 0x18
 1292 00af 00       		.byte	0
 1293 00b0 00       		.byte	0
 1294 00b1 0D       		.uleb128 0xd
 1295 00b2 0B       		.uleb128 0xb
 1296 00b3 01       		.byte	0x1
 1297 00b4 11       		.uleb128 0x11
 1298 00b5 01       		.uleb128 0x1
 1299 00b6 12       		.uleb128 0x12
 1300 00b7 06       		.uleb128 0x6
 1301 00b8 00       		.byte	0
 1302 00b9 00       		.byte	0
 1303 00ba 0E       		.uleb128 0xe
 1304 00bb 0F       		.uleb128 0xf
 1305 00bc 00       		.byte	0
 1306 00bd 0B       		.uleb128 0xb
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 38


 1307 00be 0B       		.uleb128 0xb
 1308 00bf 49       		.uleb128 0x49
 1309 00c0 13       		.uleb128 0x13
 1310 00c1 00       		.byte	0
 1311 00c2 00       		.byte	0
 1312 00c3 0F       		.uleb128 0xf
 1313 00c4 26       		.uleb128 0x26
 1314 00c5 00       		.byte	0
 1315 00c6 49       		.uleb128 0x49
 1316 00c7 13       		.uleb128 0x13
 1317 00c8 00       		.byte	0
 1318 00c9 00       		.byte	0
 1319 00ca 10       		.uleb128 0x10
 1320 00cb 01       		.uleb128 0x1
 1321 00cc 01       		.byte	0x1
 1322 00cd 49       		.uleb128 0x49
 1323 00ce 13       		.uleb128 0x13
 1324 00cf 01       		.uleb128 0x1
 1325 00d0 13       		.uleb128 0x13
 1326 00d1 00       		.byte	0
 1327 00d2 00       		.byte	0
 1328 00d3 11       		.uleb128 0x11
 1329 00d4 21       		.uleb128 0x21
 1330 00d5 00       		.byte	0
 1331 00d6 49       		.uleb128 0x49
 1332 00d7 13       		.uleb128 0x13
 1333 00d8 2F       		.uleb128 0x2f
 1334 00d9 0B       		.uleb128 0xb
 1335 00da 00       		.byte	0
 1336 00db 00       		.byte	0
 1337 00dc 12       		.uleb128 0x12
 1338 00dd 2E       		.uleb128 0x2e
 1339 00de 01       		.byte	0x1
 1340 00df 3F       		.uleb128 0x3f
 1341 00e0 19       		.uleb128 0x19
 1342 00e1 03       		.uleb128 0x3
 1343 00e2 0E       		.uleb128 0xe
 1344 00e3 3A       		.uleb128 0x3a
 1345 00e4 0B       		.uleb128 0xb
 1346 00e5 3B       		.uleb128 0x3b
 1347 00e6 05       		.uleb128 0x5
 1348 00e7 27       		.uleb128 0x27
 1349 00e8 19       		.uleb128 0x19
 1350 00e9 11       		.uleb128 0x11
 1351 00ea 01       		.uleb128 0x1
 1352 00eb 12       		.uleb128 0x12
 1353 00ec 06       		.uleb128 0x6
 1354 00ed 40       		.uleb128 0x40
 1355 00ee 18       		.uleb128 0x18
 1356 00ef 9642     		.uleb128 0x2116
 1357 00f1 19       		.uleb128 0x19
 1358 00f2 01       		.uleb128 0x1
 1359 00f3 13       		.uleb128 0x13
 1360 00f4 00       		.byte	0
 1361 00f5 00       		.byte	0
 1362 00f6 13       		.uleb128 0x13
 1363 00f7 05       		.uleb128 0x5
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 39


 1364 00f8 00       		.byte	0
 1365 00f9 03       		.uleb128 0x3
 1366 00fa 0E       		.uleb128 0xe
 1367 00fb 3A       		.uleb128 0x3a
 1368 00fc 0B       		.uleb128 0xb
 1369 00fd 3B       		.uleb128 0x3b
 1370 00fe 05       		.uleb128 0x5
 1371 00ff 49       		.uleb128 0x49
 1372 0100 13       		.uleb128 0x13
 1373 0101 02       		.uleb128 0x2
 1374 0102 18       		.uleb128 0x18
 1375 0103 00       		.byte	0
 1376 0104 00       		.byte	0
 1377 0105 14       		.uleb128 0x14
 1378 0106 34       		.uleb128 0x34
 1379 0107 00       		.byte	0
 1380 0108 03       		.uleb128 0x3
 1381 0109 0E       		.uleb128 0xe
 1382 010a 3A       		.uleb128 0x3a
 1383 010b 0B       		.uleb128 0xb
 1384 010c 3B       		.uleb128 0x3b
 1385 010d 05       		.uleb128 0x5
 1386 010e 49       		.uleb128 0x49
 1387 010f 13       		.uleb128 0x13
 1388 0110 02       		.uleb128 0x2
 1389 0111 18       		.uleb128 0x18
 1390 0112 00       		.byte	0
 1391 0113 00       		.byte	0
 1392 0114 15       		.uleb128 0x15
 1393 0115 2E       		.uleb128 0x2e
 1394 0116 01       		.byte	0x1
 1395 0117 03       		.uleb128 0x3
 1396 0118 0E       		.uleb128 0xe
 1397 0119 3A       		.uleb128 0x3a
 1398 011a 0B       		.uleb128 0xb
 1399 011b 3B       		.uleb128 0x3b
 1400 011c 05       		.uleb128 0x5
 1401 011d 27       		.uleb128 0x27
 1402 011e 19       		.uleb128 0x19
 1403 011f 49       		.uleb128 0x49
 1404 0120 13       		.uleb128 0x13
 1405 0121 11       		.uleb128 0x11
 1406 0122 01       		.uleb128 0x1
 1407 0123 12       		.uleb128 0x12
 1408 0124 06       		.uleb128 0x6
 1409 0125 40       		.uleb128 0x40
 1410 0126 18       		.uleb128 0x18
 1411 0127 9742     		.uleb128 0x2117
 1412 0129 19       		.uleb128 0x19
 1413 012a 01       		.uleb128 0x1
 1414 012b 13       		.uleb128 0x13
 1415 012c 00       		.byte	0
 1416 012d 00       		.byte	0
 1417 012e 00       		.byte	0
 1418              		.section	.debug_aranges,"",%progbits
 1419 0000 34000000 		.4byte	0x34
 1420 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 40


 1421 0006 00000000 		.4byte	.Ldebug_info0
 1422 000a 04       		.byte	0x4
 1423 000b 00       		.byte	0
 1424 000c 0000     		.2byte	0
 1425 000e 0000     		.2byte	0
 1426 0010 00000000 		.4byte	.LFB0
 1427 0014 8C030000 		.4byte	.LFE0-.LFB0
 1428 0018 00000000 		.4byte	.LFB1
 1429 001c 54000000 		.4byte	.LFE1-.LFB1
 1430 0020 00000000 		.4byte	.LFB2
 1431 0024 24000000 		.4byte	.LFE2-.LFB2
 1432 0028 00000000 		.4byte	.LFB3
 1433 002c 24000000 		.4byte	.LFE3-.LFB3
 1434 0030 00000000 		.4byte	0
 1435 0034 00000000 		.4byte	0
 1436              		.section	.debug_ranges,"",%progbits
 1437              	.Ldebug_ranges0:
 1438 0000 00000000 		.4byte	.LFB0
 1439 0004 8C030000 		.4byte	.LFE0
 1440 0008 00000000 		.4byte	.LFB1
 1441 000c 54000000 		.4byte	.LFE1
 1442 0010 00000000 		.4byte	.LFB2
 1443 0014 24000000 		.4byte	.LFE2
 1444 0018 00000000 		.4byte	.LFB3
 1445 001c 24000000 		.4byte	.LFE3
 1446 0020 00000000 		.4byte	0
 1447 0024 00000000 		.4byte	0
 1448              		.section	.debug_line,"",%progbits
 1449              	.Ldebug_line0:
 1450 0000 9F010000 		.section	.debug_str,"MS",%progbits,1
 1450      02005100 
 1450      00000201 
 1450      FB0E0D00 
 1450      01010101 
 1451              	.LASF15:
 1452 0000 63797374 		.ascii	"cystatus\000"
 1452      61747573 
 1452      00
 1453              	.LASF16:
 1454 0009 72656733 		.ascii	"reg32\000"
 1454      3200
 1455              	.LASF27:
 1456 000f 73617665 		.ascii	"savedIndex\000"
 1456      64496E64 
 1456      657800
 1457              	.LASF22:
 1458 001a 72657456 		.ascii	"retValue\000"
 1458      616C7565 
 1458      00
 1459              	.LASF20:
 1460 0023 726F774E 		.ascii	"rowNum\000"
 1460      756D00
 1461              	.LASF38:
 1462 002a 63795379 		.ascii	"cySysFlashClockBackupStruct\000"
 1462      73466C61 
 1462      7368436C 
 1462      6F636B42 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 41


 1462      61636B75 
 1463              	.LASF34:
 1464 0046 63795379 		.ascii	"cySysFlashBackup\000"
 1464      73466C61 
 1464      73684261 
 1464      636B7570 
 1464      00
 1465              	.LASF3:
 1466 0057 73686F72 		.ascii	"short unsigned int\000"
 1466      7420756E 
 1466      7369676E 
 1466      65642069 
 1466      6E7400
 1467              	.LASF8:
 1468 006a 756E7369 		.ascii	"unsigned int\000"
 1468      676E6564 
 1468      20696E74 
 1468      00
 1469              	.LASF12:
 1470 0077 666C6F61 		.ascii	"float\000"
 1470      7400
 1471              	.LASF29:
 1472 007d 63686563 		.ascii	"checksum\000"
 1472      6B73756D 
 1472      00
 1473              	.LASF1:
 1474 0086 756E7369 		.ascii	"unsigned char\000"
 1474      676E6564 
 1474      20636861 
 1474      7200
 1475              	.LASF21:
 1476 0094 726F7744 		.ascii	"rowData\000"
 1476      61746100 
 1477              	.LASF24:
 1478 009c 70617261 		.ascii	"parameters\000"
 1478      6D657465 
 1478      727300
 1479              	.LASF5:
 1480 00a7 6C6F6E67 		.ascii	"long unsigned int\000"
 1480      20756E73 
 1480      69676E65 
 1480      6420696E 
 1480      7400
 1481              	.LASF9:
 1482 00b9 75696E74 		.ascii	"uint8\000"
 1482      3800
 1483              	.LASF35:
 1484 00bf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1484      43313120 
 1484      352E342E 
 1484      31203230 
 1484      31363036 
 1485 00f2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1485      20726576 
 1485      6973696F 
 1485      6E203233 
 1485      37373135 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 42


 1486 0125 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1486      66756E63 
 1486      74696F6E 
 1486      2D736563 
 1486      74696F6E 
 1487              	.LASF37:
 1488 014d 433A5C53 		.ascii	"C:\\SVN\\apps\\trunk\\Cypress Academy\\PSoC-101\\Pr"
 1488      564E5C61 
 1488      7070735C 
 1488      7472756E 
 1488      6B5C4379 
 1489 017a 6F6A6563 		.ascii	"ojects\\Team_Project\\Simon\\Simon_Slave_Pioneer\\S"
 1489      74735C54 
 1489      65616D5F 
 1489      50726F6A 
 1489      6563745C 
 1490 01a9 696D6F6E 		.ascii	"imon_Slave_Pioneer.cydsn\000"
 1490      5F536C61 
 1490      76655F50 
 1490      696F6E65 
 1490      65722E63 
 1491              	.LASF13:
 1492 01c2 646F7562 		.ascii	"double\000"
 1492      6C6500
 1493              	.LASF2:
 1494 01c9 73686F72 		.ascii	"short int\000"
 1494      7420696E 
 1494      7400
 1495              	.LASF33:
 1496 01d3 43795379 		.ascii	"CySysFlashClockRestore\000"
 1496      73466C61 
 1496      7368436C 
 1496      6F636B52 
 1496      6573746F 
 1497              	.LASF10:
 1498 01ea 75696E74 		.ascii	"uint16\000"
 1498      313600
 1499              	.LASF11:
 1500 01f1 75696E74 		.ascii	"uint32\000"
 1500      333200
 1501              	.LASF36:
 1502 01f8 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyFlash.c\000"
 1502      72617465 
 1502      645F536F 
 1502      75726365 
 1502      5C50536F 
 1503              	.LASF7:
 1504 0219 6C6F6E67 		.ascii	"long long unsigned int\000"
 1504      206C6F6E 
 1504      6720756E 
 1504      7369676E 
 1504      65642069 
 1505              	.LASF26:
 1506 0230 6E656564 		.ascii	"needChecksumWorkaround\000"
 1506      43686563 
 1506      6B73756D 
 1506      576F726B 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 43


 1506      61726F75 
 1507              	.LASF25:
 1508 0247 696E7465 		.ascii	"interruptState\000"
 1508      72727570 
 1508      74537461 
 1508      746500
 1509              	.LASF18:
 1510 0256 73697A65 		.ascii	"sizetype\000"
 1510      74797065 
 1510      00
 1511              	.LASF6:
 1512 025f 6C6F6E67 		.ascii	"long long int\000"
 1512      206C6F6E 
 1512      6720696E 
 1512      7400
 1513              	.LASF39:
 1514 026d 696D6F43 		.ascii	"imoConfigReg\000"
 1514      6F6E6669 
 1514      67526567 
 1514      00
 1515              	.LASF14:
 1516 027a 63686172 		.ascii	"char\000"
 1516      00
 1517              	.LASF30:
 1518 027f 62697473 		.ascii	"bits\000"
 1518      00
 1519              	.LASF31:
 1520 0284 66726571 		.ascii	"freq\000"
 1520      00
 1521              	.LASF23:
 1522 0289 636C6B43 		.ascii	"clkCnfRetValue\000"
 1522      6E665265 
 1522      7456616C 
 1522      756500
 1523              	.LASF28:
 1524 0298 73617665 		.ascii	"savedValue\000"
 1524      6456616C 
 1524      756500
 1525              	.LASF32:
 1526 02a3 43795379 		.ascii	"CySysFlashClockBackup\000"
 1526      73466C61 
 1526      7368436C 
 1526      6F636B42 
 1526      61636B75 
 1527              	.LASF19:
 1528 02b9 43595F53 		.ascii	"CY_SYS_FLASH_CLOCK_BACKUP_STRUCT\000"
 1528      59535F46 
 1528      4C415348 
 1528      5F434C4F 
 1528      434B5F42 
 1529              	.LASF4:
 1530 02da 6C6F6E67 		.ascii	"long int\000"
 1530      20696E74 
 1530      00
 1531              	.LASF17:
 1532 02e3 6C6F6E67 		.ascii	"long double\000"
 1532      20646F75 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\ccNkM8Z3.s 			page 44


 1532      626C6500 
 1533              	.LASF0:
 1534 02ef 7369676E 		.ascii	"signed char\000"
 1534      65642063 
 1534      68617200 
 1535              	.LASF40:
 1536 02fb 43795379 		.ascii	"CySysFlashWriteRow\000"
 1536      73466C61 
 1536      73685772 
 1536      69746552 
 1536      6F7700
 1537              	.LASF41:
 1538 030e 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 1538      73466C61 
 1538      73685365 
 1538      74576169 
 1538      74437963 
 1539              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
