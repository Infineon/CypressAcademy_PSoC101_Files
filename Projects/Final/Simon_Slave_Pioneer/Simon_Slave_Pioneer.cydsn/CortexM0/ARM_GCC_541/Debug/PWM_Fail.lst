ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_Fail.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_Fail_initVar
  20              		.bss
  21              		.type	PWM_Fail_initVar, %object
  22              		.size	PWM_Fail_initVar, 1
  23              	PWM_Fail_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_Fail_Init,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_Fail_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	PWM_Fail_Init, %function
  31              	PWM_Fail_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC4\\PWM_Fail.c"
   1:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_Fail.c **** * File Name: PWM_Fail.c
   3:Generated_Source\PSoC4/PWM_Fail.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM_Fail.c **** *
   5:Generated_Source\PSoC4/PWM_Fail.c **** * Description:
   6:Generated_Source\PSoC4/PWM_Fail.c **** *  This file provides the source code to the API for the PWM_Fail
   7:Generated_Source\PSoC4/PWM_Fail.c **** *  component
   8:Generated_Source\PSoC4/PWM_Fail.c **** *
   9:Generated_Source\PSoC4/PWM_Fail.c **** * Note:
  10:Generated_Source\PSoC4/PWM_Fail.c **** *  None
  11:Generated_Source\PSoC4/PWM_Fail.c **** *
  12:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM_Fail.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM_Fail.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM_Fail.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM_Fail.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM_Fail.c **** 
  19:Generated_Source\PSoC4/PWM_Fail.c **** #include "PWM_Fail.h"
  20:Generated_Source\PSoC4/PWM_Fail.c **** 
  21:Generated_Source\PSoC4/PWM_Fail.c **** uint8 PWM_Fail_initVar = 0u;
  22:Generated_Source\PSoC4/PWM_Fail.c **** 
  23:Generated_Source\PSoC4/PWM_Fail.c **** 
  24:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 2


  25:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_Init
  26:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
  27:Generated_Source\PSoC4/PWM_Fail.c **** *
  28:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
  29:Generated_Source\PSoC4/PWM_Fail.c **** *  Initialize/Restore default PWM_Fail configuration.
  30:Generated_Source\PSoC4/PWM_Fail.c **** *
  31:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM_Fail.c **** *  None
  33:Generated_Source\PSoC4/PWM_Fail.c **** *
  34:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
  35:Generated_Source\PSoC4/PWM_Fail.c **** *  None
  36:Generated_Source\PSoC4/PWM_Fail.c **** *
  37:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_Init(void)
  39:Generated_Source\PSoC4/PWM_Fail.c **** {
  34              		.loc 1 39 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/PWM_Fail.c **** 
  41:Generated_Source\PSoC4/PWM_Fail.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__QUAD == PWM_Fail_CONFIG)
  43:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_CONTROL_REG = PWM_Fail_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM_Fail.c ****         
  45:Generated_Source\PSoC4/PWM_Fail.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_TRIG_CONTROL1_REG  = PWM_Fail_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM_Fail.c **** 
  48:Generated_Source\PSoC4/PWM_Fail.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_SetInterruptMode(PWM_Fail_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM_Fail.c ****         
  51:Generated_Source\PSoC4/PWM_Fail.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_SetCounterMode(PWM_Fail_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_WritePeriod(PWM_Fail_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_WriteCounter(PWM_Fail_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__QUAD == PWM_Fail_CONFIG) */
  56:Generated_Source\PSoC4/PWM_Fail.c **** 
  57:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__TIMER == PWM_Fail_CONFIG)
  58:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_CONTROL_REG = PWM_Fail_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM_Fail.c ****         
  60:Generated_Source\PSoC4/PWM_Fail.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_TRIG_CONTROL1_REG  = PWM_Fail_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM_Fail.c ****     
  63:Generated_Source\PSoC4/PWM_Fail.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_SetInterruptMode(PWM_Fail_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM_Fail.c ****         
  66:Generated_Source\PSoC4/PWM_Fail.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_WritePeriod(PWM_Fail_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM_Fail.c **** 
  69:Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail__COMPARE == PWM_Fail_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WriteCompare(PWM_Fail_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM_Fail.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 3


  72:Generated_Source\PSoC4/PWM_Fail.c ****             #if (1u == PWM_Fail_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_WriteCompareBuf(PWM_Fail_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM_Fail.c ****             #endif  /* (1u == PWM_Fail_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (PWM_Fail__COMPARE == PWM_Fail_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM_Fail.c **** 
  78:Generated_Source\PSoC4/PWM_Fail.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail_CY_TCPWM_V2 && PWM_Fail_TIMER_UPDOWN_CNT_USED && !PWM_Fail_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM_Fail.c ****         #elif(PWM_Fail__COUNT_DOWN == PWM_Fail_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WriteCounter(PWM_Fail_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM_Fail.c ****         #else
  84:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM_Fail.c ****         #endif /* (PWM_Fail_CY_TCPWM_V2 && PWM_Fail_TIMER_UPDOWN_CNT_USED && !PWM_Fail_CY_TCPWM_400
  86:Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__TIMER == PWM_Fail_CONFIG) */
  87:Generated_Source\PSoC4/PWM_Fail.c **** 
  88:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG)
  89:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_CONTROL_REG = PWM_Fail_CTRL_PWM_BASE_CONFIG;
  44              		.loc 1 89 0
  45 0004 104B     		ldr	r3, .L2
  46 0006 8022     		movs	r2, #128
  47 0008 D204     		lsls	r2, r2, #19
  48 000a 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/PWM_Fail.c **** 
  91:Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail__PWM_PR == PWM_Fail_PWM_MODE)
  92:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_CONTROL_REG |= PWM_Fail_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WriteCounter(PWM_Fail_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM_Fail.c ****         #else
  95:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_CONTROL_REG |= PWM_Fail_CTRL_PWM_ALIGN | PWM_Fail_CTRL_PWM_KILL_EVENT;
  49              		.loc 1 95 0
  50 000c 0E4B     		ldr	r3, .L2
  51 000e 0E4A     		ldr	r2, .L2
  52 0010 1268     		ldr	r2, [r2]
  53 0012 1A60     		str	r2, [r3]
  96:Generated_Source\PSoC4/PWM_Fail.c ****             
  97:Generated_Source\PSoC4/PWM_Fail.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM_Fail.c ****             #if (PWM_Fail_CY_TCPWM_V2 && PWM_Fail_PWM_UPDOWN_CNT_USED && !PWM_Fail_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM_Fail.c ****             #elif (PWM_Fail__RIGHT == PWM_Fail_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_WriteCounter(PWM_Fail_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM_Fail.c ****             #else 
 103:Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_WriteCounter(0u);
  54              		.loc 1 103 0
  55 0014 0020     		movs	r0, #0
  56 0016 FFF7FEFF 		bl	PWM_Fail_WriteCounter
 104:Generated_Source\PSoC4/PWM_Fail.c ****             #endif  /* (PWM_Fail_CY_TCPWM_V2 && PWM_Fail_PWM_UPDOWN_CNT_USED && !PWM_Fail_CY_TCPWM_
 105:Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (PWM_Fail__PWM_PR == PWM_Fail_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM_Fail.c **** 
 107:Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail__PWM_DT == PWM_Fail_PWM_MODE)
 108:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_CONTROL_REG |= PWM_Fail_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (PWM_Fail__PWM_DT == PWM_Fail_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM_Fail.c **** 
 111:Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail__PWM == PWM_Fail_PWM_MODE)
 112:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_CONTROL_REG |= PWM_Fail_CTRL_PWM_PRESCALER;
  57              		.loc 1 112 0
  58 001a 0B4B     		ldr	r3, .L2
  59 001c 0A4A     		ldr	r2, .L2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 4


  60 001e 1268     		ldr	r2, [r2]
  61 0020 1A60     		str	r2, [r3]
 113:Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (PWM_Fail__PWM == PWM_Fail_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM_Fail.c **** 
 115:Generated_Source\PSoC4/PWM_Fail.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_TRIG_CONTROL1_REG  = PWM_Fail_PWM_SIGNALS_MODES;
  62              		.loc 1 116 0
  63 0022 0A4B     		ldr	r3, .L2+4
  64 0024 0C22     		movs	r2, #12
  65 0026 1A60     		str	r2, [r3]
 117:Generated_Source\PSoC4/PWM_Fail.c ****     
 118:Generated_Source\PSoC4/PWM_Fail.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_SetInterruptMode(PWM_Fail_PWM_INTERRUPT_MASK);
  66              		.loc 1 119 0
  67 0028 0120     		movs	r0, #1
  68 002a FFF7FEFF 		bl	PWM_Fail_SetInterruptMode
 120:Generated_Source\PSoC4/PWM_Fail.c **** 
 121:Generated_Source\PSoC4/PWM_Fail.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM_Fail.c ****         #if (PWM_Fail__PWM_PR == PWM_Fail_PWM_MODE)
 123:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM_Fail.c ****                     (PWM_Fail_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM_Fail.c ****                     PWM_Fail_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM_Fail.c ****                     PWM_Fail_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM_Fail.c ****         #else
 128:Generated_Source\PSoC4/PWM_Fail.c ****             #if (PWM_Fail__LEFT == PWM_Fail_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_TRIG_CONTROL2_REG = PWM_Fail_PWM_MODE_LEFT;
  69              		.loc 1 129 0
  70 002e 084B     		ldr	r3, .L2+8
  71 0030 3122     		movs	r2, #49
  72 0032 1A60     		str	r2, [r3]
 130:Generated_Source\PSoC4/PWM_Fail.c ****             #endif  /* ( PWM_Fail_PWM_LEFT == PWM_Fail_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM_Fail.c **** 
 132:Generated_Source\PSoC4/PWM_Fail.c ****             #if (PWM_Fail__RIGHT == PWM_Fail_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_TRIG_CONTROL2_REG = PWM_Fail_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM_Fail.c ****             #endif  /* ( PWM_Fail_PWM_RIGHT == PWM_Fail_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM_Fail.c **** 
 136:Generated_Source\PSoC4/PWM_Fail.c ****             #if (PWM_Fail__CENTER == PWM_Fail_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_TRIG_CONTROL2_REG = PWM_Fail_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM_Fail.c ****             #endif  /* ( PWM_Fail_PWM_CENTER == PWM_Fail_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM_Fail.c **** 
 140:Generated_Source\PSoC4/PWM_Fail.c ****             #if (PWM_Fail__ASYMMETRIC == PWM_Fail_PWM_ALIGN)
 141:Generated_Source\PSoC4/PWM_Fail.c ****                 PWM_Fail_TRIG_CONTROL2_REG = PWM_Fail_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM_Fail.c ****             #endif  /* (PWM_Fail__ASYMMETRIC == PWM_Fail_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (PWM_Fail__PWM_PR == PWM_Fail_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM_Fail.c **** 
 145:Generated_Source\PSoC4/PWM_Fail.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_WritePeriod(PWM_Fail_PWM_PERIOD_VALUE );
  73              		.loc 1 146 0
  74 0034 1E20     		movs	r0, #30
  75 0036 FFF7FEFF 		bl	PWM_Fail_WritePeriod
 147:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_WriteCompare(PWM_Fail_PWM_COMPARE_VALUE);
  76              		.loc 1 147 0
  77 003a 0F20     		movs	r0, #15
  78 003c FFF7FEFF 		bl	PWM_Fail_WriteCompare
 148:Generated_Source\PSoC4/PWM_Fail.c **** 
 149:Generated_Source\PSoC4/PWM_Fail.c ****         #if (1u == PWM_Fail_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_SetCompareSwap(1u);
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 5


 151:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WriteCompareBuf(PWM_Fail_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (1u == PWM_Fail_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/PWM_Fail.c **** 
 154:Generated_Source\PSoC4/PWM_Fail.c ****         #if (1u == PWM_Fail_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_WritePeriodBuf(PWM_Fail_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM_Fail.c ****         #endif  /* (1u == PWM_Fail_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG) */
 159:Generated_Source\PSoC4/PWM_Fail.c ****     
 160:Generated_Source\PSoC4/PWM_Fail.c **** }
  79              		.loc 1 160 0
  80 0040 C046     		nop
  81 0042 BD46     		mov	sp, r7
  82              		@ sp needed
  83 0044 80BD     		pop	{r7, pc}
  84              	.L3:
  85 0046 C046     		.align	2
  86              	.L2:
  87 0048 40010540 		.word	1074069824
  88 004c 64010540 		.word	1074069860
  89 0050 68010540 		.word	1074069864
  90              		.cfi_endproc
  91              	.LFE0:
  92              		.size	PWM_Fail_Init, .-PWM_Fail_Init
  93              		.section	.text.PWM_Fail_Enable,"ax",%progbits
  94              		.align	2
  95              		.global	PWM_Fail_Enable
  96              		.code	16
  97              		.thumb_func
  98              		.type	PWM_Fail_Enable, %function
  99              	PWM_Fail_Enable:
 100              	.LFB1:
 161:Generated_Source\PSoC4/PWM_Fail.c **** 
 162:Generated_Source\PSoC4/PWM_Fail.c **** 
 163:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_Enable
 165:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM_Fail.c **** *
 167:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 168:Generated_Source\PSoC4/PWM_Fail.c **** *  Enables the PWM_Fail.
 169:Generated_Source\PSoC4/PWM_Fail.c **** *
 170:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 172:Generated_Source\PSoC4/PWM_Fail.c **** *
 173:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 174:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 175:Generated_Source\PSoC4/PWM_Fail.c **** *
 176:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_Enable(void)
 178:Generated_Source\PSoC4/PWM_Fail.c **** {
 101              		.loc 1 178 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 8
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105 0000 90B5     		push	{r4, r7, lr}
 106              		.cfi_def_cfa_offset 12
 107              		.cfi_offset 4, -12
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 6


 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 83B0     		sub	sp, sp, #12
 111              		.cfi_def_cfa_offset 24
 112 0004 00AF     		add	r7, sp, #0
 113              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/PWM_Fail.c **** 
 181:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 181 0
 115 0006 FC1D     		adds	r4, r7, #7
 116 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 117 000c 0300     		movs	r3, r0
 118 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_BLOCK_CONTROL_REG |= PWM_Fail_MASK;
 119              		.loc 1 182 0
 120 0010 094B     		ldr	r3, .L5
 121 0012 094A     		ldr	r2, .L5
 122 0014 1268     		ldr	r2, [r2]
 123 0016 0221     		movs	r1, #2
 124 0018 0A43     		orrs	r2, r1
 125 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 126              		.loc 1 183 0
 127 001c FB1D     		adds	r3, r7, #7
 128 001e 1B78     		ldrb	r3, [r3]
 129 0020 1800     		movs	r0, r3
 130 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/PWM_Fail.c **** 
 185:Generated_Source\PSoC4/PWM_Fail.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG)
 187:Generated_Source\PSoC4/PWM_Fail.c ****         #if (0u == PWM_Fail_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_TriggerCommand(PWM_Fail_MASK, PWM_Fail_CMD_START);
 131              		.loc 1 188 0
 132 0026 1821     		movs	r1, #24
 133 0028 0220     		movs	r0, #2
 134 002a FFF7FEFF 		bl	PWM_Fail_TriggerCommand
 189:Generated_Source\PSoC4/PWM_Fail.c ****         #endif /* (0u == PWM_Fail_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail__PWM_SEL == PWM_Fail_CONFIG) */
 191:Generated_Source\PSoC4/PWM_Fail.c **** 
 192:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__TIMER == PWM_Fail_CONFIG)
 193:Generated_Source\PSoC4/PWM_Fail.c ****         #if (0u == PWM_Fail_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_TriggerCommand(PWM_Fail_MASK, PWM_Fail_CMD_START);
 195:Generated_Source\PSoC4/PWM_Fail.c ****         #endif /* (0u == PWM_Fail_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail__TIMER == PWM_Fail_CONFIG) */
 197:Generated_Source\PSoC4/PWM_Fail.c ****     
 198:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail__QUAD == PWM_Fail_CONFIG)
 199:Generated_Source\PSoC4/PWM_Fail.c ****         #if (0u != PWM_Fail_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM_Fail.c ****             PWM_Fail_TriggerCommand(PWM_Fail_MASK, PWM_Fail_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM_Fail.c ****         #endif /* (0u != PWM_Fail_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/PWM_Fail.c ****     #endif  /* (PWM_Fail__QUAD == PWM_Fail_CONFIG) */
 203:Generated_Source\PSoC4/PWM_Fail.c **** }
 135              		.loc 1 203 0
 136 002e C046     		nop
 137 0030 BD46     		mov	sp, r7
 138 0032 03B0     		add	sp, sp, #12
 139              		@ sp needed
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 7


 140 0034 90BD     		pop	{r4, r7, pc}
 141              	.L6:
 142 0036 C046     		.align	2
 143              	.L5:
 144 0038 00000540 		.word	1074069504
 145              		.cfi_endproc
 146              	.LFE1:
 147              		.size	PWM_Fail_Enable, .-PWM_Fail_Enable
 148              		.section	.text.PWM_Fail_Start,"ax",%progbits
 149              		.align	2
 150              		.global	PWM_Fail_Start
 151              		.code	16
 152              		.thumb_func
 153              		.type	PWM_Fail_Start, %function
 154              	PWM_Fail_Start:
 155              	.LFB2:
 204:Generated_Source\PSoC4/PWM_Fail.c **** 
 205:Generated_Source\PSoC4/PWM_Fail.c **** 
 206:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_Start
 208:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM_Fail.c **** *
 210:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 211:Generated_Source\PSoC4/PWM_Fail.c **** *  Initializes the PWM_Fail with default customizer
 212:Generated_Source\PSoC4/PWM_Fail.c **** *  values when called the first time and enables the PWM_Fail.
 213:Generated_Source\PSoC4/PWM_Fail.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM_Fail.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM_Fail.c **** *
 216:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 218:Generated_Source\PSoC4/PWM_Fail.c **** *
 219:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 220:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 221:Generated_Source\PSoC4/PWM_Fail.c **** *
 222:Generated_Source\PSoC4/PWM_Fail.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM_Fail.c **** *  PWM_Fail_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM_Fail.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM_Fail.c **** *  to 1 the first time PWM_Fail_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM_Fail.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM_Fail.c **** *  calls to the PWM_Fail_Start() routine.
 228:Generated_Source\PSoC4/PWM_Fail.c **** *
 229:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_Start(void)
 231:Generated_Source\PSoC4/PWM_Fail.c **** {
 156              		.loc 1 231 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160 0000 80B5     		push	{r7, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/PWM_Fail.c ****     if (0u == PWM_Fail_initVar)
 166              		.loc 1 232 0
 167 0004 064B     		ldr	r3, .L9
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 8


 168 0006 1B78     		ldrb	r3, [r3]
 169 0008 002B     		cmp	r3, #0
 170 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/PWM_Fail.c ****     {
 234:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_Init();
 171              		.loc 1 234 0
 172 000c FFF7FEFF 		bl	PWM_Fail_Init
 235:Generated_Source\PSoC4/PWM_Fail.c ****         PWM_Fail_initVar = 1u;
 173              		.loc 1 235 0
 174 0010 034B     		ldr	r3, .L9
 175 0012 0122     		movs	r2, #1
 176 0014 1A70     		strb	r2, [r3]
 177              	.L8:
 236:Generated_Source\PSoC4/PWM_Fail.c ****     }
 237:Generated_Source\PSoC4/PWM_Fail.c **** 
 238:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_Enable();
 178              		.loc 1 238 0
 179 0016 FFF7FEFF 		bl	PWM_Fail_Enable
 239:Generated_Source\PSoC4/PWM_Fail.c **** }
 180              		.loc 1 239 0
 181 001a C046     		nop
 182 001c BD46     		mov	sp, r7
 183              		@ sp needed
 184 001e 80BD     		pop	{r7, pc}
 185              	.L10:
 186              		.align	2
 187              	.L9:
 188 0020 00000000 		.word	PWM_Fail_initVar
 189              		.cfi_endproc
 190              	.LFE2:
 191              		.size	PWM_Fail_Start, .-PWM_Fail_Start
 192              		.section	.text.PWM_Fail_Stop,"ax",%progbits
 193              		.align	2
 194              		.global	PWM_Fail_Stop
 195              		.code	16
 196              		.thumb_func
 197              		.type	PWM_Fail_Stop, %function
 198              	PWM_Fail_Stop:
 199              	.LFB3:
 240:Generated_Source\PSoC4/PWM_Fail.c **** 
 241:Generated_Source\PSoC4/PWM_Fail.c **** 
 242:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_Stop
 244:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM_Fail.c **** *
 246:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 247:Generated_Source\PSoC4/PWM_Fail.c **** *  Disables the PWM_Fail.
 248:Generated_Source\PSoC4/PWM_Fail.c **** *
 249:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 251:Generated_Source\PSoC4/PWM_Fail.c **** *
 252:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 253:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 254:Generated_Source\PSoC4/PWM_Fail.c **** *
 255:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_Stop(void)
 257:Generated_Source\PSoC4/PWM_Fail.c **** {
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 9


 200              		.loc 1 257 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 90B5     		push	{r4, r7, lr}
 205              		.cfi_def_cfa_offset 12
 206              		.cfi_offset 4, -12
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 83B0     		sub	sp, sp, #12
 210              		.cfi_def_cfa_offset 24
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM_Fail.c **** 
 260:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 213              		.loc 1 260 0
 214 0006 FC1D     		adds	r4, r7, #7
 215 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 216 000c 0300     		movs	r3, r0
 217 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/PWM_Fail.c **** 
 262:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_BLOCK_CONTROL_REG &= (uint32)~PWM_Fail_MASK;
 218              		.loc 1 262 0
 219 0010 074B     		ldr	r3, .L12
 220 0012 074A     		ldr	r2, .L12
 221 0014 1268     		ldr	r2, [r2]
 222 0016 0221     		movs	r1, #2
 223 0018 8A43     		bics	r2, r1
 224 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/PWM_Fail.c **** 
 264:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 225              		.loc 1 264 0
 226 001c FB1D     		adds	r3, r7, #7
 227 001e 1B78     		ldrb	r3, [r3]
 228 0020 1800     		movs	r0, r3
 229 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/PWM_Fail.c **** }
 230              		.loc 1 265 0
 231 0026 C046     		nop
 232 0028 BD46     		mov	sp, r7
 233 002a 03B0     		add	sp, sp, #12
 234              		@ sp needed
 235 002c 90BD     		pop	{r4, r7, pc}
 236              	.L13:
 237 002e C046     		.align	2
 238              	.L12:
 239 0030 00000540 		.word	1074069504
 240              		.cfi_endproc
 241              	.LFE3:
 242              		.size	PWM_Fail_Stop, .-PWM_Fail_Stop
 243              		.section	.text.PWM_Fail_SetMode,"ax",%progbits
 244              		.align	2
 245              		.global	PWM_Fail_SetMode
 246              		.code	16
 247              		.thumb_func
 248              		.type	PWM_Fail_SetMode, %function
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 10


 249              	PWM_Fail_SetMode:
 250              	.LFB4:
 266:Generated_Source\PSoC4/PWM_Fail.c **** 
 267:Generated_Source\PSoC4/PWM_Fail.c **** 
 268:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetMode
 270:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM_Fail.c **** *
 272:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 273:Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the operation mode of the PWM_Fail. This function is used when
 274:Generated_Source\PSoC4/PWM_Fail.c **** *  configured as a generic PWM_Fail and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM_Fail.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM_Fail.c **** *
 277:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 278:Generated_Source\PSoC4/PWM_Fail.c **** *  mode: Mode for the PWM_Fail to operate in
 279:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 280:Generated_Source\PSoC4/PWM_Fail.c **** *   - PWM_Fail_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM_Fail.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM_Fail.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM_Fail.c **** *
 289:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 290:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 291:Generated_Source\PSoC4/PWM_Fail.c **** *
 292:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM_Fail.c **** {
 251              		.loc 1 294 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 16
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 90B5     		push	{r4, r7, lr}
 256              		.cfi_def_cfa_offset 12
 257              		.cfi_offset 4, -12
 258              		.cfi_offset 7, -8
 259              		.cfi_offset 14, -4
 260 0002 85B0     		sub	sp, sp, #20
 261              		.cfi_def_cfa_offset 32
 262 0004 00AF     		add	r7, sp, #0
 263              		.cfi_def_cfa_register 7
 264 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM_Fail.c **** 
 297:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 265              		.loc 1 297 0
 266 0008 0F23     		movs	r3, #15
 267 000a FC18     		adds	r4, r7, r3
 268 000c FFF7FEFF 		bl	CyEnterCriticalSection
 269 0010 0300     		movs	r3, r0
 270 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/PWM_Fail.c **** 
 299:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_MODE_MASK;
 271              		.loc 1 299 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 11


 272 0014 0A4B     		ldr	r3, .L15
 273 0016 0A4A     		ldr	r2, .L15
 274 0018 1268     		ldr	r2, [r2]
 275 001a 0A49     		ldr	r1, .L15+4
 276 001c 0A40     		ands	r2, r1
 277 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= mode;
 278              		.loc 1 300 0
 279 0020 074B     		ldr	r3, .L15
 280 0022 074A     		ldr	r2, .L15
 281 0024 1168     		ldr	r1, [r2]
 282 0026 7A68     		ldr	r2, [r7, #4]
 283 0028 0A43     		orrs	r2, r1
 284 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/PWM_Fail.c **** 
 302:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 285              		.loc 1 302 0
 286 002c 0F23     		movs	r3, #15
 287 002e FB18     		adds	r3, r7, r3
 288 0030 1B78     		ldrb	r3, [r3]
 289 0032 1800     		movs	r0, r3
 290 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/PWM_Fail.c **** }
 291              		.loc 1 303 0
 292 0038 C046     		nop
 293 003a BD46     		mov	sp, r7
 294 003c 05B0     		add	sp, sp, #20
 295              		@ sp needed
 296 003e 90BD     		pop	{r4, r7, pc}
 297              	.L16:
 298              		.align	2
 299              	.L15:
 300 0040 40010540 		.word	1074069824
 301 0044 FFFFFFF8 		.word	-117440513
 302              		.cfi_endproc
 303              	.LFE4:
 304              		.size	PWM_Fail_SetMode, .-PWM_Fail_SetMode
 305              		.section	.text.PWM_Fail_SetQDMode,"ax",%progbits
 306              		.align	2
 307              		.global	PWM_Fail_SetQDMode
 308              		.code	16
 309              		.thumb_func
 310              		.type	PWM_Fail_SetQDMode, %function
 311              	PWM_Fail_SetQDMode:
 312              	.LFB5:
 304:Generated_Source\PSoC4/PWM_Fail.c **** 
 305:Generated_Source\PSoC4/PWM_Fail.c **** 
 306:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetQDMode
 308:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 309:Generated_Source\PSoC4/PWM_Fail.c **** *
 310:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 311:Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/PWM_Fail.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/PWM_Fail.c **** *
 314:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM_Fail.c **** *  qdMode: Quadrature Decoder mode
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 12


 316:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 317:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM_Fail.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM_Fail.c **** *
 322:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 323:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 324:Generated_Source\PSoC4/PWM_Fail.c **** *
 325:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM_Fail.c **** {
 313              		.loc 1 327 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 16
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317 0000 90B5     		push	{r4, r7, lr}
 318              		.cfi_def_cfa_offset 12
 319              		.cfi_offset 4, -12
 320              		.cfi_offset 7, -8
 321              		.cfi_offset 14, -4
 322 0002 85B0     		sub	sp, sp, #20
 323              		.cfi_def_cfa_offset 32
 324 0004 00AF     		add	r7, sp, #0
 325              		.cfi_def_cfa_register 7
 326 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM_Fail.c **** 
 330:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 327              		.loc 1 330 0
 328 0008 0F23     		movs	r3, #15
 329 000a FC18     		adds	r4, r7, r3
 330 000c FFF7FEFF 		bl	CyEnterCriticalSection
 331 0010 0300     		movs	r3, r0
 332 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/PWM_Fail.c **** 
 332:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_QUAD_MODE_MASK;
 333              		.loc 1 332 0
 334 0014 0A4B     		ldr	r3, .L18
 335 0016 0A4A     		ldr	r2, .L18
 336 0018 1268     		ldr	r2, [r2]
 337 001a 0A49     		ldr	r1, .L18+4
 338 001c 0A40     		ands	r2, r1
 339 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= qdMode;
 340              		.loc 1 333 0
 341 0020 074B     		ldr	r3, .L18
 342 0022 074A     		ldr	r2, .L18
 343 0024 1168     		ldr	r1, [r2]
 344 0026 7A68     		ldr	r2, [r7, #4]
 345 0028 0A43     		orrs	r2, r1
 346 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/PWM_Fail.c **** 
 335:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 347              		.loc 1 335 0
 348 002c 0F23     		movs	r3, #15
 349 002e FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 13


 350 0030 1B78     		ldrb	r3, [r3]
 351 0032 1800     		movs	r0, r3
 352 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/PWM_Fail.c **** }
 353              		.loc 1 336 0
 354 0038 C046     		nop
 355 003a BD46     		mov	sp, r7
 356 003c 05B0     		add	sp, sp, #20
 357              		@ sp needed
 358 003e 90BD     		pop	{r4, r7, pc}
 359              	.L19:
 360              		.align	2
 361              	.L18:
 362 0040 40010540 		.word	1074069824
 363 0044 FFFF8FFF 		.word	-7340033
 364              		.cfi_endproc
 365              	.LFE5:
 366              		.size	PWM_Fail_SetQDMode, .-PWM_Fail_SetQDMode
 367              		.section	.text.PWM_Fail_SetPrescaler,"ax",%progbits
 368              		.align	2
 369              		.global	PWM_Fail_SetPrescaler
 370              		.code	16
 371              		.thumb_func
 372              		.type	PWM_Fail_SetPrescaler, %function
 373              	PWM_Fail_SetPrescaler:
 374              	.LFB6:
 337:Generated_Source\PSoC4/PWM_Fail.c **** 
 338:Generated_Source\PSoC4/PWM_Fail.c **** 
 339:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPrescaler
 341:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM_Fail.c **** *
 343:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 344:Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM_Fail.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM_Fail.c **** *
 347:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM_Fail.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 350:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM_Fail.c **** *
 359:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 360:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 361:Generated_Source\PSoC4/PWM_Fail.c **** *
 362:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/PWM_Fail.c **** {
 375              		.loc 1 364 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 14


 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379 0000 90B5     		push	{r4, r7, lr}
 380              		.cfi_def_cfa_offset 12
 381              		.cfi_offset 4, -12
 382              		.cfi_offset 7, -8
 383              		.cfi_offset 14, -4
 384 0002 85B0     		sub	sp, sp, #20
 385              		.cfi_def_cfa_offset 32
 386 0004 00AF     		add	r7, sp, #0
 387              		.cfi_def_cfa_register 7
 388 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM_Fail.c **** 
 367:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 389              		.loc 1 367 0
 390 0008 0F23     		movs	r3, #15
 391 000a FC18     		adds	r4, r7, r3
 392 000c FFF7FEFF 		bl	CyEnterCriticalSection
 393 0010 0300     		movs	r3, r0
 394 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/PWM_Fail.c **** 
 369:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_PRESCALER_MASK;
 395              		.loc 1 369 0
 396 0014 0A4B     		ldr	r3, .L21
 397 0016 0A4A     		ldr	r2, .L21
 398 0018 1268     		ldr	r2, [r2]
 399 001a 0A49     		ldr	r1, .L21+4
 400 001c 0A40     		ands	r2, r1
 401 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= prescaler;
 402              		.loc 1 370 0
 403 0020 074B     		ldr	r3, .L21
 404 0022 074A     		ldr	r2, .L21
 405 0024 1168     		ldr	r1, [r2]
 406 0026 7A68     		ldr	r2, [r7, #4]
 407 0028 0A43     		orrs	r2, r1
 408 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/PWM_Fail.c **** 
 372:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 409              		.loc 1 372 0
 410 002c 0F23     		movs	r3, #15
 411 002e FB18     		adds	r3, r7, r3
 412 0030 1B78     		ldrb	r3, [r3]
 413 0032 1800     		movs	r0, r3
 414 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/PWM_Fail.c **** }
 415              		.loc 1 373 0
 416 0038 C046     		nop
 417 003a BD46     		mov	sp, r7
 418 003c 05B0     		add	sp, sp, #20
 419              		@ sp needed
 420 003e 90BD     		pop	{r4, r7, pc}
 421              	.L22:
 422              		.align	2
 423              	.L21:
 424 0040 40010540 		.word	1074069824
 425 0044 FF00FFFF 		.word	-65281
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 15


 426              		.cfi_endproc
 427              	.LFE6:
 428              		.size	PWM_Fail_SetPrescaler, .-PWM_Fail_SetPrescaler
 429              		.section	.text.PWM_Fail_SetOneShot,"ax",%progbits
 430              		.align	2
 431              		.global	PWM_Fail_SetOneShot
 432              		.code	16
 433              		.thumb_func
 434              		.type	PWM_Fail_SetOneShot, %function
 435              	PWM_Fail_SetOneShot:
 436              	.LFB7:
 374:Generated_Source\PSoC4/PWM_Fail.c **** 
 375:Generated_Source\PSoC4/PWM_Fail.c **** 
 376:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetOneShot
 378:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM_Fail.c **** *
 380:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 381:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the register that controls whether the PWM_Fail runs
 382:Generated_Source\PSoC4/PWM_Fail.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM_Fail.c **** *  PWM_Fail operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM_Fail.c **** *
 385:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 386:Generated_Source\PSoC4/PWM_Fail.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 388:Generated_Source\PSoC4/PWM_Fail.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM_Fail.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM_Fail.c **** *
 391:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 392:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 393:Generated_Source\PSoC4/PWM_Fail.c **** *
 394:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM_Fail.c **** {
 437              		.loc 1 396 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 16
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441 0000 90B5     		push	{r4, r7, lr}
 442              		.cfi_def_cfa_offset 12
 443              		.cfi_offset 4, -12
 444              		.cfi_offset 7, -8
 445              		.cfi_offset 14, -4
 446 0002 85B0     		sub	sp, sp, #20
 447              		.cfi_def_cfa_offset 32
 448 0004 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 450 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM_Fail.c **** 
 399:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 451              		.loc 1 399 0
 452 0008 0F23     		movs	r3, #15
 453 000a FC18     		adds	r4, r7, r3
 454 000c FFF7FEFF 		bl	CyEnterCriticalSection
 455 0010 0300     		movs	r3, r0
 456 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 16


 400:Generated_Source\PSoC4/PWM_Fail.c **** 
 401:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_ONESHOT_MASK;
 457              		.loc 1 401 0
 458 0014 0C4B     		ldr	r3, .L24
 459 0016 0C4A     		ldr	r2, .L24
 460 0018 1268     		ldr	r2, [r2]
 461 001a 0C49     		ldr	r1, .L24+4
 462 001c 0A40     		ands	r2, r1
 463 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_Fail_1BIT_MASK) <<
 464              		.loc 1 402 0
 465 0020 094B     		ldr	r3, .L24
 466 0022 094A     		ldr	r2, .L24
 467 0024 1168     		ldr	r1, [r2]
 468 0026 7A68     		ldr	r2, [r7, #4]
 469 0028 9004     		lsls	r0, r2, #18
 470 002a 8022     		movs	r2, #128
 471 002c D202     		lsls	r2, r2, #11
 472 002e 0240     		ands	r2, r0
 473 0030 0A43     		orrs	r2, r1
 474 0032 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/PWM_Fail.c ****                                                                PWM_Fail_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/PWM_Fail.c **** 
 405:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 475              		.loc 1 405 0
 476 0034 0F23     		movs	r3, #15
 477 0036 FB18     		adds	r3, r7, r3
 478 0038 1B78     		ldrb	r3, [r3]
 479 003a 1800     		movs	r0, r3
 480 003c FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/PWM_Fail.c **** }
 481              		.loc 1 406 0
 482 0040 C046     		nop
 483 0042 BD46     		mov	sp, r7
 484 0044 05B0     		add	sp, sp, #20
 485              		@ sp needed
 486 0046 90BD     		pop	{r4, r7, pc}
 487              	.L25:
 488              		.align	2
 489              	.L24:
 490 0048 40010540 		.word	1074069824
 491 004c FFFFFBFF 		.word	-262145
 492              		.cfi_endproc
 493              	.LFE7:
 494              		.size	PWM_Fail_SetOneShot, .-PWM_Fail_SetOneShot
 495              		.section	.text.PWM_Fail_SetPWMMode,"ax",%progbits
 496              		.align	2
 497              		.global	PWM_Fail_SetPWMMode
 498              		.code	16
 499              		.thumb_func
 500              		.type	PWM_Fail_SetPWMMode, %function
 501              	PWM_Fail_SetPWMMode:
 502              	.LFB8:
 407:Generated_Source\PSoC4/PWM_Fail.c **** 
 408:Generated_Source\PSoC4/PWM_Fail.c **** 
 409:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPWMMode
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 17


 411:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 412:Generated_Source\PSoC4/PWM_Fail.c **** *
 413:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 414:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM_Fail.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM_Fail.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM_Fail.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM_Fail.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM_Fail.c **** *
 420:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM_Fail.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM_Fail.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 424:Generated_Source\PSoC4/PWM_Fail.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM_Fail.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/PWM_Fail.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM_Fail.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM_Fail.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM_Fail.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/PWM_Fail.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM_Fail.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM_Fail.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM_Fail.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/PWM_Fail.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM_Fail.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM_Fail.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM_Fail.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM_Fail.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM_Fail.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM_Fail.c **** *
 445:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 446:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 447:Generated_Source\PSoC4/PWM_Fail.c **** *
 448:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM_Fail.c **** {
 503              		.loc 1 450 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 8
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507 0000 80B5     		push	{r7, lr}
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 7, -8
 510              		.cfi_offset 14, -4
 511 0002 82B0     		sub	sp, sp, #8
 512              		.cfi_def_cfa_offset 16
 513 0004 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 515 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL2_REG = (modeMask & PWM_Fail_6BIT_MASK);
 516              		.loc 1 451 0
 517 0008 044B     		ldr	r3, .L27
 518 000a 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 18


 519 000c 3F21     		movs	r1, #63
 520 000e 0A40     		ands	r2, r1
 521 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/PWM_Fail.c **** }
 522              		.loc 1 452 0
 523 0012 C046     		nop
 524 0014 BD46     		mov	sp, r7
 525 0016 02B0     		add	sp, sp, #8
 526              		@ sp needed
 527 0018 80BD     		pop	{r7, pc}
 528              	.L28:
 529 001a C046     		.align	2
 530              	.L27:
 531 001c 68010540 		.word	1074069864
 532              		.cfi_endproc
 533              	.LFE8:
 534              		.size	PWM_Fail_SetPWMMode, .-PWM_Fail_SetPWMMode
 535              		.section	.text.PWM_Fail_SetPWMSyncKill,"ax",%progbits
 536              		.align	2
 537              		.global	PWM_Fail_SetPWMSyncKill
 538              		.code	16
 539              		.thumb_func
 540              		.type	PWM_Fail_SetPWMSyncKill, %function
 541              	PWM_Fail_SetPWMSyncKill:
 542              	.LFB9:
 453:Generated_Source\PSoC4/PWM_Fail.c **** 
 454:Generated_Source\PSoC4/PWM_Fail.c **** 
 455:Generated_Source\PSoC4/PWM_Fail.c **** 
 456:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPWMSyncKill
 458:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM_Fail.c **** *
 460:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 461:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM_Fail.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM_Fail.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM_Fail.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM_Fail.c **** *
 466:Generated_Source\PSoC4/PWM_Fail.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM_Fail.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM_Fail.c **** *
 469:Generated_Source\PSoC4/PWM_Fail.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/PWM_Fail.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM_Fail.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM_Fail.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM_Fail.c **** 
 474:Generated_Source\PSoC4/PWM_Fail.c **** *
 475:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM_Fail.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 478:Generated_Source\PSoC4/PWM_Fail.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM_Fail.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM_Fail.c **** *
 481:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 482:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 483:Generated_Source\PSoC4/PWM_Fail.c **** *
 484:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 19


 485:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/PWM_Fail.c **** {
 543              		.loc 1 486 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 16
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 90B5     		push	{r4, r7, lr}
 548              		.cfi_def_cfa_offset 12
 549              		.cfi_offset 4, -12
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 85B0     		sub	sp, sp, #20
 553              		.cfi_def_cfa_offset 32
 554 0004 00AF     		add	r7, sp, #0
 555              		.cfi_def_cfa_register 7
 556 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM_Fail.c **** 
 489:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 557              		.loc 1 489 0
 558 0008 0F23     		movs	r3, #15
 559 000a FC18     		adds	r4, r7, r3
 560 000c FFF7FEFF 		bl	CyEnterCriticalSection
 561 0010 0300     		movs	r3, r0
 562 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/PWM_Fail.c **** 
 491:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_PWM_SYNC_KILL_MASK;
 563              		.loc 1 491 0
 564 0014 0C4B     		ldr	r3, .L30
 565 0016 0C4A     		ldr	r2, .L30
 566 0018 1268     		ldr	r2, [r2]
 567 001a 0421     		movs	r1, #4
 568 001c 8A43     		bics	r2, r1
 569 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_Fail_1BIT_MASK)  <<
 570              		.loc 1 492 0
 571 0020 094B     		ldr	r3, .L30
 572 0022 094A     		ldr	r2, .L30
 573 0024 1168     		ldr	r1, [r2]
 574 0026 7A68     		ldr	r2, [r7, #4]
 575 0028 9200     		lsls	r2, r2, #2
 576 002a 0420     		movs	r0, #4
 577 002c 0240     		ands	r2, r0
 578 002e 0A43     		orrs	r2, r1
 579 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/PWM_Fail.c ****                                                PWM_Fail_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM_Fail.c **** 
 495:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 580              		.loc 1 495 0
 581 0032 0F23     		movs	r3, #15
 582 0034 FB18     		adds	r3, r7, r3
 583 0036 1B78     		ldrb	r3, [r3]
 584 0038 1800     		movs	r0, r3
 585 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/PWM_Fail.c **** }
 586              		.loc 1 496 0
 587 003e C046     		nop
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 20


 588 0040 BD46     		mov	sp, r7
 589 0042 05B0     		add	sp, sp, #20
 590              		@ sp needed
 591 0044 90BD     		pop	{r4, r7, pc}
 592              	.L31:
 593 0046 C046     		.align	2
 594              	.L30:
 595 0048 40010540 		.word	1074069824
 596              		.cfi_endproc
 597              	.LFE9:
 598              		.size	PWM_Fail_SetPWMSyncKill, .-PWM_Fail_SetPWMSyncKill
 599              		.section	.text.PWM_Fail_SetPWMStopOnKill,"ax",%progbits
 600              		.align	2
 601              		.global	PWM_Fail_SetPWMStopOnKill
 602              		.code	16
 603              		.thumb_func
 604              		.type	PWM_Fail_SetPWMStopOnKill, %function
 605              	PWM_Fail_SetPWMStopOnKill:
 606              	.LFB10:
 497:Generated_Source\PSoC4/PWM_Fail.c **** 
 498:Generated_Source\PSoC4/PWM_Fail.c **** 
 499:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM_Fail.c **** *
 503:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 504:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM_Fail.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM_Fail.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/PWM_Fail.c **** *
 508:Generated_Source\PSoC4/PWM_Fail.c **** *
 509:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM_Fail.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 512:Generated_Source\PSoC4/PWM_Fail.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM_Fail.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM_Fail.c **** *
 515:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 516:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 517:Generated_Source\PSoC4/PWM_Fail.c **** *
 518:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM_Fail.c **** {
 607              		.loc 1 520 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 16
 610              		@ frame_needed = 1, uses_anonymous_args = 0
 611 0000 90B5     		push	{r4, r7, lr}
 612              		.cfi_def_cfa_offset 12
 613              		.cfi_offset 4, -12
 614              		.cfi_offset 7, -8
 615              		.cfi_offset 14, -4
 616 0002 85B0     		sub	sp, sp, #20
 617              		.cfi_def_cfa_offset 32
 618 0004 00AF     		add	r7, sp, #0
 619              		.cfi_def_cfa_register 7
 620 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 21


 521:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/PWM_Fail.c **** 
 523:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 621              		.loc 1 523 0
 622 0008 0F23     		movs	r3, #15
 623 000a FC18     		adds	r4, r7, r3
 624 000c FFF7FEFF 		bl	CyEnterCriticalSection
 625 0010 0300     		movs	r3, r0
 626 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/PWM_Fail.c **** 
 525:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_PWM_STOP_KILL_MASK;
 627              		.loc 1 525 0
 628 0014 0C4B     		ldr	r3, .L33
 629 0016 0C4A     		ldr	r2, .L33
 630 0018 1268     		ldr	r2, [r2]
 631 001a 0821     		movs	r1, #8
 632 001c 8A43     		bics	r2, r1
 633 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_Fail_1BIT_MASK)  <<
 634              		.loc 1 526 0
 635 0020 094B     		ldr	r3, .L33
 636 0022 094A     		ldr	r2, .L33
 637 0024 1168     		ldr	r1, [r2]
 638 0026 7A68     		ldr	r2, [r7, #4]
 639 0028 D200     		lsls	r2, r2, #3
 640 002a 0820     		movs	r0, #8
 641 002c 0240     		ands	r2, r0
 642 002e 0A43     		orrs	r2, r1
 643 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/PWM_Fail.c ****                                                          PWM_Fail_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM_Fail.c **** 
 529:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 644              		.loc 1 529 0
 645 0032 0F23     		movs	r3, #15
 646 0034 FB18     		adds	r3, r7, r3
 647 0036 1B78     		ldrb	r3, [r3]
 648 0038 1800     		movs	r0, r3
 649 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/PWM_Fail.c **** }
 650              		.loc 1 530 0
 651 003e C046     		nop
 652 0040 BD46     		mov	sp, r7
 653 0042 05B0     		add	sp, sp, #20
 654              		@ sp needed
 655 0044 90BD     		pop	{r4, r7, pc}
 656              	.L34:
 657 0046 C046     		.align	2
 658              	.L33:
 659 0048 40010540 		.word	1074069824
 660              		.cfi_endproc
 661              	.LFE10:
 662              		.size	PWM_Fail_SetPWMStopOnKill, .-PWM_Fail_SetPWMStopOnKill
 663              		.section	.text.PWM_Fail_SetPWMDeadTime,"ax",%progbits
 664              		.align	2
 665              		.global	PWM_Fail_SetPWMDeadTime
 666              		.code	16
 667              		.thumb_func
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 22


 668              		.type	PWM_Fail_SetPWMDeadTime, %function
 669              	PWM_Fail_SetPWMDeadTime:
 670              	.LFB11:
 531:Generated_Source\PSoC4/PWM_Fail.c **** 
 532:Generated_Source\PSoC4/PWM_Fail.c **** 
 533:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM_Fail.c **** *
 537:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 538:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM_Fail.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/PWM_Fail.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM_Fail.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM_Fail.c **** 
 543:Generated_Source\PSoC4/PWM_Fail.c **** *
 544:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM_Fail.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM_Fail.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM_Fail.c **** *
 548:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 549:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 550:Generated_Source\PSoC4/PWM_Fail.c **** *
 551:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM_Fail.c **** {
 671              		.loc 1 553 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 16
 674              		@ frame_needed = 1, uses_anonymous_args = 0
 675 0000 90B5     		push	{r4, r7, lr}
 676              		.cfi_def_cfa_offset 12
 677              		.cfi_offset 4, -12
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 85B0     		sub	sp, sp, #20
 681              		.cfi_def_cfa_offset 32
 682 0004 00AF     		add	r7, sp, #0
 683              		.cfi_def_cfa_register 7
 684 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM_Fail.c **** 
 556:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 685              		.loc 1 556 0
 686 0008 0F23     		movs	r3, #15
 687 000a FC18     		adds	r4, r7, r3
 688 000c FFF7FEFF 		bl	CyEnterCriticalSection
 689 0010 0300     		movs	r3, r0
 690 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/PWM_Fail.c **** 
 558:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_PRESCALER_MASK;
 691              		.loc 1 558 0
 692 0014 0C4B     		ldr	r3, .L36
 693 0016 0C4A     		ldr	r2, .L36
 694 0018 1268     		ldr	r2, [r2]
 695 001a 0C49     		ldr	r1, .L36+4
 696 001c 0A40     		ands	r2, r1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 23


 697 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= ((uint32)((deadTime & PWM_Fail_8BIT_MASK) <<
 698              		.loc 1 559 0
 699 0020 094B     		ldr	r3, .L36
 700 0022 094A     		ldr	r2, .L36
 701 0024 1168     		ldr	r1, [r2]
 702 0026 7A68     		ldr	r2, [r7, #4]
 703 0028 1202     		lsls	r2, r2, #8
 704 002a 1204     		lsls	r2, r2, #16
 705 002c 120C     		lsrs	r2, r2, #16
 706 002e 0A43     		orrs	r2, r1
 707 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/PWM_Fail.c ****                                                           PWM_Fail_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM_Fail.c **** 
 562:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 708              		.loc 1 562 0
 709 0032 0F23     		movs	r3, #15
 710 0034 FB18     		adds	r3, r7, r3
 711 0036 1B78     		ldrb	r3, [r3]
 712 0038 1800     		movs	r0, r3
 713 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/PWM_Fail.c **** }
 714              		.loc 1 563 0
 715 003e C046     		nop
 716 0040 BD46     		mov	sp, r7
 717 0042 05B0     		add	sp, sp, #20
 718              		@ sp needed
 719 0044 90BD     		pop	{r4, r7, pc}
 720              	.L37:
 721 0046 C046     		.align	2
 722              	.L36:
 723 0048 40010540 		.word	1074069824
 724 004c FF00FFFF 		.word	-65281
 725              		.cfi_endproc
 726              	.LFE11:
 727              		.size	PWM_Fail_SetPWMDeadTime, .-PWM_Fail_SetPWMDeadTime
 728              		.section	.text.PWM_Fail_SetPWMInvert,"ax",%progbits
 729              		.align	2
 730              		.global	PWM_Fail_SetPWMInvert
 731              		.code	16
 732              		.thumb_func
 733              		.type	PWM_Fail_SetPWMInvert, %function
 734              	PWM_Fail_SetPWMInvert:
 735              	.LFB12:
 564:Generated_Source\PSoC4/PWM_Fail.c **** 
 565:Generated_Source\PSoC4/PWM_Fail.c **** 
 566:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPWMInvert
 568:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM_Fail.c **** *
 570:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 571:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM_Fail.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/PWM_Fail.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/PWM_Fail.c **** *
 575:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM_Fail.c **** *  mask: Mask of outputs to invert.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 24


 577:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 578:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM_Fail.c **** *         - PWM_Fail_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM_Fail.c **** *
 581:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 582:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 583:Generated_Source\PSoC4/PWM_Fail.c **** *
 584:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM_Fail.c **** {
 736              		.loc 1 586 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 16
 739              		@ frame_needed = 1, uses_anonymous_args = 0
 740 0000 90B5     		push	{r4, r7, lr}
 741              		.cfi_def_cfa_offset 12
 742              		.cfi_offset 4, -12
 743              		.cfi_offset 7, -8
 744              		.cfi_offset 14, -4
 745 0002 85B0     		sub	sp, sp, #20
 746              		.cfi_def_cfa_offset 32
 747 0004 00AF     		add	r7, sp, #0
 748              		.cfi_def_cfa_register 7
 749 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM_Fail.c **** 
 589:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 750              		.loc 1 589 0
 751 0008 0F23     		movs	r3, #15
 752 000a FC18     		adds	r4, r7, r3
 753 000c FFF7FEFF 		bl	CyEnterCriticalSection
 754 0010 0300     		movs	r3, r0
 755 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/PWM_Fail.c **** 
 591:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_INV_OUT_MASK;
 756              		.loc 1 591 0
 757 0014 0A4B     		ldr	r3, .L39
 758 0016 0A4A     		ldr	r2, .L39
 759 0018 1268     		ldr	r2, [r2]
 760 001a 0A49     		ldr	r1, .L39+4
 761 001c 0A40     		ands	r2, r1
 762 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= mask;
 763              		.loc 1 592 0
 764 0020 074B     		ldr	r3, .L39
 765 0022 074A     		ldr	r2, .L39
 766 0024 1168     		ldr	r1, [r2]
 767 0026 7A68     		ldr	r2, [r7, #4]
 768 0028 0A43     		orrs	r2, r1
 769 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/PWM_Fail.c **** 
 594:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 770              		.loc 1 594 0
 771 002c 0F23     		movs	r3, #15
 772 002e FB18     		adds	r3, r7, r3
 773 0030 1B78     		ldrb	r3, [r3]
 774 0032 1800     		movs	r0, r3
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 25


 775 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/PWM_Fail.c **** }
 776              		.loc 1 595 0
 777 0038 C046     		nop
 778 003a BD46     		mov	sp, r7
 779 003c 05B0     		add	sp, sp, #20
 780              		@ sp needed
 781 003e 90BD     		pop	{r4, r7, pc}
 782              	.L40:
 783              		.align	2
 784              	.L39:
 785 0040 40010540 		.word	1074069824
 786 0044 FFFFCFFF 		.word	-3145729
 787              		.cfi_endproc
 788              	.LFE12:
 789              		.size	PWM_Fail_SetPWMInvert, .-PWM_Fail_SetPWMInvert
 790              		.section	.text.PWM_Fail_WriteCounter,"ax",%progbits
 791              		.align	2
 792              		.global	PWM_Fail_WriteCounter
 793              		.code	16
 794              		.thumb_func
 795              		.type	PWM_Fail_WriteCounter, %function
 796              	PWM_Fail_WriteCounter:
 797              	.LFB13:
 596:Generated_Source\PSoC4/PWM_Fail.c **** 
 597:Generated_Source\PSoC4/PWM_Fail.c **** 
 598:Generated_Source\PSoC4/PWM_Fail.c **** 
 599:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_WriteCounter
 601:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM_Fail.c **** *
 603:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 604:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/PWM_Fail.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM_Fail.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM_Fail.c **** *
 608:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM_Fail.c **** *  count: value to write
 610:Generated_Source\PSoC4/PWM_Fail.c **** *
 611:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 612:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 613:Generated_Source\PSoC4/PWM_Fail.c **** *
 614:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM_Fail.c **** {
 798              		.loc 1 616 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 8
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802 0000 80B5     		push	{r7, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 82B0     		sub	sp, sp, #8
 807              		.cfi_def_cfa_offset 16
 808 0004 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 26


 810 0006 7860     		str	r0, [r7, #4]
 617:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_COUNTER_REG = (count & PWM_Fail_16BIT_MASK);
 811              		.loc 1 617 0
 812 0008 044B     		ldr	r3, .L42
 813 000a 7A68     		ldr	r2, [r7, #4]
 814 000c 1204     		lsls	r2, r2, #16
 815 000e 120C     		lsrs	r2, r2, #16
 816 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/PWM_Fail.c **** }
 817              		.loc 1 618 0
 818 0012 C046     		nop
 819 0014 BD46     		mov	sp, r7
 820 0016 02B0     		add	sp, sp, #8
 821              		@ sp needed
 822 0018 80BD     		pop	{r7, pc}
 823              	.L43:
 824 001a C046     		.align	2
 825              	.L42:
 826 001c 48010540 		.word	1074069832
 827              		.cfi_endproc
 828              	.LFE13:
 829              		.size	PWM_Fail_WriteCounter, .-PWM_Fail_WriteCounter
 830              		.section	.text.PWM_Fail_ReadCounter,"ax",%progbits
 831              		.align	2
 832              		.global	PWM_Fail_ReadCounter
 833              		.code	16
 834              		.thumb_func
 835              		.type	PWM_Fail_ReadCounter, %function
 836              	PWM_Fail_ReadCounter:
 837              	.LFB14:
 619:Generated_Source\PSoC4/PWM_Fail.c **** 
 620:Generated_Source\PSoC4/PWM_Fail.c **** 
 621:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadCounter
 623:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM_Fail.c **** *
 625:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 626:Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM_Fail.c **** *
 628:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 630:Generated_Source\PSoC4/PWM_Fail.c **** *
 631:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 632:Generated_Source\PSoC4/PWM_Fail.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM_Fail.c **** *
 634:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM_Fail.c **** {
 838              		.loc 1 636 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 1, uses_anonymous_args = 0
 842 0000 80B5     		push	{r7, lr}
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 27


 847              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_COUNTER_REG & PWM_Fail_16BIT_MASK);
 848              		.loc 1 637 0
 849 0004 034B     		ldr	r3, .L46
 850 0006 1B68     		ldr	r3, [r3]
 851 0008 1B04     		lsls	r3, r3, #16
 852 000a 1B0C     		lsrs	r3, r3, #16
 638:Generated_Source\PSoC4/PWM_Fail.c **** }
 853              		.loc 1 638 0
 854 000c 1800     		movs	r0, r3
 855 000e BD46     		mov	sp, r7
 856              		@ sp needed
 857 0010 80BD     		pop	{r7, pc}
 858              	.L47:
 859 0012 C046     		.align	2
 860              	.L46:
 861 0014 48010540 		.word	1074069832
 862              		.cfi_endproc
 863              	.LFE14:
 864              		.size	PWM_Fail_ReadCounter, .-PWM_Fail_ReadCounter
 865              		.section	.text.PWM_Fail_SetCounterMode,"ax",%progbits
 866              		.align	2
 867              		.global	PWM_Fail_SetCounterMode
 868              		.code	16
 869              		.thumb_func
 870              		.type	PWM_Fail_SetCounterMode, %function
 871              	PWM_Fail_SetCounterMode:
 872              	.LFB15:
 639:Generated_Source\PSoC4/PWM_Fail.c **** 
 640:Generated_Source\PSoC4/PWM_Fail.c **** 
 641:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetCounterMode
 643:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM_Fail.c **** *
 645:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 646:Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM_Fail.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM_Fail.c **** *
 649:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM_Fail.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 652:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM_Fail.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/PWM_Fail.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/PWM_Fail.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM_Fail.c **** *
 660:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 661:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 662:Generated_Source\PSoC4/PWM_Fail.c **** *
 663:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/PWM_Fail.c **** {
 873              		.loc 1 665 0
 874              		.cfi_startproc
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 28


 875              		@ args = 0, pretend = 0, frame = 16
 876              		@ frame_needed = 1, uses_anonymous_args = 0
 877 0000 90B5     		push	{r4, r7, lr}
 878              		.cfi_def_cfa_offset 12
 879              		.cfi_offset 4, -12
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 85B0     		sub	sp, sp, #20
 883              		.cfi_def_cfa_offset 32
 884 0004 00AF     		add	r7, sp, #0
 885              		.cfi_def_cfa_register 7
 886 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM_Fail.c **** 
 668:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 887              		.loc 1 668 0
 888 0008 0F23     		movs	r3, #15
 889 000a FC18     		adds	r4, r7, r3
 890 000c FFF7FEFF 		bl	CyEnterCriticalSection
 891 0010 0300     		movs	r3, r0
 892 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/PWM_Fail.c **** 
 670:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_UPDOWN_MASK;
 893              		.loc 1 670 0
 894 0014 0A4B     		ldr	r3, .L49
 895 0016 0A4A     		ldr	r2, .L49
 896 0018 1268     		ldr	r2, [r2]
 897 001a 0A49     		ldr	r1, .L49+4
 898 001c 0A40     		ands	r2, r1
 899 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= counterMode;
 900              		.loc 1 671 0
 901 0020 074B     		ldr	r3, .L49
 902 0022 074A     		ldr	r2, .L49
 903 0024 1168     		ldr	r1, [r2]
 904 0026 7A68     		ldr	r2, [r7, #4]
 905 0028 0A43     		orrs	r2, r1
 906 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/PWM_Fail.c **** 
 673:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 907              		.loc 1 673 0
 908 002c 0F23     		movs	r3, #15
 909 002e FB18     		adds	r3, r7, r3
 910 0030 1B78     		ldrb	r3, [r3]
 911 0032 1800     		movs	r0, r3
 912 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/PWM_Fail.c **** }
 913              		.loc 1 674 0
 914 0038 C046     		nop
 915 003a BD46     		mov	sp, r7
 916 003c 05B0     		add	sp, sp, #20
 917              		@ sp needed
 918 003e 90BD     		pop	{r4, r7, pc}
 919              	.L50:
 920              		.align	2
 921              	.L49:
 922 0040 40010540 		.word	1074069824
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 29


 923 0044 FFFFFCFF 		.word	-196609
 924              		.cfi_endproc
 925              	.LFE15:
 926              		.size	PWM_Fail_SetCounterMode, .-PWM_Fail_SetCounterMode
 927              		.section	.text.PWM_Fail_WritePeriod,"ax",%progbits
 928              		.align	2
 929              		.global	PWM_Fail_WritePeriod
 930              		.code	16
 931              		.thumb_func
 932              		.type	PWM_Fail_WritePeriod, %function
 933              	PWM_Fail_WritePeriod:
 934              	.LFB16:
 675:Generated_Source\PSoC4/PWM_Fail.c **** 
 676:Generated_Source\PSoC4/PWM_Fail.c **** 
 677:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_WritePeriod
 679:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM_Fail.c **** *
 681:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 682:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM_Fail.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM_Fail.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM_Fail.c **** *
 686:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM_Fail.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM_Fail.c **** *
 689:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 690:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 691:Generated_Source\PSoC4/PWM_Fail.c **** *
 692:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM_Fail.c **** {
 935              		.loc 1 694 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 8
 938              		@ frame_needed = 1, uses_anonymous_args = 0
 939 0000 80B5     		push	{r7, lr}
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
 943 0002 82B0     		sub	sp, sp, #8
 944              		.cfi_def_cfa_offset 16
 945 0004 00AF     		add	r7, sp, #0
 946              		.cfi_def_cfa_register 7
 947 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_PERIOD_REG = (period & PWM_Fail_16BIT_MASK);
 948              		.loc 1 695 0
 949 0008 044B     		ldr	r3, .L52
 950 000a 7A68     		ldr	r2, [r7, #4]
 951 000c 1204     		lsls	r2, r2, #16
 952 000e 120C     		lsrs	r2, r2, #16
 953 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/PWM_Fail.c **** }
 954              		.loc 1 696 0
 955 0012 C046     		nop
 956 0014 BD46     		mov	sp, r7
 957 0016 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 30


 958              		@ sp needed
 959 0018 80BD     		pop	{r7, pc}
 960              	.L53:
 961 001a C046     		.align	2
 962              	.L52:
 963 001c 54010540 		.word	1074069844
 964              		.cfi_endproc
 965              	.LFE16:
 966              		.size	PWM_Fail_WritePeriod, .-PWM_Fail_WritePeriod
 967              		.section	.text.PWM_Fail_ReadPeriod,"ax",%progbits
 968              		.align	2
 969              		.global	PWM_Fail_ReadPeriod
 970              		.code	16
 971              		.thumb_func
 972              		.type	PWM_Fail_ReadPeriod, %function
 973              	PWM_Fail_ReadPeriod:
 974              	.LFB17:
 697:Generated_Source\PSoC4/PWM_Fail.c **** 
 698:Generated_Source\PSoC4/PWM_Fail.c **** 
 699:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadPeriod
 701:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM_Fail.c **** *
 703:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 704:Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM_Fail.c **** *
 706:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 708:Generated_Source\PSoC4/PWM_Fail.c **** *
 709:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 710:Generated_Source\PSoC4/PWM_Fail.c **** *  Period value
 711:Generated_Source\PSoC4/PWM_Fail.c **** *
 712:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadPeriod(void)
 714:Generated_Source\PSoC4/PWM_Fail.c **** {
 975              		.loc 1 714 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979 0000 80B5     		push	{r7, lr}
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 00AF     		add	r7, sp, #0
 984              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_PERIOD_REG & PWM_Fail_16BIT_MASK);
 985              		.loc 1 715 0
 986 0004 034B     		ldr	r3, .L56
 987 0006 1B68     		ldr	r3, [r3]
 988 0008 1B04     		lsls	r3, r3, #16
 989 000a 1B0C     		lsrs	r3, r3, #16
 716:Generated_Source\PSoC4/PWM_Fail.c **** }
 990              		.loc 1 716 0
 991 000c 1800     		movs	r0, r3
 992 000e BD46     		mov	sp, r7
 993              		@ sp needed
 994 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 31


 995              	.L57:
 996 0012 C046     		.align	2
 997              	.L56:
 998 0014 54010540 		.word	1074069844
 999              		.cfi_endproc
 1000              	.LFE17:
 1001              		.size	PWM_Fail_ReadPeriod, .-PWM_Fail_ReadPeriod
 1002              		.section	.text.PWM_Fail_SetCompareSwap,"ax",%progbits
 1003              		.align	2
 1004              		.global	PWM_Fail_SetCompareSwap
 1005              		.code	16
 1006              		.thumb_func
 1007              		.type	PWM_Fail_SetCompareSwap, %function
 1008              	PWM_Fail_SetCompareSwap:
 1009              	.LFB18:
 717:Generated_Source\PSoC4/PWM_Fail.c **** 
 718:Generated_Source\PSoC4/PWM_Fail.c **** 
 719:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetCompareSwap
 721:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM_Fail.c **** *
 723:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 724:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM_Fail.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM_Fail.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM_Fail.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/PWM_Fail.c **** *
 729:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM_Fail.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 732:Generated_Source\PSoC4/PWM_Fail.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM_Fail.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM_Fail.c **** *
 735:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 736:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 737:Generated_Source\PSoC4/PWM_Fail.c **** *
 738:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM_Fail.c **** {
 1010              		.loc 1 740 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 16
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014 0000 90B5     		push	{r4, r7, lr}
 1015              		.cfi_def_cfa_offset 12
 1016              		.cfi_offset 4, -12
 1017              		.cfi_offset 7, -8
 1018              		.cfi_offset 14, -4
 1019 0002 85B0     		sub	sp, sp, #20
 1020              		.cfi_def_cfa_offset 32
 1021 0004 00AF     		add	r7, sp, #0
 1022              		.cfi_def_cfa_register 7
 1023 0006 7860     		str	r0, [r7, #4]
 741:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/PWM_Fail.c **** 
 743:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1024              		.loc 1 743 0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 32


 1025 0008 0F23     		movs	r3, #15
 1026 000a FC18     		adds	r4, r7, r3
 1027 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1028 0010 0300     		movs	r3, r0
 1029 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/PWM_Fail.c **** 
 745:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_RELOAD_CC_MASK;
 1030              		.loc 1 745 0
 1031 0014 0B4B     		ldr	r3, .L59
 1032 0016 0B4A     		ldr	r2, .L59
 1033 0018 1268     		ldr	r2, [r2]
 1034 001a 0121     		movs	r1, #1
 1035 001c 8A43     		bics	r2, r1
 1036 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= (swapEnable & PWM_Fail_1BIT_MASK);
 1037              		.loc 1 746 0
 1038 0020 084B     		ldr	r3, .L59
 1039 0022 084A     		ldr	r2, .L59
 1040 0024 1168     		ldr	r1, [r2]
 1041 0026 7A68     		ldr	r2, [r7, #4]
 1042 0028 0120     		movs	r0, #1
 1043 002a 0240     		ands	r2, r0
 1044 002c 0A43     		orrs	r2, r1
 1045 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/PWM_Fail.c **** 
 748:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1046              		.loc 1 748 0
 1047 0030 0F23     		movs	r3, #15
 1048 0032 FB18     		adds	r3, r7, r3
 1049 0034 1B78     		ldrb	r3, [r3]
 1050 0036 1800     		movs	r0, r3
 1051 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/PWM_Fail.c **** }
 1052              		.loc 1 749 0
 1053 003c C046     		nop
 1054 003e BD46     		mov	sp, r7
 1055 0040 05B0     		add	sp, sp, #20
 1056              		@ sp needed
 1057 0042 90BD     		pop	{r4, r7, pc}
 1058              	.L60:
 1059              		.align	2
 1060              	.L59:
 1061 0044 40010540 		.word	1074069824
 1062              		.cfi_endproc
 1063              	.LFE18:
 1064              		.size	PWM_Fail_SetCompareSwap, .-PWM_Fail_SetCompareSwap
 1065              		.section	.text.PWM_Fail_WritePeriodBuf,"ax",%progbits
 1066              		.align	2
 1067              		.global	PWM_Fail_WritePeriodBuf
 1068              		.code	16
 1069              		.thumb_func
 1070              		.type	PWM_Fail_WritePeriodBuf, %function
 1071              	PWM_Fail_WritePeriodBuf:
 1072              	.LFB19:
 750:Generated_Source\PSoC4/PWM_Fail.c **** 
 751:Generated_Source\PSoC4/PWM_Fail.c **** 
 752:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 33


 753:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_WritePeriodBuf
 754:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM_Fail.c **** *
 756:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 757:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM_Fail.c **** *
 759:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM_Fail.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM_Fail.c **** *
 762:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 763:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 764:Generated_Source\PSoC4/PWM_Fail.c **** *
 765:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM_Fail.c **** {
 1073              		.loc 1 767 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 8
 1076              		@ frame_needed = 1, uses_anonymous_args = 0
 1077 0000 80B5     		push	{r7, lr}
 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 82B0     		sub	sp, sp, #8
 1082              		.cfi_def_cfa_offset 16
 1083 0004 00AF     		add	r7, sp, #0
 1084              		.cfi_def_cfa_register 7
 1085 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_PERIOD_BUF_REG = (periodBuf & PWM_Fail_16BIT_MASK);
 1086              		.loc 1 768 0
 1087 0008 044B     		ldr	r3, .L62
 1088 000a 7A68     		ldr	r2, [r7, #4]
 1089 000c 1204     		lsls	r2, r2, #16
 1090 000e 120C     		lsrs	r2, r2, #16
 1091 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/PWM_Fail.c **** }
 1092              		.loc 1 769 0
 1093 0012 C046     		nop
 1094 0014 BD46     		mov	sp, r7
 1095 0016 02B0     		add	sp, sp, #8
 1096              		@ sp needed
 1097 0018 80BD     		pop	{r7, pc}
 1098              	.L63:
 1099 001a C046     		.align	2
 1100              	.L62:
 1101 001c 58010540 		.word	1074069848
 1102              		.cfi_endproc
 1103              	.LFE19:
 1104              		.size	PWM_Fail_WritePeriodBuf, .-PWM_Fail_WritePeriodBuf
 1105              		.section	.text.PWM_Fail_ReadPeriodBuf,"ax",%progbits
 1106              		.align	2
 1107              		.global	PWM_Fail_ReadPeriodBuf
 1108              		.code	16
 1109              		.thumb_func
 1110              		.type	PWM_Fail_ReadPeriodBuf, %function
 1111              	PWM_Fail_ReadPeriodBuf:
 1112              	.LFB20:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 34


 770:Generated_Source\PSoC4/PWM_Fail.c **** 
 771:Generated_Source\PSoC4/PWM_Fail.c **** 
 772:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadPeriodBuf
 774:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM_Fail.c **** *
 776:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 777:Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM_Fail.c **** *
 779:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 781:Generated_Source\PSoC4/PWM_Fail.c **** *
 782:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 783:Generated_Source\PSoC4/PWM_Fail.c **** *  Period value
 784:Generated_Source\PSoC4/PWM_Fail.c **** *
 785:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM_Fail.c **** {
 1113              		.loc 1 787 0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 0
 1116              		@ frame_needed = 1, uses_anonymous_args = 0
 1117 0000 80B5     		push	{r7, lr}
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 00AF     		add	r7, sp, #0
 1122              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_PERIOD_BUF_REG & PWM_Fail_16BIT_MASK);
 1123              		.loc 1 788 0
 1124 0004 034B     		ldr	r3, .L66
 1125 0006 1B68     		ldr	r3, [r3]
 1126 0008 1B04     		lsls	r3, r3, #16
 1127 000a 1B0C     		lsrs	r3, r3, #16
 789:Generated_Source\PSoC4/PWM_Fail.c **** }
 1128              		.loc 1 789 0
 1129 000c 1800     		movs	r0, r3
 1130 000e BD46     		mov	sp, r7
 1131              		@ sp needed
 1132 0010 80BD     		pop	{r7, pc}
 1133              	.L67:
 1134 0012 C046     		.align	2
 1135              	.L66:
 1136 0014 58010540 		.word	1074069848
 1137              		.cfi_endproc
 1138              	.LFE20:
 1139              		.size	PWM_Fail_ReadPeriodBuf, .-PWM_Fail_ReadPeriodBuf
 1140              		.section	.text.PWM_Fail_SetPeriodSwap,"ax",%progbits
 1141              		.align	2
 1142              		.global	PWM_Fail_SetPeriodSwap
 1143              		.code	16
 1144              		.thumb_func
 1145              		.type	PWM_Fail_SetPeriodSwap, %function
 1146              	PWM_Fail_SetPeriodSwap:
 1147              	.LFB21:
 790:Generated_Source\PSoC4/PWM_Fail.c **** 
 791:Generated_Source\PSoC4/PWM_Fail.c **** 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 35


 792:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetPeriodSwap
 794:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 795:Generated_Source\PSoC4/PWM_Fail.c **** *
 796:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 797:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/PWM_Fail.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM_Fail.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM_Fail.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM_Fail.c **** *
 802:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM_Fail.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
 805:Generated_Source\PSoC4/PWM_Fail.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM_Fail.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM_Fail.c **** *
 808:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 809:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 810:Generated_Source\PSoC4/PWM_Fail.c **** *
 811:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM_Fail.c **** {
 1148              		.loc 1 813 0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 16
 1151              		@ frame_needed = 1, uses_anonymous_args = 0
 1152 0000 90B5     		push	{r4, r7, lr}
 1153              		.cfi_def_cfa_offset 12
 1154              		.cfi_offset 4, -12
 1155              		.cfi_offset 7, -8
 1156              		.cfi_offset 14, -4
 1157 0002 85B0     		sub	sp, sp, #20
 1158              		.cfi_def_cfa_offset 32
 1159 0004 00AF     		add	r7, sp, #0
 1160              		.cfi_def_cfa_register 7
 1161 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM_Fail.c **** 
 816:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1162              		.loc 1 816 0
 1163 0008 0F23     		movs	r3, #15
 1164 000a FC18     		adds	r4, r7, r3
 1165 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1166 0010 0300     		movs	r3, r0
 1167 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/PWM_Fail.c **** 
 818:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG &= (uint32)~PWM_Fail_RELOAD_PERIOD_MASK;
 1168              		.loc 1 818 0
 1169 0014 0C4B     		ldr	r3, .L69
 1170 0016 0C4A     		ldr	r2, .L69
 1171 0018 1268     		ldr	r2, [r2]
 1172 001a 0221     		movs	r1, #2
 1173 001c 8A43     		bics	r2, r1
 1174 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_CONTROL_REG |= ((uint32)((swapEnable & PWM_Fail_1BIT_MASK) <<
 1175              		.loc 1 819 0
 1176 0020 094B     		ldr	r3, .L69
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 36


 1177 0022 094A     		ldr	r2, .L69
 1178 0024 1168     		ldr	r1, [r2]
 1179 0026 7A68     		ldr	r2, [r7, #4]
 1180 0028 5200     		lsls	r2, r2, #1
 1181 002a 0220     		movs	r0, #2
 1182 002c 0240     		ands	r2, r0
 1183 002e 0A43     		orrs	r2, r1
 1184 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/PWM_Fail.c ****                                                             PWM_Fail_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM_Fail.c **** 
 822:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1185              		.loc 1 822 0
 1186 0032 0F23     		movs	r3, #15
 1187 0034 FB18     		adds	r3, r7, r3
 1188 0036 1B78     		ldrb	r3, [r3]
 1189 0038 1800     		movs	r0, r3
 1190 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/PWM_Fail.c **** }
 1191              		.loc 1 823 0
 1192 003e C046     		nop
 1193 0040 BD46     		mov	sp, r7
 1194 0042 05B0     		add	sp, sp, #20
 1195              		@ sp needed
 1196 0044 90BD     		pop	{r4, r7, pc}
 1197              	.L70:
 1198 0046 C046     		.align	2
 1199              	.L69:
 1200 0048 40010540 		.word	1074069824
 1201              		.cfi_endproc
 1202              	.LFE21:
 1203              		.size	PWM_Fail_SetPeriodSwap, .-PWM_Fail_SetPeriodSwap
 1204              		.section	.text.PWM_Fail_WriteCompare,"ax",%progbits
 1205              		.align	2
 1206              		.global	PWM_Fail_WriteCompare
 1207              		.code	16
 1208              		.thumb_func
 1209              		.type	PWM_Fail_WriteCompare, %function
 1210              	PWM_Fail_WriteCompare:
 1211              	.LFB22:
 824:Generated_Source\PSoC4/PWM_Fail.c **** 
 825:Generated_Source\PSoC4/PWM_Fail.c **** 
 826:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_WriteCompare
 828:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM_Fail.c **** *
 830:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 831:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM_Fail.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM_Fail.c **** *
 834:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 835:Generated_Source\PSoC4/PWM_Fail.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM_Fail.c **** *
 837:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 838:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 839:Generated_Source\PSoC4/PWM_Fail.c **** *
 840:Generated_Source\PSoC4/PWM_Fail.c **** * Note:
 841:Generated_Source\PSoC4/PWM_Fail.c **** *  It is not recommended to use the value equal to "0" or equal to 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 37


 842:Generated_Source\PSoC4/PWM_Fail.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/PWM_Fail.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM_Fail.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM_Fail.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM_Fail.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/PWM_Fail.c **** *
 848:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM_Fail.c **** {
 1212              		.loc 1 850 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 8
 1215              		@ frame_needed = 1, uses_anonymous_args = 0
 1216 0000 80B5     		push	{r7, lr}
 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 7, -8
 1219              		.cfi_offset 14, -4
 1220 0002 82B0     		sub	sp, sp, #8
 1221              		.cfi_def_cfa_offset 16
 1222 0004 00AF     		add	r7, sp, #0
 1223              		.cfi_def_cfa_register 7
 1224 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM_Fail.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM_Fail.c **** 
 855:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM_Fail.c ****         currentMode = ((PWM_Fail_CONTROL_REG & PWM_Fail_UPDOWN_MASK) >> PWM_Fail_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/PWM_Fail.c **** 
 858:Generated_Source\PSoC4/PWM_Fail.c ****         if (((uint32)PWM_Fail__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM_Fail.c ****         {
 860:Generated_Source\PSoC4/PWM_Fail.c ****             compare++;
 861:Generated_Source\PSoC4/PWM_Fail.c ****         }
 862:Generated_Source\PSoC4/PWM_Fail.c ****         else if (((uint32)PWM_Fail__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM_Fail.c ****         {
 864:Generated_Source\PSoC4/PWM_Fail.c ****             compare--;
 865:Generated_Source\PSoC4/PWM_Fail.c ****         }
 866:Generated_Source\PSoC4/PWM_Fail.c ****         else
 867:Generated_Source\PSoC4/PWM_Fail.c ****         {
 868:Generated_Source\PSoC4/PWM_Fail.c ****         }
 869:Generated_Source\PSoC4/PWM_Fail.c ****         
 870:Generated_Source\PSoC4/PWM_Fail.c ****     
 871:Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM_Fail.c ****     
 873:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_COMP_CAP_REG = (compare & PWM_Fail_16BIT_MASK);
 1225              		.loc 1 873 0
 1226 0008 044B     		ldr	r3, .L72
 1227 000a 7A68     		ldr	r2, [r7, #4]
 1228 000c 1204     		lsls	r2, r2, #16
 1229 000e 120C     		lsrs	r2, r2, #16
 1230 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/PWM_Fail.c **** }
 1231              		.loc 1 874 0
 1232 0012 C046     		nop
 1233 0014 BD46     		mov	sp, r7
 1234 0016 02B0     		add	sp, sp, #8
 1235              		@ sp needed
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 38


 1236 0018 80BD     		pop	{r7, pc}
 1237              	.L73:
 1238 001a C046     		.align	2
 1239              	.L72:
 1240 001c 4C010540 		.word	1074069836
 1241              		.cfi_endproc
 1242              	.LFE22:
 1243              		.size	PWM_Fail_WriteCompare, .-PWM_Fail_WriteCompare
 1244              		.section	.text.PWM_Fail_ReadCompare,"ax",%progbits
 1245              		.align	2
 1246              		.global	PWM_Fail_ReadCompare
 1247              		.code	16
 1248              		.thumb_func
 1249              		.type	PWM_Fail_ReadCompare, %function
 1250              	PWM_Fail_ReadCompare:
 1251              	.LFB23:
 875:Generated_Source\PSoC4/PWM_Fail.c **** 
 876:Generated_Source\PSoC4/PWM_Fail.c **** 
 877:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadCompare
 879:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM_Fail.c **** *
 881:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 882:Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM_Fail.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM_Fail.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/PWM_Fail.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/PWM_Fail.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM_Fail.c **** *
 888:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 890:Generated_Source\PSoC4/PWM_Fail.c **** *
 891:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 892:Generated_Source\PSoC4/PWM_Fail.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM_Fail.c **** *
 894:Generated_Source\PSoC4/PWM_Fail.c **** * Note:
 895:Generated_Source\PSoC4/PWM_Fail.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM_Fail.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM_Fail.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM_Fail.c **** *
 899:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM_Fail.c **** {
 1252              		.loc 1 901 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 1, uses_anonymous_args = 0
 1256 0000 80B5     		push	{r7, lr}
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 00AF     		add	r7, sp, #0
 1261              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/PWM_Fail.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM_Fail.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_4000) */
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 39


 906:Generated_Source\PSoC4/PWM_Fail.c **** 
 907:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM_Fail.c ****         currentMode = ((PWM_Fail_CONTROL_REG & PWM_Fail_UPDOWN_MASK) >> PWM_Fail_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/PWM_Fail.c ****         
 910:Generated_Source\PSoC4/PWM_Fail.c ****         regVal = PWM_Fail_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM_Fail.c ****         
 912:Generated_Source\PSoC4/PWM_Fail.c ****         if (((uint32)PWM_Fail__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM_Fail.c ****         {
 914:Generated_Source\PSoC4/PWM_Fail.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM_Fail.c ****         }
 916:Generated_Source\PSoC4/PWM_Fail.c ****         else if (((uint32)PWM_Fail__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM_Fail.c ****         {
 918:Generated_Source\PSoC4/PWM_Fail.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM_Fail.c ****         }
 920:Generated_Source\PSoC4/PWM_Fail.c ****         else
 921:Generated_Source\PSoC4/PWM_Fail.c ****         {
 922:Generated_Source\PSoC4/PWM_Fail.c ****         }
 923:Generated_Source\PSoC4/PWM_Fail.c **** 
 924:Generated_Source\PSoC4/PWM_Fail.c ****         return (regVal & PWM_Fail_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM_Fail.c ****     #else
 926:Generated_Source\PSoC4/PWM_Fail.c ****         return (PWM_Fail_COMP_CAP_REG & PWM_Fail_16BIT_MASK);
 1262              		.loc 1 926 0
 1263 0004 034B     		ldr	r3, .L76
 1264 0006 1B68     		ldr	r3, [r3]
 1265 0008 1B04     		lsls	r3, r3, #16
 1266 000a 1B0C     		lsrs	r3, r3, #16
 927:Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM_Fail.c **** }
 1267              		.loc 1 928 0
 1268 000c 1800     		movs	r0, r3
 1269 000e BD46     		mov	sp, r7
 1270              		@ sp needed
 1271 0010 80BD     		pop	{r7, pc}
 1272              	.L77:
 1273 0012 C046     		.align	2
 1274              	.L76:
 1275 0014 4C010540 		.word	1074069836
 1276              		.cfi_endproc
 1277              	.LFE23:
 1278              		.size	PWM_Fail_ReadCompare, .-PWM_Fail_ReadCompare
 1279              		.section	.text.PWM_Fail_WriteCompareBuf,"ax",%progbits
 1280              		.align	2
 1281              		.global	PWM_Fail_WriteCompareBuf
 1282              		.code	16
 1283              		.thumb_func
 1284              		.type	PWM_Fail_WriteCompareBuf, %function
 1285              	PWM_Fail_WriteCompareBuf:
 1286              	.LFB24:
 929:Generated_Source\PSoC4/PWM_Fail.c **** 
 930:Generated_Source\PSoC4/PWM_Fail.c **** 
 931:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 934:Generated_Source\PSoC4/PWM_Fail.c **** *
 935:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 936:Generated_Source\PSoC4/PWM_Fail.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM_Fail.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 40


 938:Generated_Source\PSoC4/PWM_Fail.c **** *
 939:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM_Fail.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM_Fail.c **** *
 942:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 943:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 944:Generated_Source\PSoC4/PWM_Fail.c **** *
 945:Generated_Source\PSoC4/PWM_Fail.c **** * Note:
 946:Generated_Source\PSoC4/PWM_Fail.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM_Fail.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/PWM_Fail.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM_Fail.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM_Fail.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM_Fail.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/PWM_Fail.c **** *
 953:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM_Fail.c **** {
 1287              		.loc 1 955 0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 8
 1290              		@ frame_needed = 1, uses_anonymous_args = 0
 1291 0000 80B5     		push	{r7, lr}
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 7, -8
 1294              		.cfi_offset 14, -4
 1295 0002 82B0     		sub	sp, sp, #8
 1296              		.cfi_def_cfa_offset 16
 1297 0004 00AF     		add	r7, sp, #0
 1298              		.cfi_def_cfa_register 7
 1299 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM_Fail.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM_Fail.c **** 
 960:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM_Fail.c ****         currentMode = ((PWM_Fail_CONTROL_REG & PWM_Fail_UPDOWN_MASK) >> PWM_Fail_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/PWM_Fail.c **** 
 963:Generated_Source\PSoC4/PWM_Fail.c ****         if (((uint32)PWM_Fail__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM_Fail.c ****         {
 965:Generated_Source\PSoC4/PWM_Fail.c ****             compareBuf++;
 966:Generated_Source\PSoC4/PWM_Fail.c ****         }
 967:Generated_Source\PSoC4/PWM_Fail.c ****         else if (((uint32)PWM_Fail__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM_Fail.c ****         {
 969:Generated_Source\PSoC4/PWM_Fail.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM_Fail.c ****         }
 971:Generated_Source\PSoC4/PWM_Fail.c ****         else
 972:Generated_Source\PSoC4/PWM_Fail.c ****         {
 973:Generated_Source\PSoC4/PWM_Fail.c ****         }
 974:Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/PWM_Fail.c ****     
 976:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_COMP_CAP_BUF_REG = (compareBuf & PWM_Fail_16BIT_MASK);
 1300              		.loc 1 976 0
 1301 0008 044B     		ldr	r3, .L79
 1302 000a 7A68     		ldr	r2, [r7, #4]
 1303 000c 1204     		lsls	r2, r2, #16
 1304 000e 120C     		lsrs	r2, r2, #16
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 41


 1305 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/PWM_Fail.c **** }
 1306              		.loc 1 977 0
 1307 0012 C046     		nop
 1308 0014 BD46     		mov	sp, r7
 1309 0016 02B0     		add	sp, sp, #8
 1310              		@ sp needed
 1311 0018 80BD     		pop	{r7, pc}
 1312              	.L80:
 1313 001a C046     		.align	2
 1314              	.L79:
 1315 001c 50010540 		.word	1074069840
 1316              		.cfi_endproc
 1317              	.LFE24:
 1318              		.size	PWM_Fail_WriteCompareBuf, .-PWM_Fail_WriteCompareBuf
 1319              		.section	.text.PWM_Fail_ReadCompareBuf,"ax",%progbits
 1320              		.align	2
 1321              		.global	PWM_Fail_ReadCompareBuf
 1322              		.code	16
 1323              		.thumb_func
 1324              		.type	PWM_Fail_ReadCompareBuf, %function
 1325              	PWM_Fail_ReadCompareBuf:
 1326              	.LFB25:
 978:Generated_Source\PSoC4/PWM_Fail.c **** 
 979:Generated_Source\PSoC4/PWM_Fail.c **** 
 980:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM_Fail.c **** *
 984:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
 985:Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM_Fail.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM_Fail.c **** *
 988:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM_Fail.c **** *  None
 990:Generated_Source\PSoC4/PWM_Fail.c **** *
 991:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
 992:Generated_Source\PSoC4/PWM_Fail.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM_Fail.c **** *
 994:Generated_Source\PSoC4/PWM_Fail.c **** * Note:
 995:Generated_Source\PSoC4/PWM_Fail.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM_Fail.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM_Fail.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM_Fail.c **** *
 999:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM_Fail.c **** {
 1327              		.loc 1 1001 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
 1330              		@ frame_needed = 1, uses_anonymous_args = 0
 1331 0000 80B5     		push	{r7, lr}
 1332              		.cfi_def_cfa_offset 8
 1333              		.cfi_offset 7, -8
 1334              		.cfi_offset 14, -4
 1335 0002 00AF     		add	r7, sp, #0
 1336              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 42


1002:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/PWM_Fail.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM_Fail.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM_Fail.c **** 
1007:Generated_Source\PSoC4/PWM_Fail.c ****     #if (PWM_Fail_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM_Fail.c ****         currentMode = ((PWM_Fail_CONTROL_REG & PWM_Fail_UPDOWN_MASK) >> PWM_Fail_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/PWM_Fail.c **** 
1010:Generated_Source\PSoC4/PWM_Fail.c ****         regVal = PWM_Fail_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM_Fail.c ****         
1012:Generated_Source\PSoC4/PWM_Fail.c ****         if (((uint32)PWM_Fail__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/PWM_Fail.c ****         {
1014:Generated_Source\PSoC4/PWM_Fail.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM_Fail.c ****         }
1016:Generated_Source\PSoC4/PWM_Fail.c ****         else if (((uint32)PWM_Fail__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/PWM_Fail.c ****         {
1018:Generated_Source\PSoC4/PWM_Fail.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM_Fail.c ****         }
1020:Generated_Source\PSoC4/PWM_Fail.c ****         else
1021:Generated_Source\PSoC4/PWM_Fail.c ****         {
1022:Generated_Source\PSoC4/PWM_Fail.c ****         }
1023:Generated_Source\PSoC4/PWM_Fail.c **** 
1024:Generated_Source\PSoC4/PWM_Fail.c ****         return (regVal & PWM_Fail_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM_Fail.c ****     #else
1026:Generated_Source\PSoC4/PWM_Fail.c ****         return (PWM_Fail_COMP_CAP_BUF_REG & PWM_Fail_16BIT_MASK);
 1337              		.loc 1 1026 0
 1338 0004 034B     		ldr	r3, .L83
 1339 0006 1B68     		ldr	r3, [r3]
 1340 0008 1B04     		lsls	r3, r3, #16
 1341 000a 1B0C     		lsrs	r3, r3, #16
1027:Generated_Source\PSoC4/PWM_Fail.c ****     #endif /* (PWM_Fail_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM_Fail.c **** }
 1342              		.loc 1 1028 0
 1343 000c 1800     		movs	r0, r3
 1344 000e BD46     		mov	sp, r7
 1345              		@ sp needed
 1346 0010 80BD     		pop	{r7, pc}
 1347              	.L84:
 1348 0012 C046     		.align	2
 1349              	.L83:
 1350 0014 50010540 		.word	1074069840
 1351              		.cfi_endproc
 1352              	.LFE25:
 1353              		.size	PWM_Fail_ReadCompareBuf, .-PWM_Fail_ReadCompareBuf
 1354              		.section	.text.PWM_Fail_ReadCapture,"ax",%progbits
 1355              		.align	2
 1356              		.global	PWM_Fail_ReadCapture
 1357              		.code	16
 1358              		.thumb_func
 1359              		.type	PWM_Fail_ReadCapture, %function
 1360              	PWM_Fail_ReadCapture:
 1361              	.LFB26:
1029:Generated_Source\PSoC4/PWM_Fail.c **** 
1030:Generated_Source\PSoC4/PWM_Fail.c **** 
1031:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadCapture
1033:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 43


1034:Generated_Source\PSoC4/PWM_Fail.c **** *
1035:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1036:Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM_Fail.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM_Fail.c **** *
1039:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1041:Generated_Source\PSoC4/PWM_Fail.c **** *
1042:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1043:Generated_Source\PSoC4/PWM_Fail.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM_Fail.c **** *
1045:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM_Fail.c **** {
 1362              		.loc 1 1047 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 1, uses_anonymous_args = 0
 1366 0000 80B5     		push	{r7, lr}
 1367              		.cfi_def_cfa_offset 8
 1368              		.cfi_offset 7, -8
 1369              		.cfi_offset 14, -4
 1370 0002 00AF     		add	r7, sp, #0
 1371              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_COMP_CAP_REG & PWM_Fail_16BIT_MASK);
 1372              		.loc 1 1048 0
 1373 0004 034B     		ldr	r3, .L87
 1374 0006 1B68     		ldr	r3, [r3]
 1375 0008 1B04     		lsls	r3, r3, #16
 1376 000a 1B0C     		lsrs	r3, r3, #16
1049:Generated_Source\PSoC4/PWM_Fail.c **** }
 1377              		.loc 1 1049 0
 1378 000c 1800     		movs	r0, r3
 1379 000e BD46     		mov	sp, r7
 1380              		@ sp needed
 1381 0010 80BD     		pop	{r7, pc}
 1382              	.L88:
 1383 0012 C046     		.align	2
 1384              	.L87:
 1385 0014 4C010540 		.word	1074069836
 1386              		.cfi_endproc
 1387              	.LFE26:
 1388              		.size	PWM_Fail_ReadCapture, .-PWM_Fail_ReadCapture
 1389              		.section	.text.PWM_Fail_ReadCaptureBuf,"ax",%progbits
 1390              		.align	2
 1391              		.global	PWM_Fail_ReadCaptureBuf
 1392              		.code	16
 1393              		.thumb_func
 1394              		.type	PWM_Fail_ReadCaptureBuf, %function
 1395              	PWM_Fail_ReadCaptureBuf:
 1396              	.LFB27:
1050:Generated_Source\PSoC4/PWM_Fail.c **** 
1051:Generated_Source\PSoC4/PWM_Fail.c **** 
1052:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM_Fail.c **** *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 44


1056:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1057:Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM_Fail.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM_Fail.c **** *
1060:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1062:Generated_Source\PSoC4/PWM_Fail.c **** *
1063:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1064:Generated_Source\PSoC4/PWM_Fail.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM_Fail.c **** *
1066:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM_Fail.c **** {
 1397              		.loc 1 1068 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 0
 1400              		@ frame_needed = 1, uses_anonymous_args = 0
 1401 0000 80B5     		push	{r7, lr}
 1402              		.cfi_def_cfa_offset 8
 1403              		.cfi_offset 7, -8
 1404              		.cfi_offset 14, -4
 1405 0002 00AF     		add	r7, sp, #0
 1406              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_COMP_CAP_BUF_REG & PWM_Fail_16BIT_MASK);
 1407              		.loc 1 1069 0
 1408 0004 034B     		ldr	r3, .L91
 1409 0006 1B68     		ldr	r3, [r3]
 1410 0008 1B04     		lsls	r3, r3, #16
 1411 000a 1B0C     		lsrs	r3, r3, #16
1070:Generated_Source\PSoC4/PWM_Fail.c **** }
 1412              		.loc 1 1070 0
 1413 000c 1800     		movs	r0, r3
 1414 000e BD46     		mov	sp, r7
 1415              		@ sp needed
 1416 0010 80BD     		pop	{r7, pc}
 1417              	.L92:
 1418 0012 C046     		.align	2
 1419              	.L91:
 1420 0014 50010540 		.word	1074069840
 1421              		.cfi_endproc
 1422              	.LFE27:
 1423              		.size	PWM_Fail_ReadCaptureBuf, .-PWM_Fail_ReadCaptureBuf
 1424              		.section	.text.PWM_Fail_SetCaptureMode,"ax",%progbits
 1425              		.align	2
 1426              		.global	PWM_Fail_SetCaptureMode
 1427              		.code	16
 1428              		.thumb_func
 1429              		.type	PWM_Fail_SetCaptureMode, %function
 1430              	PWM_Fail_SetCaptureMode:
 1431              	.LFB28:
1071:Generated_Source\PSoC4/PWM_Fail.c **** 
1072:Generated_Source\PSoC4/PWM_Fail.c **** 
1073:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetCaptureMode
1075:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM_Fail.c **** *
1077:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 45


1078:Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/PWM_Fail.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM_Fail.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM_Fail.c **** *
1082:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM_Fail.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1085:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM_Fail.c **** *
1090:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1091:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1092:Generated_Source\PSoC4/PWM_Fail.c **** *
1093:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM_Fail.c **** {
 1432              		.loc 1 1095 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 16
 1435              		@ frame_needed = 1, uses_anonymous_args = 0
 1436 0000 90B5     		push	{r4, r7, lr}
 1437              		.cfi_def_cfa_offset 12
 1438              		.cfi_offset 4, -12
 1439              		.cfi_offset 7, -8
 1440              		.cfi_offset 14, -4
 1441 0002 85B0     		sub	sp, sp, #20
 1442              		.cfi_def_cfa_offset 32
 1443 0004 00AF     		add	r7, sp, #0
 1444              		.cfi_def_cfa_register 7
 1445 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM_Fail.c **** 
1098:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1446              		.loc 1 1098 0
 1447 0008 0F23     		movs	r3, #15
 1448 000a FC18     		adds	r4, r7, r3
 1449 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1450 0010 0300     		movs	r3, r0
 1451 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/PWM_Fail.c **** 
1100:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG &= (uint32)~PWM_Fail_CAPTURE_MASK;
 1452              		.loc 1 1100 0
 1453 0014 0A4B     		ldr	r3, .L94
 1454 0016 0A4A     		ldr	r2, .L94
 1455 0018 1268     		ldr	r2, [r2]
 1456 001a 0321     		movs	r1, #3
 1457 001c 8A43     		bics	r2, r1
 1458 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG |= triggerMode;
 1459              		.loc 1 1101 0
 1460 0020 074B     		ldr	r3, .L94
 1461 0022 074A     		ldr	r2, .L94
 1462 0024 1168     		ldr	r1, [r2]
 1463 0026 7A68     		ldr	r2, [r7, #4]
 1464 0028 0A43     		orrs	r2, r1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 46


 1465 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/PWM_Fail.c **** 
1103:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1466              		.loc 1 1103 0
 1467 002c 0F23     		movs	r3, #15
 1468 002e FB18     		adds	r3, r7, r3
 1469 0030 1B78     		ldrb	r3, [r3]
 1470 0032 1800     		movs	r0, r3
 1471 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/PWM_Fail.c **** }
 1472              		.loc 1 1104 0
 1473 0038 C046     		nop
 1474 003a BD46     		mov	sp, r7
 1475 003c 05B0     		add	sp, sp, #20
 1476              		@ sp needed
 1477 003e 90BD     		pop	{r4, r7, pc}
 1478              	.L95:
 1479              		.align	2
 1480              	.L94:
 1481 0040 64010540 		.word	1074069860
 1482              		.cfi_endproc
 1483              	.LFE28:
 1484              		.size	PWM_Fail_SetCaptureMode, .-PWM_Fail_SetCaptureMode
 1485              		.section	.text.PWM_Fail_SetReloadMode,"ax",%progbits
 1486              		.align	2
 1487              		.global	PWM_Fail_SetReloadMode
 1488              		.code	16
 1489              		.thumb_func
 1490              		.type	PWM_Fail_SetReloadMode, %function
 1491              	PWM_Fail_SetReloadMode:
 1492              	.LFB29:
1105:Generated_Source\PSoC4/PWM_Fail.c **** 
1106:Generated_Source\PSoC4/PWM_Fail.c **** 
1107:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetReloadMode
1109:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM_Fail.c **** *
1111:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1112:Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/PWM_Fail.c **** *  input.
1114:Generated_Source\PSoC4/PWM_Fail.c **** *
1115:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM_Fail.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1118:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM_Fail.c **** *
1123:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1124:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1125:Generated_Source\PSoC4/PWM_Fail.c **** *
1126:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/PWM_Fail.c **** {
 1493              		.loc 1 1128 0
 1494              		.cfi_startproc
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 47


 1495              		@ args = 0, pretend = 0, frame = 16
 1496              		@ frame_needed = 1, uses_anonymous_args = 0
 1497 0000 90B5     		push	{r4, r7, lr}
 1498              		.cfi_def_cfa_offset 12
 1499              		.cfi_offset 4, -12
 1500              		.cfi_offset 7, -8
 1501              		.cfi_offset 14, -4
 1502 0002 85B0     		sub	sp, sp, #20
 1503              		.cfi_def_cfa_offset 32
 1504 0004 00AF     		add	r7, sp, #0
 1505              		.cfi_def_cfa_register 7
 1506 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM_Fail.c **** 
1131:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1507              		.loc 1 1131 0
 1508 0008 0F23     		movs	r3, #15
 1509 000a FC18     		adds	r4, r7, r3
 1510 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1511 0010 0300     		movs	r3, r0
 1512 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/PWM_Fail.c **** 
1133:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG &= (uint32)~PWM_Fail_RELOAD_MASK;
 1513              		.loc 1 1133 0
 1514 0014 0B4B     		ldr	r3, .L97
 1515 0016 0B4A     		ldr	r2, .L97
 1516 0018 1268     		ldr	r2, [r2]
 1517 001a 3021     		movs	r1, #48
 1518 001c 8A43     		bics	r2, r1
 1519 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Fail_RELOAD_SHIFT));
 1520              		.loc 1 1134 0
 1521 0020 084B     		ldr	r3, .L97
 1522 0022 084A     		ldr	r2, .L97
 1523 0024 1168     		ldr	r1, [r2]
 1524 0026 7A68     		ldr	r2, [r7, #4]
 1525 0028 1201     		lsls	r2, r2, #4
 1526 002a 0A43     		orrs	r2, r1
 1527 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/PWM_Fail.c **** 
1136:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1528              		.loc 1 1136 0
 1529 002e 0F23     		movs	r3, #15
 1530 0030 FB18     		adds	r3, r7, r3
 1531 0032 1B78     		ldrb	r3, [r3]
 1532 0034 1800     		movs	r0, r3
 1533 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/PWM_Fail.c **** }
 1534              		.loc 1 1137 0
 1535 003a C046     		nop
 1536 003c BD46     		mov	sp, r7
 1537 003e 05B0     		add	sp, sp, #20
 1538              		@ sp needed
 1539 0040 90BD     		pop	{r4, r7, pc}
 1540              	.L98:
 1541 0042 C046     		.align	2
 1542              	.L97:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 48


 1543 0044 64010540 		.word	1074069860
 1544              		.cfi_endproc
 1545              	.LFE29:
 1546              		.size	PWM_Fail_SetReloadMode, .-PWM_Fail_SetReloadMode
 1547              		.section	.text.PWM_Fail_SetStartMode,"ax",%progbits
 1548              		.align	2
 1549              		.global	PWM_Fail_SetStartMode
 1550              		.code	16
 1551              		.thumb_func
 1552              		.type	PWM_Fail_SetStartMode, %function
 1553              	PWM_Fail_SetStartMode:
 1554              	.LFB30:
1138:Generated_Source\PSoC4/PWM_Fail.c **** 
1139:Generated_Source\PSoC4/PWM_Fail.c **** 
1140:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetStartMode
1142:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM_Fail.c **** *
1144:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1145:Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM_Fail.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM_Fail.c **** *
1148:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM_Fail.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1151:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/PWM_Fail.c **** *
1156:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1157:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1158:Generated_Source\PSoC4/PWM_Fail.c **** *
1159:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM_Fail.c **** {
 1555              		.loc 1 1161 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 16
 1558              		@ frame_needed = 1, uses_anonymous_args = 0
 1559 0000 90B5     		push	{r4, r7, lr}
 1560              		.cfi_def_cfa_offset 12
 1561              		.cfi_offset 4, -12
 1562              		.cfi_offset 7, -8
 1563              		.cfi_offset 14, -4
 1564 0002 85B0     		sub	sp, sp, #20
 1565              		.cfi_def_cfa_offset 32
 1566 0004 00AF     		add	r7, sp, #0
 1567              		.cfi_def_cfa_register 7
 1568 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM_Fail.c **** 
1164:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1569              		.loc 1 1164 0
 1570 0008 0F23     		movs	r3, #15
 1571 000a FC18     		adds	r4, r7, r3
 1572 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 49


 1573 0010 0300     		movs	r3, r0
 1574 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/PWM_Fail.c **** 
1166:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG &= (uint32)~PWM_Fail_START_MASK;
 1575              		.loc 1 1166 0
 1576 0014 0B4B     		ldr	r3, .L100
 1577 0016 0B4A     		ldr	r2, .L100
 1578 0018 1268     		ldr	r2, [r2]
 1579 001a 0B49     		ldr	r1, .L100+4
 1580 001c 0A40     		ands	r2, r1
 1581 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Fail_START_SHIFT));
 1582              		.loc 1 1167 0
 1583 0020 084B     		ldr	r3, .L100
 1584 0022 084A     		ldr	r2, .L100
 1585 0024 1168     		ldr	r1, [r2]
 1586 0026 7A68     		ldr	r2, [r7, #4]
 1587 0028 1202     		lsls	r2, r2, #8
 1588 002a 0A43     		orrs	r2, r1
 1589 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/PWM_Fail.c **** 
1169:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1590              		.loc 1 1169 0
 1591 002e 0F23     		movs	r3, #15
 1592 0030 FB18     		adds	r3, r7, r3
 1593 0032 1B78     		ldrb	r3, [r3]
 1594 0034 1800     		movs	r0, r3
 1595 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/PWM_Fail.c **** }
 1596              		.loc 1 1170 0
 1597 003a C046     		nop
 1598 003c BD46     		mov	sp, r7
 1599 003e 05B0     		add	sp, sp, #20
 1600              		@ sp needed
 1601 0040 90BD     		pop	{r4, r7, pc}
 1602              	.L101:
 1603 0042 C046     		.align	2
 1604              	.L100:
 1605 0044 64010540 		.word	1074069860
 1606 0048 FFFCFFFF 		.word	-769
 1607              		.cfi_endproc
 1608              	.LFE30:
 1609              		.size	PWM_Fail_SetStartMode, .-PWM_Fail_SetStartMode
 1610              		.section	.text.PWM_Fail_SetStopMode,"ax",%progbits
 1611              		.align	2
 1612              		.global	PWM_Fail_SetStopMode
 1613              		.code	16
 1614              		.thumb_func
 1615              		.type	PWM_Fail_SetStopMode, %function
 1616              	PWM_Fail_SetStopMode:
 1617              	.LFB31:
1171:Generated_Source\PSoC4/PWM_Fail.c **** 
1172:Generated_Source\PSoC4/PWM_Fail.c **** 
1173:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetStopMode
1175:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1176:Generated_Source\PSoC4/PWM_Fail.c **** *
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 50


1177:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1178:Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM_Fail.c **** *
1180:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM_Fail.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1183:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM_Fail.c **** *
1188:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1189:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1190:Generated_Source\PSoC4/PWM_Fail.c **** *
1191:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM_Fail.c **** {
 1618              		.loc 1 1193 0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 16
 1621              		@ frame_needed = 1, uses_anonymous_args = 0
 1622 0000 90B5     		push	{r4, r7, lr}
 1623              		.cfi_def_cfa_offset 12
 1624              		.cfi_offset 4, -12
 1625              		.cfi_offset 7, -8
 1626              		.cfi_offset 14, -4
 1627 0002 85B0     		sub	sp, sp, #20
 1628              		.cfi_def_cfa_offset 32
 1629 0004 00AF     		add	r7, sp, #0
 1630              		.cfi_def_cfa_register 7
 1631 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM_Fail.c **** 
1196:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1632              		.loc 1 1196 0
 1633 0008 0F23     		movs	r3, #15
 1634 000a FC18     		adds	r4, r7, r3
 1635 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1636 0010 0300     		movs	r3, r0
 1637 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/PWM_Fail.c **** 
1198:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG &= (uint32)~PWM_Fail_STOP_MASK;
 1638              		.loc 1 1198 0
 1639 0014 0B4B     		ldr	r3, .L103
 1640 0016 0B4A     		ldr	r2, .L103
 1641 0018 1268     		ldr	r2, [r2]
 1642 001a C021     		movs	r1, #192
 1643 001c 8A43     		bics	r2, r1
 1644 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Fail_STOP_SHIFT));
 1645              		.loc 1 1199 0
 1646 0020 084B     		ldr	r3, .L103
 1647 0022 084A     		ldr	r2, .L103
 1648 0024 1168     		ldr	r1, [r2]
 1649 0026 7A68     		ldr	r2, [r7, #4]
 1650 0028 9201     		lsls	r2, r2, #6
 1651 002a 0A43     		orrs	r2, r1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 51


 1652 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/PWM_Fail.c **** 
1201:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1653              		.loc 1 1201 0
 1654 002e 0F23     		movs	r3, #15
 1655 0030 FB18     		adds	r3, r7, r3
 1656 0032 1B78     		ldrb	r3, [r3]
 1657 0034 1800     		movs	r0, r3
 1658 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/PWM_Fail.c **** }
 1659              		.loc 1 1202 0
 1660 003a C046     		nop
 1661 003c BD46     		mov	sp, r7
 1662 003e 05B0     		add	sp, sp, #20
 1663              		@ sp needed
 1664 0040 90BD     		pop	{r4, r7, pc}
 1665              	.L104:
 1666 0042 C046     		.align	2
 1667              	.L103:
 1668 0044 64010540 		.word	1074069860
 1669              		.cfi_endproc
 1670              	.LFE31:
 1671              		.size	PWM_Fail_SetStopMode, .-PWM_Fail_SetStopMode
 1672              		.section	.text.PWM_Fail_SetCountMode,"ax",%progbits
 1673              		.align	2
 1674              		.global	PWM_Fail_SetCountMode
 1675              		.code	16
 1676              		.thumb_func
 1677              		.type	PWM_Fail_SetCountMode, %function
 1678              	PWM_Fail_SetCountMode:
 1679              	.LFB32:
1203:Generated_Source\PSoC4/PWM_Fail.c **** 
1204:Generated_Source\PSoC4/PWM_Fail.c **** 
1205:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetCountMode
1207:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM_Fail.c **** *
1209:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1210:Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM_Fail.c **** *  input.
1212:Generated_Source\PSoC4/PWM_Fail.c **** *
1213:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM_Fail.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1216:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM_Fail.c **** *
1221:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1222:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1223:Generated_Source\PSoC4/PWM_Fail.c **** *
1224:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/PWM_Fail.c **** {
 1680              		.loc 1 1226 0
 1681              		.cfi_startproc
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 52


 1682              		@ args = 0, pretend = 0, frame = 16
 1683              		@ frame_needed = 1, uses_anonymous_args = 0
 1684 0000 90B5     		push	{r4, r7, lr}
 1685              		.cfi_def_cfa_offset 12
 1686              		.cfi_offset 4, -12
 1687              		.cfi_offset 7, -8
 1688              		.cfi_offset 14, -4
 1689 0002 85B0     		sub	sp, sp, #20
 1690              		.cfi_def_cfa_offset 32
 1691 0004 00AF     		add	r7, sp, #0
 1692              		.cfi_def_cfa_register 7
 1693 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM_Fail.c **** 
1229:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1694              		.loc 1 1229 0
 1695 0008 0F23     		movs	r3, #15
 1696 000a FC18     		adds	r4, r7, r3
 1697 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1698 0010 0300     		movs	r3, r0
 1699 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/PWM_Fail.c **** 
1231:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG &= (uint32)~PWM_Fail_COUNT_MASK;
 1700              		.loc 1 1231 0
 1701 0014 0B4B     		ldr	r3, .L106
 1702 0016 0B4A     		ldr	r2, .L106
 1703 0018 1268     		ldr	r2, [r2]
 1704 001a 0C21     		movs	r1, #12
 1705 001c 8A43     		bics	r2, r1
 1706 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Fail_COUNT_SHIFT));
 1707              		.loc 1 1232 0
 1708 0020 084B     		ldr	r3, .L106
 1709 0022 084A     		ldr	r2, .L106
 1710 0024 1168     		ldr	r1, [r2]
 1711 0026 7A68     		ldr	r2, [r7, #4]
 1712 0028 9200     		lsls	r2, r2, #2
 1713 002a 0A43     		orrs	r2, r1
 1714 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/PWM_Fail.c **** 
1234:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1715              		.loc 1 1234 0
 1716 002e 0F23     		movs	r3, #15
 1717 0030 FB18     		adds	r3, r7, r3
 1718 0032 1B78     		ldrb	r3, [r3]
 1719 0034 1800     		movs	r0, r3
 1720 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/PWM_Fail.c **** }
 1721              		.loc 1 1235 0
 1722 003a C046     		nop
 1723 003c BD46     		mov	sp, r7
 1724 003e 05B0     		add	sp, sp, #20
 1725              		@ sp needed
 1726 0040 90BD     		pop	{r4, r7, pc}
 1727              	.L107:
 1728 0042 C046     		.align	2
 1729              	.L106:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 53


 1730 0044 64010540 		.word	1074069860
 1731              		.cfi_endproc
 1732              	.LFE32:
 1733              		.size	PWM_Fail_SetCountMode, .-PWM_Fail_SetCountMode
 1734              		.section	.text.PWM_Fail_TriggerCommand,"ax",%progbits
 1735              		.align	2
 1736              		.global	PWM_Fail_TriggerCommand
 1737              		.code	16
 1738              		.thumb_func
 1739              		.type	PWM_Fail_TriggerCommand, %function
 1740              	PWM_Fail_TriggerCommand:
 1741              	.LFB33:
1236:Generated_Source\PSoC4/PWM_Fail.c **** 
1237:Generated_Source\PSoC4/PWM_Fail.c **** 
1238:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_TriggerCommand
1240:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1241:Generated_Source\PSoC4/PWM_Fail.c **** *
1242:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1243:Generated_Source\PSoC4/PWM_Fail.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM_Fail.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM_Fail.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM_Fail.c **** *
1247:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM_Fail.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM_Fail.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM_Fail.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM_Fail.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM_Fail.c **** *        define.
1253:Generated_Source\PSoC4/PWM_Fail.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM_Fail.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1256:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM_Fail.c **** *
1261:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1262:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1263:Generated_Source\PSoC4/PWM_Fail.c **** *
1264:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM_Fail.c **** {
 1742              		.loc 1 1266 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 16
 1745              		@ frame_needed = 1, uses_anonymous_args = 0
 1746 0000 90B5     		push	{r4, r7, lr}
 1747              		.cfi_def_cfa_offset 12
 1748              		.cfi_offset 4, -12
 1749              		.cfi_offset 7, -8
 1750              		.cfi_offset 14, -4
 1751 0002 85B0     		sub	sp, sp, #20
 1752              		.cfi_def_cfa_offset 32
 1753 0004 00AF     		add	r7, sp, #0
 1754              		.cfi_def_cfa_register 7
 1755 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 54


 1756 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/PWM_Fail.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM_Fail.c **** 
1269:Generated_Source\PSoC4/PWM_Fail.c ****     enableInterrupts = CyEnterCriticalSection();
 1757              		.loc 1 1269 0
 1758 000a 0F23     		movs	r3, #15
 1759 000c FC18     		adds	r4, r7, r3
 1760 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1761 0012 0300     		movs	r3, r0
 1762 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/PWM_Fail.c **** 
1271:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_COMMAND_REG = ((uint32)(mask << command));
 1763              		.loc 1 1271 0
 1764 0016 084B     		ldr	r3, .L109
 1765 0018 7968     		ldr	r1, [r7, #4]
 1766 001a 3A68     		ldr	r2, [r7]
 1767 001c 9140     		lsls	r1, r1, r2
 1768 001e 0A00     		movs	r2, r1
 1769 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/PWM_Fail.c **** 
1273:Generated_Source\PSoC4/PWM_Fail.c ****     CyExitCriticalSection(enableInterrupts);
 1770              		.loc 1 1273 0
 1771 0022 0F23     		movs	r3, #15
 1772 0024 FB18     		adds	r3, r7, r3
 1773 0026 1B78     		ldrb	r3, [r3]
 1774 0028 1800     		movs	r0, r3
 1775 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/PWM_Fail.c **** }
 1776              		.loc 1 1274 0
 1777 002e C046     		nop
 1778 0030 BD46     		mov	sp, r7
 1779 0032 05B0     		add	sp, sp, #20
 1780              		@ sp needed
 1781 0034 90BD     		pop	{r4, r7, pc}
 1782              	.L110:
 1783 0036 C046     		.align	2
 1784              	.L109:
 1785 0038 08000540 		.word	1074069512
 1786              		.cfi_endproc
 1787              	.LFE33:
 1788              		.size	PWM_Fail_TriggerCommand, .-PWM_Fail_TriggerCommand
 1789              		.section	.text.PWM_Fail_ReadStatus,"ax",%progbits
 1790              		.align	2
 1791              		.global	PWM_Fail_ReadStatus
 1792              		.code	16
 1793              		.thumb_func
 1794              		.type	PWM_Fail_ReadStatus, %function
 1795              	PWM_Fail_ReadStatus:
 1796              	.LFB34:
1275:Generated_Source\PSoC4/PWM_Fail.c **** 
1276:Generated_Source\PSoC4/PWM_Fail.c **** 
1277:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ReadStatus
1279:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1280:Generated_Source\PSoC4/PWM_Fail.c **** *
1281:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1282:Generated_Source\PSoC4/PWM_Fail.c **** *  Reads the status of the PWM_Fail.
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 55


1283:Generated_Source\PSoC4/PWM_Fail.c **** *
1284:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1286:Generated_Source\PSoC4/PWM_Fail.c **** *
1287:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1288:Generated_Source\PSoC4/PWM_Fail.c **** *  Status
1289:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1290:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM_Fail.c **** *
1293:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM_Fail.c **** {
 1797              		.loc 1 1295 0
 1798              		.cfi_startproc
 1799              		@ args = 0, pretend = 0, frame = 0
 1800              		@ frame_needed = 1, uses_anonymous_args = 0
 1801 0000 80B5     		push	{r7, lr}
 1802              		.cfi_def_cfa_offset 8
 1803              		.cfi_offset 7, -8
 1804              		.cfi_offset 14, -4
 1805 0002 00AF     		add	r7, sp, #0
 1806              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/PWM_Fail.c ****     return ((PWM_Fail_STATUS_REG >> PWM_Fail_RUNNING_STATUS_SHIFT) |
 1807              		.loc 1 1296 0
 1808 0004 054B     		ldr	r3, .L113
 1809 0006 1B68     		ldr	r3, [r3]
 1810 0008 9A0F     		lsrs	r2, r3, #30
1297:Generated_Source\PSoC4/PWM_Fail.c ****             (PWM_Fail_STATUS_REG & PWM_Fail_STATUS_DOWN));
 1811              		.loc 1 1297 0
 1812 000a 044B     		ldr	r3, .L113
 1813 000c 1B68     		ldr	r3, [r3]
 1814 000e 0121     		movs	r1, #1
 1815 0010 0B40     		ands	r3, r1
1296:Generated_Source\PSoC4/PWM_Fail.c ****     return ((PWM_Fail_STATUS_REG >> PWM_Fail_RUNNING_STATUS_SHIFT) |
 1816              		.loc 1 1296 0
 1817 0012 1343     		orrs	r3, r2
1298:Generated_Source\PSoC4/PWM_Fail.c **** }
 1818              		.loc 1 1298 0
 1819 0014 1800     		movs	r0, r3
 1820 0016 BD46     		mov	sp, r7
 1821              		@ sp needed
 1822 0018 80BD     		pop	{r7, pc}
 1823              	.L114:
 1824 001a C046     		.align	2
 1825              	.L113:
 1826 001c 44010540 		.word	1074069828
 1827              		.cfi_endproc
 1828              	.LFE34:
 1829              		.size	PWM_Fail_ReadStatus, .-PWM_Fail_ReadStatus
 1830              		.section	.text.PWM_Fail_SetInterruptMode,"ax",%progbits
 1831              		.align	2
 1832              		.global	PWM_Fail_SetInterruptMode
 1833              		.code	16
 1834              		.thumb_func
 1835              		.type	PWM_Fail_SetInterruptMode, %function
 1836              	PWM_Fail_SetInterruptMode:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 56


 1837              	.LFB35:
1299:Generated_Source\PSoC4/PWM_Fail.c **** 
1300:Generated_Source\PSoC4/PWM_Fail.c **** 
1301:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetInterruptMode
1303:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM_Fail.c **** *
1305:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1306:Generated_Source\PSoC4/PWM_Fail.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM_Fail.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM_Fail.c **** *
1309:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM_Fail.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1312:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM_Fail.c **** *
1315:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1316:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1317:Generated_Source\PSoC4/PWM_Fail.c **** *
1318:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM_Fail.c **** {
 1838              		.loc 1 1320 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 8
 1841              		@ frame_needed = 1, uses_anonymous_args = 0
 1842 0000 80B5     		push	{r7, lr}
 1843              		.cfi_def_cfa_offset 8
 1844              		.cfi_offset 7, -8
 1845              		.cfi_offset 14, -4
 1846 0002 82B0     		sub	sp, sp, #8
 1847              		.cfi_def_cfa_offset 16
 1848 0004 00AF     		add	r7, sp, #0
 1849              		.cfi_def_cfa_register 7
 1850 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_INTERRUPT_MASK_REG =  interruptMask;
 1851              		.loc 1 1321 0
 1852 0008 034B     		ldr	r3, .L116
 1853 000a 7A68     		ldr	r2, [r7, #4]
 1854 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/PWM_Fail.c **** }
 1855              		.loc 1 1322 0
 1856 000e C046     		nop
 1857 0010 BD46     		mov	sp, r7
 1858 0012 02B0     		add	sp, sp, #8
 1859              		@ sp needed
 1860 0014 80BD     		pop	{r7, pc}
 1861              	.L117:
 1862 0016 C046     		.align	2
 1863              	.L116:
 1864 0018 78010540 		.word	1074069880
 1865              		.cfi_endproc
 1866              	.LFE35:
 1867              		.size	PWM_Fail_SetInterruptMode, .-PWM_Fail_SetInterruptMode
 1868              		.section	.text.PWM_Fail_GetInterruptSourceMasked,"ax",%progbits
 1869              		.align	2
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 57


 1870              		.global	PWM_Fail_GetInterruptSourceMasked
 1871              		.code	16
 1872              		.thumb_func
 1873              		.type	PWM_Fail_GetInterruptSourceMasked, %function
 1874              	PWM_Fail_GetInterruptSourceMasked:
 1875              	.LFB36:
1323:Generated_Source\PSoC4/PWM_Fail.c **** 
1324:Generated_Source\PSoC4/PWM_Fail.c **** 
1325:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM_Fail.c **** *
1329:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1330:Generated_Source\PSoC4/PWM_Fail.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM_Fail.c **** *
1332:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM_Fail.c **** *   None
1334:Generated_Source\PSoC4/PWM_Fail.c **** *
1335:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1336:Generated_Source\PSoC4/PWM_Fail.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1338:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM_Fail.c **** *
1341:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM_Fail.c **** {
 1876              		.loc 1 1343 0
 1877              		.cfi_startproc
 1878              		@ args = 0, pretend = 0, frame = 0
 1879              		@ frame_needed = 1, uses_anonymous_args = 0
 1880 0000 80B5     		push	{r7, lr}
 1881              		.cfi_def_cfa_offset 8
 1882              		.cfi_offset 7, -8
 1883              		.cfi_offset 14, -4
 1884 0002 00AF     		add	r7, sp, #0
 1885              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_INTERRUPT_MASKED_REG);
 1886              		.loc 1 1344 0
 1887 0004 024B     		ldr	r3, .L120
 1888 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/PWM_Fail.c **** }
 1889              		.loc 1 1345 0
 1890 0008 1800     		movs	r0, r3
 1891 000a BD46     		mov	sp, r7
 1892              		@ sp needed
 1893 000c 80BD     		pop	{r7, pc}
 1894              	.L121:
 1895 000e C046     		.align	2
 1896              	.L120:
 1897 0010 7C010540 		.word	1074069884
 1898              		.cfi_endproc
 1899              	.LFE36:
 1900              		.size	PWM_Fail_GetInterruptSourceMasked, .-PWM_Fail_GetInterruptSourceMasked
 1901              		.section	.text.PWM_Fail_GetInterruptSource,"ax",%progbits
 1902              		.align	2
 1903              		.global	PWM_Fail_GetInterruptSource
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 58


 1904              		.code	16
 1905              		.thumb_func
 1906              		.type	PWM_Fail_GetInterruptSource, %function
 1907              	PWM_Fail_GetInterruptSource:
 1908              	.LFB37:
1346:Generated_Source\PSoC4/PWM_Fail.c **** 
1347:Generated_Source\PSoC4/PWM_Fail.c **** 
1348:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_GetInterruptSource
1350:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM_Fail.c **** *
1352:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1353:Generated_Source\PSoC4/PWM_Fail.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM_Fail.c **** *
1355:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1357:Generated_Source\PSoC4/PWM_Fail.c **** *
1358:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1359:Generated_Source\PSoC4/PWM_Fail.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1361:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM_Fail.c **** *
1364:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/PWM_Fail.c **** uint32 PWM_Fail_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM_Fail.c **** {
 1909              		.loc 1 1366 0
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 0
 1912              		@ frame_needed = 1, uses_anonymous_args = 0
 1913 0000 80B5     		push	{r7, lr}
 1914              		.cfi_def_cfa_offset 8
 1915              		.cfi_offset 7, -8
 1916              		.cfi_offset 14, -4
 1917 0002 00AF     		add	r7, sp, #0
 1918              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/PWM_Fail.c ****     return (PWM_Fail_INTERRUPT_REQ_REG);
 1919              		.loc 1 1367 0
 1920 0004 024B     		ldr	r3, .L124
 1921 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/PWM_Fail.c **** }
 1922              		.loc 1 1368 0
 1923 0008 1800     		movs	r0, r3
 1924 000a BD46     		mov	sp, r7
 1925              		@ sp needed
 1926 000c 80BD     		pop	{r7, pc}
 1927              	.L125:
 1928 000e C046     		.align	2
 1929              	.L124:
 1930 0010 70010540 		.word	1074069872
 1931              		.cfi_endproc
 1932              	.LFE37:
 1933              		.size	PWM_Fail_GetInterruptSource, .-PWM_Fail_GetInterruptSource
 1934              		.section	.text.PWM_Fail_ClearInterrupt,"ax",%progbits
 1935              		.align	2
 1936              		.global	PWM_Fail_ClearInterrupt
 1937              		.code	16
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 59


 1938              		.thumb_func
 1939              		.type	PWM_Fail_ClearInterrupt, %function
 1940              	PWM_Fail_ClearInterrupt:
 1941              	.LFB38:
1369:Generated_Source\PSoC4/PWM_Fail.c **** 
1370:Generated_Source\PSoC4/PWM_Fail.c **** 
1371:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_ClearInterrupt
1373:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1374:Generated_Source\PSoC4/PWM_Fail.c **** *
1375:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1376:Generated_Source\PSoC4/PWM_Fail.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM_Fail.c **** *
1378:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM_Fail.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1381:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/PWM_Fail.c **** *
1384:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1385:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1386:Generated_Source\PSoC4/PWM_Fail.c **** *
1387:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM_Fail.c **** {
 1942              		.loc 1 1389 0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 8
 1945              		@ frame_needed = 1, uses_anonymous_args = 0
 1946 0000 80B5     		push	{r7, lr}
 1947              		.cfi_def_cfa_offset 8
 1948              		.cfi_offset 7, -8
 1949              		.cfi_offset 14, -4
 1950 0002 82B0     		sub	sp, sp, #8
 1951              		.cfi_def_cfa_offset 16
 1952 0004 00AF     		add	r7, sp, #0
 1953              		.cfi_def_cfa_register 7
 1954 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_INTERRUPT_REQ_REG = interruptMask;
 1955              		.loc 1 1390 0
 1956 0008 034B     		ldr	r3, .L127
 1957 000a 7A68     		ldr	r2, [r7, #4]
 1958 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/PWM_Fail.c **** }
 1959              		.loc 1 1391 0
 1960 000e C046     		nop
 1961 0010 BD46     		mov	sp, r7
 1962 0012 02B0     		add	sp, sp, #8
 1963              		@ sp needed
 1964 0014 80BD     		pop	{r7, pc}
 1965              	.L128:
 1966 0016 C046     		.align	2
 1967              	.L127:
 1968 0018 70010540 		.word	1074069872
 1969              		.cfi_endproc
 1970              	.LFE38:
 1971              		.size	PWM_Fail_ClearInterrupt, .-PWM_Fail_ClearInterrupt
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 60


 1972              		.section	.text.PWM_Fail_SetInterrupt,"ax",%progbits
 1973              		.align	2
 1974              		.global	PWM_Fail_SetInterrupt
 1975              		.code	16
 1976              		.thumb_func
 1977              		.type	PWM_Fail_SetInterrupt, %function
 1978              	PWM_Fail_SetInterrupt:
 1979              	.LFB39:
1392:Generated_Source\PSoC4/PWM_Fail.c **** 
1393:Generated_Source\PSoC4/PWM_Fail.c **** 
1394:Generated_Source\PSoC4/PWM_Fail.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM_Fail.c **** * Function Name: PWM_Fail_SetInterrupt
1396:Generated_Source\PSoC4/PWM_Fail.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM_Fail.c **** *
1398:Generated_Source\PSoC4/PWM_Fail.c **** * Summary:
1399:Generated_Source\PSoC4/PWM_Fail.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM_Fail.c **** *
1401:Generated_Source\PSoC4/PWM_Fail.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM_Fail.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM_Fail.c **** *   Values:
1404:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM_Fail.c **** *     - PWM_Fail_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM_Fail.c **** *
1407:Generated_Source\PSoC4/PWM_Fail.c **** * Return:
1408:Generated_Source\PSoC4/PWM_Fail.c **** *  None
1409:Generated_Source\PSoC4/PWM_Fail.c **** *
1410:Generated_Source\PSoC4/PWM_Fail.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM_Fail.c **** void PWM_Fail_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM_Fail.c **** {
 1980              		.loc 1 1412 0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 8
 1983              		@ frame_needed = 1, uses_anonymous_args = 0
 1984 0000 80B5     		push	{r7, lr}
 1985              		.cfi_def_cfa_offset 8
 1986              		.cfi_offset 7, -8
 1987              		.cfi_offset 14, -4
 1988 0002 82B0     		sub	sp, sp, #8
 1989              		.cfi_def_cfa_offset 16
 1990 0004 00AF     		add	r7, sp, #0
 1991              		.cfi_def_cfa_register 7
 1992 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/PWM_Fail.c ****     PWM_Fail_INTERRUPT_SET_REG = interruptMask;
 1993              		.loc 1 1413 0
 1994 0008 034B     		ldr	r3, .L130
 1995 000a 7A68     		ldr	r2, [r7, #4]
 1996 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/PWM_Fail.c **** }
 1997              		.loc 1 1414 0
 1998 000e C046     		nop
 1999 0010 BD46     		mov	sp, r7
 2000 0012 02B0     		add	sp, sp, #8
 2001              		@ sp needed
 2002 0014 80BD     		pop	{r7, pc}
 2003              	.L131:
 2004 0016 C046     		.align	2
 2005              	.L130:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 61


 2006 0018 74010540 		.word	1074069876
 2007              		.cfi_endproc
 2008              	.LFE39:
 2009              		.size	PWM_Fail_SetInterrupt, .-PWM_Fail_SetInterrupt
 2010              		.text
 2011              	.Letext0:
 2012              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2013              		.section	.debug_info,"",%progbits
 2014              	.Ldebug_info0:
 2015 0000 F7060000 		.4byte	0x6f7
 2016 0004 0400     		.2byte	0x4
 2017 0006 00000000 		.4byte	.Ldebug_abbrev0
 2018 000a 04       		.byte	0x4
 2019 000b 01       		.uleb128 0x1
 2020 000c 17020000 		.4byte	.LASF77
 2021 0010 0C       		.byte	0xc
 2022 0011 24040000 		.4byte	.LASF78
 2023 0015 BF020000 		.4byte	.LASF79
 2024 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2025 001d 00000000 		.4byte	0
 2026 0021 00000000 		.4byte	.Ldebug_line0
 2027 0025 02       		.uleb128 0x2
 2028 0026 01       		.byte	0x1
 2029 0027 06       		.byte	0x6
 2030 0028 A7000000 		.4byte	.LASF0
 2031 002c 02       		.uleb128 0x2
 2032 002d 01       		.byte	0x1
 2033 002e 08       		.byte	0x8
 2034 002f 46040000 		.4byte	.LASF1
 2035 0033 02       		.uleb128 0x2
 2036 0034 02       		.byte	0x2
 2037 0035 05       		.byte	0x5
 2038 0036 73040000 		.4byte	.LASF2
 2039 003a 02       		.uleb128 0x2
 2040 003b 02       		.byte	0x2
 2041 003c 07       		.byte	0x7
 2042 003d CA010000 		.4byte	.LASF3
 2043 0041 02       		.uleb128 0x2
 2044 0042 04       		.byte	0x4
 2045 0043 05       		.byte	0x5
 2046 0044 DA000000 		.4byte	.LASF4
 2047 0048 02       		.uleb128 0x2
 2048 0049 04       		.byte	0x4
 2049 004a 07       		.byte	0x7
 2050 004b 83010000 		.4byte	.LASF5
 2051 004f 02       		.uleb128 0x2
 2052 0050 08       		.byte	0x8
 2053 0051 05       		.byte	0x5
 2054 0052 99000000 		.4byte	.LASF6
 2055 0056 02       		.uleb128 0x2
 2056 0057 08       		.byte	0x8
 2057 0058 07       		.byte	0x7
 2058 0059 44000000 		.4byte	.LASF7
 2059 005d 03       		.uleb128 0x3
 2060 005e 04       		.byte	0x4
 2061 005f 05       		.byte	0x5
 2062 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 62


 2063 0064 02       		.uleb128 0x2
 2064 0065 04       		.byte	0x4
 2065 0066 07       		.byte	0x7
 2066 0067 6E010000 		.4byte	.LASF8
 2067 006b 04       		.uleb128 0x4
 2068 006c FF000000 		.4byte	.LASF9
 2069 0070 02       		.byte	0x2
 2070 0071 D201     		.2byte	0x1d2
 2071 0073 2C000000 		.4byte	0x2c
 2072 0077 04       		.uleb128 0x4
 2073 0078 21010000 		.4byte	.LASF10
 2074 007c 02       		.byte	0x2
 2075 007d D401     		.2byte	0x1d4
 2076 007f 48000000 		.4byte	0x48
 2077 0083 02       		.uleb128 0x2
 2078 0084 04       		.byte	0x4
 2079 0085 04       		.byte	0x4
 2080 0086 C1030000 		.4byte	.LASF11
 2081 008a 02       		.uleb128 0x2
 2082 008b 08       		.byte	0x8
 2083 008c 04       		.byte	0x4
 2084 008d 05010000 		.4byte	.LASF12
 2085 0091 02       		.uleb128 0x2
 2086 0092 01       		.byte	0x1
 2087 0093 08       		.byte	0x8
 2088 0094 11050000 		.4byte	.LASF13
 2089 0098 04       		.uleb128 0x4
 2090 0099 34030000 		.4byte	.LASF14
 2091 009d 02       		.byte	0x2
 2092 009e 7E02     		.2byte	0x27e
 2093 00a0 A4000000 		.4byte	0xa4
 2094 00a4 05       		.uleb128 0x5
 2095 00a5 77000000 		.4byte	0x77
 2096 00a9 02       		.uleb128 0x2
 2097 00aa 08       		.byte	0x8
 2098 00ab 04       		.byte	0x4
 2099 00ac 71030000 		.4byte	.LASF15
 2100 00b0 02       		.uleb128 0x2
 2101 00b1 04       		.byte	0x4
 2102 00b2 07       		.byte	0x7
 2103 00b3 3A030000 		.4byte	.LASF16
 2104 00b7 06       		.uleb128 0x6
 2105 00b8 17000000 		.4byte	.LASF17
 2106 00bc 01       		.byte	0x1
 2107 00bd 26       		.byte	0x26
 2108 00be 00000000 		.4byte	.LFB0
 2109 00c2 54000000 		.4byte	.LFE0-.LFB0
 2110 00c6 01       		.uleb128 0x1
 2111 00c7 9C       		.byte	0x9c
 2112 00c8 07       		.uleb128 0x7
 2113 00c9 01050000 		.4byte	.LASF19
 2114 00cd 01       		.byte	0x1
 2115 00ce B1       		.byte	0xb1
 2116 00cf 00000000 		.4byte	.LFB1
 2117 00d3 3C000000 		.4byte	.LFE1-.LFB1
 2118 00d7 01       		.uleb128 0x1
 2119 00d8 9C       		.byte	0x9c
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 63


 2120 00d9 EC000000 		.4byte	0xec
 2121 00dd 08       		.uleb128 0x8
 2122 00de A0050000 		.4byte	.LASF21
 2123 00e2 01       		.byte	0x1
 2124 00e3 B3       		.byte	0xb3
 2125 00e4 6B000000 		.4byte	0x6b
 2126 00e8 02       		.uleb128 0x2
 2127 00e9 91       		.byte	0x91
 2128 00ea 6F       		.sleb128 -17
 2129 00eb 00       		.byte	0
 2130 00ec 06       		.uleb128 0x6
 2131 00ed 58050000 		.4byte	.LASF18
 2132 00f1 01       		.byte	0x1
 2133 00f2 E6       		.byte	0xe6
 2134 00f3 00000000 		.4byte	.LFB2
 2135 00f7 24000000 		.4byte	.LFE2-.LFB2
 2136 00fb 01       		.uleb128 0x1
 2137 00fc 9C       		.byte	0x9c
 2138 00fd 09       		.uleb128 0x9
 2139 00fe 54040000 		.4byte	.LASF20
 2140 0102 01       		.byte	0x1
 2141 0103 0001     		.2byte	0x100
 2142 0105 00000000 		.4byte	.LFB3
 2143 0109 34000000 		.4byte	.LFE3-.LFB3
 2144 010d 01       		.uleb128 0x1
 2145 010e 9C       		.byte	0x9c
 2146 010f 23010000 		.4byte	0x123
 2147 0113 0A       		.uleb128 0xa
 2148 0114 A0050000 		.4byte	.LASF21
 2149 0118 01       		.byte	0x1
 2150 0119 0201     		.2byte	0x102
 2151 011b 6B000000 		.4byte	0x6b
 2152 011f 02       		.uleb128 0x2
 2153 0120 91       		.byte	0x91
 2154 0121 6F       		.sleb128 -17
 2155 0122 00       		.byte	0
 2156 0123 09       		.uleb128 0x9
 2157 0124 C9000000 		.4byte	.LASF22
 2158 0128 01       		.byte	0x1
 2159 0129 2501     		.2byte	0x125
 2160 012b 00000000 		.4byte	.LFB4
 2161 012f 48000000 		.4byte	.LFE4-.LFB4
 2162 0133 01       		.uleb128 0x1
 2163 0134 9C       		.byte	0x9c
 2164 0135 58010000 		.4byte	0x158
 2165 0139 0B       		.uleb128 0xb
 2166 013a 16050000 		.4byte	.LASF24
 2167 013e 01       		.byte	0x1
 2168 013f 2501     		.2byte	0x125
 2169 0141 77000000 		.4byte	0x77
 2170 0145 02       		.uleb128 0x2
 2171 0146 91       		.byte	0x91
 2172 0147 64       		.sleb128 -28
 2173 0148 0A       		.uleb128 0xa
 2174 0149 A0050000 		.4byte	.LASF21
 2175 014d 01       		.byte	0x1
 2176 014e 2701     		.2byte	0x127
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 64


 2177 0150 6B000000 		.4byte	0x6b
 2178 0154 02       		.uleb128 0x2
 2179 0155 91       		.byte	0x91
 2180 0156 6F       		.sleb128 -17
 2181 0157 00       		.byte	0
 2182 0158 09       		.uleb128 0x9
 2183 0159 AE030000 		.4byte	.LASF23
 2184 015d 01       		.byte	0x1
 2185 015e 4601     		.2byte	0x146
 2186 0160 00000000 		.4byte	.LFB5
 2187 0164 48000000 		.4byte	.LFE5-.LFB5
 2188 0168 01       		.uleb128 0x1
 2189 0169 9C       		.byte	0x9c
 2190 016a 8D010000 		.4byte	0x18d
 2191 016e 0B       		.uleb128 0xb
 2192 016f 7D000000 		.4byte	.LASF25
 2193 0173 01       		.byte	0x1
 2194 0174 4601     		.2byte	0x146
 2195 0176 77000000 		.4byte	0x77
 2196 017a 02       		.uleb128 0x2
 2197 017b 91       		.byte	0x91
 2198 017c 64       		.sleb128 -28
 2199 017d 0A       		.uleb128 0xa
 2200 017e A0050000 		.4byte	.LASF21
 2201 0182 01       		.byte	0x1
 2202 0183 4801     		.2byte	0x148
 2203 0185 6B000000 		.4byte	0x6b
 2204 0189 02       		.uleb128 0x2
 2205 018a 91       		.byte	0x91
 2206 018b 6F       		.sleb128 -17
 2207 018c 00       		.byte	0
 2208 018d 09       		.uleb128 0x9
 2209 018e B3000000 		.4byte	.LASF26
 2210 0192 01       		.byte	0x1
 2211 0193 6B01     		.2byte	0x16b
 2212 0195 00000000 		.4byte	.LFB6
 2213 0199 48000000 		.4byte	.LFE6-.LFB6
 2214 019d 01       		.uleb128 0x1
 2215 019e 9C       		.byte	0x9c
 2216 019f C2010000 		.4byte	0x1c2
 2217 01a3 0B       		.uleb128 0xb
 2218 01a4 D5030000 		.4byte	.LASF27
 2219 01a8 01       		.byte	0x1
 2220 01a9 6B01     		.2byte	0x16b
 2221 01ab 77000000 		.4byte	0x77
 2222 01af 02       		.uleb128 0x2
 2223 01b0 91       		.byte	0x91
 2224 01b1 64       		.sleb128 -28
 2225 01b2 0A       		.uleb128 0xa
 2226 01b3 A0050000 		.4byte	.LASF21
 2227 01b7 01       		.byte	0x1
 2228 01b8 6D01     		.2byte	0x16d
 2229 01ba 6B000000 		.4byte	0x6b
 2230 01be 02       		.uleb128 0x2
 2231 01bf 91       		.byte	0x91
 2232 01c0 6F       		.sleb128 -17
 2233 01c1 00       		.byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 65


 2234 01c2 09       		.uleb128 0x9
 2235 01c3 5A010000 		.4byte	.LASF28
 2236 01c7 01       		.byte	0x1
 2237 01c8 8B01     		.2byte	0x18b
 2238 01ca 00000000 		.4byte	.LFB7
 2239 01ce 50000000 		.4byte	.LFE7-.LFB7
 2240 01d2 01       		.uleb128 0x1
 2241 01d3 9C       		.byte	0x9c
 2242 01d4 F7010000 		.4byte	0x1f7
 2243 01d8 0B       		.uleb128 0xb
 2244 01d9 F4010000 		.4byte	.LASF29
 2245 01dd 01       		.byte	0x1
 2246 01de 8B01     		.2byte	0x18b
 2247 01e0 77000000 		.4byte	0x77
 2248 01e4 02       		.uleb128 0x2
 2249 01e5 91       		.byte	0x91
 2250 01e6 64       		.sleb128 -28
 2251 01e7 0A       		.uleb128 0xa
 2252 01e8 A0050000 		.4byte	.LASF21
 2253 01ec 01       		.byte	0x1
 2254 01ed 8D01     		.2byte	0x18d
 2255 01ef 6B000000 		.4byte	0x6b
 2256 01f3 02       		.uleb128 0x2
 2257 01f4 91       		.byte	0x91
 2258 01f5 6F       		.sleb128 -17
 2259 01f6 00       		.byte	0
 2260 01f7 0C       		.uleb128 0xc
 2261 01f8 ED040000 		.4byte	.LASF30
 2262 01fc 01       		.byte	0x1
 2263 01fd C101     		.2byte	0x1c1
 2264 01ff 00000000 		.4byte	.LFB8
 2265 0203 20000000 		.4byte	.LFE8-.LFB8
 2266 0207 01       		.uleb128 0x1
 2267 0208 9C       		.byte	0x9c
 2268 0209 1D020000 		.4byte	0x21d
 2269 020d 0B       		.uleb128 0xb
 2270 020e 95010000 		.4byte	.LASF31
 2271 0212 01       		.byte	0x1
 2272 0213 C101     		.2byte	0x1c1
 2273 0215 77000000 		.4byte	0x77
 2274 0219 02       		.uleb128 0x2
 2275 021a 91       		.byte	0x91
 2276 021b 74       		.sleb128 -12
 2277 021c 00       		.byte	0
 2278 021d 09       		.uleb128 0x9
 2279 021e 88050000 		.4byte	.LASF32
 2280 0222 01       		.byte	0x1
 2281 0223 E501     		.2byte	0x1e5
 2282 0225 00000000 		.4byte	.LFB9
 2283 0229 4C000000 		.4byte	.LFE9-.LFB9
 2284 022d 01       		.uleb128 0x1
 2285 022e 9C       		.byte	0x9c
 2286 022f 52020000 		.4byte	0x252
 2287 0233 0B       		.uleb128 0xb
 2288 0234 CB050000 		.4byte	.LASF33
 2289 0238 01       		.byte	0x1
 2290 0239 E501     		.2byte	0x1e5
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 66


 2291 023b 77000000 		.4byte	0x77
 2292 023f 02       		.uleb128 0x2
 2293 0240 91       		.byte	0x91
 2294 0241 64       		.sleb128 -28
 2295 0242 0A       		.uleb128 0xa
 2296 0243 A0050000 		.4byte	.LASF21
 2297 0247 01       		.byte	0x1
 2298 0248 E701     		.2byte	0x1e7
 2299 024a 6B000000 		.4byte	0x6b
 2300 024e 02       		.uleb128 0x2
 2301 024f 91       		.byte	0x91
 2302 0250 6F       		.sleb128 -17
 2303 0251 00       		.byte	0
 2304 0252 09       		.uleb128 0x9
 2305 0253 B1050000 		.4byte	.LASF34
 2306 0257 01       		.byte	0x1
 2307 0258 0702     		.2byte	0x207
 2308 025a 00000000 		.4byte	.LFB10
 2309 025e 4C000000 		.4byte	.LFE10-.LFB10
 2310 0262 01       		.uleb128 0x1
 2311 0263 9C       		.byte	0x9c
 2312 0264 87020000 		.4byte	0x287
 2313 0268 0B       		.uleb128 0xb
 2314 0269 62040000 		.4byte	.LASF35
 2315 026d 01       		.byte	0x1
 2316 026e 0702     		.2byte	0x207
 2317 0270 77000000 		.4byte	0x77
 2318 0274 02       		.uleb128 0x2
 2319 0275 91       		.byte	0x91
 2320 0276 64       		.sleb128 -28
 2321 0277 0A       		.uleb128 0xa
 2322 0278 A0050000 		.4byte	.LASF21
 2323 027c 01       		.byte	0x1
 2324 027d 0902     		.2byte	0x209
 2325 027f 6B000000 		.4byte	0x6b
 2326 0283 02       		.uleb128 0x2
 2327 0284 91       		.byte	0x91
 2328 0285 6F       		.sleb128 -17
 2329 0286 00       		.byte	0
 2330 0287 09       		.uleb128 0x9
 2331 0288 7D040000 		.4byte	.LASF36
 2332 028c 01       		.byte	0x1
 2333 028d 2802     		.2byte	0x228
 2334 028f 00000000 		.4byte	.LFB11
 2335 0293 50000000 		.4byte	.LFE11-.LFB11
 2336 0297 01       		.uleb128 0x1
 2337 0298 9C       		.byte	0x9c
 2338 0299 BC020000 		.4byte	0x2bc
 2339 029d 0B       		.uleb128 0xb
 2340 029e 51010000 		.4byte	.LASF37
 2341 02a2 01       		.byte	0x1
 2342 02a3 2802     		.2byte	0x228
 2343 02a5 77000000 		.4byte	0x77
 2344 02a9 02       		.uleb128 0x2
 2345 02aa 91       		.byte	0x91
 2346 02ab 64       		.sleb128 -28
 2347 02ac 0A       		.uleb128 0xa
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 67


 2348 02ad A0050000 		.4byte	.LASF21
 2349 02b1 01       		.byte	0x1
 2350 02b2 2A02     		.2byte	0x22a
 2351 02b4 6B000000 		.4byte	0x6b
 2352 02b8 02       		.uleb128 0x2
 2353 02b9 91       		.byte	0x91
 2354 02ba 6F       		.sleb128 -17
 2355 02bb 00       		.byte	0
 2356 02bc 09       		.uleb128 0x9
 2357 02bd 07060000 		.4byte	.LASF38
 2358 02c1 01       		.byte	0x1
 2359 02c2 4902     		.2byte	0x249
 2360 02c4 00000000 		.4byte	.LFB12
 2361 02c8 48000000 		.4byte	.LFE12-.LFB12
 2362 02cc 01       		.uleb128 0x1
 2363 02cd 9C       		.byte	0x9c
 2364 02ce F1020000 		.4byte	0x2f1
 2365 02d2 0B       		.uleb128 0xb
 2366 02d3 4C010000 		.4byte	.LASF39
 2367 02d7 01       		.byte	0x1
 2368 02d8 4902     		.2byte	0x249
 2369 02da 77000000 		.4byte	0x77
 2370 02de 02       		.uleb128 0x2
 2371 02df 91       		.byte	0x91
 2372 02e0 64       		.sleb128 -28
 2373 02e1 0A       		.uleb128 0xa
 2374 02e2 A0050000 		.4byte	.LASF21
 2375 02e6 01       		.byte	0x1
 2376 02e7 4B02     		.2byte	0x24b
 2377 02e9 6B000000 		.4byte	0x6b
 2378 02ed 02       		.uleb128 0x2
 2379 02ee 91       		.byte	0x91
 2380 02ef 6F       		.sleb128 -17
 2381 02f0 00       		.byte	0
 2382 02f1 0C       		.uleb128 0xc
 2383 02f2 72050000 		.4byte	.LASF40
 2384 02f6 01       		.byte	0x1
 2385 02f7 6702     		.2byte	0x267
 2386 02f9 00000000 		.4byte	.LFB13
 2387 02fd 20000000 		.4byte	.LFE13-.LFB13
 2388 0301 01       		.uleb128 0x1
 2389 0302 9C       		.byte	0x9c
 2390 0303 17030000 		.4byte	0x317
 2391 0307 0B       		.uleb128 0xb
 2392 0308 00000000 		.4byte	.LASF41
 2393 030c 01       		.byte	0x1
 2394 030d 6702     		.2byte	0x267
 2395 030f 77000000 		.4byte	0x77
 2396 0313 02       		.uleb128 0x2
 2397 0314 91       		.byte	0x91
 2398 0315 74       		.sleb128 -12
 2399 0316 00       		.byte	0
 2400 0317 0D       		.uleb128 0xd
 2401 0318 0C010000 		.4byte	.LASF46
 2402 031c 01       		.byte	0x1
 2403 031d 7B02     		.2byte	0x27b
 2404 031f 77000000 		.4byte	0x77
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 68


 2405 0323 00000000 		.4byte	.LFB14
 2406 0327 18000000 		.4byte	.LFE14-.LFB14
 2407 032b 01       		.uleb128 0x1
 2408 032c 9C       		.byte	0x9c
 2409 032d 09       		.uleb128 0x9
 2410 032e 59030000 		.4byte	.LASF42
 2411 0332 01       		.byte	0x1
 2412 0333 9802     		.2byte	0x298
 2413 0335 00000000 		.4byte	.LFB15
 2414 0339 48000000 		.4byte	.LFE15-.LFB15
 2415 033d 01       		.uleb128 0x1
 2416 033e 9C       		.byte	0x9c
 2417 033f 62030000 		.4byte	0x362
 2418 0343 0B       		.uleb128 0xb
 2419 0344 4C050000 		.4byte	.LASF43
 2420 0348 01       		.byte	0x1
 2421 0349 9802     		.2byte	0x298
 2422 034b 77000000 		.4byte	0x77
 2423 034f 02       		.uleb128 0x2
 2424 0350 91       		.byte	0x91
 2425 0351 64       		.sleb128 -28
 2426 0352 0A       		.uleb128 0xa
 2427 0353 A0050000 		.4byte	.LASF21
 2428 0357 01       		.byte	0x1
 2429 0358 9A02     		.2byte	0x29a
 2430 035a 6B000000 		.4byte	0x6b
 2431 035e 02       		.uleb128 0x2
 2432 035f 91       		.byte	0x91
 2433 0360 6F       		.sleb128 -17
 2434 0361 00       		.byte	0
 2435 0362 0C       		.uleb128 0xc
 2436 0363 99030000 		.4byte	.LASF44
 2437 0367 01       		.byte	0x1
 2438 0368 B502     		.2byte	0x2b5
 2439 036a 00000000 		.4byte	.LFB16
 2440 036e 20000000 		.4byte	.LFE16-.LFB16
 2441 0372 01       		.uleb128 0x1
 2442 0373 9C       		.byte	0x9c
 2443 0374 88030000 		.4byte	0x388
 2444 0378 0B       		.uleb128 0xb
 2445 0379 3D000000 		.4byte	.LASF45
 2446 037d 01       		.byte	0x1
 2447 037e B502     		.2byte	0x2b5
 2448 0380 77000000 		.4byte	0x77
 2449 0384 02       		.uleb128 0x2
 2450 0385 91       		.byte	0x91
 2451 0386 74       		.sleb128 -12
 2452 0387 00       		.byte	0
 2453 0388 0D       		.uleb128 0xd
 2454 0389 85030000 		.4byte	.LASF47
 2455 038d 01       		.byte	0x1
 2456 038e C902     		.2byte	0x2c9
 2457 0390 77000000 		.4byte	0x77
 2458 0394 00000000 		.4byte	.LFB17
 2459 0398 18000000 		.4byte	.LFE17-.LFB17
 2460 039c 01       		.uleb128 0x1
 2461 039d 9C       		.byte	0x9c
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 69


 2462 039e 09       		.uleb128 0x9
 2463 039f 1B050000 		.4byte	.LASF48
 2464 03a3 01       		.byte	0x1
 2465 03a4 E302     		.2byte	0x2e3
 2466 03a6 00000000 		.4byte	.LFB18
 2467 03aa 48000000 		.4byte	.LFE18-.LFB18
 2468 03ae 01       		.uleb128 0x1
 2469 03af 9C       		.byte	0x9c
 2470 03b0 D3030000 		.4byte	0x3d3
 2471 03b4 0B       		.uleb128 0xb
 2472 03b5 DA050000 		.4byte	.LASF49
 2473 03b9 01       		.byte	0x1
 2474 03ba E302     		.2byte	0x2e3
 2475 03bc 77000000 		.4byte	0x77
 2476 03c0 02       		.uleb128 0x2
 2477 03c1 91       		.byte	0x91
 2478 03c2 64       		.sleb128 -28
 2479 03c3 0A       		.uleb128 0xa
 2480 03c4 A0050000 		.4byte	.LASF21
 2481 03c8 01       		.byte	0x1
 2482 03c9 E502     		.2byte	0x2e5
 2483 03cb 6B000000 		.4byte	0x6b
 2484 03cf 02       		.uleb128 0x2
 2485 03d0 91       		.byte	0x91
 2486 03d1 6F       		.sleb128 -17
 2487 03d2 00       		.byte	0
 2488 03d3 0C       		.uleb128 0xc
 2489 03d4 34010000 		.4byte	.LASF50
 2490 03d8 01       		.byte	0x1
 2491 03d9 FE02     		.2byte	0x2fe
 2492 03db 00000000 		.4byte	.LFB19
 2493 03df 20000000 		.4byte	.LFE19-.LFB19
 2494 03e3 01       		.uleb128 0x1
 2495 03e4 9C       		.byte	0x9c
 2496 03e5 F9030000 		.4byte	0x3f9
 2497 03e9 0B       		.uleb128 0xb
 2498 03ea FD050000 		.4byte	.LASF51
 2499 03ee 01       		.byte	0x1
 2500 03ef FE02     		.2byte	0x2fe
 2501 03f1 77000000 		.4byte	0x77
 2502 03f5 02       		.uleb128 0x2
 2503 03f6 91       		.byte	0x91
 2504 03f7 74       		.sleb128 -12
 2505 03f8 00       		.byte	0
 2506 03f9 0D       		.uleb128 0xd
 2507 03fa DF030000 		.4byte	.LASF52
 2508 03fe 01       		.byte	0x1
 2509 03ff 1203     		.2byte	0x312
 2510 0401 77000000 		.4byte	0x77
 2511 0405 00000000 		.4byte	.LFB20
 2512 0409 18000000 		.4byte	.LFE20-.LFB20
 2513 040d 01       		.uleb128 0x1
 2514 040e 9C       		.byte	0x9c
 2515 040f 09       		.uleb128 0x9
 2516 0410 95040000 		.4byte	.LASF53
 2517 0414 01       		.byte	0x1
 2518 0415 2C03     		.2byte	0x32c
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 70


 2519 0417 00000000 		.4byte	.LFB21
 2520 041b 4C000000 		.4byte	.LFE21-.LFB21
 2521 041f 01       		.uleb128 0x1
 2522 0420 9C       		.byte	0x9c
 2523 0421 44040000 		.4byte	0x444
 2524 0425 0B       		.uleb128 0xb
 2525 0426 DA050000 		.4byte	.LASF49
 2526 042a 01       		.byte	0x1
 2527 042b 2C03     		.2byte	0x32c
 2528 042d 77000000 		.4byte	0x77
 2529 0431 02       		.uleb128 0x2
 2530 0432 91       		.byte	0x91
 2531 0433 64       		.sleb128 -28
 2532 0434 0A       		.uleb128 0xa
 2533 0435 A0050000 		.4byte	.LASF21
 2534 0439 01       		.byte	0x1
 2535 043a 2E03     		.2byte	0x32e
 2536 043c 6B000000 		.4byte	0x6b
 2537 0440 02       		.uleb128 0x2
 2538 0441 91       		.byte	0x91
 2539 0442 6F       		.sleb128 -17
 2540 0443 00       		.byte	0
 2541 0444 0C       		.uleb128 0xc
 2542 0445 C2040000 		.4byte	.LASF54
 2543 0449 01       		.byte	0x1
 2544 044a 5103     		.2byte	0x351
 2545 044c 00000000 		.4byte	.LFB22
 2546 0450 20000000 		.4byte	.LFE22-.LFB22
 2547 0454 01       		.uleb128 0x1
 2548 0455 9C       		.byte	0x9c
 2549 0456 6A040000 		.4byte	0x46a
 2550 045a 0B       		.uleb128 0xb
 2551 045b 7D030000 		.4byte	.LASF55
 2552 045f 01       		.byte	0x1
 2553 0460 5103     		.2byte	0x351
 2554 0462 77000000 		.4byte	0x77
 2555 0466 02       		.uleb128 0x2
 2556 0467 91       		.byte	0x91
 2557 0468 74       		.sleb128 -12
 2558 0469 00       		.byte	0
 2559 046a 0D       		.uleb128 0xd
 2560 046b 84000000 		.4byte	.LASF56
 2561 046f 01       		.byte	0x1
 2562 0470 8403     		.2byte	0x384
 2563 0472 77000000 		.4byte	0x77
 2564 0476 00000000 		.4byte	.LFB23
 2565 047a 18000000 		.4byte	.LFE23-.LFB23
 2566 047e 01       		.uleb128 0x1
 2567 047f 9C       		.byte	0x9c
 2568 0480 0C       		.uleb128 0xc
 2569 0481 33050000 		.4byte	.LASF57
 2570 0485 01       		.byte	0x1
 2571 0486 BA03     		.2byte	0x3ba
 2572 0488 00000000 		.4byte	.LFB24
 2573 048c 20000000 		.4byte	.LFE24-.LFB24
 2574 0490 01       		.uleb128 0x1
 2575 0491 9C       		.byte	0x9c
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 71


 2576 0492 A6040000 		.4byte	0x4a6
 2577 0496 0B       		.uleb128 0xb
 2578 0497 67050000 		.4byte	.LASF58
 2579 049b 01       		.byte	0x1
 2580 049c BA03     		.2byte	0x3ba
 2581 049e 77000000 		.4byte	0x77
 2582 04a2 02       		.uleb128 0x2
 2583 04a3 91       		.byte	0x91
 2584 04a4 74       		.sleb128 -12
 2585 04a5 00       		.byte	0
 2586 04a6 0D       		.uleb128 0xd
 2587 04a7 25000000 		.4byte	.LASF59
 2588 04ab 01       		.byte	0x1
 2589 04ac E803     		.2byte	0x3e8
 2590 04ae 77000000 		.4byte	0x77
 2591 04b2 00000000 		.4byte	.LFB25
 2592 04b6 18000000 		.4byte	.LFE25-.LFB25
 2593 04ba 01       		.uleb128 0x1
 2594 04bb 9C       		.byte	0x9c
 2595 04bc 0D       		.uleb128 0xd
 2596 04bd D8040000 		.4byte	.LASF60
 2597 04c1 01       		.byte	0x1
 2598 04c2 1604     		.2byte	0x416
 2599 04c4 77000000 		.4byte	0x77
 2600 04c8 00000000 		.4byte	.LFB26
 2601 04cc 18000000 		.4byte	.LFE26-.LFB26
 2602 04d0 01       		.uleb128 0x1
 2603 04d1 9C       		.byte	0x9c
 2604 04d2 0D       		.uleb128 0xd
 2605 04d3 B2010000 		.4byte	.LASF61
 2606 04d7 01       		.byte	0x1
 2607 04d8 2B04     		.2byte	0x42b
 2608 04da 77000000 		.4byte	0x77
 2609 04de 00000000 		.4byte	.LFB27
 2610 04e2 18000000 		.4byte	.LFE27-.LFB27
 2611 04e6 01       		.uleb128 0x1
 2612 04e7 9C       		.byte	0x9c
 2613 04e8 09       		.uleb128 0x9
 2614 04e9 0C040000 		.4byte	.LASF62
 2615 04ed 01       		.byte	0x1
 2616 04ee 4604     		.2byte	0x446
 2617 04f0 00000000 		.4byte	.LFB28
 2618 04f4 44000000 		.4byte	.LFE28-.LFB28
 2619 04f8 01       		.uleb128 0x1
 2620 04f9 9C       		.byte	0x9c
 2621 04fa 1D050000 		.4byte	0x51d
 2622 04fe 0B       		.uleb128 0xb
 2623 04ff 28010000 		.4byte	.LASF63
 2624 0503 01       		.byte	0x1
 2625 0504 4604     		.2byte	0x446
 2626 0506 77000000 		.4byte	0x77
 2627 050a 02       		.uleb128 0x2
 2628 050b 91       		.byte	0x91
 2629 050c 64       		.sleb128 -28
 2630 050d 0A       		.uleb128 0xa
 2631 050e A0050000 		.4byte	.LASF21
 2632 0512 01       		.byte	0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 72


 2633 0513 4804     		.2byte	0x448
 2634 0515 6B000000 		.4byte	0x6b
 2635 0519 02       		.uleb128 0x2
 2636 051a 91       		.byte	0x91
 2637 051b 6F       		.sleb128 -17
 2638 051c 00       		.byte	0
 2639 051d 09       		.uleb128 0x9
 2640 051e DD010000 		.4byte	.LASF64
 2641 0522 01       		.byte	0x1
 2642 0523 6704     		.2byte	0x467
 2643 0525 00000000 		.4byte	.LFB29
 2644 0529 48000000 		.4byte	.LFE29-.LFB29
 2645 052d 01       		.uleb128 0x1
 2646 052e 9C       		.byte	0x9c
 2647 052f 52050000 		.4byte	0x552
 2648 0533 0B       		.uleb128 0xb
 2649 0534 28010000 		.4byte	.LASF63
 2650 0538 01       		.byte	0x1
 2651 0539 6704     		.2byte	0x467
 2652 053b 77000000 		.4byte	0x77
 2653 053f 02       		.uleb128 0x2
 2654 0540 91       		.byte	0x91
 2655 0541 64       		.sleb128 -28
 2656 0542 0A       		.uleb128 0xa
 2657 0543 A0050000 		.4byte	.LASF21
 2658 0547 01       		.byte	0x1
 2659 0548 6904     		.2byte	0x469
 2660 054a 6B000000 		.4byte	0x6b
 2661 054e 02       		.uleb128 0x2
 2662 054f 91       		.byte	0x91
 2663 0550 6F       		.sleb128 -17
 2664 0551 00       		.byte	0
 2665 0552 09       		.uleb128 0x9
 2666 0553 AC040000 		.4byte	.LASF65
 2667 0557 01       		.byte	0x1
 2668 0558 8804     		.2byte	0x488
 2669 055a 00000000 		.4byte	.LFB30
 2670 055e 4C000000 		.4byte	.LFE30-.LFB30
 2671 0562 01       		.uleb128 0x1
 2672 0563 9C       		.byte	0x9c
 2673 0564 87050000 		.4byte	0x587
 2674 0568 0B       		.uleb128 0xb
 2675 0569 28010000 		.4byte	.LASF63
 2676 056d 01       		.byte	0x1
 2677 056e 8804     		.2byte	0x488
 2678 0570 77000000 		.4byte	0x77
 2679 0574 02       		.uleb128 0x2
 2680 0575 91       		.byte	0x91
 2681 0576 64       		.sleb128 -28
 2682 0577 0A       		.uleb128 0xa
 2683 0578 A0050000 		.4byte	.LASF21
 2684 057c 01       		.byte	0x1
 2685 057d 8A04     		.2byte	0x48a
 2686 057f 6B000000 		.4byte	0x6b
 2687 0583 02       		.uleb128 0x2
 2688 0584 91       		.byte	0x91
 2689 0585 6F       		.sleb128 -17
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 73


 2690 0586 00       		.byte	0
 2691 0587 09       		.uleb128 0x9
 2692 0588 02020000 		.4byte	.LASF66
 2693 058c 01       		.byte	0x1
 2694 058d A804     		.2byte	0x4a8
 2695 058f 00000000 		.4byte	.LFB31
 2696 0593 48000000 		.4byte	.LFE31-.LFB31
 2697 0597 01       		.uleb128 0x1
 2698 0598 9C       		.byte	0x9c
 2699 0599 BC050000 		.4byte	0x5bc
 2700 059d 0B       		.uleb128 0xb
 2701 059e 28010000 		.4byte	.LASF63
 2702 05a2 01       		.byte	0x1
 2703 05a3 A804     		.2byte	0x4a8
 2704 05a5 77000000 		.4byte	0x77
 2705 05a9 02       		.uleb128 0x2
 2706 05aa 91       		.byte	0x91
 2707 05ab 64       		.sleb128 -28
 2708 05ac 0A       		.uleb128 0xa
 2709 05ad A0050000 		.4byte	.LASF21
 2710 05b1 01       		.byte	0x1
 2711 05b2 AA04     		.2byte	0x4aa
 2712 05b4 6B000000 		.4byte	0x6b
 2713 05b8 02       		.uleb128 0x2
 2714 05b9 91       		.byte	0x91
 2715 05ba 6F       		.sleb128 -17
 2716 05bb 00       		.byte	0
 2717 05bc 09       		.uleb128 0x9
 2718 05bd F6030000 		.4byte	.LASF67
 2719 05c1 01       		.byte	0x1
 2720 05c2 C904     		.2byte	0x4c9
 2721 05c4 00000000 		.4byte	.LFB32
 2722 05c8 48000000 		.4byte	.LFE32-.LFB32
 2723 05cc 01       		.uleb128 0x1
 2724 05cd 9C       		.byte	0x9c
 2725 05ce F1050000 		.4byte	0x5f1
 2726 05d2 0B       		.uleb128 0xb
 2727 05d3 28010000 		.4byte	.LASF63
 2728 05d7 01       		.byte	0x1
 2729 05d8 C904     		.2byte	0x4c9
 2730 05da 77000000 		.4byte	0x77
 2731 05de 02       		.uleb128 0x2
 2732 05df 91       		.byte	0x91
 2733 05e0 64       		.sleb128 -28
 2734 05e1 0A       		.uleb128 0xa
 2735 05e2 A0050000 		.4byte	.LASF21
 2736 05e6 01       		.byte	0x1
 2737 05e7 CB04     		.2byte	0x4cb
 2738 05e9 6B000000 		.4byte	0x6b
 2739 05ed 02       		.uleb128 0x2
 2740 05ee 91       		.byte	0x91
 2741 05ef 6F       		.sleb128 -17
 2742 05f0 00       		.byte	0
 2743 05f1 09       		.uleb128 0x9
 2744 05f2 E5050000 		.4byte	.LASF68
 2745 05f6 01       		.byte	0x1
 2746 05f7 F104     		.2byte	0x4f1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 74


 2747 05f9 00000000 		.4byte	.LFB33
 2748 05fd 3C000000 		.4byte	.LFE33-.LFB33
 2749 0601 01       		.uleb128 0x1
 2750 0602 9C       		.byte	0x9c
 2751 0603 35060000 		.4byte	0x635
 2752 0607 0B       		.uleb128 0xb
 2753 0608 4C010000 		.4byte	.LASF39
 2754 060c 01       		.byte	0x1
 2755 060d F104     		.2byte	0x4f1
 2756 060f 77000000 		.4byte	0x77
 2757 0613 02       		.uleb128 0x2
 2758 0614 91       		.byte	0x91
 2759 0615 64       		.sleb128 -28
 2760 0616 0B       		.uleb128 0xb
 2761 0617 7B010000 		.4byte	.LASF69
 2762 061b 01       		.byte	0x1
 2763 061c F104     		.2byte	0x4f1
 2764 061e 77000000 		.4byte	0x77
 2765 0622 02       		.uleb128 0x2
 2766 0623 91       		.byte	0x91
 2767 0624 60       		.sleb128 -32
 2768 0625 0A       		.uleb128 0xa
 2769 0626 A0050000 		.4byte	.LASF21
 2770 062a 01       		.byte	0x1
 2771 062b F304     		.2byte	0x4f3
 2772 062d 6B000000 		.4byte	0x6b
 2773 0631 02       		.uleb128 0x2
 2774 0632 91       		.byte	0x91
 2775 0633 6F       		.sleb128 -17
 2776 0634 00       		.byte	0
 2777 0635 0D       		.uleb128 0xd
 2778 0636 9E010000 		.4byte	.LASF70
 2779 063a 01       		.byte	0x1
 2780 063b 0E05     		.2byte	0x50e
 2781 063d 77000000 		.4byte	0x77
 2782 0641 00000000 		.4byte	.LFB34
 2783 0645 20000000 		.4byte	.LFE34-.LFB34
 2784 0649 01       		.uleb128 0x1
 2785 064a 9C       		.byte	0x9c
 2786 064b 0C       		.uleb128 0xc
 2787 064c A5020000 		.4byte	.LASF71
 2788 0650 01       		.byte	0x1
 2789 0651 2705     		.2byte	0x527
 2790 0653 00000000 		.4byte	.LFB35
 2791 0657 1C000000 		.4byte	.LFE35-.LFB35
 2792 065b 01       		.uleb128 0x1
 2793 065c 9C       		.byte	0x9c
 2794 065d 71060000 		.4byte	0x671
 2795 0661 0B       		.uleb128 0xb
 2796 0662 C7030000 		.4byte	.LASF72
 2797 0666 01       		.byte	0x1
 2798 0667 2705     		.2byte	0x527
 2799 0669 77000000 		.4byte	0x77
 2800 066d 02       		.uleb128 0x2
 2801 066e 91       		.byte	0x91
 2802 066f 74       		.sleb128 -12
 2803 0670 00       		.byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 75


 2804 0671 0D       		.uleb128 0xd
 2805 0672 5B000000 		.4byte	.LASF73
 2806 0676 01       		.byte	0x1
 2807 0677 3E05     		.2byte	0x53e
 2808 0679 77000000 		.4byte	0x77
 2809 067d 00000000 		.4byte	.LFB36
 2810 0681 14000000 		.4byte	.LFE36-.LFB36
 2811 0685 01       		.uleb128 0x1
 2812 0686 9C       		.byte	0x9c
 2813 0687 0D       		.uleb128 0xd
 2814 0688 E3000000 		.4byte	.LASF74
 2815 068c 01       		.byte	0x1
 2816 068d 5505     		.2byte	0x555
 2817 068f 77000000 		.4byte	0x77
 2818 0693 00000000 		.4byte	.LFB37
 2819 0697 14000000 		.4byte	.LFE37-.LFB37
 2820 069b 01       		.uleb128 0x1
 2821 069c 9C       		.byte	0x9c
 2822 069d 0C       		.uleb128 0xc
 2823 069e 1D060000 		.4byte	.LASF75
 2824 06a2 01       		.byte	0x1
 2825 06a3 6C05     		.2byte	0x56c
 2826 06a5 00000000 		.4byte	.LFB38
 2827 06a9 1C000000 		.4byte	.LFE38-.LFB38
 2828 06ad 01       		.uleb128 0x1
 2829 06ae 9C       		.byte	0x9c
 2830 06af C3060000 		.4byte	0x6c3
 2831 06b3 0B       		.uleb128 0xb
 2832 06b4 C7030000 		.4byte	.LASF72
 2833 06b8 01       		.byte	0x1
 2834 06b9 6C05     		.2byte	0x56c
 2835 06bb 77000000 		.4byte	0x77
 2836 06bf 02       		.uleb128 0x2
 2837 06c0 91       		.byte	0x91
 2838 06c1 74       		.sleb128 -12
 2839 06c2 00       		.byte	0
 2840 06c3 0C       		.uleb128 0xc
 2841 06c4 43030000 		.4byte	.LASF76
 2842 06c8 01       		.byte	0x1
 2843 06c9 8305     		.2byte	0x583
 2844 06cb 00000000 		.4byte	.LFB39
 2845 06cf 1C000000 		.4byte	.LFE39-.LFB39
 2846 06d3 01       		.uleb128 0x1
 2847 06d4 9C       		.byte	0x9c
 2848 06d5 E9060000 		.4byte	0x6e9
 2849 06d9 0B       		.uleb128 0xb
 2850 06da C7030000 		.4byte	.LASF72
 2851 06de 01       		.byte	0x1
 2852 06df 8305     		.2byte	0x583
 2853 06e1 77000000 		.4byte	0x77
 2854 06e5 02       		.uleb128 0x2
 2855 06e6 91       		.byte	0x91
 2856 06e7 74       		.sleb128 -12
 2857 06e8 00       		.byte	0
 2858 06e9 0E       		.uleb128 0xe
 2859 06ea 06000000 		.4byte	.LASF80
 2860 06ee 01       		.byte	0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 76


 2861 06ef 15       		.byte	0x15
 2862 06f0 6B000000 		.4byte	0x6b
 2863 06f4 05       		.uleb128 0x5
 2864 06f5 03       		.byte	0x3
 2865 06f6 00000000 		.4byte	PWM_Fail_initVar
 2866 06fa 00       		.byte	0
 2867              		.section	.debug_abbrev,"",%progbits
 2868              	.Ldebug_abbrev0:
 2869 0000 01       		.uleb128 0x1
 2870 0001 11       		.uleb128 0x11
 2871 0002 01       		.byte	0x1
 2872 0003 25       		.uleb128 0x25
 2873 0004 0E       		.uleb128 0xe
 2874 0005 13       		.uleb128 0x13
 2875 0006 0B       		.uleb128 0xb
 2876 0007 03       		.uleb128 0x3
 2877 0008 0E       		.uleb128 0xe
 2878 0009 1B       		.uleb128 0x1b
 2879 000a 0E       		.uleb128 0xe
 2880 000b 55       		.uleb128 0x55
 2881 000c 17       		.uleb128 0x17
 2882 000d 11       		.uleb128 0x11
 2883 000e 01       		.uleb128 0x1
 2884 000f 10       		.uleb128 0x10
 2885 0010 17       		.uleb128 0x17
 2886 0011 00       		.byte	0
 2887 0012 00       		.byte	0
 2888 0013 02       		.uleb128 0x2
 2889 0014 24       		.uleb128 0x24
 2890 0015 00       		.byte	0
 2891 0016 0B       		.uleb128 0xb
 2892 0017 0B       		.uleb128 0xb
 2893 0018 3E       		.uleb128 0x3e
 2894 0019 0B       		.uleb128 0xb
 2895 001a 03       		.uleb128 0x3
 2896 001b 0E       		.uleb128 0xe
 2897 001c 00       		.byte	0
 2898 001d 00       		.byte	0
 2899 001e 03       		.uleb128 0x3
 2900 001f 24       		.uleb128 0x24
 2901 0020 00       		.byte	0
 2902 0021 0B       		.uleb128 0xb
 2903 0022 0B       		.uleb128 0xb
 2904 0023 3E       		.uleb128 0x3e
 2905 0024 0B       		.uleb128 0xb
 2906 0025 03       		.uleb128 0x3
 2907 0026 08       		.uleb128 0x8
 2908 0027 00       		.byte	0
 2909 0028 00       		.byte	0
 2910 0029 04       		.uleb128 0x4
 2911 002a 16       		.uleb128 0x16
 2912 002b 00       		.byte	0
 2913 002c 03       		.uleb128 0x3
 2914 002d 0E       		.uleb128 0xe
 2915 002e 3A       		.uleb128 0x3a
 2916 002f 0B       		.uleb128 0xb
 2917 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 77


 2918 0031 05       		.uleb128 0x5
 2919 0032 49       		.uleb128 0x49
 2920 0033 13       		.uleb128 0x13
 2921 0034 00       		.byte	0
 2922 0035 00       		.byte	0
 2923 0036 05       		.uleb128 0x5
 2924 0037 35       		.uleb128 0x35
 2925 0038 00       		.byte	0
 2926 0039 49       		.uleb128 0x49
 2927 003a 13       		.uleb128 0x13
 2928 003b 00       		.byte	0
 2929 003c 00       		.byte	0
 2930 003d 06       		.uleb128 0x6
 2931 003e 2E       		.uleb128 0x2e
 2932 003f 00       		.byte	0
 2933 0040 3F       		.uleb128 0x3f
 2934 0041 19       		.uleb128 0x19
 2935 0042 03       		.uleb128 0x3
 2936 0043 0E       		.uleb128 0xe
 2937 0044 3A       		.uleb128 0x3a
 2938 0045 0B       		.uleb128 0xb
 2939 0046 3B       		.uleb128 0x3b
 2940 0047 0B       		.uleb128 0xb
 2941 0048 27       		.uleb128 0x27
 2942 0049 19       		.uleb128 0x19
 2943 004a 11       		.uleb128 0x11
 2944 004b 01       		.uleb128 0x1
 2945 004c 12       		.uleb128 0x12
 2946 004d 06       		.uleb128 0x6
 2947 004e 40       		.uleb128 0x40
 2948 004f 18       		.uleb128 0x18
 2949 0050 9642     		.uleb128 0x2116
 2950 0052 19       		.uleb128 0x19
 2951 0053 00       		.byte	0
 2952 0054 00       		.byte	0
 2953 0055 07       		.uleb128 0x7
 2954 0056 2E       		.uleb128 0x2e
 2955 0057 01       		.byte	0x1
 2956 0058 3F       		.uleb128 0x3f
 2957 0059 19       		.uleb128 0x19
 2958 005a 03       		.uleb128 0x3
 2959 005b 0E       		.uleb128 0xe
 2960 005c 3A       		.uleb128 0x3a
 2961 005d 0B       		.uleb128 0xb
 2962 005e 3B       		.uleb128 0x3b
 2963 005f 0B       		.uleb128 0xb
 2964 0060 27       		.uleb128 0x27
 2965 0061 19       		.uleb128 0x19
 2966 0062 11       		.uleb128 0x11
 2967 0063 01       		.uleb128 0x1
 2968 0064 12       		.uleb128 0x12
 2969 0065 06       		.uleb128 0x6
 2970 0066 40       		.uleb128 0x40
 2971 0067 18       		.uleb128 0x18
 2972 0068 9642     		.uleb128 0x2116
 2973 006a 19       		.uleb128 0x19
 2974 006b 01       		.uleb128 0x1
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 78


 2975 006c 13       		.uleb128 0x13
 2976 006d 00       		.byte	0
 2977 006e 00       		.byte	0
 2978 006f 08       		.uleb128 0x8
 2979 0070 34       		.uleb128 0x34
 2980 0071 00       		.byte	0
 2981 0072 03       		.uleb128 0x3
 2982 0073 0E       		.uleb128 0xe
 2983 0074 3A       		.uleb128 0x3a
 2984 0075 0B       		.uleb128 0xb
 2985 0076 3B       		.uleb128 0x3b
 2986 0077 0B       		.uleb128 0xb
 2987 0078 49       		.uleb128 0x49
 2988 0079 13       		.uleb128 0x13
 2989 007a 02       		.uleb128 0x2
 2990 007b 18       		.uleb128 0x18
 2991 007c 00       		.byte	0
 2992 007d 00       		.byte	0
 2993 007e 09       		.uleb128 0x9
 2994 007f 2E       		.uleb128 0x2e
 2995 0080 01       		.byte	0x1
 2996 0081 3F       		.uleb128 0x3f
 2997 0082 19       		.uleb128 0x19
 2998 0083 03       		.uleb128 0x3
 2999 0084 0E       		.uleb128 0xe
 3000 0085 3A       		.uleb128 0x3a
 3001 0086 0B       		.uleb128 0xb
 3002 0087 3B       		.uleb128 0x3b
 3003 0088 05       		.uleb128 0x5
 3004 0089 27       		.uleb128 0x27
 3005 008a 19       		.uleb128 0x19
 3006 008b 11       		.uleb128 0x11
 3007 008c 01       		.uleb128 0x1
 3008 008d 12       		.uleb128 0x12
 3009 008e 06       		.uleb128 0x6
 3010 008f 40       		.uleb128 0x40
 3011 0090 18       		.uleb128 0x18
 3012 0091 9642     		.uleb128 0x2116
 3013 0093 19       		.uleb128 0x19
 3014 0094 01       		.uleb128 0x1
 3015 0095 13       		.uleb128 0x13
 3016 0096 00       		.byte	0
 3017 0097 00       		.byte	0
 3018 0098 0A       		.uleb128 0xa
 3019 0099 34       		.uleb128 0x34
 3020 009a 00       		.byte	0
 3021 009b 03       		.uleb128 0x3
 3022 009c 0E       		.uleb128 0xe
 3023 009d 3A       		.uleb128 0x3a
 3024 009e 0B       		.uleb128 0xb
 3025 009f 3B       		.uleb128 0x3b
 3026 00a0 05       		.uleb128 0x5
 3027 00a1 49       		.uleb128 0x49
 3028 00a2 13       		.uleb128 0x13
 3029 00a3 02       		.uleb128 0x2
 3030 00a4 18       		.uleb128 0x18
 3031 00a5 00       		.byte	0
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 79


 3032 00a6 00       		.byte	0
 3033 00a7 0B       		.uleb128 0xb
 3034 00a8 05       		.uleb128 0x5
 3035 00a9 00       		.byte	0
 3036 00aa 03       		.uleb128 0x3
 3037 00ab 0E       		.uleb128 0xe
 3038 00ac 3A       		.uleb128 0x3a
 3039 00ad 0B       		.uleb128 0xb
 3040 00ae 3B       		.uleb128 0x3b
 3041 00af 05       		.uleb128 0x5
 3042 00b0 49       		.uleb128 0x49
 3043 00b1 13       		.uleb128 0x13
 3044 00b2 02       		.uleb128 0x2
 3045 00b3 18       		.uleb128 0x18
 3046 00b4 00       		.byte	0
 3047 00b5 00       		.byte	0
 3048 00b6 0C       		.uleb128 0xc
 3049 00b7 2E       		.uleb128 0x2e
 3050 00b8 01       		.byte	0x1
 3051 00b9 3F       		.uleb128 0x3f
 3052 00ba 19       		.uleb128 0x19
 3053 00bb 03       		.uleb128 0x3
 3054 00bc 0E       		.uleb128 0xe
 3055 00bd 3A       		.uleb128 0x3a
 3056 00be 0B       		.uleb128 0xb
 3057 00bf 3B       		.uleb128 0x3b
 3058 00c0 05       		.uleb128 0x5
 3059 00c1 27       		.uleb128 0x27
 3060 00c2 19       		.uleb128 0x19
 3061 00c3 11       		.uleb128 0x11
 3062 00c4 01       		.uleb128 0x1
 3063 00c5 12       		.uleb128 0x12
 3064 00c6 06       		.uleb128 0x6
 3065 00c7 40       		.uleb128 0x40
 3066 00c8 18       		.uleb128 0x18
 3067 00c9 9742     		.uleb128 0x2117
 3068 00cb 19       		.uleb128 0x19
 3069 00cc 01       		.uleb128 0x1
 3070 00cd 13       		.uleb128 0x13
 3071 00ce 00       		.byte	0
 3072 00cf 00       		.byte	0
 3073 00d0 0D       		.uleb128 0xd
 3074 00d1 2E       		.uleb128 0x2e
 3075 00d2 00       		.byte	0
 3076 00d3 3F       		.uleb128 0x3f
 3077 00d4 19       		.uleb128 0x19
 3078 00d5 03       		.uleb128 0x3
 3079 00d6 0E       		.uleb128 0xe
 3080 00d7 3A       		.uleb128 0x3a
 3081 00d8 0B       		.uleb128 0xb
 3082 00d9 3B       		.uleb128 0x3b
 3083 00da 05       		.uleb128 0x5
 3084 00db 27       		.uleb128 0x27
 3085 00dc 19       		.uleb128 0x19
 3086 00dd 49       		.uleb128 0x49
 3087 00de 13       		.uleb128 0x13
 3088 00df 11       		.uleb128 0x11
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 80


 3089 00e0 01       		.uleb128 0x1
 3090 00e1 12       		.uleb128 0x12
 3091 00e2 06       		.uleb128 0x6
 3092 00e3 40       		.uleb128 0x40
 3093 00e4 18       		.uleb128 0x18
 3094 00e5 9742     		.uleb128 0x2117
 3095 00e7 19       		.uleb128 0x19
 3096 00e8 00       		.byte	0
 3097 00e9 00       		.byte	0
 3098 00ea 0E       		.uleb128 0xe
 3099 00eb 34       		.uleb128 0x34
 3100 00ec 00       		.byte	0
 3101 00ed 03       		.uleb128 0x3
 3102 00ee 0E       		.uleb128 0xe
 3103 00ef 3A       		.uleb128 0x3a
 3104 00f0 0B       		.uleb128 0xb
 3105 00f1 3B       		.uleb128 0x3b
 3106 00f2 0B       		.uleb128 0xb
 3107 00f3 49       		.uleb128 0x49
 3108 00f4 13       		.uleb128 0x13
 3109 00f5 3F       		.uleb128 0x3f
 3110 00f6 19       		.uleb128 0x19
 3111 00f7 02       		.uleb128 0x2
 3112 00f8 18       		.uleb128 0x18
 3113 00f9 00       		.byte	0
 3114 00fa 00       		.byte	0
 3115 00fb 00       		.byte	0
 3116              		.section	.debug_aranges,"",%progbits
 3117 0000 54010000 		.4byte	0x154
 3118 0004 0200     		.2byte	0x2
 3119 0006 00000000 		.4byte	.Ldebug_info0
 3120 000a 04       		.byte	0x4
 3121 000b 00       		.byte	0
 3122 000c 0000     		.2byte	0
 3123 000e 0000     		.2byte	0
 3124 0010 00000000 		.4byte	.LFB0
 3125 0014 54000000 		.4byte	.LFE0-.LFB0
 3126 0018 00000000 		.4byte	.LFB1
 3127 001c 3C000000 		.4byte	.LFE1-.LFB1
 3128 0020 00000000 		.4byte	.LFB2
 3129 0024 24000000 		.4byte	.LFE2-.LFB2
 3130 0028 00000000 		.4byte	.LFB3
 3131 002c 34000000 		.4byte	.LFE3-.LFB3
 3132 0030 00000000 		.4byte	.LFB4
 3133 0034 48000000 		.4byte	.LFE4-.LFB4
 3134 0038 00000000 		.4byte	.LFB5
 3135 003c 48000000 		.4byte	.LFE5-.LFB5
 3136 0040 00000000 		.4byte	.LFB6
 3137 0044 48000000 		.4byte	.LFE6-.LFB6
 3138 0048 00000000 		.4byte	.LFB7
 3139 004c 50000000 		.4byte	.LFE7-.LFB7
 3140 0050 00000000 		.4byte	.LFB8
 3141 0054 20000000 		.4byte	.LFE8-.LFB8
 3142 0058 00000000 		.4byte	.LFB9
 3143 005c 4C000000 		.4byte	.LFE9-.LFB9
 3144 0060 00000000 		.4byte	.LFB10
 3145 0064 4C000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 81


 3146 0068 00000000 		.4byte	.LFB11
 3147 006c 50000000 		.4byte	.LFE11-.LFB11
 3148 0070 00000000 		.4byte	.LFB12
 3149 0074 48000000 		.4byte	.LFE12-.LFB12
 3150 0078 00000000 		.4byte	.LFB13
 3151 007c 20000000 		.4byte	.LFE13-.LFB13
 3152 0080 00000000 		.4byte	.LFB14
 3153 0084 18000000 		.4byte	.LFE14-.LFB14
 3154 0088 00000000 		.4byte	.LFB15
 3155 008c 48000000 		.4byte	.LFE15-.LFB15
 3156 0090 00000000 		.4byte	.LFB16
 3157 0094 20000000 		.4byte	.LFE16-.LFB16
 3158 0098 00000000 		.4byte	.LFB17
 3159 009c 18000000 		.4byte	.LFE17-.LFB17
 3160 00a0 00000000 		.4byte	.LFB18
 3161 00a4 48000000 		.4byte	.LFE18-.LFB18
 3162 00a8 00000000 		.4byte	.LFB19
 3163 00ac 20000000 		.4byte	.LFE19-.LFB19
 3164 00b0 00000000 		.4byte	.LFB20
 3165 00b4 18000000 		.4byte	.LFE20-.LFB20
 3166 00b8 00000000 		.4byte	.LFB21
 3167 00bc 4C000000 		.4byte	.LFE21-.LFB21
 3168 00c0 00000000 		.4byte	.LFB22
 3169 00c4 20000000 		.4byte	.LFE22-.LFB22
 3170 00c8 00000000 		.4byte	.LFB23
 3171 00cc 18000000 		.4byte	.LFE23-.LFB23
 3172 00d0 00000000 		.4byte	.LFB24
 3173 00d4 20000000 		.4byte	.LFE24-.LFB24
 3174 00d8 00000000 		.4byte	.LFB25
 3175 00dc 18000000 		.4byte	.LFE25-.LFB25
 3176 00e0 00000000 		.4byte	.LFB26
 3177 00e4 18000000 		.4byte	.LFE26-.LFB26
 3178 00e8 00000000 		.4byte	.LFB27
 3179 00ec 18000000 		.4byte	.LFE27-.LFB27
 3180 00f0 00000000 		.4byte	.LFB28
 3181 00f4 44000000 		.4byte	.LFE28-.LFB28
 3182 00f8 00000000 		.4byte	.LFB29
 3183 00fc 48000000 		.4byte	.LFE29-.LFB29
 3184 0100 00000000 		.4byte	.LFB30
 3185 0104 4C000000 		.4byte	.LFE30-.LFB30
 3186 0108 00000000 		.4byte	.LFB31
 3187 010c 48000000 		.4byte	.LFE31-.LFB31
 3188 0110 00000000 		.4byte	.LFB32
 3189 0114 48000000 		.4byte	.LFE32-.LFB32
 3190 0118 00000000 		.4byte	.LFB33
 3191 011c 3C000000 		.4byte	.LFE33-.LFB33
 3192 0120 00000000 		.4byte	.LFB34
 3193 0124 20000000 		.4byte	.LFE34-.LFB34
 3194 0128 00000000 		.4byte	.LFB35
 3195 012c 1C000000 		.4byte	.LFE35-.LFB35
 3196 0130 00000000 		.4byte	.LFB36
 3197 0134 14000000 		.4byte	.LFE36-.LFB36
 3198 0138 00000000 		.4byte	.LFB37
 3199 013c 14000000 		.4byte	.LFE37-.LFB37
 3200 0140 00000000 		.4byte	.LFB38
 3201 0144 1C000000 		.4byte	.LFE38-.LFB38
 3202 0148 00000000 		.4byte	.LFB39
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 82


 3203 014c 1C000000 		.4byte	.LFE39-.LFB39
 3204 0150 00000000 		.4byte	0
 3205 0154 00000000 		.4byte	0
 3206              		.section	.debug_ranges,"",%progbits
 3207              	.Ldebug_ranges0:
 3208 0000 00000000 		.4byte	.LFB0
 3209 0004 54000000 		.4byte	.LFE0
 3210 0008 00000000 		.4byte	.LFB1
 3211 000c 3C000000 		.4byte	.LFE1
 3212 0010 00000000 		.4byte	.LFB2
 3213 0014 24000000 		.4byte	.LFE2
 3214 0018 00000000 		.4byte	.LFB3
 3215 001c 34000000 		.4byte	.LFE3
 3216 0020 00000000 		.4byte	.LFB4
 3217 0024 48000000 		.4byte	.LFE4
 3218 0028 00000000 		.4byte	.LFB5
 3219 002c 48000000 		.4byte	.LFE5
 3220 0030 00000000 		.4byte	.LFB6
 3221 0034 48000000 		.4byte	.LFE6
 3222 0038 00000000 		.4byte	.LFB7
 3223 003c 50000000 		.4byte	.LFE7
 3224 0040 00000000 		.4byte	.LFB8
 3225 0044 20000000 		.4byte	.LFE8
 3226 0048 00000000 		.4byte	.LFB9
 3227 004c 4C000000 		.4byte	.LFE9
 3228 0050 00000000 		.4byte	.LFB10
 3229 0054 4C000000 		.4byte	.LFE10
 3230 0058 00000000 		.4byte	.LFB11
 3231 005c 50000000 		.4byte	.LFE11
 3232 0060 00000000 		.4byte	.LFB12
 3233 0064 48000000 		.4byte	.LFE12
 3234 0068 00000000 		.4byte	.LFB13
 3235 006c 20000000 		.4byte	.LFE13
 3236 0070 00000000 		.4byte	.LFB14
 3237 0074 18000000 		.4byte	.LFE14
 3238 0078 00000000 		.4byte	.LFB15
 3239 007c 48000000 		.4byte	.LFE15
 3240 0080 00000000 		.4byte	.LFB16
 3241 0084 20000000 		.4byte	.LFE16
 3242 0088 00000000 		.4byte	.LFB17
 3243 008c 18000000 		.4byte	.LFE17
 3244 0090 00000000 		.4byte	.LFB18
 3245 0094 48000000 		.4byte	.LFE18
 3246 0098 00000000 		.4byte	.LFB19
 3247 009c 20000000 		.4byte	.LFE19
 3248 00a0 00000000 		.4byte	.LFB20
 3249 00a4 18000000 		.4byte	.LFE20
 3250 00a8 00000000 		.4byte	.LFB21
 3251 00ac 4C000000 		.4byte	.LFE21
 3252 00b0 00000000 		.4byte	.LFB22
 3253 00b4 20000000 		.4byte	.LFE22
 3254 00b8 00000000 		.4byte	.LFB23
 3255 00bc 18000000 		.4byte	.LFE23
 3256 00c0 00000000 		.4byte	.LFB24
 3257 00c4 20000000 		.4byte	.LFE24
 3258 00c8 00000000 		.4byte	.LFB25
 3259 00cc 18000000 		.4byte	.LFE25
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 83


 3260 00d0 00000000 		.4byte	.LFB26
 3261 00d4 18000000 		.4byte	.LFE26
 3262 00d8 00000000 		.4byte	.LFB27
 3263 00dc 18000000 		.4byte	.LFE27
 3264 00e0 00000000 		.4byte	.LFB28
 3265 00e4 44000000 		.4byte	.LFE28
 3266 00e8 00000000 		.4byte	.LFB29
 3267 00ec 48000000 		.4byte	.LFE29
 3268 00f0 00000000 		.4byte	.LFB30
 3269 00f4 4C000000 		.4byte	.LFE30
 3270 00f8 00000000 		.4byte	.LFB31
 3271 00fc 48000000 		.4byte	.LFE31
 3272 0100 00000000 		.4byte	.LFB32
 3273 0104 48000000 		.4byte	.LFE32
 3274 0108 00000000 		.4byte	.LFB33
 3275 010c 3C000000 		.4byte	.LFE33
 3276 0110 00000000 		.4byte	.LFB34
 3277 0114 20000000 		.4byte	.LFE34
 3278 0118 00000000 		.4byte	.LFB35
 3279 011c 1C000000 		.4byte	.LFE35
 3280 0120 00000000 		.4byte	.LFB36
 3281 0124 14000000 		.4byte	.LFE36
 3282 0128 00000000 		.4byte	.LFB37
 3283 012c 14000000 		.4byte	.LFE37
 3284 0130 00000000 		.4byte	.LFB38
 3285 0134 1C000000 		.4byte	.LFE38
 3286 0138 00000000 		.4byte	.LFB39
 3287 013c 1C000000 		.4byte	.LFE39
 3288 0140 00000000 		.4byte	0
 3289 0144 00000000 		.4byte	0
 3290              		.section	.debug_line,"",%progbits
 3291              	.Ldebug_line0:
 3292 0000 72030000 		.section	.debug_str,"MS",%progbits,1
 3292      02004500 
 3292      00000201 
 3292      FB0E0D00 
 3292      01010101 
 3293              	.LASF41:
 3294 0000 636F756E 		.ascii	"count\000"
 3294      7400
 3295              	.LASF80:
 3296 0006 50574D5F 		.ascii	"PWM_Fail_initVar\000"
 3296      4661696C 
 3296      5F696E69 
 3296      74566172 
 3296      00
 3297              	.LASF17:
 3298 0017 50574D5F 		.ascii	"PWM_Fail_Init\000"
 3298      4661696C 
 3298      5F496E69 
 3298      7400
 3299              	.LASF59:
 3300 0025 50574D5F 		.ascii	"PWM_Fail_ReadCompareBuf\000"
 3300      4661696C 
 3300      5F526561 
 3300      64436F6D 
 3300      70617265 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 84


 3301              	.LASF45:
 3302 003d 70657269 		.ascii	"period\000"
 3302      6F6400
 3303              	.LASF7:
 3304 0044 6C6F6E67 		.ascii	"long long unsigned int\000"
 3304      206C6F6E 
 3304      6720756E 
 3304      7369676E 
 3304      65642069 
 3305              	.LASF73:
 3306 005b 50574D5F 		.ascii	"PWM_Fail_GetInterruptSourceMasked\000"
 3306      4661696C 
 3306      5F476574 
 3306      496E7465 
 3306      72727570 
 3307              	.LASF25:
 3308 007d 71644D6F 		.ascii	"qdMode\000"
 3308      646500
 3309              	.LASF56:
 3310 0084 50574D5F 		.ascii	"PWM_Fail_ReadCompare\000"
 3310      4661696C 
 3310      5F526561 
 3310      64436F6D 
 3310      70617265 
 3311              	.LASF6:
 3312 0099 6C6F6E67 		.ascii	"long long int\000"
 3312      206C6F6E 
 3312      6720696E 
 3312      7400
 3313              	.LASF0:
 3314 00a7 7369676E 		.ascii	"signed char\000"
 3314      65642063 
 3314      68617200 
 3315              	.LASF26:
 3316 00b3 50574D5F 		.ascii	"PWM_Fail_SetPrescaler\000"
 3316      4661696C 
 3316      5F536574 
 3316      50726573 
 3316      63616C65 
 3317              	.LASF22:
 3318 00c9 50574D5F 		.ascii	"PWM_Fail_SetMode\000"
 3318      4661696C 
 3318      5F536574 
 3318      4D6F6465 
 3318      00
 3319              	.LASF4:
 3320 00da 6C6F6E67 		.ascii	"long int\000"
 3320      20696E74 
 3320      00
 3321              	.LASF74:
 3322 00e3 50574D5F 		.ascii	"PWM_Fail_GetInterruptSource\000"
 3322      4661696C 
 3322      5F476574 
 3322      496E7465 
 3322      72727570 
 3323              	.LASF9:
 3324 00ff 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 85


 3324      3800
 3325              	.LASF12:
 3326 0105 646F7562 		.ascii	"double\000"
 3326      6C6500
 3327              	.LASF46:
 3328 010c 50574D5F 		.ascii	"PWM_Fail_ReadCounter\000"
 3328      4661696C 
 3328      5F526561 
 3328      64436F75 
 3328      6E746572 
 3329              	.LASF10:
 3330 0121 75696E74 		.ascii	"uint32\000"
 3330      333200
 3331              	.LASF63:
 3332 0128 74726967 		.ascii	"triggerMode\000"
 3332      6765724D 
 3332      6F646500 
 3333              	.LASF50:
 3334 0134 50574D5F 		.ascii	"PWM_Fail_WritePeriodBuf\000"
 3334      4661696C 
 3334      5F577269 
 3334      74655065 
 3334      72696F64 
 3335              	.LASF39:
 3336 014c 6D61736B 		.ascii	"mask\000"
 3336      00
 3337              	.LASF37:
 3338 0151 64656164 		.ascii	"deadTime\000"
 3338      54696D65 
 3338      00
 3339              	.LASF28:
 3340 015a 50574D5F 		.ascii	"PWM_Fail_SetOneShot\000"
 3340      4661696C 
 3340      5F536574 
 3340      4F6E6553 
 3340      686F7400 
 3341              	.LASF8:
 3342 016e 756E7369 		.ascii	"unsigned int\000"
 3342      676E6564 
 3342      20696E74 
 3342      00
 3343              	.LASF69:
 3344 017b 636F6D6D 		.ascii	"command\000"
 3344      616E6400 
 3345              	.LASF5:
 3346 0183 6C6F6E67 		.ascii	"long unsigned int\000"
 3346      20756E73 
 3346      69676E65 
 3346      6420696E 
 3346      7400
 3347              	.LASF31:
 3348 0195 6D6F6465 		.ascii	"modeMask\000"
 3348      4D61736B 
 3348      00
 3349              	.LASF70:
 3350 019e 50574D5F 		.ascii	"PWM_Fail_ReadStatus\000"
 3350      4661696C 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 86


 3350      5F526561 
 3350      64537461 
 3350      74757300 
 3351              	.LASF61:
 3352 01b2 50574D5F 		.ascii	"PWM_Fail_ReadCaptureBuf\000"
 3352      4661696C 
 3352      5F526561 
 3352      64436170 
 3352      74757265 
 3353              	.LASF3:
 3354 01ca 73686F72 		.ascii	"short unsigned int\000"
 3354      7420756E 
 3354      7369676E 
 3354      65642069 
 3354      6E7400
 3355              	.LASF64:
 3356 01dd 50574D5F 		.ascii	"PWM_Fail_SetReloadMode\000"
 3356      4661696C 
 3356      5F536574 
 3356      52656C6F 
 3356      61644D6F 
 3357              	.LASF29:
 3358 01f4 6F6E6553 		.ascii	"oneShotEnable\000"
 3358      686F7445 
 3358      6E61626C 
 3358      6500
 3359              	.LASF66:
 3360 0202 50574D5F 		.ascii	"PWM_Fail_SetStopMode\000"
 3360      4661696C 
 3360      5F536574 
 3360      53746F70 
 3360      4D6F6465 
 3361              	.LASF77:
 3362 0217 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3362      43313120 
 3362      352E342E 
 3362      31203230 
 3362      31363036 
 3363 024a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3363      20726576 
 3363      6973696F 
 3363      6E203233 
 3363      37373135 
 3364 027d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3364      66756E63 
 3364      74696F6E 
 3364      2D736563 
 3364      74696F6E 
 3365              	.LASF71:
 3366 02a5 50574D5F 		.ascii	"PWM_Fail_SetInterruptMode\000"
 3366      4661696C 
 3366      5F536574 
 3366      496E7465 
 3366      72727570 
 3367              	.LASF79:
 3368 02bf 433A5C53 		.ascii	"C:\\SVN\\apps\\trunk\\Cypress Academy\\PSoC-101\\Pr"
 3368      564E5C61 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 87


 3368      7070735C 
 3368      7472756E 
 3368      6B5C4379 
 3369 02ec 6F6A6563 		.ascii	"ojects\\Team_Project\\Simon\\Simon_Slave_Pioneer\\S"
 3369      74735C54 
 3369      65616D5F 
 3369      50726F6A 
 3369      6563745C 
 3370 031b 696D6F6E 		.ascii	"imon_Slave_Pioneer.cydsn\000"
 3370      5F536C61 
 3370      76655F50 
 3370      696F6E65 
 3370      65722E63 
 3371              	.LASF14:
 3372 0334 72656733 		.ascii	"reg32\000"
 3372      3200
 3373              	.LASF16:
 3374 033a 73697A65 		.ascii	"sizetype\000"
 3374      74797065 
 3374      00
 3375              	.LASF76:
 3376 0343 50574D5F 		.ascii	"PWM_Fail_SetInterrupt\000"
 3376      4661696C 
 3376      5F536574 
 3376      496E7465 
 3376      72727570 
 3377              	.LASF42:
 3378 0359 50574D5F 		.ascii	"PWM_Fail_SetCounterMode\000"
 3378      4661696C 
 3378      5F536574 
 3378      436F756E 
 3378      7465724D 
 3379              	.LASF15:
 3380 0371 6C6F6E67 		.ascii	"long double\000"
 3380      20646F75 
 3380      626C6500 
 3381              	.LASF55:
 3382 037d 636F6D70 		.ascii	"compare\000"
 3382      61726500 
 3383              	.LASF47:
 3384 0385 50574D5F 		.ascii	"PWM_Fail_ReadPeriod\000"
 3384      4661696C 
 3384      5F526561 
 3384      64506572 
 3384      696F6400 
 3385              	.LASF44:
 3386 0399 50574D5F 		.ascii	"PWM_Fail_WritePeriod\000"
 3386      4661696C 
 3386      5F577269 
 3386      74655065 
 3386      72696F64 
 3387              	.LASF23:
 3388 03ae 50574D5F 		.ascii	"PWM_Fail_SetQDMode\000"
 3388      4661696C 
 3388      5F536574 
 3388      51444D6F 
 3388      646500
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 88


 3389              	.LASF11:
 3390 03c1 666C6F61 		.ascii	"float\000"
 3390      7400
 3391              	.LASF72:
 3392 03c7 696E7465 		.ascii	"interruptMask\000"
 3392      72727570 
 3392      744D6173 
 3392      6B00
 3393              	.LASF27:
 3394 03d5 70726573 		.ascii	"prescaler\000"
 3394      63616C65 
 3394      7200
 3395              	.LASF52:
 3396 03df 50574D5F 		.ascii	"PWM_Fail_ReadPeriodBuf\000"
 3396      4661696C 
 3396      5F526561 
 3396      64506572 
 3396      696F6442 
 3397              	.LASF67:
 3398 03f6 50574D5F 		.ascii	"PWM_Fail_SetCountMode\000"
 3398      4661696C 
 3398      5F536574 
 3398      436F756E 
 3398      744D6F64 
 3399              	.LASF62:
 3400 040c 50574D5F 		.ascii	"PWM_Fail_SetCaptureMode\000"
 3400      4661696C 
 3400      5F536574 
 3400      43617074 
 3400      7572654D 
 3401              	.LASF78:
 3402 0424 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_Fail.c\000"
 3402      72617465 
 3402      645F536F 
 3402      75726365 
 3402      5C50536F 
 3403              	.LASF1:
 3404 0446 756E7369 		.ascii	"unsigned char\000"
 3404      676E6564 
 3404      20636861 
 3404      7200
 3405              	.LASF20:
 3406 0454 50574D5F 		.ascii	"PWM_Fail_Stop\000"
 3406      4661696C 
 3406      5F53746F 
 3406      7000
 3407              	.LASF35:
 3408 0462 73746F70 		.ascii	"stopOnKillEnable\000"
 3408      4F6E4B69 
 3408      6C6C456E 
 3408      61626C65 
 3408      00
 3409              	.LASF2:
 3410 0473 73686F72 		.ascii	"short int\000"
 3410      7420696E 
 3410      7400
 3411              	.LASF36:
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 89


 3412 047d 50574D5F 		.ascii	"PWM_Fail_SetPWMDeadTime\000"
 3412      4661696C 
 3412      5F536574 
 3412      50574D44 
 3412      65616454 
 3413              	.LASF53:
 3414 0495 50574D5F 		.ascii	"PWM_Fail_SetPeriodSwap\000"
 3414      4661696C 
 3414      5F536574 
 3414      50657269 
 3414      6F645377 
 3415              	.LASF65:
 3416 04ac 50574D5F 		.ascii	"PWM_Fail_SetStartMode\000"
 3416      4661696C 
 3416      5F536574 
 3416      53746172 
 3416      744D6F64 
 3417              	.LASF54:
 3418 04c2 50574D5F 		.ascii	"PWM_Fail_WriteCompare\000"
 3418      4661696C 
 3418      5F577269 
 3418      7465436F 
 3418      6D706172 
 3419              	.LASF60:
 3420 04d8 50574D5F 		.ascii	"PWM_Fail_ReadCapture\000"
 3420      4661696C 
 3420      5F526561 
 3420      64436170 
 3420      74757265 
 3421              	.LASF30:
 3422 04ed 50574D5F 		.ascii	"PWM_Fail_SetPWMMode\000"
 3422      4661696C 
 3422      5F536574 
 3422      50574D4D 
 3422      6F646500 
 3423              	.LASF19:
 3424 0501 50574D5F 		.ascii	"PWM_Fail_Enable\000"
 3424      4661696C 
 3424      5F456E61 
 3424      626C6500 
 3425              	.LASF13:
 3426 0511 63686172 		.ascii	"char\000"
 3426      00
 3427              	.LASF24:
 3428 0516 6D6F6465 		.ascii	"mode\000"
 3428      00
 3429              	.LASF48:
 3430 051b 50574D5F 		.ascii	"PWM_Fail_SetCompareSwap\000"
 3430      4661696C 
 3430      5F536574 
 3430      436F6D70 
 3430      61726553 
 3431              	.LASF57:
 3432 0533 50574D5F 		.ascii	"PWM_Fail_WriteCompareBuf\000"
 3432      4661696C 
 3432      5F577269 
 3432      7465436F 
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 90


 3432      6D706172 
 3433              	.LASF43:
 3434 054c 636F756E 		.ascii	"counterMode\000"
 3434      7465724D 
 3434      6F646500 
 3435              	.LASF18:
 3436 0558 50574D5F 		.ascii	"PWM_Fail_Start\000"
 3436      4661696C 
 3436      5F537461 
 3436      727400
 3437              	.LASF58:
 3438 0567 636F6D70 		.ascii	"compareBuf\000"
 3438      61726542 
 3438      756600
 3439              	.LASF40:
 3440 0572 50574D5F 		.ascii	"PWM_Fail_WriteCounter\000"
 3440      4661696C 
 3440      5F577269 
 3440      7465436F 
 3440      756E7465 
 3441              	.LASF32:
 3442 0588 50574D5F 		.ascii	"PWM_Fail_SetPWMSyncKill\000"
 3442      4661696C 
 3442      5F536574 
 3442      50574D53 
 3442      796E634B 
 3443              	.LASF21:
 3444 05a0 656E6162 		.ascii	"enableInterrupts\000"
 3444      6C65496E 
 3444      74657272 
 3444      75707473 
 3444      00
 3445              	.LASF34:
 3446 05b1 50574D5F 		.ascii	"PWM_Fail_SetPWMStopOnKill\000"
 3446      4661696C 
 3446      5F536574 
 3446      50574D53 
 3446      746F704F 
 3447              	.LASF33:
 3448 05cb 73796E63 		.ascii	"syncKillEnable\000"
 3448      4B696C6C 
 3448      456E6162 
 3448      6C6500
 3449              	.LASF49:
 3450 05da 73776170 		.ascii	"swapEnable\000"
 3450      456E6162 
 3450      6C6500
 3451              	.LASF68:
 3452 05e5 50574D5F 		.ascii	"PWM_Fail_TriggerCommand\000"
 3452      4661696C 
 3452      5F547269 
 3452      67676572 
 3452      436F6D6D 
 3453              	.LASF51:
 3454 05fd 70657269 		.ascii	"periodBuf\000"
 3454      6F644275 
 3454      6600
ARM GAS  C:\Users\gjl\AppData\Local\Temp\cc8yHSzD.s 			page 91


 3455              	.LASF38:
 3456 0607 50574D5F 		.ascii	"PWM_Fail_SetPWMInvert\000"
 3456      4661696C 
 3456      5F536574 
 3456      50574D49 
 3456      6E766572 
 3457              	.LASF75:
 3458 061d 50574D5F 		.ascii	"PWM_Fail_ClearInterrupt\000"
 3458      4661696C 
 3458      5F436C65 
 3458      6172496E 
 3458      74657272 
 3459              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
